Running MONTE CARLO experiment: mask_ratio
Monte Carlo samples: 100
Training mode: True

######## Computing Loss for task: ner ########

######## Language: amh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: amh_0
mean loss: 0.8596082925796509
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: amh_1
mean loss: 0.870054304599762
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: amh_2
mean loss: 0.8511709570884705
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: amh_3
mean loss: 0.8578638434410095
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: amh_4
mean loss: 0.8698382377624512
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: amh_5
mean loss: 0.8508033752441406
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: amh_6
mean loss: 0.8807291984558105
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: amh_7
mean loss: 0.8484802842140198
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: amh_8
mean loss: 0.8597785234451294
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 122, ratio = 0.4766

ID text: amh_9
mean loss: 0.8533992171287537

######## Language: conll_2003_en ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: conll_2003_en_0
mean loss: 0.8278595209121704
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: conll_2003_en_1
mean loss: 0.7885185480117798
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: conll_2003_en_2
mean loss: 0.6997165083885193
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: conll_2003_en_3
mean loss: 0.6721246838569641
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_4
mean loss: 0.7295562624931335
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: conll_2003_en_5
mean loss: 0.8559156656265259
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: conll_2003_en_6
mean loss: 0.9084306359291077
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: conll_2003_en_7
mean loss: 0.8452847003936768
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: conll_2003_en_8
mean loss: 0.8602458238601685
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: conll_2003_en_9
mean loss: 0.723755419254303

######## Language: hau ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: hau_0
mean loss: 0.7053020000457764
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: hau_1
mean loss: 0.6843807697296143
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: hau_2
mean loss: 0.884026288986206
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: hau_3
mean loss: 0.6986416578292847
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: hau_4
mean loss: 0.6828686594963074
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 149, ratio = 0.5820

ID text: hau_5
mean loss: 0.7043046355247498
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: hau_6
mean loss: 0.6982991695404053
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: hau_7
mean loss: 0.7229548096656799
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: hau_8
mean loss: 0.712812602519989
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: hau_9
mean loss: 0.6967189908027649

######## Language: ibo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: ibo_0
mean loss: 0.7114412784576416
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: ibo_1
mean loss: 0.7242258191108704
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: ibo_2
mean loss: 0.6909933686256409
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: ibo_3
mean loss: 0.7775751352310181
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: ibo_4
mean loss: 0.6896424293518066
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: ibo_5
mean loss: 0.7217172980308533
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: ibo_6
mean loss: 0.7023265361785889
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: ibo_7
mean loss: 0.7291035652160645
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: ibo_8
mean loss: 0.7067244648933411
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: ibo_9
mean loss: 0.7044261693954468

######## Language: kin ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 114, ratio = 0.4453

ID text: kin_0
mean loss: 0.7065565586090088
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: kin_1
mean loss: 0.7032192945480347
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: kin_2
mean loss: 0.6681054830551147
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: kin_3
mean loss: 0.6764548420906067
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: kin_4
mean loss: 0.7073168754577637
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: kin_5
mean loss: 0.6575034856796265
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: kin_6
mean loss: 0.7224652767181396
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: kin_7
mean loss: 0.7271486520767212
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: kin_8
mean loss: 0.6631945967674255
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: kin_9
mean loss: 0.7093216180801392

######## Language: lug ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: lug_0
mean loss: 0.6763703227043152
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: lug_1
mean loss: 0.702318549156189
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: lug_2
mean loss: 0.6837164163589478
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: lug_3
mean loss: 0.6777443885803223
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: lug_4
mean loss: 0.6774485111236572
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: lug_5
mean loss: 0.6904999017715454
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: lug_6
mean loss: 0.6755460500717163
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: lug_7
mean loss: 0.6770144701004028
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: lug_8
mean loss: 0.6500296592712402
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: lug_9
mean loss: 0.6852847933769226

######## Language: luo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: luo_0
mean loss: 0.7112063765525818
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: luo_1
mean loss: 0.7305712103843689
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: luo_2
mean loss: 0.6756420135498047
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: luo_3
mean loss: 0.6826549768447876
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: luo_4
mean loss: 0.6615238189697266
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: luo_5
mean loss: 0.7111810445785522
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805

ID text: luo_6
mean loss: 0.7064590454101562
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: luo_7
mean loss: 0.7227350473403931
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: luo_8
mean loss: 0.6967062950134277
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805

ID text: luo_9
mean loss: 0.7740768194198608

######## Language: pcm ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: pcm_0
mean loss: 0.7644447088241577
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: pcm_1
mean loss: 0.7716198563575745
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: pcm_2
mean loss: 0.7405220866203308
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: pcm_3
mean loss: 0.7164320349693298
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: pcm_4
mean loss: 0.6980577111244202
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: pcm_5
mean loss: 0.7400860786437988
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: pcm_6
mean loss: 0.7014151215553284
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 119, ratio = 0.4648

ID text: pcm_7
mean loss: 0.6875950694084167
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: pcm_8
mean loss: 0.6895670294761658
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: pcm_9
mean loss: 0.7072867751121521

######## Language: swa ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703

ID text: swa_0
mean loss: 0.6924697756767273
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: swa_1
mean loss: 0.697752058506012
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: swa_2
mean loss: 0.7105003595352173
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: swa_3
mean loss: 0.7087364196777344
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: swa_4
mean loss: 0.6965852975845337
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: swa_5
mean loss: 0.7019906640052795
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: swa_6
mean loss: 0.7107763886451721
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: swa_7
mean loss: 0.6682372093200684
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: swa_8
mean loss: 0.6421453356742859
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: swa_9
mean loss: 0.7055271863937378

######## Language: wol ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: wol_0
mean loss: 0.7292969226837158
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: wol_1
mean loss: 0.7370760440826416
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: wol_2
mean loss: 0.7392277717590332
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: wol_3
mean loss: 0.8376412391662598
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: wol_4
mean loss: 0.7609951496124268
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: wol_5
mean loss: 0.7416485548019409
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: wol_6
mean loss: 0.9170886278152466
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: wol_7
mean loss: 0.7269003391265869
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: wol_8
mean loss: 0.7522979974746704
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: wol_9
mean loss: 0.6765987277030945

######## Language: yor ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: yor_0
mean loss: 0.8477779626846313
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: yor_1
mean loss: 0.8532003164291382
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: yor_2
mean loss: 0.787148118019104
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: yor_3
mean loss: 0.7426958680152893
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: yor_4
mean loss: 0.8827893733978271
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: yor_5
mean loss: 0.8555854558944702
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703

ID text: yor_6
mean loss: 0.759428083896637
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: yor_7
mean loss: 0.8240930438041687
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: yor_8
mean loss: 0.7459381818771362
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: yor_9
mean loss: 0.883643388748169

######## Language: zh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: zh_0
mean loss: 0.9169478416442871
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: zh_1
mean loss: 0.8894588947296143
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: zh_2
mean loss: 0.8891913890838623
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: zh_3
mean loss: 0.9107646346092224
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: zh_4
mean loss: 0.9247915148735046
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: zh_5
mean loss: 0.9092733263969421
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 151, ratio = 0.5898

ID text: zh_6
mean loss: 0.9003627300262451
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: zh_7
mean loss: 0.8868969082832336
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: zh_8
mean loss: 0.8884187936782837
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: zh_9
mean loss: 0.904600977897644

######## Computing Loss for task: tydiqa ########

######## Language: arabic ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: arabic-4449832350126320768-0
mean loss: 0.8728538751602173
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: arabic--3340323169760881569-0
mean loss: 0.8591839671134949
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: arabic-4544770624843559444-1
mean loss: 0.8752672076225281
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: arabic-891952409566422966-0
mean loss: 0.8731247186660767
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: arabic-3659291834714572527-0
mean loss: 0.895842969417572
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: arabic-9215226117011890166-0
mean loss: 0.8735464215278625
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625

ID text: arabic-6300896128538259469-0
mean loss: 0.8755935430526733
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: arabic-2382507508588518905-0
mean loss: 0.8867441415786743
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: arabic-1871632801094859741-1
mean loss: 0.8907354474067688
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: arabic--7365809756232083807-0
mean loss: 0.8599945306777954

######## Language: russian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: russian-3457655197371763238-61
mean loss: 0.6850967407226562
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: russian--1914807805318993335-49
mean loss: 0.7023103833198547
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: russian--3307989180606173904-1
mean loss: 0.6899010539054871
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: russian--2219512001175315660-0
mean loss: 0.6943170428276062
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: russian--7076080992904718941-0
mean loss: 0.7121103405952454
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: russian--6565862953558739013-1
mean loss: 0.6935269236564636
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: russian--5098374684590548031-42
mean loss: 0.704122006893158
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: russian-3573734219967447693-1
mean loss: 0.6752431988716125
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: russian--4521001374120505750-6
mean loss: 0.7053561210632324
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: russian--1308382244018658424-9
mean loss: 0.695436954498291

######## Language: bengali ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: bengali--1199493965132146131-3
mean loss: 0.7805127501487732
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: bengali-1807801556888134437-2
mean loss: 0.7676798105239868
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: bengali-2113189855114052041-2
mean loss: 0.7818700671195984
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 109, ratio = 0.4258

ID text: bengali--2527914488250041207-0
mean loss: 0.7818263173103333
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: bengali--8260793280894408063-14
mean loss: 0.7839391231536865
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: bengali-8313009204852557186-4
mean loss: 0.7770729064941406
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: bengali--415964033364840061-0
mean loss: 0.791090726852417
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: bengali--4696865548928858824-5
mean loss: 0.7754335999488831
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: bengali-6505224142472931712-1
mean loss: 0.7728532552719116
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: bengali-599666913917674019-13
mean loss: 0.7341136336326599

######## Language: telugu ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 118, ratio = 0.4609

ID text: telugu--3977923017846260053-0
mean loss: 0.7967026233673096
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: telugu-2254198842560317781-0
mean loss: 0.7992950677871704
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: telugu-5435080895440121384-0
mean loss: 0.7943025231361389
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: telugu--1182505954974481191-2
mean loss: 0.7904033660888672
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: telugu-119276511844068401-0
mean loss: 0.7966036796569824
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: telugu--4111208545071789922-0
mean loss: 0.7980908155441284
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: telugu--5922002196428211484-132
mean loss: 0.799348771572113
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: telugu--1817004721681155192-3
mean loss: 0.7760412693023682
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: telugu-1602214480303968359-1
mean loss: 0.7944650053977966
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: telugu--6495674712575945374-0
mean loss: 0.7917913794517517

######## Language: finnish ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: finnish-6987763079741579998-0
mean loss: 0.691026508808136
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: finnish--8516625414052383903-0
mean loss: 0.6604321002960205
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: finnish-4168898766124519517-0
mean loss: 0.818560779094696
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: finnish-783166898848672321-4
mean loss: 0.7019718289375305
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: finnish-2208556840820233322-0
mean loss: 0.6999212503433228
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805

ID text: finnish--1981034637152391615-58
mean loss: 0.6784681081771851
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: finnish-8689148941295949475-9
mean loss: 0.6650630235671997
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: finnish-6900867945323517614-2
mean loss: 0.7953482270240784
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: finnish-8023130170017405987-1
mean loss: 0.6548612713813782
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: finnish-5001457972111781248-0
mean loss: 0.6884691119194031

######## Language: swahili ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: swahili-7146838206539641546-10
mean loss: 0.6790081262588501
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: swahili-7655634199707176439-0
mean loss: 0.67793869972229
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: swahili--4427180714267750534-1
mean loss: 0.6864271759986877
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: swahili-4141779435061573138-0
mean loss: 0.6797506809234619
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: swahili--5424518593960879661-0
mean loss: 0.6831505298614502
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: swahili-4281845253405461584-0
mean loss: 0.6968411207199097
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: swahili-4899164839984299762-2
mean loss: 0.6697884202003479
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: swahili-1288750786498500530-0
mean loss: 0.6640682220458984
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703

ID text: swahili--2671134792844015228-3
mean loss: 0.6771154999732971
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: swahili-4873225622490039485-2
mean loss: 0.6895563006401062

######## Language: korean ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: korean--2869472392602314906-0
mean loss: 0.8840032815933228
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: korean-4375199563921600155-0
mean loss: 0.8711103200912476
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 120, ratio = 0.4688

ID text: korean--1715118423211755607-13
mean loss: 0.8710684776306152
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: korean--8028977936696142934-9
mean loss: 0.8712063431739807
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: korean-2807245034690443837-5
mean loss: 0.8887207508087158
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: korean-3862451817164408576-0
mean loss: 0.8526753783226013
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: korean-148115504649351135-0
mean loss: 0.8724396228790283
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: korean--2885837157239647036-2
mean loss: 0.8810929656028748
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: korean--1743220297777040002-22
mean loss: 0.8735485672950745
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: korean-3268522368206106332-0
mean loss: 0.8853212594985962

######## Language: indonesian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: indonesian-9141868818310916091-0
mean loss: 0.6924572587013245
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: indonesian-4609394337632433932-1
mean loss: 0.7974308133125305
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: indonesian-2763468883290577923-0
mean loss: 0.6569287180900574
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: indonesian-5633590583948933406-0
mean loss: 0.6757699847221375
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: indonesian--5961409780035435015-0
mean loss: 0.6780336499214172
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: indonesian-6274547934693326697-0
mean loss: 0.6827118396759033
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: indonesian--2516321763567853082-0
mean loss: 0.6617499589920044
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: indonesian-2048796427556239759-4
mean loss: 0.7078625559806824
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: indonesian-6246592469157278547-2
mean loss: 0.6650794744491577
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: indonesian--3724318458930736973-1
mean loss: 0.666073739528656

######## Language: english ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: english-2852412434797041176-6
mean loss: 0.8916791677474976
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: english--1463732605740571606-0
mean loss: 0.6251771450042725
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: english-5441411281255470421-0
mean loss: 0.6114356517791748
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: english-7294054492486093447-1
mean loss: 0.609874963760376
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: english-8820750127045023244-0
mean loss: 0.630154013633728
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: english--506693546683012611-2
mean loss: 0.641532301902771
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: english-745411798111651115-0
mean loss: 0.6352927684783936
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: english-7740772185887912651-0
mean loss: 0.5865471959114075
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625

ID text: english-383873188776267137-19
mean loss: 0.5778987407684326
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: english--8277537578703156284-0
mean loss: 0.6239984631538391

######## Computing Loss for task: glue ########

######## Language: cola ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: cola_228
mean loss: 0.6905023455619812
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: cola_51
mean loss: 0.6829838752746582
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 149, ratio = 0.5820

ID text: cola_563
mean loss: 0.8124339580535889
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: cola_501
mean loss: 0.6813527941703796
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: cola_457
mean loss: 0.665497362613678
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 148, ratio = 0.5781

ID text: cola_285
mean loss: 0.6530526876449585
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: cola_209
mean loss: 0.6010488867759705
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: cola_178
mean loss: 0.6869487166404724
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: cola_864
mean loss: 0.652354896068573
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: cola_65
mean loss: 0.6119682192802429

######## Language: mnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: mnli_488
mean loss: 0.6148780584335327
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: mnli_1535
mean loss: 0.5899733901023865
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: mnli_3582
mean loss: 0.5949541926383972
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: mnli_3811
mean loss: 0.6866582632064819
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: mnli_8279
mean loss: 0.6701146960258484
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: mnli_434
mean loss: 0.6128206849098206
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: mnli_9195
mean loss: 0.7071119546890259
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: mnli_3257
mean loss: 0.6481113433837891
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: mnli_8928
mean loss: 0.6362955570220947
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: mnli_6873
mean loss: 0.6423869132995605

######## Language: mrpc ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: mrpc_451
mean loss: 0.6111554503440857
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: mrpc_919
mean loss: 0.5990327596664429
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: mrpc_1206
mean loss: 0.6524850726127625
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: mrpc_569
mean loss: 0.6881668567657471
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: mrpc_1657
mean loss: 0.6512017250061035
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: mrpc_13
mean loss: 0.6744258403778076
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: mrpc_1554
mean loss: 0.6532156467437744
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: mrpc_1650
mean loss: 0.7827903032302856
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: mrpc_326
mean loss: 0.6678798794746399
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: mrpc_1429
mean loss: 0.657727837562561

######## Language: qnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: qnli_3462
mean loss: 0.6189213395118713
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: qnli_2787
mean loss: 0.584212064743042
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: qnli_2276
mean loss: 0.6217999458312988
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: qnli_1273
mean loss: 0.6382560729980469
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: qnli_1763
mean loss: 0.5949077606201172
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 150, ratio = 0.5859

ID text: qnli_2757
mean loss: 0.6238601803779602
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: qnli_837
mean loss: 0.662411093711853
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 121, ratio = 0.4727

ID text: qnli_759
mean loss: 0.6104400753974915
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: qnli_3112
mean loss: 0.5828189253807068
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 120, ratio = 0.4688

ID text: qnli_792
mean loss: 0.6250687837600708

######## Language: qqp ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: qqp_188208
mean loss: 0.6583421230316162
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625

ID text: qqp_180331
mean loss: 0.628122091293335
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: qqp_316526
mean loss: 0.6475960612297058
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: qqp_138685
mean loss: 0.6250450611114502
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: qqp_22780
mean loss: 0.7234123349189758
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: qqp_382589
mean loss: 0.7154179215431213
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: qqp_240870
mean loss: 0.6608853340148926
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: qqp_281137
mean loss: 0.6550508141517639
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: qqp_65444
mean loss: 0.6376396417617798
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: qqp_198461
mean loss: 0.6725112795829773

######## Language: rte ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: rte_322
mean loss: 0.6610037088394165
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: rte_2261
mean loss: 0.637057363986969
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: rte_1200
mean loss: 0.6297978758811951
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: rte_2574
mean loss: 0.629904568195343
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805

ID text: rte_2533
mean loss: 0.623323380947113
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: rte_1481
mean loss: 0.6207781434059143
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: rte_2364
mean loss: 0.595236599445343
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: rte_787
mean loss: 0.6233124136924744
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: rte_2885
mean loss: 0.644687831401825
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: rte_284
mean loss: 0.615476131439209

######## Language: sst2 ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: sst2_93
mean loss: 0.6497989892959595
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: sst2_1354
mean loss: 0.6602874994277954
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: sst2_466
mean loss: 0.53021639585495
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: sst2_1583
mean loss: 0.6457577347755432
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: sst2_592
mean loss: 0.6493633985519409
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: sst2_163
mean loss: 0.8113492727279663
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: sst2_1751
mean loss: 0.7465384602546692
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: sst2_476
mean loss: 0.6496981978416443
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: sst2_1774
mean loss: 0.6212930679321289
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: sst2_206
mean loss: 0.6749327182769775

######## Language: stsb ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: stsb_778
mean loss: 0.6456524729728699
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: stsb_569
mean loss: 0.6351621150970459
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: stsb_928
mean loss: 0.6286213994026184
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: stsb_1301
mean loss: 0.6282834410667419
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: stsb_747
mean loss: 0.6047796607017517
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: stsb_333
mean loss: 0.5955132842063904
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: stsb_758
mean loss: 0.5831272602081299
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: stsb_727
mean loss: 0.6018515825271606
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 148, ratio = 0.5781

ID text: stsb_429
mean loss: 0.6772491335868835
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: stsb_1372
mean loss: 0.6333890557289124

######## Language: wnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: wnli_68
mean loss: 0.6446359753608704
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: wnli_18
mean loss: 0.6113671660423279
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: wnli_43
mean loss: 0.6237971782684326
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: wnli_136
mean loss: 0.6113634705543518
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: wnli_62
mean loss: 0.6341336965560913
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: wnli_41
mean loss: 0.6293324828147888
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: wnli_118
mean loss: 0.6564244031906128
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: wnli_97
mean loss: 0.6345248222351074
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: wnli_69
mean loss: 0.6723577380180359
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: wnli_142
mean loss: 0.6732122898101807
Losses per task: {'ner': {'amh': {'amh_0': 0.8596082925796509, 'amh_1': 0.870054304599762, 'amh_2': 0.8511709570884705, 'amh_3': 0.8578638434410095, 'amh_4': 0.8698382377624512, 'amh_5': 0.8508033752441406, 'amh_6': 0.8807291984558105, 'amh_7': 0.8484802842140198, 'amh_8': 0.8597785234451294, 'amh_9': 0.8533992171287537}, 'conll_2003_en': {'conll_2003_en_0': 0.8278595209121704, 'conll_2003_en_1': 0.7885185480117798, 'conll_2003_en_2': 0.6997165083885193, 'conll_2003_en_3': 0.6721246838569641, 'conll_2003_en_4': 0.7295562624931335, 'conll_2003_en_5': 0.8559156656265259, 'conll_2003_en_6': 0.9084306359291077, 'conll_2003_en_7': 0.8452847003936768, 'conll_2003_en_8': 0.8602458238601685, 'conll_2003_en_9': 0.723755419254303}, 'hau': {'hau_0': 0.7053020000457764, 'hau_1': 0.6843807697296143, 'hau_2': 0.884026288986206, 'hau_3': 0.6986416578292847, 'hau_4': 0.6828686594963074, 'hau_5': 0.7043046355247498, 'hau_6': 0.6982991695404053, 'hau_7': 0.7229548096656799, 'hau_8': 0.712812602519989, 'hau_9': 0.6967189908027649}, 'ibo': {'ibo_0': 0.7114412784576416, 'ibo_1': 0.7242258191108704, 'ibo_2': 0.6909933686256409, 'ibo_3': 0.7775751352310181, 'ibo_4': 0.6896424293518066, 'ibo_5': 0.7217172980308533, 'ibo_6': 0.7023265361785889, 'ibo_7': 0.7291035652160645, 'ibo_8': 0.7067244648933411, 'ibo_9': 0.7044261693954468}, 'kin': {'kin_0': 0.7065565586090088, 'kin_1': 0.7032192945480347, 'kin_2': 0.6681054830551147, 'kin_3': 0.6764548420906067, 'kin_4': 0.7073168754577637, 'kin_5': 0.6575034856796265, 'kin_6': 0.7224652767181396, 'kin_7': 0.7271486520767212, 'kin_8': 0.6631945967674255, 'kin_9': 0.7093216180801392}, 'lug': {'lug_0': 0.6763703227043152, 'lug_1': 0.702318549156189, 'lug_2': 0.6837164163589478, 'lug_3': 0.6777443885803223, 'lug_4': 0.6774485111236572, 'lug_5': 0.6904999017715454, 'lug_6': 0.6755460500717163, 'lug_7': 0.6770144701004028, 'lug_8': 0.6500296592712402, 'lug_9': 0.6852847933769226}, 'luo': {'luo_0': 0.7112063765525818, 'luo_1': 0.7305712103843689, 'luo_2': 0.6756420135498047, 'luo_3': 0.6826549768447876, 'luo_4': 0.6615238189697266, 'luo_5': 0.7111810445785522, 'luo_6': 0.7064590454101562, 'luo_7': 0.7227350473403931, 'luo_8': 0.6967062950134277, 'luo_9': 0.7740768194198608}, 'pcm': {'pcm_0': 0.7644447088241577, 'pcm_1': 0.7716198563575745, 'pcm_2': 0.7405220866203308, 'pcm_3': 0.7164320349693298, 'pcm_4': 0.6980577111244202, 'pcm_5': 0.7400860786437988, 'pcm_6': 0.7014151215553284, 'pcm_7': 0.6875950694084167, 'pcm_8': 0.6895670294761658, 'pcm_9': 0.7072867751121521}, 'swa': {'swa_0': 0.6924697756767273, 'swa_1': 0.697752058506012, 'swa_2': 0.7105003595352173, 'swa_3': 0.7087364196777344, 'swa_4': 0.6965852975845337, 'swa_5': 0.7019906640052795, 'swa_6': 0.7107763886451721, 'swa_7': 0.6682372093200684, 'swa_8': 0.6421453356742859, 'swa_9': 0.7055271863937378}, 'wol': {'wol_0': 0.7292969226837158, 'wol_1': 0.7370760440826416, 'wol_2': 0.7392277717590332, 'wol_3': 0.8376412391662598, 'wol_4': 0.7609951496124268, 'wol_5': 0.7416485548019409, 'wol_6': 0.9170886278152466, 'wol_7': 0.7269003391265869, 'wol_8': 0.7522979974746704, 'wol_9': 0.6765987277030945}, 'yor': {'yor_0': 0.8477779626846313, 'yor_1': 0.8532003164291382, 'yor_2': 0.787148118019104, 'yor_3': 0.7426958680152893, 'yor_4': 0.8827893733978271, 'yor_5': 0.8555854558944702, 'yor_6': 0.759428083896637, 'yor_7': 0.8240930438041687, 'yor_8': 0.7459381818771362, 'yor_9': 0.883643388748169}, 'zh': {'zh_0': 0.9169478416442871, 'zh_1': 0.8894588947296143, 'zh_2': 0.8891913890838623, 'zh_3': 0.9107646346092224, 'zh_4': 0.9247915148735046, 'zh_5': 0.9092733263969421, 'zh_6': 0.9003627300262451, 'zh_7': 0.8868969082832336, 'zh_8': 0.8884187936782837, 'zh_9': 0.904600977897644}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.8728538751602173, 'arabic--3340323169760881569-0': 0.8591839671134949, 'arabic-4544770624843559444-1': 0.8752672076225281, 'arabic-891952409566422966-0': 0.8731247186660767, 'arabic-3659291834714572527-0': 0.895842969417572, 'arabic-9215226117011890166-0': 0.8735464215278625, 'arabic-6300896128538259469-0': 0.8755935430526733, 'arabic-2382507508588518905-0': 0.8867441415786743, 'arabic-1871632801094859741-1': 0.8907354474067688, 'arabic--7365809756232083807-0': 0.8599945306777954}, 'russian': {'russian-3457655197371763238-61': 0.6850967407226562, 'russian--1914807805318993335-49': 0.7023103833198547, 'russian--3307989180606173904-1': 0.6899010539054871, 'russian--2219512001175315660-0': 0.6943170428276062, 'russian--7076080992904718941-0': 0.7121103405952454, 'russian--6565862953558739013-1': 0.6935269236564636, 'russian--5098374684590548031-42': 0.704122006893158, 'russian-3573734219967447693-1': 0.6752431988716125, 'russian--4521001374120505750-6': 0.7053561210632324, 'russian--1308382244018658424-9': 0.695436954498291}, 'bengali': {'bengali--1199493965132146131-3': 0.7805127501487732, 'bengali-1807801556888134437-2': 0.7676798105239868, 'bengali-2113189855114052041-2': 0.7818700671195984, 'bengali--2527914488250041207-0': 0.7818263173103333, 'bengali--8260793280894408063-14': 0.7839391231536865, 'bengali-8313009204852557186-4': 0.7770729064941406, 'bengali--415964033364840061-0': 0.791090726852417, 'bengali--4696865548928858824-5': 0.7754335999488831, 'bengali-6505224142472931712-1': 0.7728532552719116, 'bengali-599666913917674019-13': 0.7341136336326599}, 'telugu': {'telugu--3977923017846260053-0': 0.7967026233673096, 'telugu-2254198842560317781-0': 0.7992950677871704, 'telugu-5435080895440121384-0': 0.7943025231361389, 'telugu--1182505954974481191-2': 0.7904033660888672, 'telugu-119276511844068401-0': 0.7966036796569824, 'telugu--4111208545071789922-0': 0.7980908155441284, 'telugu--5922002196428211484-132': 0.799348771572113, 'telugu--1817004721681155192-3': 0.7760412693023682, 'telugu-1602214480303968359-1': 0.7944650053977966, 'telugu--6495674712575945374-0': 0.7917913794517517}, 'finnish': {'finnish-6987763079741579998-0': 0.691026508808136, 'finnish--8516625414052383903-0': 0.6604321002960205, 'finnish-4168898766124519517-0': 0.818560779094696, 'finnish-783166898848672321-4': 0.7019718289375305, 'finnish-2208556840820233322-0': 0.6999212503433228, 'finnish--1981034637152391615-58': 0.6784681081771851, 'finnish-8689148941295949475-9': 0.6650630235671997, 'finnish-6900867945323517614-2': 0.7953482270240784, 'finnish-8023130170017405987-1': 0.6548612713813782, 'finnish-5001457972111781248-0': 0.6884691119194031}, 'swahili': {'swahili-7146838206539641546-10': 0.6790081262588501, 'swahili-7655634199707176439-0': 0.67793869972229, 'swahili--4427180714267750534-1': 0.6864271759986877, 'swahili-4141779435061573138-0': 0.6797506809234619, 'swahili--5424518593960879661-0': 0.6831505298614502, 'swahili-4281845253405461584-0': 0.6968411207199097, 'swahili-4899164839984299762-2': 0.6697884202003479, 'swahili-1288750786498500530-0': 0.6640682220458984, 'swahili--2671134792844015228-3': 0.6771154999732971, 'swahili-4873225622490039485-2': 0.6895563006401062}, 'korean': {'korean--2869472392602314906-0': 0.8840032815933228, 'korean-4375199563921600155-0': 0.8711103200912476, 'korean--1715118423211755607-13': 0.8710684776306152, 'korean--8028977936696142934-9': 0.8712063431739807, 'korean-2807245034690443837-5': 0.8887207508087158, 'korean-3862451817164408576-0': 0.8526753783226013, 'korean-148115504649351135-0': 0.8724396228790283, 'korean--2885837157239647036-2': 0.8810929656028748, 'korean--1743220297777040002-22': 0.8735485672950745, 'korean-3268522368206106332-0': 0.8853212594985962}, 'indonesian': {'indonesian-9141868818310916091-0': 0.6924572587013245, 'indonesian-4609394337632433932-1': 0.7974308133125305, 'indonesian-2763468883290577923-0': 0.6569287180900574, 'indonesian-5633590583948933406-0': 0.6757699847221375, 'indonesian--5961409780035435015-0': 0.6780336499214172, 'indonesian-6274547934693326697-0': 0.6827118396759033, 'indonesian--2516321763567853082-0': 0.6617499589920044, 'indonesian-2048796427556239759-4': 0.7078625559806824, 'indonesian-6246592469157278547-2': 0.6650794744491577, 'indonesian--3724318458930736973-1': 0.666073739528656}, 'english': {'english-2852412434797041176-6': 0.8916791677474976, 'english--1463732605740571606-0': 0.6251771450042725, 'english-5441411281255470421-0': 0.6114356517791748, 'english-7294054492486093447-1': 0.609874963760376, 'english-8820750127045023244-0': 0.630154013633728, 'english--506693546683012611-2': 0.641532301902771, 'english-745411798111651115-0': 0.6352927684783936, 'english-7740772185887912651-0': 0.5865471959114075, 'english-383873188776267137-19': 0.5778987407684326, 'english--8277537578703156284-0': 0.6239984631538391}}, 'glue': {'cola': {'cola_228': 0.6905023455619812, 'cola_51': 0.6829838752746582, 'cola_563': 0.8124339580535889, 'cola_501': 0.6813527941703796, 'cola_457': 0.665497362613678, 'cola_285': 0.6530526876449585, 'cola_209': 0.6010488867759705, 'cola_178': 0.6869487166404724, 'cola_864': 0.652354896068573, 'cola_65': 0.6119682192802429}, 'mnli': {'mnli_488': 0.6148780584335327, 'mnli_1535': 0.5899733901023865, 'mnli_3582': 0.5949541926383972, 'mnli_3811': 0.6866582632064819, 'mnli_8279': 0.6701146960258484, 'mnli_434': 0.6128206849098206, 'mnli_9195': 0.7071119546890259, 'mnli_3257': 0.6481113433837891, 'mnli_8928': 0.6362955570220947, 'mnli_6873': 0.6423869132995605}, 'mrpc': {'mrpc_451': 0.6111554503440857, 'mrpc_919': 0.5990327596664429, 'mrpc_1206': 0.6524850726127625, 'mrpc_569': 0.6881668567657471, 'mrpc_1657': 0.6512017250061035, 'mrpc_13': 0.6744258403778076, 'mrpc_1554': 0.6532156467437744, 'mrpc_1650': 0.7827903032302856, 'mrpc_326': 0.6678798794746399, 'mrpc_1429': 0.657727837562561}, 'qnli': {'qnli_3462': 0.6189213395118713, 'qnli_2787': 0.584212064743042, 'qnli_2276': 0.6217999458312988, 'qnli_1273': 0.6382560729980469, 'qnli_1763': 0.5949077606201172, 'qnli_2757': 0.6238601803779602, 'qnli_837': 0.662411093711853, 'qnli_759': 0.6104400753974915, 'qnli_3112': 0.5828189253807068, 'qnli_792': 0.6250687837600708}, 'qqp': {'qqp_188208': 0.6583421230316162, 'qqp_180331': 0.628122091293335, 'qqp_316526': 0.6475960612297058, 'qqp_138685': 0.6250450611114502, 'qqp_22780': 0.7234123349189758, 'qqp_382589': 0.7154179215431213, 'qqp_240870': 0.6608853340148926, 'qqp_281137': 0.6550508141517639, 'qqp_65444': 0.6376396417617798, 'qqp_198461': 0.6725112795829773}, 'rte': {'rte_322': 0.6610037088394165, 'rte_2261': 0.637057363986969, 'rte_1200': 0.6297978758811951, 'rte_2574': 0.629904568195343, 'rte_2533': 0.623323380947113, 'rte_1481': 0.6207781434059143, 'rte_2364': 0.595236599445343, 'rte_787': 0.6233124136924744, 'rte_2885': 0.644687831401825, 'rte_284': 0.615476131439209}, 'sst2': {'sst2_93': 0.6497989892959595, 'sst2_1354': 0.6602874994277954, 'sst2_466': 0.53021639585495, 'sst2_1583': 0.6457577347755432, 'sst2_592': 0.6493633985519409, 'sst2_163': 0.8113492727279663, 'sst2_1751': 0.7465384602546692, 'sst2_476': 0.6496981978416443, 'sst2_1774': 0.6212930679321289, 'sst2_206': 0.6749327182769775}, 'stsb': {'stsb_778': 0.6456524729728699, 'stsb_569': 0.6351621150970459, 'stsb_928': 0.6286213994026184, 'stsb_1301': 0.6282834410667419, 'stsb_747': 0.6047796607017517, 'stsb_333': 0.5955132842063904, 'stsb_758': 0.5831272602081299, 'stsb_727': 0.6018515825271606, 'stsb_429': 0.6772491335868835, 'stsb_1372': 0.6333890557289124}, 'wnli': {'wnli_68': 0.6446359753608704, 'wnli_18': 0.6113671660423279, 'wnli_43': 0.6237971782684326, 'wnli_136': 0.6113634705543518, 'wnli_62': 0.6341336965560913, 'wnli_41': 0.6293324828147888, 'wnli_118': 0.6564244031906128, 'wnli_97': 0.6345248222351074, 'wnli_69': 0.6723577380180359, 'wnli_142': 0.6732122898101807}}}
Saving data in loss_per_task_mask_0.8.json

LOSS

Mean loss per task: {'ner': {'amh': 0.8601726293563843, 'conll_2003_en': 0.7911407351493835, 'hau': 0.7190309762954712, 'ibo': 0.7158175706863403, 'kin': 0.6941286325454712, 'lug': 0.6795972585678101, 'luo': 0.7072756886482239, 'pcm': 0.7217026352882385, 'swa': 0.6934720277786255, 'wol': 0.7618770599365234, 'yor': 0.8182299733161926, 'zh': 0.9020707011222839}, 'tydiqa': {'arabic': 0.8762887120246887, 'russian': 0.6957420706748962, 'bengali': 0.7746392488479614, 'telugu': 0.7937043905258179, 'finnish': 0.7054122090339661, 'swahili': 0.6803644895553589, 'korean': 0.8751187324523926, 'indonesian': 0.6884097456932068, 'english': 0.6433590650558472}, 'glue': {'cola': 0.6738144159317017, 'mnli': 0.64033043384552, 'mrpc': 0.6638081669807434, 'qnli': 0.6162696480751038, 'qqp': 0.6624022722244263, 'rte': 0.6280578374862671, 'sst2': 0.6639236211776733, 'stsb': 0.6233628988265991, 'wnli': 0.6391149759292603}}
Lowest losses:
ID: sst2_466, Loss: 0.53021639585495
ID: english-383873188776267137-19, Loss: 0.5778987407684326
ID: qnli_3112, Loss: 0.5828189253807068
ID: stsb_758, Loss: 0.5831272602081299
ID: qnli_2787, Loss: 0.584212064743042
Highest losses:
ID: zh_5, Loss: 0.9092733263969421
ID: zh_3, Loss: 0.9107646346092224
ID: zh_0, Loss: 0.9169478416442871
ID: wol_6, Loss: 0.9170886278152466
ID: zh_4, Loss: 0.9247915148735046
Monte Carlo samples: 100
Training mode: True

######## Computing SDs for task: ner ########


######## Language: amh ######## 

Running MONTE CARLO experiment: mask_ratio
Loading data from loss_per_task_mask_0.8.json

LOSS

Mean loss per task: {'ner': {'amh': 0.8601726293563843, 'conll_2003_en': 0.7911407351493835, 'hau': 0.7190309762954712, 'ibo': 0.7158175706863403, 'kin': 0.6941286325454712, 'lug': 0.6795972585678101, 'luo': 0.7072756886482239, 'pcm': 0.7217026352882385, 'swa': 0.6934720277786255, 'wol': 0.7618770599365234, 'yor': 0.8182299733161926, 'zh': 0.9020707011222839}, 'tydiqa': {'arabic': 0.8762887120246887, 'russian': 0.6957420706748962, 'bengali': 0.7746392488479614, 'telugu': 0.7937043905258179, 'finnish': 0.7054122090339661, 'swahili': 0.6803644895553589, 'korean': 0.8751187324523926, 'indonesian': 0.6884097456932068, 'english': 0.6433590650558472}, 'glue': {'cola': 0.6738144159317017, 'mnli': 0.64033043384552, 'mrpc': 0.6638081669807434, 'qnli': 0.6162696480751038, 'qqp': 0.6624022722244263, 'rte': 0.6280578374862671, 'sst2': 0.6639236211776733, 'stsb': 0.6233628988265991, 'wnli': 0.6391149759292603}}
Lowest losses:
ID: sst2_466, Loss: 0.53021639585495
ID: english-383873188776267137-19, Loss: 0.5778987407684326
ID: qnli_3112, Loss: 0.5828189253807068
ID: stsb_758, Loss: 0.5831272602081299
ID: qnli_2787, Loss: 0.584212064743042
Highest losses:
ID: zh_5, Loss: 0.9092733263969421
ID: zh_3, Loss: 0.9107646346092224
ID: zh_0, Loss: 0.9169478416442871
ID: wol_6, Loss: 0.9170886278152466
ID: zh_4, Loss: 0.9247915148735046
Monte Carlo samples: 100
Training mode: True

######## Computing SDs for task: ner ########


######## Language: amh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: amh_0
Mean variance for amh_0: 0.08125967532396317
Mean std for for amh_0: 0.25950106978416443
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: amh_1
Mean variance for amh_1: 0.08538060635328293
Mean std for for amh_1: 0.26361751556396484
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: amh_2
Mean variance for amh_2: 0.0842851772904396
Mean std for for amh_2: 0.26263710856437683
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: amh_3
Mean variance for amh_3: 0.09161463379859924
Mean std for for amh_3: 0.26874539256095886
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: amh_4
Mean variance for amh_4: 0.09348408132791519
Mean std for for amh_4: 0.2727434039115906
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: amh_5
Mean variance for amh_5: 0.07205832749605179
Mean std for for amh_5: 0.24484585225582123
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: amh_6
Mean variance for amh_6: 0.09066926687955856
Mean std for for amh_6: 0.2708161771297455
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: amh_7
Mean variance for amh_7: 0.08688794821500778
Mean std for for amh_7: 0.2655593454837799
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: amh_8
Mean variance for amh_8: 0.0725153461098671
Mean std for for amh_8: 0.24354428052902222
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 122, ratio = 0.4766
ID text: amh_9
Mean variance for amh_9: 0.08662625402212143
Mean std for for amh_9: 0.2642766237258911

######## Language: conll_2003_en ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: conll_2003_en_0
Mean variance for conll_2003_en_0: 0.13098491728305817
Mean std for for conll_2003_en_0: 0.3265533447265625
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: conll_2003_en_1
Mean variance for conll_2003_en_1: 0.03143805265426636
Mean std for for conll_2003_en_1: 0.1608695536851883
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: conll_2003_en_2
Mean variance for conll_2003_en_2: 0.0414561964571476
Mean std for for conll_2003_en_2: 0.17197829484939575
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: conll_2003_en_3
Mean variance for conll_2003_en_3: 0.04878717660903931
Mean std for for conll_2003_en_3: 0.19874227046966553
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_4
Mean variance for conll_2003_en_4: 0.03925427049398422
Mean std for for conll_2003_en_4: 0.18214112520217896
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: conll_2003_en_5
Mean variance for conll_2003_en_5: 0.11018189787864685
Mean std for for conll_2003_en_5: 0.3002548813819885
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: conll_2003_en_6
Mean variance for conll_2003_en_6: 0.07616226375102997
Mean std for for conll_2003_en_6: 0.2464427798986435
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: conll_2003_en_7
Mean variance for conll_2003_en_7: 0.07006808370351791
Mean std for for conll_2003_en_7: 0.2399613857269287
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: conll_2003_en_8
Mean variance for conll_2003_en_8: 0.09472831338644028
Mean std for for conll_2003_en_8: 0.2774469554424286
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: conll_2003_en_9
Mean variance for conll_2003_en_9: 0.03722865507006645
Mean std for for conll_2003_en_9: 0.17222613096237183

######## Language: hau ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: hau_0
Mean variance for hau_0: 0.035135913640260696
Mean std for for hau_0: 0.15618230402469635
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_1
Mean variance for hau_1: 0.04542984440922737
Mean std for for hau_1: 0.19381649792194366
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: hau_2
Mean variance for hau_2: 0.08008276671171188
Mean std for for hau_2: 0.2538001835346222
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: hau_3
Mean variance for hau_3: 0.03999480977654457
Mean std for for hau_3: 0.14808149635791779
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: hau_4
Mean variance for hau_4: 0.03737416863441467
Mean std for for hau_4: 0.16073645651340485
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 149, ratio = 0.5820
ID text: hau_5
Mean variance for hau_5: 0.03666960075497627
Mean std for for hau_5: 0.15315145254135132
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: hau_6
Mean variance for hau_6: 0.040818873792886734
Mean std for for hau_6: 0.17557887732982635
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: hau_7
Mean variance for hau_7: 0.03507353737950325
Mean std for for hau_7: 0.15625229477882385
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: hau_8
Mean variance for hau_8: 0.03788680210709572
Mean std for for hau_8: 0.15622742474079132
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: hau_9
Mean variance for hau_9: 0.042052242904901505
Mean std for for hau_9: 0.17853443324565887

######## Language: ibo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: ibo_0
Mean variance for ibo_0: 0.04231291636824608
Mean std for for ibo_0: 0.18087923526763916
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: ibo_1
Mean variance for ibo_1: 0.04075000435113907
Mean std for for ibo_1: 0.17535072565078735
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: ibo_2
Mean variance for ibo_2: 0.04533363878726959
Mean std for for ibo_2: 0.1824856549501419
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: ibo_3
Mean variance for ibo_3: 0.03224105015397072
Mean std for for ibo_3: 0.16315974295139313
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: ibo_4
Mean variance for ibo_4: 0.04451046884059906
Mean std for for ibo_4: 0.18543000519275665
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: ibo_5
Mean variance for ibo_5: 0.03928756341338158
Mean std for for ibo_5: 0.17975930869579315
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: ibo_6
Mean variance for ibo_6: 0.037992481142282486
Mean std for for ibo_6: 0.17284707725048065
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: ibo_7
Mean variance for ibo_7: 0.038310807198286057
Mean std for for ibo_7: 0.16419978439807892
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: ibo_8
Mean variance for ibo_8: 0.04849724471569061
Mean std for for ibo_8: 0.2011541724205017
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: ibo_9
Mean variance for ibo_9: 0.042945925146341324
Mean std for for ibo_9: 0.1818832904100418

######## Language: kin ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 114, ratio = 0.4453
ID text: kin_0
Mean variance for kin_0: 0.04360542818903923
Mean std for for kin_0: 0.1811869889497757
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: kin_1
Mean variance for kin_1: 0.042214494198560715
Mean std for for kin_1: 0.18096274137496948
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: kin_2
Mean variance for kin_2: 0.0411938913166523
Mean std for for kin_2: 0.1851280778646469
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: kin_3
Mean variance for kin_3: 0.042437393218278885
Mean std for for kin_3: 0.17694182693958282
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: kin_4
Mean variance for kin_4: 0.03615260496735573
Mean std for for kin_4: 0.1597314178943634
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: kin_5
Mean variance for kin_5: 0.03648123890161514
Mean std for for kin_5: 0.17456483840942383
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: kin_6
Mean variance for kin_6: 0.03707287833094597
Mean std for for kin_6: 0.15705807507038116
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: kin_7
Mean variance for kin_7: 0.04501120373606682
Mean std for for kin_7: 0.18091823160648346
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: kin_8
Mean variance for kin_8: 0.04679268226027489
Mean std for for kin_8: 0.19472910463809967
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: kin_9
Mean variance for kin_9: 0.047837674617767334
Mean std for for kin_9: 0.1970900446176529

######## Language: lug ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: lug_0
Mean variance for lug_0: 0.0392046719789505
Mean std for for lug_0: 0.16358748078346252
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: lug_1
Mean variance for lug_1: 0.040777966380119324
Mean std for for lug_1: 0.1730523705482483
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: lug_2
Mean variance for lug_2: 0.04491990804672241
Mean std for for lug_2: 0.15923894941806793
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: lug_3
Mean variance for lug_3: 0.03729507699608803
Mean std for for lug_3: 0.1567879468202591
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: lug_4
Mean variance for lug_4: 0.044067248702049255
Mean std for for lug_4: 0.18517367541790009
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: lug_5
Mean variance for lug_5: 0.04135133698582649
Mean std for for lug_5: 0.1689395159482956
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: lug_6
Mean variance for lug_6: 0.038808684796094894
Mean std for for lug_6: 0.16414648294448853
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: lug_7
Mean variance for lug_7: 0.03886191174387932
Mean std for for lug_7: 0.17271731793880463
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: lug_8
Mean variance for lug_8: 0.04869480058550835
Mean std for for lug_8: 0.1858893632888794
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: lug_9
Mean variance for lug_9: 0.042227283120155334
Mean std for for lug_9: 0.17552483081817627

######## Language: luo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: luo_0
Mean variance for luo_0: 0.03700442984700203
Mean std for for luo_0: 0.1511135697364807
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: luo_1
Mean variance for luo_1: 0.046305615454912186
Mean std for for luo_1: 0.19427303969860077
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: luo_2
Mean variance for luo_2: 0.04536742344498634
Mean std for for luo_2: 0.17787767946720123
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: luo_3
Mean variance for luo_3: 0.03971140459179878
Mean std for for luo_3: 0.15585018694400787
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: luo_4
Mean variance for luo_4: 0.04260658100247383
Mean std for for luo_4: 0.18401022255420685
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: luo_5
Mean variance for luo_5: 0.04238821938633919
Mean std for for luo_5: 0.18119573593139648
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: luo_6
Mean variance for luo_6: 0.04180010035634041
Mean std for for luo_6: 0.17088542878627777
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: luo_7
Mean variance for luo_7: 0.04827160760760307
Mean std for for luo_7: 0.20121581852436066
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: luo_8
Mean variance for luo_8: 0.040116310119628906
Mean std for for luo_8: 0.17112408578395844
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: luo_9
Mean variance for luo_9: 0.04242009297013283
Mean std for for luo_9: 0.19002191722393036

######## Language: pcm ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: pcm_0
Mean variance for pcm_0: 0.03503855690360069
Mean std for for pcm_0: 0.1669173240661621
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: pcm_1
Mean variance for pcm_1: 0.0439140684902668
Mean std for for pcm_1: 0.1908906251192093
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: pcm_2
Mean variance for pcm_2: 0.03905411809682846
Mean std for for pcm_2: 0.1754584163427353
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: pcm_3
Mean variance for pcm_3: 0.04247252270579338
Mean std for for pcm_3: 0.1774623543024063
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: pcm_4
Mean variance for pcm_4: 0.04835577681660652
Mean std for for pcm_4: 0.18704700469970703
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: pcm_5
Mean variance for pcm_5: 0.039479173719882965
Mean std for for pcm_5: 0.18142442405223846
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: pcm_6
Mean variance for pcm_6: 0.04350864887237549
Mean std for for pcm_6: 0.18113575875759125
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 119, ratio = 0.4648
ID text: pcm_7
Mean variance for pcm_7: 0.045950669795274734
Mean std for for pcm_7: 0.18494419753551483
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: pcm_8
Mean variance for pcm_8: 0.04290509596467018
Mean std for for pcm_8: 0.17672736942768097
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: pcm_9
Mean variance for pcm_9: 0.04245211184024811
Mean std for for pcm_9: 0.1866261512041092

######## Language: swa ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703
ID text: swa_0
Mean variance for swa_0: 0.03504887595772743
Mean std for for swa_0: 0.1547912359237671
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: swa_1
Mean variance for swa_1: 0.040978047996759415
Mean std for for swa_1: 0.17949575185775757
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: swa_2
Mean variance for swa_2: 0.04081543907523155
Mean std for for swa_2: 0.16967616975307465
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: swa_3
Mean variance for swa_3: 0.04275679960846901
Mean std for for swa_3: 0.1863664835691452
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: swa_4
Mean variance for swa_4: 0.034660134464502335
Mean std for for swa_4: 0.1501603126525879
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: swa_5
Mean variance for swa_5: 0.030564958229660988
Mean std for for swa_5: 0.13757069408893585
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: swa_6
Mean variance for swa_6: 0.03872377425432205
Mean std for for swa_6: 0.15623237192630768
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: swa_7
Mean variance for swa_7: 0.04030976817011833
Mean std for for swa_7: 0.18333928287029266
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: swa_8
Mean variance for swa_8: 0.03942079469561577
Mean std for for swa_8: 0.1759541630744934
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: swa_9
Mean variance for swa_9: 0.03657959774136543
Mean std for for swa_9: 0.1674884408712387

######## Language: wol ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: wol_0
Mean variance for wol_0: 0.03974475339055061
Mean std for for wol_0: 0.1676308661699295
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: wol_1
Mean variance for wol_1: 0.04635174572467804
Mean std for for wol_1: 0.1877693384885788
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: wol_2
Mean variance for wol_2: 0.040778711438179016
Mean std for for wol_2: 0.1787058562040329
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: wol_3
Mean variance for wol_3: 0.051865771412849426
Mean std for for wol_3: 0.2084619402885437
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: wol_4
Mean variance for wol_4: 0.039083510637283325
Mean std for for wol_4: 0.18091261386871338
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: wol_5
Mean variance for wol_5: 0.03875601664185524
Mean std for for wol_5: 0.17221158742904663
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: wol_6
Mean variance for wol_6: 0.08112429827451706
Mean std for for wol_6: 0.25720417499542236
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: wol_7
Mean variance for wol_7: 0.046499792486429214
Mean std for for wol_7: 0.1926005333662033
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: wol_8
Mean variance for wol_8: 0.0418260283768177
Mean std for for wol_8: 0.1877877563238144
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: wol_9
Mean variance for wol_9: 0.05091637000441551
Mean std for for wol_9: 0.20478641986846924

######## Language: yor ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: yor_0
Mean variance for yor_0: 0.1102321669459343
Mean std for for yor_0: 0.29781582951545715
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: yor_1
Mean variance for yor_1: 0.08801722526550293
Mean std for for yor_1: 0.26000094413757324
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: yor_2
Mean variance for yor_2: 0.041319217532873154
Mean std for for yor_2: 0.17687611281871796
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: yor_3
Mean variance for yor_3: 0.034435298293828964
Mean std for for yor_3: 0.15422901511192322
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: yor_4
Mean variance for yor_4: 0.09332863241434097
Mean std for for yor_4: 0.27295932173728943
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: yor_5
Mean variance for yor_5: 0.06507773697376251
Mean std for for yor_5: 0.21792925894260406
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703
ID text: yor_6
Mean variance for yor_6: 0.03841569647192955
Mean std for for yor_6: 0.17330241203308105
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: yor_7
Mean variance for yor_7: 0.09864067286252975
Mean std for for yor_7: 0.2769046425819397
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: yor_8
Mean variance for yor_8: 0.040838293731212616
Mean std for for yor_8: 0.17016537487506866
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: yor_9
Mean variance for yor_9: 0.10459881275892258
Mean std for for yor_9: 0.2875083386898041

######## Language: zh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: zh_0
Mean variance for zh_0: 0.06907176971435547
Mean std for for zh_0: 0.24309885501861572
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: zh_1
Mean variance for zh_1: 0.054270725697278976
Mean std for for zh_1: 0.20387770235538483
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: zh_2
Mean variance for zh_2: 0.08414231985807419
Mean std for for zh_2: 0.25717177987098694
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: zh_3
Mean variance for zh_3: 0.1182226911187172
Mean std for for zh_3: 0.31085678935050964
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: zh_4
Mean variance for zh_4: 0.07160591334104538
Mean std for for zh_4: 0.24412919580936432
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: zh_5
Mean variance for zh_5: 0.0826500654220581
Mean std for for zh_5: 0.26267364621162415
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 151, ratio = 0.5898
ID text: zh_6
Mean variance for zh_6: 0.04691551253199577
Mean std for for zh_6: 0.1881679892539978
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: zh_7
Mean variance for zh_7: 0.0987066924571991
Mean std for for zh_7: 0.27975502610206604
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: zh_8
Mean variance for zh_8: 0.09155473858118057
Mean std for for zh_8: 0.26853546500205994
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: zh_9
Mean variance for zh_9: 0.062244072556495667
Mean std for for zh_9: 0.22022123634815216

######## Computing SDs for task: tydiqa ########


######## Language: arabic ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: arabic-4449832350126320768-0
Mean variance for arabic-4449832350126320768-0: 0.046073585748672485
Mean std for for arabic-4449832350126320768-0: 0.18911421298980713
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: arabic--3340323169760881569-0
Mean variance for arabic--3340323169760881569-0: 0.03510971739888191
Mean std for for arabic--3340323169760881569-0: 0.15317411720752716
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: arabic-4544770624843559444-1
Mean variance for arabic-4544770624843559444-1: 0.03269299864768982
Mean std for for arabic-4544770624843559444-1: 0.14790698885917664
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: arabic-891952409566422966-0
Mean variance for arabic-891952409566422966-0: 0.0289162565022707
Mean std for for arabic-891952409566422966-0: 0.13859501481056213
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: arabic-3659291834714572527-0
Mean variance for arabic-3659291834714572527-0: 0.06633908301591873
Mean std for for arabic-3659291834714572527-0: 0.22715236246585846
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: arabic-9215226117011890166-0
Mean variance for arabic-9215226117011890166-0: 0.0333021879196167
Mean std for for arabic-9215226117011890166-0: 0.14867256581783295
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625
ID text: arabic-6300896128538259469-0
Mean variance for arabic-6300896128538259469-0: 0.03158703073859215
Mean std for for arabic-6300896128538259469-0: 0.14684730768203735
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: arabic-2382507508588518905-0
Mean variance for arabic-2382507508588518905-0: 0.028370125219225883
Mean std for for arabic-2382507508588518905-0: 0.13751260936260223
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: arabic-1871632801094859741-1
Mean variance for arabic-1871632801094859741-1: 0.026625914499163628
Mean std for for arabic-1871632801094859741-1: 0.1327684372663498
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: arabic--7365809756232083807-0
Mean variance for arabic--7365809756232083807-0: 0.03179945424199104
Mean std for for arabic--7365809756232083807-0: 0.14424844086170197

######## Language: russian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: russian-3457655197371763238-61
Mean variance for russian-3457655197371763238-61: 0.033878009766340256
Mean std for for russian-3457655197371763238-61: 0.13334937393665314
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: russian--1914807805318993335-49
Mean variance for russian--1914807805318993335-49: 0.04020185396075249
Mean std for for russian--1914807805318993335-49: 0.17023992538452148
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: russian--3307989180606173904-1
Mean variance for russian--3307989180606173904-1: 0.03080618567764759
Mean std for for russian--3307989180606173904-1: 0.12788055837154388
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: russian--2219512001175315660-0
Mean variance for russian--2219512001175315660-0: 0.0262251365929842
Mean std for for russian--2219512001175315660-0: 0.1177486777305603
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: russian--7076080992904718941-0
Mean variance for russian--7076080992904718941-0: 0.03644901514053345
Mean std for for russian--7076080992904718941-0: 0.14371949434280396
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: russian--6565862953558739013-1
Mean variance for russian--6565862953558739013-1: 0.03159983083605766
Mean std for for russian--6565862953558739013-1: 0.1290486752986908
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: russian--5098374684590548031-42
Mean variance for russian--5098374684590548031-42: 0.047485485672950745
Mean std for for russian--5098374684590548031-42: 0.1939690113067627
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: russian-3573734219967447693-1
Mean variance for russian-3573734219967447693-1: 0.031291309744119644
Mean std for for russian-3573734219967447693-1: 0.12890104949474335
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: russian--4521001374120505750-6
Mean variance for russian--4521001374120505750-6: 0.046237315982580185
Mean std for for russian--4521001374120505750-6: 0.18647833168506622
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: russian--1308382244018658424-9
Mean variance for russian--1308382244018658424-9: 0.03044229932129383
Mean std for for russian--1308382244018658424-9: 0.12713952362537384

######## Language: bengali ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: bengali--1199493965132146131-3
Mean variance for bengali--1199493965132146131-3: 0.02931848168373108
Mean std for for bengali--1199493965132146131-3: 0.13389943540096283
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: bengali-1807801556888134437-2
Mean variance for bengali-1807801556888134437-2: 0.03479097783565521
Mean std for for bengali-1807801556888134437-2: 0.14657297730445862
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: bengali-2113189855114052041-2
Mean variance for bengali-2113189855114052041-2: 0.026315899565815926
Mean std for for bengali-2113189855114052041-2: 0.1284458488225937
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 109, ratio = 0.4258
ID text: bengali--2527914488250041207-0
Mean variance for bengali--2527914488250041207-0: 0.03928689658641815
Mean std for for bengali--2527914488250041207-0: 0.1638566106557846
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: bengali--8260793280894408063-14
Mean variance for bengali--8260793280894408063-14: 0.02759379893541336
Mean std for for bengali--8260793280894408063-14: 0.13516730070114136
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: bengali-8313009204852557186-4
Mean variance for bengali-8313009204852557186-4: 0.03291309252381325
Mean std for for bengali-8313009204852557186-4: 0.14504332840442657
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: bengali--415964033364840061-0
Mean variance for bengali--415964033364840061-0: 0.025662420317530632
Mean std for for bengali--415964033364840061-0: 0.1274862438440323
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: bengali--4696865548928858824-5
Mean variance for bengali--4696865548928858824-5: 0.027327710762619972
Mean std for for bengali--4696865548928858824-5: 0.13244830071926117
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: bengali-6505224142472931712-1
Mean variance for bengali-6505224142472931712-1: 0.027713900431990623
Mean std for for bengali-6505224142472931712-1: 0.13294430077075958
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: bengali-599666913917674019-13
Mean variance for bengali-599666913917674019-13: 0.06678216904401779
Mean std for for bengali-599666913917674019-13: 0.22690927982330322

######## Language: telugu ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 118, ratio = 0.4609
ID text: telugu--3977923017846260053-0
Mean variance for telugu--3977923017846260053-0: 0.027178466320037842
Mean std for for telugu--3977923017846260053-0: 0.13521535694599152
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu-2254198842560317781-0
Mean variance for telugu-2254198842560317781-0: 0.027497008442878723
Mean std for for telugu-2254198842560317781-0: 0.13666999340057373
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: telugu-5435080895440121384-0
Mean variance for telugu-5435080895440121384-0: 0.02629033662378788
Mean std for for telugu-5435080895440121384-0: 0.13080351054668427
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: telugu--1182505954974481191-2
Mean variance for telugu--1182505954974481191-2: 0.03245595842599869
Mean std for for telugu--1182505954974481191-2: 0.15296326577663422
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: telugu-119276511844068401-0
Mean variance for telugu-119276511844068401-0: 0.026679685339331627
Mean std for for telugu-119276511844068401-0: 0.13250204920768738
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: telugu--4111208545071789922-0
Mean variance for telugu--4111208545071789922-0: 0.026820048689842224
Mean std for for telugu--4111208545071789922-0: 0.13361713290214539
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: telugu--5922002196428211484-132
Mean variance for telugu--5922002196428211484-132: 0.04346654936671257
Mean std for for telugu--5922002196428211484-132: 0.17196641862392426
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: telugu--1817004721681155192-3
Mean variance for telugu--1817004721681155192-3: 0.018077315762639046
Mean std for for telugu--1817004721681155192-3: 0.11057489365339279
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: telugu-1602214480303968359-1
Mean variance for telugu-1602214480303968359-1: 0.03053182177245617
Mean std for for telugu-1602214480303968359-1: 0.14415819942951202
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: telugu--6495674712575945374-0
Mean variance for telugu--6495674712575945374-0: 0.02588401921093464
Mean std for for telugu--6495674712575945374-0: 0.13072387874126434

######## Language: finnish ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: finnish-6987763079741579998-0
Mean variance for finnish-6987763079741579998-0: 0.03820406645536423
Mean std for for finnish-6987763079741579998-0: 0.16510948538780212
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: finnish--8516625414052383903-0
Mean variance for finnish--8516625414052383903-0: 0.04151765629649162
Mean std for for finnish--8516625414052383903-0: 0.17092937231063843
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: finnish-4168898766124519517-0
Mean variance for finnish-4168898766124519517-0: 0.08965415507555008
Mean std for for finnish-4168898766124519517-0: 0.23149411380290985
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: finnish-783166898848672321-4
Mean variance for finnish-783166898848672321-4: 0.043760836124420166
Mean std for for finnish-783166898848672321-4: 0.17596863210201263
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: finnish-2208556840820233322-0
Mean variance for finnish-2208556840820233322-0: 0.043798644095659256
Mean std for for finnish-2208556840820233322-0: 0.1790446788072586
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: finnish--1981034637152391615-58
Mean variance for finnish--1981034637152391615-58: 0.05069813132286072
Mean std for for finnish--1981034637152391615-58: 0.1668260544538498
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: finnish-8689148941295949475-9
Mean variance for finnish-8689148941295949475-9: 0.054362643510103226
Mean std for for finnish-8689148941295949475-9: 0.1654220074415207
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: finnish-6900867945323517614-2
Mean variance for finnish-6900867945323517614-2: 0.07933566719293594
Mean std for for finnish-6900867945323517614-2: 0.21988363564014435
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: finnish-8023130170017405987-1
Mean variance for finnish-8023130170017405987-1: 0.041888970881700516
Mean std for for finnish-8023130170017405987-1: 0.16050295531749725
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: finnish-5001457972111781248-0
Mean variance for finnish-5001457972111781248-0: 0.05632646754384041
Mean std for for finnish-5001457972111781248-0: 0.17033474147319794

######## Language: swahili ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: swahili-7146838206539641546-10
Mean variance for swahili-7146838206539641546-10: 0.04925854504108429
Mean std for for swahili-7146838206539641546-10: 0.19065119326114655
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: swahili-7655634199707176439-0
Mean variance for swahili-7655634199707176439-0: 0.05870552733540535
Mean std for for swahili-7655634199707176439-0: 0.17417939007282257
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: swahili--4427180714267750534-1
Mean variance for swahili--4427180714267750534-1: 0.04619928076863289
Mean std for for swahili--4427180714267750534-1: 0.18060095608234406
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: swahili-4141779435061573138-0
Mean variance for swahili-4141779435061573138-0: 0.05562717840075493
Mean std for for swahili-4141779435061573138-0: 0.16586659848690033
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: swahili--5424518593960879661-0
Mean variance for swahili--5424518593960879661-0: 0.044668007642030716
Mean std for for swahili--5424518593960879661-0: 0.1551673412322998
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: swahili-4281845253405461584-0
Mean variance for swahili-4281845253405461584-0: 0.04459558427333832
Mean std for for swahili-4281845253405461584-0: 0.1815667599439621
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: swahili-4899164839984299762-2
Mean variance for swahili-4899164839984299762-2: 0.044941674917936325
Mean std for for swahili-4899164839984299762-2: 0.17080183327198029
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: swahili-1288750786498500530-0
Mean variance for swahili-1288750786498500530-0: 0.047468990087509155
Mean std for for swahili-1288750786498500530-0: 0.1843675822019577
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703
ID text: swahili--2671134792844015228-3
Mean variance for swahili--2671134792844015228-3: 0.03845905140042305
Mean std for for swahili--2671134792844015228-3: 0.1513543576002121
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: swahili-4873225622490039485-2
Mean variance for swahili-4873225622490039485-2: 0.040796659886837006
Mean std for for swahili-4873225622490039485-2: 0.15276938676834106

######## Language: korean ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: korean--2869472392602314906-0
Mean variance for korean--2869472392602314906-0: 0.030205579474568367
Mean std for for korean--2869472392602314906-0: 0.14320440590381622
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: korean-4375199563921600155-0
Mean variance for korean-4375199563921600155-0: 0.023361584171652794
Mean std for for korean-4375199563921600155-0: 0.12690623104572296
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 120, ratio = 0.4688
ID text: korean--1715118423211755607-13
Mean variance for korean--1715118423211755607-13: 0.033718399703502655
Mean std for for korean--1715118423211755607-13: 0.14858122169971466
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: korean--8028977936696142934-9
Mean variance for korean--8028977936696142934-9: 0.031457845121622086
Mean std for for korean--8028977936696142934-9: 0.14726951718330383
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: korean-2807245034690443837-5
Mean variance for korean-2807245034690443837-5: 0.04230453073978424
Mean std for for korean-2807245034690443837-5: 0.17511242628097534
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: korean-3862451817164408576-0
Mean variance for korean-3862451817164408576-0: 0.03553774580359459
Mean std for for korean-3862451817164408576-0: 0.15740716457366943
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: korean-148115504649351135-0
Mean variance for korean-148115504649351135-0: 0.0321059450507164
Mean std for for korean-148115504649351135-0: 0.15358848869800568
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: korean--2885837157239647036-2
Mean variance for korean--2885837157239647036-2: 0.030615048483014107
Mean std for for korean--2885837157239647036-2: 0.1445811539888382
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: korean--1743220297777040002-22
Mean variance for korean--1743220297777040002-22: 0.04738094285130501
Mean std for for korean--1743220297777040002-22: 0.18901623785495758
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: korean-3268522368206106332-0
Mean variance for korean-3268522368206106332-0: 0.0996207669377327
Mean std for for korean-3268522368206106332-0: 0.28113123774528503

######## Language: indonesian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: indonesian-9141868818310916091-0
Mean variance for indonesian-9141868818310916091-0: 0.055801063776016235
Mean std for for indonesian-9141868818310916091-0: 0.16886942088603973
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: indonesian-4609394337632433932-1
Mean variance for indonesian-4609394337632433932-1: 0.09758792072534561
Mean std for for indonesian-4609394337632433932-1: 0.24314402043819427
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: indonesian-2763468883290577923-0
Mean variance for indonesian-2763468883290577923-0: 0.05519820377230644
Mean std for for indonesian-2763468883290577923-0: 0.17040841281414032
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: indonesian-5633590583948933406-0
Mean variance for indonesian-5633590583948933406-0: 0.03833504393696785
Mean std for for indonesian-5633590583948933406-0: 0.15595149993896484
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: indonesian--5961409780035435015-0
Mean variance for indonesian--5961409780035435015-0: 0.0570504367351532
Mean std for for indonesian--5961409780035435015-0: 0.17430150508880615
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: indonesian-6274547934693326697-0
Mean variance for indonesian-6274547934693326697-0: 0.046814922243356705
Mean std for for indonesian-6274547934693326697-0: 0.16168592870235443
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: indonesian--2516321763567853082-0
Mean variance for indonesian--2516321763567853082-0: 0.05290430784225464
Mean std for for indonesian--2516321763567853082-0: 0.1644396185874939
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: indonesian-2048796427556239759-4
Mean variance for indonesian-2048796427556239759-4: 0.044416990131139755
Mean std for for indonesian-2048796427556239759-4: 0.1770673245191574
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: indonesian-6246592469157278547-2
Mean variance for indonesian-6246592469157278547-2: 0.04939902946352959
Mean std for for indonesian-6246592469157278547-2: 0.1724885255098343
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: indonesian--3724318458930736973-1
Mean variance for indonesian--3724318458930736973-1: 0.055730968713760376
Mean std for for indonesian--3724318458930736973-1: 0.1663302779197693

######## Language: english ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: english-2852412434797041176-6
Mean variance for english-2852412434797041176-6: 0.08053327351808548
Mean std for for english-2852412434797041176-6: 0.2183140069246292
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: english--1463732605740571606-0
Mean variance for english--1463732605740571606-0: 0.07704699039459229
Mean std for for english--1463732605740571606-0: 0.2061082273721695
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: english-5441411281255470421-0
Mean variance for english-5441411281255470421-0: 0.08382392674684525
Mean std for for english-5441411281255470421-0: 0.21277958154678345
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: english-7294054492486093447-1
Mean variance for english-7294054492486093447-1: 0.08709174394607544
Mean std for for english-7294054492486093447-1: 0.21650099754333496
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: english-8820750127045023244-0
Mean variance for english-8820750127045023244-0: 0.054339393973350525
Mean std for for english-8820750127045023244-0: 0.18986569344997406
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: english--506693546683012611-2
Mean variance for english--506693546683012611-2: 0.061617661267519
Mean std for for english--506693546683012611-2: 0.2111244946718216
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: english-745411798111651115-0
Mean variance for english-745411798111651115-0: 0.08262240141630173
Mean std for for english-745411798111651115-0: 0.2101466804742813
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: english-7740772185887912651-0
Mean variance for english-7740772185887912651-0: 0.09274879842996597
Mean std for for english-7740772185887912651-0: 0.2244858592748642
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625
ID text: english-383873188776267137-19
Mean variance for english-383873188776267137-19: 0.08360732346773148
Mean std for for english-383873188776267137-19: 0.21688534319400787
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: english--8277537578703156284-0
Mean variance for english--8277537578703156284-0: 0.08883867412805557
Mean std for for english--8277537578703156284-0: 0.22253714501857758

######## Computing SDs for task: glue ########


######## Language: cola ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: cola_228
Mean variance for cola_228: 0.03453903645277023
Mean std for for cola_228: 0.16911350190639496
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: cola_51
Mean variance for cola_51: 0.03624310716986656
Mean std for for cola_51: 0.1731702834367752
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 149, ratio = 0.5820
ID text: cola_563
Mean variance for cola_563: 0.09960346668958664
Mean std for for cola_563: 0.28504741191864014
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: cola_501
Mean variance for cola_501: 0.04087533429265022
Mean std for for cola_501: 0.18421630561351776
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: cola_457
Mean variance for cola_457: 0.04360819235444069
Mean std for for cola_457: 0.19101808965206146
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 148, ratio = 0.5781
ID text: cola_285
Mean variance for cola_285: 0.041276875883340836
Mean std for for cola_285: 0.18520963191986084
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: cola_209
Mean variance for cola_209: 0.041958097368478775
Mean std for for cola_209: 0.1861167699098587
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: cola_178
Mean variance for cola_178: 0.049654871225357056
Mean std for for cola_178: 0.20345288515090942
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: cola_864
Mean variance for cola_864: 0.03609749674797058
Mean std for for cola_864: 0.1740802526473999
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: cola_65
Mean variance for cola_65: 0.045392367988824844
Mean std for for cola_65: 0.1908479481935501

######## Language: mnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: mnli_488
Mean variance for mnli_488: 0.05025453492999077
Mean std for for mnli_488: 0.1882960945367813
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: mnli_1535
Mean variance for mnli_1535: 0.059300974011421204
Mean std for for mnli_1535: 0.20608919858932495
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: mnli_3582
Mean variance for mnli_3582: 0.05009731650352478
Mean std for for mnli_3582: 0.19934497773647308
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: mnli_3811
Mean variance for mnli_3811: 0.046687811613082886
Mean std for for mnli_3811: 0.18958497047424316
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: mnli_8279
Mean variance for mnli_8279: 0.04529988393187523
Mean std for for mnli_8279: 0.19258452951908112
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_434
Mean variance for mnli_434: 0.05500876531004906
Mean std for for mnli_434: 0.1884150505065918
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: mnli_9195
Mean variance for mnli_9195: 0.03708167001605034
Mean std for for mnli_9195: 0.17570607364177704
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: mnli_3257
Mean variance for mnli_3257: 0.04640955850481987
Mean std for for mnli_3257: 0.18886077404022217
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: mnli_8928
Mean variance for mnli_8928: 0.05024796724319458
Mean std for for mnli_8928: 0.1893952488899231
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: mnli_6873
Mean variance for mnli_6873: 0.05350830778479576
Mean std for for mnli_6873: 0.19282715022563934

######## Language: mrpc ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: mrpc_451
Mean variance for mrpc_451: 0.05103724077343941
Mean std for for mrpc_451: 0.190007746219635
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: mrpc_919
Mean variance for mrpc_919: 0.05894125998020172
Mean std for for mrpc_919: 0.20584999024868011
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: mrpc_1206
Mean variance for mrpc_1206: 0.049897562712430954
Mean std for for mrpc_1206: 0.19326472282409668
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: mrpc_569
Mean variance for mrpc_569: 0.04809586703777313
Mean std for for mrpc_569: 0.1897229701280594
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: mrpc_1657
Mean variance for mrpc_1657: 0.049969062209129333
Mean std for for mrpc_1657: 0.1809057742357254
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: mrpc_13
Mean variance for mrpc_13: 0.04406261444091797
Mean std for for mrpc_13: 0.18061886727809906
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: mrpc_1554
Mean variance for mrpc_1554: 0.04743887484073639
Mean std for for mrpc_1554: 0.17793680727481842
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: mrpc_1650
Mean variance for mrpc_1650: 0.094905324280262
Mean std for for mrpc_1650: 0.27115947008132935
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: mrpc_326
Mean variance for mrpc_326: 0.045463304966688156
Mean std for for mrpc_326: 0.1813765913248062
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: mrpc_1429
Mean variance for mrpc_1429: 0.05209871754050255
Mean std for for mrpc_1429: 0.1944764256477356

######## Language: qnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: qnli_3462
Mean variance for qnli_3462: 0.05701470375061035
Mean std for for qnli_3462: 0.2031276673078537
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: qnli_2787
Mean variance for qnli_2787: 0.06480937451124191
Mean std for for qnli_2787: 0.20814257860183716
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: qnli_2276
Mean variance for qnli_2276: 0.04607457295060158
Mean std for for qnli_2276: 0.17628048360347748
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: qnli_1273
Mean variance for qnli_1273: 0.054071102291345596
Mean std for for qnli_1273: 0.19431497156620026
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: qnli_1763
Mean variance for qnli_1763: 0.059145230799913406
Mean std for for qnli_1763: 0.20725512504577637
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 150, ratio = 0.5859
ID text: qnli_2757
Mean variance for qnli_2757: 0.052185382694005966
Mean std for for qnli_2757: 0.1903093010187149
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: qnli_837
Mean variance for qnli_837: 0.05112046003341675
Mean std for for qnli_837: 0.19482694566249847
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 121, ratio = 0.4727
ID text: qnli_759
Mean variance for qnli_759: 0.0766303613781929
Mean std for for qnli_759: 0.2078210860490799
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: qnli_3112
Mean variance for qnli_3112: 0.05437305569648743
Mean std for for qnli_3112: 0.1985284835100174
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 120, ratio = 0.4688
ID text: qnli_792
Mean variance for qnli_792: 0.051554858684539795
Mean std for for qnli_792: 0.18995100259780884

######## Language: qqp ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: qqp_188208
Mean variance for qqp_188208: 0.048325370997190475
Mean std for for qqp_188208: 0.19596803188323975
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625
ID text: qqp_180331
Mean variance for qqp_180331: 0.04427387937903404
Mean std for for qqp_180331: 0.18386371433734894
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: qqp_316526
Mean variance for qqp_316526: 0.050335247069597244
Mean std for for qqp_316526: 0.19228462874889374
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: qqp_138685
Mean variance for qqp_138685: 0.056986287236213684
Mean std for for qqp_138685: 0.19395412504673004
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: qqp_22780
Mean variance for qqp_22780: 0.05040514096617699
Mean std for for qqp_22780: 0.20299281179904938
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: qqp_382589
Mean variance for qqp_382589: 0.04112614318728447
Mean std for for qqp_382589: 0.1795574426651001
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: qqp_240870
Mean variance for qqp_240870: 0.042477235198020935
Mean std for for qqp_240870: 0.18364055454730988
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: qqp_281137
Mean variance for qqp_281137: 0.04995300993323326
Mean std for for qqp_281137: 0.19454936683177948
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: qqp_65444
Mean variance for qqp_65444: 0.0424494631588459
Mean std for for qqp_65444: 0.18124331533908844
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: qqp_198461
Mean variance for qqp_198461: 0.05037897452712059
Mean std for for qqp_198461: 0.19369439780712128

######## Language: rte ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: rte_322
Mean variance for rte_322: 0.044202134013175964
Mean std for for rte_322: 0.18135084211826324
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: rte_2261
Mean variance for rte_2261: 0.05307397246360779
Mean std for for rte_2261: 0.20610076189041138
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: rte_1200
Mean variance for rte_1200: 0.048250067979097366
Mean std for for rte_1200: 0.17542849481105804
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: rte_2574
Mean variance for rte_2574: 0.08347303420305252
Mean std for for rte_2574: 0.2100064605474472
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: rte_2533
Mean variance for rte_2533: 0.08170246332883835
Mean std for for rte_2533: 0.21220780909061432
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: rte_1481
Mean variance for rte_1481: 0.052868109196424484
Mean std for for rte_1481: 0.19014830887317657
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_2364
Mean variance for rte_2364: 0.06405223906040192
Mean std for for rte_2364: 0.20673124492168427
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: rte_787
Mean variance for rte_787: 0.05103280022740364
Mean std for for rte_787: 0.18859966099262238
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: rte_2885
Mean variance for rte_2885: 0.0787779688835144
Mean std for for rte_2885: 0.20959365367889404
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: rte_284
Mean variance for rte_284: 0.05337153375148773
Mean std for for rte_284: 0.1984865516424179

######## Language: sst2 ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: sst2_93
Mean variance for sst2_93: 0.046666696667671204
Mean std for for sst2_93: 0.18929915130138397
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: sst2_1354
Mean variance for sst2_1354: 0.04658512771129608
Mean std for for sst2_1354: 0.19625206291675568
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: sst2_466
Mean variance for sst2_466: 0.04807103052735329
Mean std for for sst2_466: 0.1998991221189499
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: sst2_1583
Mean variance for sst2_1583: 0.05260710045695305
Mean std for for sst2_1583: 0.19738470017910004
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: sst2_592
Mean variance for sst2_592: 0.05321963131427765
Mean std for for sst2_592: 0.19706988334655762
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: sst2_163
Mean variance for sst2_163: 0.053790222853422165
Mean std for for sst2_163: 0.2124248743057251
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: sst2_1751
Mean variance for sst2_1751: 0.04454551637172699
Mean std for for sst2_1751: 0.19389665126800537
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: sst2_476
Mean variance for sst2_476: 0.04457785561680794
Mean std for for sst2_476: 0.18186672031879425
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: sst2_1774
Mean variance for sst2_1774: 0.045601654797792435
Mean std for for sst2_1774: 0.18530744314193726
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: sst2_206
Mean variance for sst2_206: 0.046516358852386475
Mean std for for sst2_206: 0.19506601989269257

######## Language: stsb ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: stsb_778
Mean variance for stsb_778: 0.05115269124507904
Mean std for for stsb_778: 0.2003524750471115
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: stsb_569
Mean variance for stsb_569: 0.05517232045531273
Mean std for for stsb_569: 0.21120087802410126
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: stsb_928
Mean variance for stsb_928: 0.04731787368655205
Mean std for for stsb_928: 0.1779003143310547
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: stsb_1301
Mean variance for stsb_1301: 0.05462152138352394
Mean std for for stsb_1301: 0.20617663860321045
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: stsb_747
Mean variance for stsb_747: 0.05213175714015961
Mean std for for stsb_747: 0.19802851974964142
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: stsb_333
Mean variance for stsb_333: 0.050642017275094986
Mean std for for stsb_333: 0.19748717546463013
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: stsb_758
Mean variance for stsb_758: 0.06020453944802284
Mean std for for stsb_758: 0.21018148958683014
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: stsb_727
Mean variance for stsb_727: 0.05279715731739998
Mean std for for stsb_727: 0.20594608783721924
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 148, ratio = 0.5781
ID text: stsb_429
Mean variance for stsb_429: 0.050571929663419724
Mean std for for stsb_429: 0.20097826421260834
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: stsb_1372
Mean variance for stsb_1372: 0.04752657189965248
Mean std for for stsb_1372: 0.19483120739459991

######## Language: wnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: wnli_68
Mean variance for wnli_68: 0.05495600774884224
Mean std for for wnli_68: 0.1978367418050766
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: wnli_18
Mean variance for wnli_18: 0.055788103491067886
Mean std for for wnli_18: 0.19199533760547638
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: wnli_43
Mean variance for wnli_43: 0.05909070745110512
Mean std for for wnli_43: 0.2052181214094162
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: wnli_136
Mean variance for wnli_136: 0.05660687014460564
Mean std for for wnli_136: 0.1988314986228943
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_62
Mean variance for wnli_62: 0.052717387676239014
Mean std for for wnli_62: 0.19813509285449982
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: wnli_41
Mean variance for wnli_41: 0.05527455732226372
Mean std for for wnli_41: 0.19757883250713348
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: wnli_118
Mean variance for wnli_118: 0.04289884492754936
Mean std for for wnli_118: 0.17900705337524414
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_97
Mean variance for wnli_97: 0.05178149417042732
Mean std for for wnli_97: 0.18245847523212433
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: wnli_69
Mean variance for wnli_69: 0.04738529026508331
Mean std for for wnli_69: 0.1885104924440384
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: wnli_142
Mean variance for wnli_142: 0.0466366708278656
Mean std for for wnli_142: 0.17666833102703094
SD per task: {'ner': {'amh': {'amh_0': 0.08125967532396317, 'amh_1': 0.08538060635328293, 'amh_2': 0.0842851772904396, 'amh_3': 0.09161463379859924, 'amh_4': 0.09348408132791519, 'amh_5': 0.07205832749605179, 'amh_6': 0.09066926687955856, 'amh_7': 0.08688794821500778, 'amh_8': 0.0725153461098671, 'amh_9': 0.08662625402212143}, 'conll_2003_en': {'conll_2003_en_0': 0.13098491728305817, 'conll_2003_en_1': 0.03143805265426636, 'conll_2003_en_2': 0.0414561964571476, 'conll_2003_en_3': 0.04878717660903931, 'conll_2003_en_4': 0.03925427049398422, 'conll_2003_en_5': 0.11018189787864685, 'conll_2003_en_6': 0.07616226375102997, 'conll_2003_en_7': 0.07006808370351791, 'conll_2003_en_8': 0.09472831338644028, 'conll_2003_en_9': 0.03722865507006645}, 'hau': {'hau_0': 0.035135913640260696, 'hau_1': 0.04542984440922737, 'hau_2': 0.08008276671171188, 'hau_3': 0.03999480977654457, 'hau_4': 0.03737416863441467, 'hau_5': 0.03666960075497627, 'hau_6': 0.040818873792886734, 'hau_7': 0.03507353737950325, 'hau_8': 0.03788680210709572, 'hau_9': 0.042052242904901505}, 'ibo': {'ibo_0': 0.04231291636824608, 'ibo_1': 0.04075000435113907, 'ibo_2': 0.04533363878726959, 'ibo_3': 0.03224105015397072, 'ibo_4': 0.04451046884059906, 'ibo_5': 0.03928756341338158, 'ibo_6': 0.037992481142282486, 'ibo_7': 0.038310807198286057, 'ibo_8': 0.04849724471569061, 'ibo_9': 0.042945925146341324}, 'kin': {'kin_0': 0.04360542818903923, 'kin_1': 0.042214494198560715, 'kin_2': 0.0411938913166523, 'kin_3': 0.042437393218278885, 'kin_4': 0.03615260496735573, 'kin_5': 0.03648123890161514, 'kin_6': 0.03707287833094597, 'kin_7': 0.04501120373606682, 'kin_8': 0.04679268226027489, 'kin_9': 0.047837674617767334}, 'lug': {'lug_0': 0.0392046719789505, 'lug_1': 0.040777966380119324, 'lug_2': 0.04491990804672241, 'lug_3': 0.03729507699608803, 'lug_4': 0.044067248702049255, 'lug_5': 0.04135133698582649, 'lug_6': 0.038808684796094894, 'lug_7': 0.03886191174387932, 'lug_8': 0.04869480058550835, 'lug_9': 0.042227283120155334}, 'luo': {'luo_0': 0.03700442984700203, 'luo_1': 0.046305615454912186, 'luo_2': 0.04536742344498634, 'luo_3': 0.03971140459179878, 'luo_4': 0.04260658100247383, 'luo_5': 0.04238821938633919, 'luo_6': 0.04180010035634041, 'luo_7': 0.04827160760760307, 'luo_8': 0.040116310119628906, 'luo_9': 0.04242009297013283}, 'pcm': {'pcm_0': 0.03503855690360069, 'pcm_1': 0.0439140684902668, 'pcm_2': 0.03905411809682846, 'pcm_3': 0.04247252270579338, 'pcm_4': 0.04835577681660652, 'pcm_5': 0.039479173719882965, 'pcm_6': 0.04350864887237549, 'pcm_7': 0.045950669795274734, 'pcm_8': 0.04290509596467018, 'pcm_9': 0.04245211184024811}, 'swa': {'swa_0': 0.03504887595772743, 'swa_1': 0.040978047996759415, 'swa_2': 0.04081543907523155, 'swa_3': 0.04275679960846901, 'swa_4': 0.034660134464502335, 'swa_5': 0.030564958229660988, 'swa_6': 0.03872377425432205, 'swa_7': 0.04030976817011833, 'swa_8': 0.03942079469561577, 'swa_9': 0.03657959774136543}, 'wol': {'wol_0': 0.03974475339055061, 'wol_1': 0.04635174572467804, 'wol_2': 0.040778711438179016, 'wol_3': 0.051865771412849426, 'wol_4': 0.039083510637283325, 'wol_5': 0.03875601664185524, 'wol_6': 0.08112429827451706, 'wol_7': 0.046499792486429214, 'wol_8': 0.0418260283768177, 'wol_9': 0.05091637000441551}, 'yor': {'yor_0': 0.1102321669459343, 'yor_1': 0.08801722526550293, 'yor_2': 0.041319217532873154, 'yor_3': 0.034435298293828964, 'yor_4': 0.09332863241434097, 'yor_5': 0.06507773697376251, 'yor_6': 0.03841569647192955, 'yor_7': 0.09864067286252975, 'yor_8': 0.040838293731212616, 'yor_9': 0.10459881275892258}, 'zh': {'zh_0': 0.06907176971435547, 'zh_1': 0.054270725697278976, 'zh_2': 0.08414231985807419, 'zh_3': 0.1182226911187172, 'zh_4': 0.07160591334104538, 'zh_5': 0.0826500654220581, 'zh_6': 0.04691551253199577, 'zh_7': 0.0987066924571991, 'zh_8': 0.09155473858118057, 'zh_9': 0.062244072556495667}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.046073585748672485, 'arabic--3340323169760881569-0': 0.03510971739888191, 'arabic-4544770624843559444-1': 0.03269299864768982, 'arabic-891952409566422966-0': 0.0289162565022707, 'arabic-3659291834714572527-0': 0.06633908301591873, 'arabic-9215226117011890166-0': 0.0333021879196167, 'arabic-6300896128538259469-0': 0.03158703073859215, 'arabic-2382507508588518905-0': 0.028370125219225883, 'arabic-1871632801094859741-1': 0.026625914499163628, 'arabic--7365809756232083807-0': 0.03179945424199104}, 'russian': {'russian-3457655197371763238-61': 0.033878009766340256, 'russian--1914807805318993335-49': 0.04020185396075249, 'russian--3307989180606173904-1': 0.03080618567764759, 'russian--2219512001175315660-0': 0.0262251365929842, 'russian--7076080992904718941-0': 0.03644901514053345, 'russian--6565862953558739013-1': 0.03159983083605766, 'russian--5098374684590548031-42': 0.047485485672950745, 'russian-3573734219967447693-1': 0.031291309744119644, 'russian--4521001374120505750-6': 0.046237315982580185, 'russian--1308382244018658424-9': 0.03044229932129383}, 'bengali': {'bengali--1199493965132146131-3': 0.02931848168373108, 'bengali-1807801556888134437-2': 0.03479097783565521, 'bengali-2113189855114052041-2': 0.026315899565815926, 'bengali--2527914488250041207-0': 0.03928689658641815, 'bengali--8260793280894408063-14': 0.02759379893541336, 'bengali-8313009204852557186-4': 0.03291309252381325, 'bengali--415964033364840061-0': 0.025662420317530632, 'bengali--4696865548928858824-5': 0.027327710762619972, 'bengali-6505224142472931712-1': 0.027713900431990623, 'bengali-599666913917674019-13': 0.06678216904401779}, 'telugu': {'telugu--3977923017846260053-0': 0.027178466320037842, 'telugu-2254198842560317781-0': 0.027497008442878723, 'telugu-5435080895440121384-0': 0.02629033662378788, 'telugu--1182505954974481191-2': 0.03245595842599869, 'telugu-119276511844068401-0': 0.026679685339331627, 'telugu--4111208545071789922-0': 0.026820048689842224, 'telugu--5922002196428211484-132': 0.04346654936671257, 'telugu--1817004721681155192-3': 0.018077315762639046, 'telugu-1602214480303968359-1': 0.03053182177245617, 'telugu--6495674712575945374-0': 0.02588401921093464}, 'finnish': {'finnish-6987763079741579998-0': 0.03820406645536423, 'finnish--8516625414052383903-0': 0.04151765629649162, 'finnish-4168898766124519517-0': 0.08965415507555008, 'finnish-783166898848672321-4': 0.043760836124420166, 'finnish-2208556840820233322-0': 0.043798644095659256, 'finnish--1981034637152391615-58': 0.05069813132286072, 'finnish-8689148941295949475-9': 0.054362643510103226, 'finnish-6900867945323517614-2': 0.07933566719293594, 'finnish-8023130170017405987-1': 0.041888970881700516, 'finnish-5001457972111781248-0': 0.05632646754384041}, 'swahili': {'swahili-7146838206539641546-10': 0.04925854504108429, 'swahili-7655634199707176439-0': 0.05870552733540535, 'swahili--4427180714267750534-1': 0.04619928076863289, 'swahili-4141779435061573138-0': 0.05562717840075493, 'swahili--5424518593960879661-0': 0.044668007642030716, 'swahili-4281845253405461584-0': 0.04459558427333832, 'swahili-4899164839984299762-2': 0.044941674917936325, 'swahili-1288750786498500530-0': 0.047468990087509155, 'swahili--2671134792844015228-3': 0.03845905140042305, 'swahili-4873225622490039485-2': 0.040796659886837006}, 'korean': {'korean--2869472392602314906-0': 0.030205579474568367, 'korean-4375199563921600155-0': 0.023361584171652794, 'korean--1715118423211755607-13': 0.033718399703502655, 'korean--8028977936696142934-9': 0.031457845121622086, 'korean-2807245034690443837-5': 0.04230453073978424, 'korean-3862451817164408576-0': 0.03553774580359459, 'korean-148115504649351135-0': 0.0321059450507164, 'korean--2885837157239647036-2': 0.030615048483014107, 'korean--1743220297777040002-22': 0.04738094285130501, 'korean-3268522368206106332-0': 0.0996207669377327}, 'indonesian': {'indonesian-9141868818310916091-0': 0.055801063776016235, 'indonesian-4609394337632433932-1': 0.09758792072534561, 'indonesian-2763468883290577923-0': 0.05519820377230644, 'indonesian-5633590583948933406-0': 0.03833504393696785, 'indonesian--5961409780035435015-0': 0.0570504367351532, 'indonesian-6274547934693326697-0': 0.046814922243356705, 'indonesian--2516321763567853082-0': 0.05290430784225464, 'indonesian-2048796427556239759-4': 0.044416990131139755, 'indonesian-6246592469157278547-2': 0.04939902946352959, 'indonesian--3724318458930736973-1': 0.055730968713760376}, 'english': {'english-2852412434797041176-6': 0.08053327351808548, 'english--1463732605740571606-0': 0.07704699039459229, 'english-5441411281255470421-0': 0.08382392674684525, 'english-7294054492486093447-1': 0.08709174394607544, 'english-8820750127045023244-0': 0.054339393973350525, 'english--506693546683012611-2': 0.061617661267519, 'english-745411798111651115-0': 0.08262240141630173, 'english-7740772185887912651-0': 0.09274879842996597, 'english-383873188776267137-19': 0.08360732346773148, 'english--8277537578703156284-0': 0.08883867412805557}}, 'glue': {'cola': {'cola_228': 0.03453903645277023, 'cola_51': 0.03624310716986656, 'cola_563': 0.09960346668958664, 'cola_501': 0.04087533429265022, 'cola_457': 0.04360819235444069, 'cola_285': 0.041276875883340836, 'cola_209': 0.041958097368478775, 'cola_178': 0.049654871225357056, 'cola_864': 0.03609749674797058, 'cola_65': 0.045392367988824844}, 'mnli': {'mnli_488': 0.05025453492999077, 'mnli_1535': 0.059300974011421204, 'mnli_3582': 0.05009731650352478, 'mnli_3811': 0.046687811613082886, 'mnli_8279': 0.04529988393187523, 'mnli_434': 0.05500876531004906, 'mnli_9195': 0.03708167001605034, 'mnli_3257': 0.04640955850481987, 'mnli_8928': 0.05024796724319458, 'mnli_6873': 0.05350830778479576}, 'mrpc': {'mrpc_451': 0.05103724077343941, 'mrpc_919': 0.05894125998020172, 'mrpc_1206': 0.049897562712430954, 'mrpc_569': 0.04809586703777313, 'mrpc_1657': 0.049969062209129333, 'mrpc_13': 0.04406261444091797, 'mrpc_1554': 0.04743887484073639, 'mrpc_1650': 0.094905324280262, 'mrpc_326': 0.045463304966688156, 'mrpc_1429': 0.05209871754050255}, 'qnli': {'qnli_3462': 0.05701470375061035, 'qnli_2787': 0.06480937451124191, 'qnli_2276': 0.04607457295060158, 'qnli_1273': 0.054071102291345596, 'qnli_1763': 0.059145230799913406, 'qnli_2757': 0.052185382694005966, 'qnli_837': 0.05112046003341675, 'qnli_759': 0.0766303613781929, 'qnli_3112': 0.05437305569648743, 'qnli_792': 0.051554858684539795}, 'qqp': {'qqp_188208': 0.048325370997190475, 'qqp_180331': 0.04427387937903404, 'qqp_316526': 0.050335247069597244, 'qqp_138685': 0.056986287236213684, 'qqp_22780': 0.05040514096617699, 'qqp_382589': 0.04112614318728447, 'qqp_240870': 0.042477235198020935, 'qqp_281137': 0.04995300993323326, 'qqp_65444': 0.0424494631588459, 'qqp_198461': 0.05037897452712059}, 'rte': {'rte_322': 0.044202134013175964, 'rte_2261': 0.05307397246360779, 'rte_1200': 0.048250067979097366, 'rte_2574': 0.08347303420305252, 'rte_2533': 0.08170246332883835, 'rte_1481': 0.052868109196424484, 'rte_2364': 0.06405223906040192, 'rte_787': 0.05103280022740364, 'rte_2885': 0.0787779688835144, 'rte_284': 0.05337153375148773}, 'sst2': {'sst2_93': 0.046666696667671204, 'sst2_1354': 0.04658512771129608, 'sst2_466': 0.04807103052735329, 'sst2_1583': 0.05260710045695305, 'sst2_592': 0.05321963131427765, 'sst2_163': 0.053790222853422165, 'sst2_1751': 0.04454551637172699, 'sst2_476': 0.04457785561680794, 'sst2_1774': 0.045601654797792435, 'sst2_206': 0.046516358852386475}, 'stsb': {'stsb_778': 0.05115269124507904, 'stsb_569': 0.05517232045531273, 'stsb_928': 0.04731787368655205, 'stsb_1301': 0.05462152138352394, 'stsb_747': 0.05213175714015961, 'stsb_333': 0.050642017275094986, 'stsb_758': 0.06020453944802284, 'stsb_727': 0.05279715731739998, 'stsb_429': 0.050571929663419724, 'stsb_1372': 0.04752657189965248}, 'wnli': {'wnli_68': 0.05495600774884224, 'wnli_18': 0.055788103491067886, 'wnli_43': 0.05909070745110512, 'wnli_136': 0.05660687014460564, 'wnli_62': 0.052717387676239014, 'wnli_41': 0.05527455732226372, 'wnli_118': 0.04289884492754936, 'wnli_97': 0.05178149417042732, 'wnli_69': 0.04738529026508331, 'wnli_142': 0.0466366708278656}}}
Saving data in SD_per_task_mask_0.8.json
Saving data in var_per_task_mask_0.8.json

UNCERTAINTY (SD)

Mean loss per task: {'ner': {'amh': 0.08447813242673874, 'conll_2003_en': 0.06802898645401001, 'hau': 0.04305185750126839, 'ibo': 0.041218213737010956, 'kin': 0.04187994450330734, 'lug': 0.0416208878159523, 'luo': 0.04259917885065079, 'pcm': 0.04231307655572891, 'swa': 0.03798581659793854, 'wol': 0.047694697976112366, 'yor': 0.07149036973714828, 'zh': 0.07793845236301422}, 'tydiqa': {'arabic': 0.03608163446187973, 'russian': 0.03546164557337761, 'bengali': 0.03377053514122963, 'telugu': 0.028488120064139366, 'finnish': 0.053954727947711945, 'swahili': 0.04707204923033714, 'korean': 0.04063083976507187, 'indonesian': 0.05532388761639595, 'english': 0.0792270228266716}, 'glue': {'cola': 0.046924881637096405, 'mnli': 0.04938967898488045, 'mrpc': 0.0541909821331501, 'qnli': 0.05669791251420975, 'qqp': 0.04767107591032982, 'rte': 0.061080433428287506, 'sst2': 0.048218123614788055, 'stsb': 0.05221383646130562, 'wnli': 0.05231358855962753}}
