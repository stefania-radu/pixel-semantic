The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/25/2024 15:03:01 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/25/2024 15:03:01 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 15:03:01 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 15:03:01 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/25/2024 15:03:02 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/25/2024 15:03:02 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/25/2024 15:03:02 - INFO - __main__ - Running MONTE CARLO experiment: mask_ratio
03/25/2024 15:03:02 - INFO - __main__ - Loading data from loss_per_task_mask_0.5.json
03/25/2024 15:03:02 - INFO - __main__ - 
LOSS

03/25/2024 15:03:02 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8343394994735718, 'conll_2003_en': 0.6837099194526672, 'hau': 0.6280697584152222, 'ibo': 0.6446431279182434, 'kin': 0.6536169648170471, 'lug': 0.6277801394462585, 'luo': 0.6374266743659973, 'pcm': 0.6184495091438293, 'swa': 0.6388153433799744, 'wol': 0.699592113494873, 'yor': 0.7167364358901978, 'zh': 0.8411569595336914}, 'tydiqa': {'arabic': 0.8398422002792358, 'russian': 0.6500574350357056, 'bengali': 0.7096563577651978, 'telugu': 0.7718350887298584, 'finnish': 0.6020581126213074, 'swahili': 0.6042324900627136, 'korean': 0.8496763110160828, 'indonesian': 0.5585572123527527, 'english': 0.3499564528465271}, 'glue': {'cola': 0.585544228553772, 'mnli': 0.4192485809326172, 'mrpc': 0.38543882966041565, 'qnli': 0.33700209856033325, 'qqp': 0.41667723655700684, 'rte': 0.4057508111000061, 'sst2': 0.5048719644546509, 'stsb': 0.40334540605545044, 'wnli': 0.3892242908477783}}
03/25/2024 15:03:02 - INFO - __main__ - Lowest losses:
03/25/2024 15:03:02 - INFO - __main__ - ID: mrpc_1206, Loss: 0.20558848977088928
03/25/2024 15:03:02 - INFO - __main__ - ID: qqp_240870, Loss: 0.2165175825357437
03/25/2024 15:03:02 - INFO - __main__ - ID: qnli_3112, Loss: 0.22330985963344574
03/25/2024 15:03:02 - INFO - __main__ - ID: stsb_727, Loss: 0.22725127637386322
03/25/2024 15:03:02 - INFO - __main__ - ID: english-5441411281255470421-0, Loss: 0.2338991016149521
03/25/2024 15:03:02 - INFO - __main__ - Highest losses:
03/25/2024 15:03:02 - INFO - __main__ - ID: korean--2885837157239647036-2, Loss: 0.8797479867935181
03/25/2024 15:03:02 - INFO - __main__ - ID: amh_7, Loss: 0.8808590769767761
03/25/2024 15:03:02 - INFO - __main__ - ID: korean--2869472392602314906-0, Loss: 0.8867107629776001
03/25/2024 15:03:02 - INFO - __main__ - ID: arabic-3659291834714572527-0, Loss: 0.9035933613777161
03/25/2024 15:03:02 - INFO - __main__ - ID: conll_2003_en_6, Loss: 0.9105647206306458
03/25/2024 15:03:02 - INFO - __main__ - Monte Carlo samples: 100
03/25/2024 15:03:02 - INFO - __main__ - Training mode: True
03/25/2024 15:03:02 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/25/2024 15:03:02 - INFO - __main__ - 
######## Language: amh ######## 

03/25/2024 15:03:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:03:02 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:03:02 - INFO - __main__ - ID text: amh_0
03/25/2024 15:04:16 - INFO - __main__ - Mean variance for amh_0: 0.0799119621515274
03/25/2024 15:04:16 - INFO - __main__ - Mean std for for amh_0: 0.24287904798984528
03/25/2024 15:04:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:04:16 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:04:16 - INFO - __main__ - ID text: amh_1
03/25/2024 15:05:27 - INFO - __main__ - Mean variance for amh_1: 0.10796644538640976
03/25/2024 15:05:27 - INFO - __main__ - Mean std for for amh_1: 0.2773679792881012
03/25/2024 15:05:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:05:27 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:05:27 - INFO - __main__ - ID text: amh_2
03/25/2024 15:06:35 - INFO - __main__ - Mean variance for amh_2: 0.12122237682342529
03/25/2024 15:06:35 - INFO - __main__ - Mean std for for amh_2: 0.29239776730537415
03/25/2024 15:06:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:06:35 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:06:35 - INFO - __main__ - ID text: amh_3
03/25/2024 15:07:43 - INFO - __main__ - Mean variance for amh_3: 0.12599457800388336
03/25/2024 15:07:43 - INFO - __main__ - Mean std for for amh_3: 0.3023698031902313
03/25/2024 15:07:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:07:43 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:07:43 - INFO - __main__ - ID text: amh_4
03/25/2024 15:08:50 - INFO - __main__ - Mean variance for amh_4: 0.11884377151727676
03/25/2024 15:08:50 - INFO - __main__ - Mean std for for amh_4: 0.2916847765445709
03/25/2024 15:08:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:08:50 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:08:50 - INFO - __main__ - ID text: amh_5
03/25/2024 15:09:57 - INFO - __main__ - Mean variance for amh_5: 0.13510353863239288
03/25/2024 15:09:57 - INFO - __main__ - Mean std for for amh_5: 0.3172420561313629
03/25/2024 15:09:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:09:57 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:09:57 - INFO - __main__ - ID text: amh_6
03/25/2024 15:11:05 - INFO - __main__ - Mean variance for amh_6: 0.1318458765745163
03/25/2024 15:11:05 - INFO - __main__ - Mean std for for amh_6: 0.31403473019599915
03/25/2024 15:11:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:11:05 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:11:05 - INFO - __main__ - ID text: amh_7
03/25/2024 15:12:12 - INFO - __main__ - Mean variance for amh_7: 0.12966839969158173
03/25/2024 15:12:12 - INFO - __main__ - Mean std for for amh_7: 0.3074595630168915
03/25/2024 15:12:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:12:14 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:12:14 - INFO - __main__ - ID text: amh_8
03/25/2024 15:13:21 - INFO - __main__ - Mean variance for amh_8: 0.11138450354337692
03/25/2024 15:13:21 - INFO - __main__ - Mean std for for amh_8: 0.2801229953765869
03/25/2024 15:13:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:13:21 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:13:21 - INFO - __main__ - ID text: amh_9
03/25/2024 15:14:29 - INFO - __main__ - Mean variance for amh_9: 0.11378861218690872
03/25/2024 15:14:29 - INFO - __main__ - Mean std for for amh_9: 0.28362080454826355
03/25/2024 15:14:29 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/25/2024 15:14:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:14:29 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:14:29 - INFO - __main__ - ID text: conll_2003_en_0
03/25/2024 15:15:37 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.14300893247127533
03/25/2024 15:15:37 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.33287349343299866
03/25/2024 15:15:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:15:37 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:15:37 - INFO - __main__ - ID text: conll_2003_en_1
03/25/2024 15:16:45 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.06377743929624557
03/25/2024 15:16:45 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.22505033016204834
03/25/2024 15:16:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:16:45 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:16:45 - INFO - __main__ - ID text: conll_2003_en_2
03/25/2024 15:17:53 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.027643123641610146
03/25/2024 15:17:53 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.12637166678905487
03/25/2024 15:17:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:17:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:17:53 - INFO - __main__ - ID text: conll_2003_en_3
03/25/2024 15:19:00 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.038348741829395294
03/25/2024 15:19:00 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.1681966930627823
03/25/2024 15:19:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:19:00 - INFO - __main__ - Masked count: 119, ratio = 0.4648
03/25/2024 15:19:00 - INFO - __main__ - ID text: conll_2003_en_4
03/25/2024 15:20:09 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.05375673249363899
03/25/2024 15:20:09 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.20769411325454712
03/25/2024 15:20:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:20:09 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:20:09 - INFO - __main__ - ID text: conll_2003_en_5
03/25/2024 15:21:17 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.13601313531398773
03/25/2024 15:21:17 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.32857438921928406
03/25/2024 15:21:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:21:17 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:21:17 - INFO - __main__ - ID text: conll_2003_en_6
03/25/2024 15:22:27 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.122132308781147
03/25/2024 15:22:27 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.3166435658931732
03/25/2024 15:22:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:22:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:22:28 - INFO - __main__ - ID text: conll_2003_en_7
03/25/2024 15:23:36 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.14160756766796112
03/25/2024 15:23:36 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.33443713188171387
03/25/2024 15:23:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:23:36 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:23:36 - INFO - __main__ - ID text: conll_2003_en_8
03/25/2024 15:24:44 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.13374707102775574
03/25/2024 15:24:44 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.3288712799549103
03/25/2024 15:24:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:24:44 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:24:44 - INFO - __main__ - ID text: conll_2003_en_9
03/25/2024 15:25:50 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.03315339237451553
03/25/2024 15:25:50 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.14957229793071747
03/25/2024 15:25:50 - INFO - __main__ - 
######## Language: hau ######## 

03/25/2024 15:25:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:25:50 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:25:50 - INFO - __main__ - ID text: hau_0
03/25/2024 15:26:57 - INFO - __main__ - Mean variance for hau_0: 0.021873846650123596
03/25/2024 15:26:57 - INFO - __main__ - Mean std for for hau_0: 0.1095673143863678
03/25/2024 15:26:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:26:57 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:26:57 - INFO - __main__ - ID text: hau_1
03/25/2024 15:28:03 - INFO - __main__ - Mean variance for hau_1: 0.04037005826830864
03/25/2024 15:28:03 - INFO - __main__ - Mean std for for hau_1: 0.17490588128566742
03/25/2024 15:28:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:28:03 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:28:03 - INFO - __main__ - ID text: hau_2
03/25/2024 15:29:09 - INFO - __main__ - Mean variance for hau_2: 0.14414571225643158
03/25/2024 15:29:09 - INFO - __main__ - Mean std for for hau_2: 0.3386620581150055
03/25/2024 15:29:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:29:09 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:29:09 - INFO - __main__ - ID text: hau_3
03/25/2024 15:30:15 - INFO - __main__ - Mean variance for hau_3: 0.023096740245819092
03/25/2024 15:30:15 - INFO - __main__ - Mean std for for hau_3: 0.11343500018119812
03/25/2024 15:30:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:30:15 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:30:15 - INFO - __main__ - ID text: hau_4
03/25/2024 15:31:21 - INFO - __main__ - Mean variance for hau_4: 0.023155445232987404
03/25/2024 15:31:21 - INFO - __main__ - Mean std for for hau_4: 0.11457709223031998
03/25/2024 15:31:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:31:21 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:31:21 - INFO - __main__ - ID text: hau_5
03/25/2024 15:32:28 - INFO - __main__ - Mean variance for hau_5: 0.02219722978770733
03/25/2024 15:32:28 - INFO - __main__ - Mean std for for hau_5: 0.1097184419631958
03/25/2024 15:32:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:32:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:32:28 - INFO - __main__ - ID text: hau_6
03/25/2024 15:33:34 - INFO - __main__ - Mean variance for hau_6: 0.03236513212323189
03/25/2024 15:33:34 - INFO - __main__ - Mean std for for hau_6: 0.1360311657190323
03/25/2024 15:33:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:33:34 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:33:34 - INFO - __main__ - ID text: hau_7
03/25/2024 15:34:39 - INFO - __main__ - Mean variance for hau_7: 0.023617245256900787
03/25/2024 15:34:39 - INFO - __main__ - Mean std for for hau_7: 0.11562008410692215
03/25/2024 15:34:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:34:39 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:34:39 - INFO - __main__ - ID text: hau_8
03/25/2024 15:35:44 - INFO - __main__ - Mean variance for hau_8: 0.021544577553868294
03/25/2024 15:35:44 - INFO - __main__ - Mean std for for hau_8: 0.10776820778846741
03/25/2024 15:35:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:35:44 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:35:44 - INFO - __main__ - ID text: hau_9
03/25/2024 15:36:50 - INFO - __main__ - Mean variance for hau_9: 0.031039884313941002
03/25/2024 15:36:50 - INFO - __main__ - Mean std for for hau_9: 0.1373281627893448
03/25/2024 15:36:50 - INFO - __main__ - 
######## Language: ibo ######## 

03/25/2024 15:36:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:36:50 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 15:36:50 - INFO - __main__ - ID text: ibo_0
03/25/2024 15:37:55 - INFO - __main__ - Mean variance for ibo_0: 0.03282955661416054
03/25/2024 15:37:55 - INFO - __main__ - Mean std for for ibo_0: 0.149064302444458
03/25/2024 15:37:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:37:55 - INFO - __main__ - Masked count: 111, ratio = 0.4336
03/25/2024 15:37:55 - INFO - __main__ - ID text: ibo_1
03/25/2024 15:39:00 - INFO - __main__ - Mean variance for ibo_1: 0.051568806171417236
03/25/2024 15:39:00 - INFO - __main__ - Mean std for for ibo_1: 0.18750722706317902
03/25/2024 15:39:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:39:00 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:39:00 - INFO - __main__ - ID text: ibo_2
03/25/2024 15:40:07 - INFO - __main__ - Mean variance for ibo_2: 0.031911592930555344
03/25/2024 15:40:07 - INFO - __main__ - Mean std for for ibo_2: 0.13557155430316925
03/25/2024 15:40:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:40:07 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:40:07 - INFO - __main__ - ID text: ibo_3
03/25/2024 15:41:14 - INFO - __main__ - Mean variance for ibo_3: 0.039556834846735
03/25/2024 15:41:14 - INFO - __main__ - Mean std for for ibo_3: 0.17566777765750885
03/25/2024 15:41:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:41:14 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:41:14 - INFO - __main__ - ID text: ibo_4
03/25/2024 15:42:21 - INFO - __main__ - Mean variance for ibo_4: 0.03304843604564667
03/25/2024 15:42:21 - INFO - __main__ - Mean std for for ibo_4: 0.14924123883247375
03/25/2024 15:42:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:42:21 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:42:21 - INFO - __main__ - ID text: ibo_5
03/25/2024 15:43:29 - INFO - __main__ - Mean variance for ibo_5: 0.02675618790090084
03/25/2024 15:43:29 - INFO - __main__ - Mean std for for ibo_5: 0.13907544314861298
03/25/2024 15:43:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:43:29 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 15:43:29 - INFO - __main__ - ID text: ibo_6
03/25/2024 15:44:36 - INFO - __main__ - Mean variance for ibo_6: 0.028813710436224937
03/25/2024 15:44:36 - INFO - __main__ - Mean std for for ibo_6: 0.14266888797283173
03/25/2024 15:44:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:44:36 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:44:36 - INFO - __main__ - ID text: ibo_7
03/25/2024 15:45:43 - INFO - __main__ - Mean variance for ibo_7: 0.025863289833068848
03/25/2024 15:45:43 - INFO - __main__ - Mean std for for ibo_7: 0.11988190561532974
03/25/2024 15:45:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:45:43 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:45:43 - INFO - __main__ - ID text: ibo_8
03/25/2024 15:46:51 - INFO - __main__ - Mean variance for ibo_8: 0.03683732450008392
03/25/2024 15:46:51 - INFO - __main__ - Mean std for for ibo_8: 0.16834358870983124
03/25/2024 15:46:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:46:51 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:46:51 - INFO - __main__ - ID text: ibo_9
03/25/2024 15:47:58 - INFO - __main__ - Mean variance for ibo_9: 0.025479277595877647
03/25/2024 15:47:58 - INFO - __main__ - Mean std for for ibo_9: 0.12711496651172638
03/25/2024 15:47:58 - INFO - __main__ - 
######## Language: kin ######## 

03/25/2024 15:47:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:47:58 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:47:58 - INFO - __main__ - ID text: kin_0
03/25/2024 15:49:05 - INFO - __main__ - Mean variance for kin_0: 0.024949118494987488
03/25/2024 15:49:05 - INFO - __main__ - Mean std for for kin_0: 0.12466608732938766
03/25/2024 15:49:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:49:05 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 15:49:05 - INFO - __main__ - ID text: kin_1
03/25/2024 15:50:12 - INFO - __main__ - Mean variance for kin_1: 0.0333612821996212
03/25/2024 15:50:12 - INFO - __main__ - Mean std for for kin_1: 0.14763392508029938
03/25/2024 15:50:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:50:12 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:50:12 - INFO - __main__ - ID text: kin_2
03/25/2024 15:51:19 - INFO - __main__ - Mean variance for kin_2: 0.03638177737593651
03/25/2024 15:51:19 - INFO - __main__ - Mean std for for kin_2: 0.16993187367916107
03/25/2024 15:51:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:51:19 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:51:19 - INFO - __main__ - ID text: kin_3
03/25/2024 15:52:26 - INFO - __main__ - Mean variance for kin_3: 0.02655993215739727
03/25/2024 15:52:26 - INFO - __main__ - Mean std for for kin_3: 0.12558798491954803
03/25/2024 15:52:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:52:26 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:52:26 - INFO - __main__ - ID text: kin_4
03/25/2024 15:53:33 - INFO - __main__ - Mean variance for kin_4: 0.02669629454612732
03/25/2024 15:53:33 - INFO - __main__ - Mean std for for kin_4: 0.1264084279537201
03/25/2024 15:53:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:53:33 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:53:33 - INFO - __main__ - ID text: kin_5
03/25/2024 15:54:40 - INFO - __main__ - Mean variance for kin_5: 0.03721396625041962
03/25/2024 15:54:40 - INFO - __main__ - Mean std for for kin_5: 0.16953949630260468
03/25/2024 15:54:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:54:40 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:54:40 - INFO - __main__ - ID text: kin_6
03/25/2024 15:55:46 - INFO - __main__ - Mean variance for kin_6: 0.019751179963350296
03/25/2024 15:55:46 - INFO - __main__ - Mean std for for kin_6: 0.10277996212244034
03/25/2024 15:55:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:55:46 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:55:46 - INFO - __main__ - ID text: kin_7
03/25/2024 15:56:52 - INFO - __main__ - Mean variance for kin_7: 0.026762589812278748
03/25/2024 15:56:52 - INFO - __main__ - Mean std for for kin_7: 0.12764383852481842
03/25/2024 15:56:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:56:52 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:56:52 - INFO - __main__ - ID text: kin_8
03/25/2024 15:57:59 - INFO - __main__ - Mean variance for kin_8: 0.028092950582504272
03/25/2024 15:57:59 - INFO - __main__ - Mean std for for kin_8: 0.1430235356092453
03/25/2024 15:57:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:57:59 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:57:59 - INFO - __main__ - ID text: kin_9
03/25/2024 15:59:05 - INFO - __main__ - Mean variance for kin_9: 0.022681646049022675
03/25/2024 15:59:05 - INFO - __main__ - Mean std for for kin_9: 0.13110582530498505
03/25/2024 15:59:05 - INFO - __main__ - 
######## Language: lug ######## 

03/25/2024 15:59:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:59:05 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:59:05 - INFO - __main__ - ID text: lug_0
03/25/2024 16:00:12 - INFO - __main__ - Mean variance for lug_0: 0.02484641782939434
03/25/2024 16:00:12 - INFO - __main__ - Mean std for for lug_0: 0.1187615618109703
03/25/2024 16:00:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:00:12 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:00:12 - INFO - __main__ - ID text: lug_1
03/25/2024 16:01:17 - INFO - __main__ - Mean variance for lug_1: 0.02866673283278942
03/25/2024 16:01:17 - INFO - __main__ - Mean std for for lug_1: 0.13183192908763885
03/25/2024 16:01:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:01:17 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 16:01:17 - INFO - __main__ - ID text: lug_2
03/25/2024 16:02:23 - INFO - __main__ - Mean variance for lug_2: 0.01724058948457241
03/25/2024 16:02:23 - INFO - __main__ - Mean std for for lug_2: 0.09833381325006485
03/25/2024 16:02:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:02:23 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:02:23 - INFO - __main__ - ID text: lug_3
03/25/2024 16:03:30 - INFO - __main__ - Mean variance for lug_3: 0.019789090380072594
03/25/2024 16:03:30 - INFO - __main__ - Mean std for for lug_3: 0.10508468747138977
03/25/2024 16:03:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:03:30 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:03:30 - INFO - __main__ - ID text: lug_4
03/25/2024 16:04:36 - INFO - __main__ - Mean variance for lug_4: 0.03169019892811775
03/25/2024 16:04:36 - INFO - __main__ - Mean std for for lug_4: 0.14750920236110687
03/25/2024 16:04:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:04:36 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:04:36 - INFO - __main__ - ID text: lug_5
03/25/2024 16:05:42 - INFO - __main__ - Mean variance for lug_5: 0.024116287007927895
03/25/2024 16:05:42 - INFO - __main__ - Mean std for for lug_5: 0.11563964933156967
03/25/2024 16:05:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:05:42 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:05:42 - INFO - __main__ - ID text: lug_6
03/25/2024 16:06:47 - INFO - __main__ - Mean variance for lug_6: 0.022425903007388115
03/25/2024 16:06:47 - INFO - __main__ - Mean std for for lug_6: 0.11308091878890991
03/25/2024 16:06:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:06:47 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:06:47 - INFO - __main__ - ID text: lug_7
03/25/2024 16:07:53 - INFO - __main__ - Mean variance for lug_7: 0.02575686387717724
03/25/2024 16:07:53 - INFO - __main__ - Mean std for for lug_7: 0.13451221585273743
03/25/2024 16:07:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:07:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:07:53 - INFO - __main__ - ID text: lug_8
03/25/2024 16:08:59 - INFO - __main__ - Mean variance for lug_8: 0.03681711107492447
03/25/2024 16:08:59 - INFO - __main__ - Mean std for for lug_8: 0.1494119018316269
03/25/2024 16:08:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:08:59 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:08:59 - INFO - __main__ - ID text: lug_9
03/25/2024 16:10:04 - INFO - __main__ - Mean variance for lug_9: 0.02876836620271206
03/25/2024 16:10:04 - INFO - __main__ - Mean std for for lug_9: 0.1343933492898941
03/25/2024 16:10:04 - INFO - __main__ - 
######## Language: luo ######## 

03/25/2024 16:10:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:10:04 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:10:04 - INFO - __main__ - ID text: luo_0
03/25/2024 16:11:10 - INFO - __main__ - Mean variance for luo_0: 0.020432600751519203
03/25/2024 16:11:10 - INFO - __main__ - Mean std for for luo_0: 0.10251275449991226
03/25/2024 16:11:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:11:10 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:11:10 - INFO - __main__ - ID text: luo_1
03/25/2024 16:12:16 - INFO - __main__ - Mean variance for luo_1: 0.031761545687913895
03/25/2024 16:12:16 - INFO - __main__ - Mean std for for luo_1: 0.1547268182039261
03/25/2024 16:12:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:12:16 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:12:16 - INFO - __main__ - ID text: luo_2
03/25/2024 16:13:21 - INFO - __main__ - Mean variance for luo_2: 0.027631105855107307
03/25/2024 16:13:21 - INFO - __main__ - Mean std for for luo_2: 0.12874773144721985
03/25/2024 16:13:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:13:21 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:13:21 - INFO - __main__ - ID text: luo_3
03/25/2024 16:14:26 - INFO - __main__ - Mean variance for luo_3: 0.01795073039829731
03/25/2024 16:14:26 - INFO - __main__ - Mean std for for luo_3: 0.10235171765089035
03/25/2024 16:14:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:14:26 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:14:26 - INFO - __main__ - ID text: luo_4
03/25/2024 16:15:30 - INFO - __main__ - Mean variance for luo_4: 0.030418552458286285
03/25/2024 16:15:30 - INFO - __main__ - Mean std for for luo_4: 0.14539016783237457
03/25/2024 16:15:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:15:31 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:15:31 - INFO - __main__ - ID text: luo_5
03/25/2024 16:16:36 - INFO - __main__ - Mean variance for luo_5: 0.026558637619018555
03/25/2024 16:16:36 - INFO - __main__ - Mean std for for luo_5: 0.13255642354488373
03/25/2024 16:16:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:16:36 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:16:36 - INFO - __main__ - ID text: luo_6
03/25/2024 16:17:41 - INFO - __main__ - Mean variance for luo_6: 0.021356739103794098
03/25/2024 16:17:41 - INFO - __main__ - Mean std for for luo_6: 0.11094243079423904
03/25/2024 16:17:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:17:41 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:17:41 - INFO - __main__ - ID text: luo_7
03/25/2024 16:18:46 - INFO - __main__ - Mean variance for luo_7: 0.04589661583304405
03/25/2024 16:18:46 - INFO - __main__ - Mean std for for luo_7: 0.18729300796985626
03/25/2024 16:18:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:18:46 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 16:18:46 - INFO - __main__ - ID text: luo_8
03/25/2024 16:19:51 - INFO - __main__ - Mean variance for luo_8: 0.03756233677268028
03/25/2024 16:19:51 - INFO - __main__ - Mean std for for luo_8: 0.15196043252944946
03/25/2024 16:19:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:19:51 - INFO - __main__ - Masked count: 120, ratio = 0.4688
03/25/2024 16:19:51 - INFO - __main__ - ID text: luo_9
03/25/2024 16:20:56 - INFO - __main__ - Mean variance for luo_9: 0.047013938426971436
03/25/2024 16:20:56 - INFO - __main__ - Mean std for for luo_9: 0.19560138881206512
03/25/2024 16:20:56 - INFO - __main__ - 
######## Language: pcm ######## 

03/25/2024 16:20:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:20:56 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:20:56 - INFO - __main__ - ID text: pcm_0
03/25/2024 16:22:01 - INFO - __main__ - Mean variance for pcm_0: 0.03012041188776493
03/25/2024 16:22:01 - INFO - __main__ - Mean std for for pcm_0: 0.1414797455072403
03/25/2024 16:22:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:22:01 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:22:01 - INFO - __main__ - ID text: pcm_1
03/25/2024 16:23:05 - INFO - __main__ - Mean variance for pcm_1: 0.03239775076508522
03/25/2024 16:23:05 - INFO - __main__ - Mean std for for pcm_1: 0.15537916123867035
03/25/2024 16:23:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:23:05 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:23:05 - INFO - __main__ - ID text: pcm_2
03/25/2024 16:24:10 - INFO - __main__ - Mean variance for pcm_2: 0.0278239194303751
03/25/2024 16:24:10 - INFO - __main__ - Mean std for for pcm_2: 0.13777928054332733
03/25/2024 16:24:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:24:10 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:24:10 - INFO - __main__ - ID text: pcm_3
03/25/2024 16:25:14 - INFO - __main__ - Mean variance for pcm_3: 0.02707619220018387
03/25/2024 16:25:14 - INFO - __main__ - Mean std for for pcm_3: 0.12737639248371124
03/25/2024 16:25:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:25:14 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:25:14 - INFO - __main__ - ID text: pcm_4
03/25/2024 16:26:19 - INFO - __main__ - Mean variance for pcm_4: 0.02873772569000721
03/25/2024 16:26:19 - INFO - __main__ - Mean std for for pcm_4: 0.1287594735622406
03/25/2024 16:26:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:26:19 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:26:19 - INFO - __main__ - ID text: pcm_5
03/25/2024 16:27:24 - INFO - __main__ - Mean variance for pcm_5: 0.04562986269593239
03/25/2024 16:27:24 - INFO - __main__ - Mean std for for pcm_5: 0.18821530044078827
03/25/2024 16:27:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:27:24 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:27:24 - INFO - __main__ - ID text: pcm_6
03/25/2024 16:28:28 - INFO - __main__ - Mean variance for pcm_6: 0.029905932024121284
03/25/2024 16:28:28 - INFO - __main__ - Mean std for for pcm_6: 0.13835090398788452
03/25/2024 16:28:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:28:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:28:28 - INFO - __main__ - ID text: pcm_7
03/25/2024 16:29:32 - INFO - __main__ - Mean variance for pcm_7: 0.028790300711989403
03/25/2024 16:29:32 - INFO - __main__ - Mean std for for pcm_7: 0.13595452904701233
03/25/2024 16:29:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:29:32 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 16:29:32 - INFO - __main__ - ID text: pcm_8
03/25/2024 16:30:37 - INFO - __main__ - Mean variance for pcm_8: 0.030348151922225952
03/25/2024 16:30:37 - INFO - __main__ - Mean std for for pcm_8: 0.1353687047958374
03/25/2024 16:30:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:30:37 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:30:37 - INFO - __main__ - ID text: pcm_9
03/25/2024 16:31:41 - INFO - __main__ - Mean variance for pcm_9: 0.03215539827942848
03/25/2024 16:31:41 - INFO - __main__ - Mean std for for pcm_9: 0.15341636538505554
03/25/2024 16:31:41 - INFO - __main__ - 
######## Language: swa ######## 

03/25/2024 16:31:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:31:41 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:31:41 - INFO - __main__ - ID text: swa_0
03/25/2024 16:32:45 - INFO - __main__ - Mean variance for swa_0: 0.025247326120734215
03/25/2024 16:32:45 - INFO - __main__ - Mean std for for swa_0: 0.11618342995643616
03/25/2024 16:32:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:32:45 - INFO - __main__ - Masked count: 113, ratio = 0.4414
03/25/2024 16:32:45 - INFO - __main__ - ID text: swa_1
03/25/2024 16:33:49 - INFO - __main__ - Mean variance for swa_1: 0.035273369401693344
03/25/2024 16:33:49 - INFO - __main__ - Mean std for for swa_1: 0.15724970400333405
03/25/2024 16:33:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:33:49 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:33:49 - INFO - __main__ - ID text: swa_2
03/25/2024 16:34:53 - INFO - __main__ - Mean variance for swa_2: 0.02689284086227417
03/25/2024 16:34:53 - INFO - __main__ - Mean std for for swa_2: 0.12425249069929123
03/25/2024 16:34:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:34:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:34:53 - INFO - __main__ - ID text: swa_3
03/25/2024 16:35:57 - INFO - __main__ - Mean variance for swa_3: 0.0341678149998188
03/25/2024 16:35:57 - INFO - __main__ - Mean std for for swa_3: 0.15779779851436615
03/25/2024 16:35:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:35:57 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:35:57 - INFO - __main__ - ID text: swa_4
03/25/2024 16:37:02 - INFO - __main__ - Mean variance for swa_4: 0.01908901147544384
03/25/2024 16:37:02 - INFO - __main__ - Mean std for for swa_4: 0.10564988851547241
03/25/2024 16:37:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:37:02 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:37:02 - INFO - __main__ - ID text: swa_5
03/25/2024 16:38:06 - INFO - __main__ - Mean variance for swa_5: 0.017945220693945885
03/25/2024 16:38:06 - INFO - __main__ - Mean std for for swa_5: 0.1010553240776062
03/25/2024 16:38:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:38:06 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 16:38:06 - INFO - __main__ - ID text: swa_6
03/25/2024 16:39:10 - INFO - __main__ - Mean variance for swa_6: 0.02362828515470028
03/25/2024 16:39:10 - INFO - __main__ - Mean std for for swa_6: 0.11585361510515213
03/25/2024 16:39:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:39:10 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:39:10 - INFO - __main__ - ID text: swa_7
03/25/2024 16:40:14 - INFO - __main__ - Mean variance for swa_7: 0.0390375480055809
03/25/2024 16:40:14 - INFO - __main__ - Mean std for for swa_7: 0.17809689044952393
03/25/2024 16:40:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:40:14 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:40:14 - INFO - __main__ - ID text: swa_8
03/25/2024 16:41:19 - INFO - __main__ - Mean variance for swa_8: 0.02332216687500477
03/25/2024 16:41:19 - INFO - __main__ - Mean std for for swa_8: 0.12597042322158813
03/25/2024 16:41:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:41:19 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:41:19 - INFO - __main__ - ID text: swa_9
03/25/2024 16:42:24 - INFO - __main__ - Mean variance for swa_9: 0.03995630145072937
03/25/2024 16:42:24 - INFO - __main__ - Mean std for for swa_9: 0.16453610360622406
03/25/2024 16:42:24 - INFO - __main__ - 
######## Language: wol ######## 

03/25/2024 16:42:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:42:24 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:42:24 - INFO - __main__ - ID text: wol_0
03/25/2024 16:43:28 - INFO - __main__ - Mean variance for wol_0: 0.025968125090003014
03/25/2024 16:43:28 - INFO - __main__ - Mean std for for wol_0: 0.11799558252096176
03/25/2024 16:43:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:43:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:43:28 - INFO - __main__ - ID text: wol_1
03/25/2024 16:44:32 - INFO - __main__ - Mean variance for wol_1: 0.02812768518924713
03/25/2024 16:44:32 - INFO - __main__ - Mean std for for wol_1: 0.13262377679347992
03/25/2024 16:44:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:44:32 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:44:32 - INFO - __main__ - ID text: wol_2
03/25/2024 16:45:35 - INFO - __main__ - Mean variance for wol_2: 0.029500829055905342
03/25/2024 16:45:35 - INFO - __main__ - Mean std for for wol_2: 0.13952402770519257
03/25/2024 16:45:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:45:35 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:45:35 - INFO - __main__ - ID text: wol_3
03/25/2024 16:46:38 - INFO - __main__ - Mean variance for wol_3: 0.05404342710971832
03/25/2024 16:46:38 - INFO - __main__ - Mean std for for wol_3: 0.20915961265563965
03/25/2024 16:46:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:46:38 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:46:38 - INFO - __main__ - ID text: wol_4
03/25/2024 16:47:42 - INFO - __main__ - Mean variance for wol_4: 0.030166367068886757
03/25/2024 16:47:42 - INFO - __main__ - Mean std for for wol_4: 0.15470413863658905
03/25/2024 16:47:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:47:42 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:47:42 - INFO - __main__ - ID text: wol_5
03/25/2024 16:48:45 - INFO - __main__ - Mean variance for wol_5: 0.03182664141058922
03/25/2024 16:48:45 - INFO - __main__ - Mean std for for wol_5: 0.13934226334095
03/25/2024 16:48:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:48:45 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 16:48:45 - INFO - __main__ - ID text: wol_6
03/25/2024 16:49:46 - INFO - __main__ - Mean variance for wol_6: 0.12184125185012817
03/25/2024 16:49:46 - INFO - __main__ - Mean std for for wol_6: 0.3051760792732239
03/25/2024 16:49:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:49:46 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:49:46 - INFO - __main__ - ID text: wol_7
03/25/2024 16:50:47 - INFO - __main__ - Mean variance for wol_7: 0.028505362570285797
03/25/2024 16:50:47 - INFO - __main__ - Mean std for for wol_7: 0.14109432697296143
03/25/2024 16:50:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:50:47 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 16:50:47 - INFO - __main__ - ID text: wol_8
03/25/2024 16:51:49 - INFO - __main__ - Mean variance for wol_8: 0.040420930832624435
03/25/2024 16:51:49 - INFO - __main__ - Mean std for for wol_8: 0.17680245637893677
03/25/2024 16:51:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:51:49 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:51:49 - INFO - __main__ - ID text: wol_9
03/25/2024 16:52:55 - INFO - __main__ - Mean variance for wol_9: 0.04213322699069977
03/25/2024 16:52:55 - INFO - __main__ - Mean std for for wol_9: 0.17915721237659454
03/25/2024 16:52:55 - INFO - __main__ - 
######## Language: yor ######## 

03/25/2024 16:52:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:52:55 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:52:55 - INFO - __main__ - ID text: yor_0
03/25/2024 16:54:01 - INFO - __main__ - Mean variance for yor_0: 0.1148691400885582
03/25/2024 16:54:01 - INFO - __main__ - Mean std for for yor_0: 0.2841787040233612
03/25/2024 16:54:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:54:01 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:54:01 - INFO - __main__ - ID text: yor_1
03/25/2024 16:55:08 - INFO - __main__ - Mean variance for yor_1: 0.11786264181137085
03/25/2024 16:55:08 - INFO - __main__ - Mean std for for yor_1: 0.2799534201622009
03/25/2024 16:55:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:55:08 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:55:08 - INFO - __main__ - ID text: yor_2
03/25/2024 16:56:15 - INFO - __main__ - Mean variance for yor_2: 0.031127428635954857
03/25/2024 16:56:15 - INFO - __main__ - Mean std for for yor_2: 0.1404609978199005
03/25/2024 16:56:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:56:15 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:56:15 - INFO - __main__ - ID text: yor_3
03/25/2024 16:57:21 - INFO - __main__ - Mean variance for yor_3: 0.024241164326667786
03/25/2024 16:57:21 - INFO - __main__ - Mean std for for yor_3: 0.1209435686469078
03/25/2024 16:57:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:57:21 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 16:57:21 - INFO - __main__ - ID text: yor_4
03/25/2024 16:58:28 - INFO - __main__ - Mean variance for yor_4: 0.12558306753635406
03/25/2024 16:58:28 - INFO - __main__ - Mean std for for yor_4: 0.300950825214386
03/25/2024 16:58:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:58:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:58:28 - INFO - __main__ - ID text: yor_5
03/25/2024 16:59:35 - INFO - __main__ - Mean variance for yor_5: 0.07732990384101868
03/25/2024 16:59:35 - INFO - __main__ - Mean std for for yor_5: 0.21554642915725708
03/25/2024 16:59:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:59:35 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:59:35 - INFO - __main__ - ID text: yor_6
03/25/2024 17:00:42 - INFO - __main__ - Mean variance for yor_6: 0.02776460535824299
03/25/2024 17:00:42 - INFO - __main__ - Mean std for for yor_6: 0.13741739094257355
03/25/2024 17:00:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:00:42 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:00:42 - INFO - __main__ - ID text: yor_7
03/25/2024 17:01:49 - INFO - __main__ - Mean variance for yor_7: 0.11933455616235733
03/25/2024 17:01:49 - INFO - __main__ - Mean std for for yor_7: 0.2846422791481018
03/25/2024 17:01:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:01:49 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:01:49 - INFO - __main__ - ID text: yor_8
03/25/2024 17:02:56 - INFO - __main__ - Mean variance for yor_8: 0.024205615743994713
03/25/2024 17:02:56 - INFO - __main__ - Mean std for for yor_8: 0.12279313057661057
03/25/2024 17:02:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:02:56 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:02:56 - INFO - __main__ - ID text: yor_9
03/25/2024 17:04:03 - INFO - __main__ - Mean variance for yor_9: 0.12705114483833313
03/25/2024 17:04:03 - INFO - __main__ - Mean std for for yor_9: 0.29775893688201904
03/25/2024 17:04:03 - INFO - __main__ - 
######## Language: zh ######## 

03/25/2024 17:04:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:04:03 - INFO - __main__ - Masked count: 115, ratio = 0.4492
03/25/2024 17:04:03 - INFO - __main__ - ID text: zh_0
03/25/2024 17:05:10 - INFO - __main__ - Mean variance for zh_0: 0.09765227884054184
03/25/2024 17:05:10 - INFO - __main__ - Mean std for for zh_0: 0.28160491585731506
03/25/2024 17:05:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:05:10 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:05:10 - INFO - __main__ - ID text: zh_1
03/25/2024 17:06:15 - INFO - __main__ - Mean variance for zh_1: 0.08889772742986679
03/25/2024 17:06:15 - INFO - __main__ - Mean std for for zh_1: 0.23684604465961456
03/25/2024 17:06:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:06:15 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:06:15 - INFO - __main__ - ID text: zh_2
03/25/2024 17:07:20 - INFO - __main__ - Mean variance for zh_2: 0.11478129029273987
03/25/2024 17:07:20 - INFO - __main__ - Mean std for for zh_2: 0.28212249279022217
03/25/2024 17:07:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:07:20 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:07:20 - INFO - __main__ - ID text: zh_3
03/25/2024 17:08:24 - INFO - __main__ - Mean variance for zh_3: 0.14907191693782806
03/25/2024 17:08:24 - INFO - __main__ - Mean std for for zh_3: 0.33797964453697205
03/25/2024 17:08:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:08:24 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:08:24 - INFO - __main__ - ID text: zh_4
03/25/2024 17:09:29 - INFO - __main__ - Mean variance for zh_4: 0.09769292920827866
03/25/2024 17:09:29 - INFO - __main__ - Mean std for for zh_4: 0.2761095464229584
03/25/2024 17:09:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:09:29 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:09:29 - INFO - __main__ - ID text: zh_5
03/25/2024 17:10:33 - INFO - __main__ - Mean variance for zh_5: 0.15693213045597076
03/25/2024 17:10:33 - INFO - __main__ - Mean std for for zh_5: 0.35606256127357483
03/25/2024 17:10:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:10:33 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:10:33 - INFO - __main__ - ID text: zh_6
03/25/2024 17:11:38 - INFO - __main__ - Mean variance for zh_6: 0.08904007077217102
03/25/2024 17:11:38 - INFO - __main__ - Mean std for for zh_6: 0.2410215139389038
03/25/2024 17:11:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:11:38 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 17:11:38 - INFO - __main__ - ID text: zh_7
03/25/2024 17:12:43 - INFO - __main__ - Mean variance for zh_7: 0.12846264243125916
03/25/2024 17:12:43 - INFO - __main__ - Mean std for for zh_7: 0.30217981338500977
03/25/2024 17:12:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:12:43 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:12:43 - INFO - __main__ - ID text: zh_8
03/25/2024 17:13:48 - INFO - __main__ - Mean variance for zh_8: 0.11467784643173218
03/25/2024 17:13:48 - INFO - __main__ - Mean std for for zh_8: 0.2844376564025879
03/25/2024 17:13:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:13:48 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:13:48 - INFO - __main__ - ID text: zh_9
03/25/2024 17:14:53 - INFO - __main__ - Mean variance for zh_9: 0.09625036269426346
03/25/2024 17:14:53 - INFO - __main__ - Mean std for for zh_9: 0.252847820520401
03/25/2024 17:14:53 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/25/2024 17:14:53 - INFO - __main__ - 
######## Language: arabic ######## 

03/25/2024 17:14:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:14:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:14:53 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/25/2024 17:15:57 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.043340567499399185
03/25/2024 17:15:57 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.1707819700241089
03/25/2024 17:15:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:15:57 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:15:57 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/25/2024 17:17:02 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.031887754797935486
03/25/2024 17:17:02 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.13550011813640594
03/25/2024 17:17:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:17:02 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:17:02 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/25/2024 17:18:06 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.030321739614009857
03/25/2024 17:18:06 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.13290810585021973
03/25/2024 17:18:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:18:06 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 17:18:06 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/25/2024 17:19:10 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.038613155484199524
03/25/2024 17:19:11 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.15340332686901093
03/25/2024 17:19:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:19:11 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:19:11 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/25/2024 17:20:15 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.055217891931533813
03/25/2024 17:20:15 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.19534583389759064
03/25/2024 17:20:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:20:17 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:20:17 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/25/2024 17:21:21 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.028775518760085106
03/25/2024 17:21:21 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.12971417605876923
03/25/2024 17:21:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:21:21 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:21:21 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/25/2024 17:22:26 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.043701767921447754
03/25/2024 17:22:26 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.16324171423912048
03/25/2024 17:22:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:22:26 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:22:26 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/25/2024 17:23:31 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.03310457244515419
03/25/2024 17:23:31 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.1417972594499588
03/25/2024 17:23:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:23:31 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:23:31 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/25/2024 17:24:35 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.030274705961346626
03/25/2024 17:24:35 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.13420940935611725
03/25/2024 17:24:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:24:35 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:24:35 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/25/2024 17:25:39 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.03445979580283165
03/25/2024 17:25:39 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.14245808124542236
03/25/2024 17:25:39 - INFO - __main__ - 
######## Language: russian ######## 

03/25/2024 17:25:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:25:39 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 17:25:39 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/25/2024 17:26:44 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.023470714688301086
03/25/2024 17:26:44 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.11453501135110855
03/25/2024 17:26:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:26:44 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:26:44 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/25/2024 17:27:48 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.032015178352594376
03/25/2024 17:27:48 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.1393938809633255
03/25/2024 17:27:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:27:48 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:27:48 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/25/2024 17:28:53 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.018474692478775978
03/25/2024 17:28:53 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.10185229033231735
03/25/2024 17:28:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:28:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:28:53 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/25/2024 17:29:58 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.021100357174873352
03/25/2024 17:29:58 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.1098889410495758
03/25/2024 17:29:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:29:58 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:29:58 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/25/2024 17:31:03 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.021079614758491516
03/25/2024 17:31:03 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.10955795645713806
03/25/2024 17:31:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:31:03 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:31:03 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/25/2024 17:32:07 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.020617125555872917
03/25/2024 17:32:07 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.10940279811620712
03/25/2024 17:32:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:32:07 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:32:07 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/25/2024 17:33:12 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.04028933122754097
03/25/2024 17:33:12 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.17055851221084595
03/25/2024 17:33:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:33:12 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 17:33:12 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/25/2024 17:34:17 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.02860863506793976
03/25/2024 17:34:17 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.1289464682340622
03/25/2024 17:34:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:34:17 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:34:17 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/25/2024 17:35:21 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.029870837926864624
03/25/2024 17:35:21 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.13303841650485992
03/25/2024 17:35:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:35:21 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 17:35:21 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/25/2024 17:36:26 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.02190352976322174
03/25/2024 17:36:26 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.11196013540029526
03/25/2024 17:36:26 - INFO - __main__ - 
######## Language: bengali ######## 

03/25/2024 17:36:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:36:26 - INFO - __main__ - Masked count: 119, ratio = 0.4648
03/25/2024 17:36:26 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/25/2024 17:37:30 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.06969815492630005
03/25/2024 17:37:30 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.20604480803012848
03/25/2024 17:37:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:37:30 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:37:30 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/25/2024 17:38:34 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.06681550294160843
03/25/2024 17:38:34 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.20280994474887848
03/25/2024 17:38:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:38:34 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:38:34 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/25/2024 17:39:37 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.055254653096199036
03/25/2024 17:39:37 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.18030868470668793
03/25/2024 17:39:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:39:38 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:39:38 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/25/2024 17:40:41 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.07289310544729233
03/25/2024 17:40:41 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.20615918934345245
03/25/2024 17:40:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:40:41 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:40:41 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/25/2024 17:41:45 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.04096752777695656
03/25/2024 17:41:45 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.15843962132930756
03/25/2024 17:41:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:41:45 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:41:45 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/25/2024 17:42:49 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.06868350505828857
03/25/2024 17:42:49 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.20347052812576294
03/25/2024 17:42:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:42:49 - INFO - __main__ - Masked count: 112, ratio = 0.4375
03/25/2024 17:42:49 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/25/2024 17:43:53 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.07809760421514511
03/25/2024 17:43:53 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.2209675908088684
03/25/2024 17:43:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:43:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:43:53 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/25/2024 17:44:56 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.0644037202000618
03/25/2024 17:44:56 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.19550199806690216
03/25/2024 17:44:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:44:56 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:44:56 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/25/2024 17:46:00 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.06488301604986191
03/25/2024 17:46:00 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.19925729930400848
03/25/2024 17:46:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:46:00 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:46:00 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/25/2024 17:47:04 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.09684144705533981
03/25/2024 17:47:04 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.2536929249763489
03/25/2024 17:47:04 - INFO - __main__ - 
######## Language: telugu ######## 

03/25/2024 17:47:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:47:04 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:47:04 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/25/2024 17:48:07 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.027404332533478737
03/25/2024 17:48:07 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.12720154225826263
03/25/2024 17:48:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:48:07 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:48:07 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/25/2024 17:49:10 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.02761744149029255
03/25/2024 17:49:10 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.12578222155570984
03/25/2024 17:49:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:49:10 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:49:10 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/25/2024 17:50:13 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.022181041538715363
03/25/2024 17:50:13 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.11590149253606796
03/25/2024 17:50:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:50:14 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:50:14 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/25/2024 17:51:16 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.030901657417416573
03/25/2024 17:51:16 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.1411714106798172
03/25/2024 17:51:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:51:16 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:51:16 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/25/2024 17:52:19 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.02508961223065853
03/25/2024 17:52:19 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.12169406563043594
03/25/2024 17:52:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:52:19 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:52:19 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/25/2024 17:53:22 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.02546744979918003
03/25/2024 17:53:22 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.12283173203468323
03/25/2024 17:53:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:53:22 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 17:53:22 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/25/2024 17:54:25 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.06798010319471359
03/25/2024 17:54:25 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.20456059277057648
03/25/2024 17:54:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:54:25 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:54:25 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/25/2024 17:55:28 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.029800700023770332
03/25/2024 17:55:28 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.1336863487958908
03/25/2024 17:55:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:55:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:55:28 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/25/2024 17:56:31 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.024081170558929443
03/25/2024 17:56:31 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.1244281753897667
03/25/2024 17:56:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:56:31 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:56:31 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/25/2024 17:57:34 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.02472439408302307
03/25/2024 17:57:34 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.12065567821264267
03/25/2024 17:57:34 - INFO - __main__ - 
######## Language: finnish ######## 

03/25/2024 17:57:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:57:34 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:57:34 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/25/2024 17:58:37 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.025699837133288383
03/25/2024 17:58:37 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.11808183789253235
03/25/2024 17:58:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:58:38 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:58:38 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/25/2024 17:59:41 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.02679884433746338
03/25/2024 17:59:41 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.1273026466369629
03/25/2024 17:59:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:59:41 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:59:41 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/25/2024 18:00:44 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.06599753350019455
03/25/2024 18:00:44 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.2055455893278122
03/25/2024 18:00:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:00:44 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:00:44 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/25/2024 18:01:47 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.03204496577382088
03/25/2024 18:01:47 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.13770993053913116
03/25/2024 18:01:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:01:47 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 18:01:47 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/25/2024 18:02:50 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.03185046836733818
03/25/2024 18:02:50 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.13687346875667572
03/25/2024 18:02:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:02:50 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:02:50 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/25/2024 18:03:53 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.014923438429832458
03/25/2024 18:03:53 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.08973488956689835
03/25/2024 18:03:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:03:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:03:53 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/25/2024 18:04:56 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.014043844304978848
03/25/2024 18:04:56 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.08895715326070786
03/25/2024 18:04:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:04:56 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 18:04:56 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/25/2024 18:05:59 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.11876428127288818
03/25/2024 18:05:59 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.2555360496044159
03/25/2024 18:05:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:05:59 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:05:59 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/25/2024 18:07:02 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.01985877938568592
03/25/2024 18:07:02 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.09997238963842392
03/25/2024 18:07:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:07:02 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:07:02 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/25/2024 18:08:05 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.016524724662303925
03/25/2024 18:08:05 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.09565331786870956
03/25/2024 18:08:05 - INFO - __main__ - 
######## Language: swahili ######## 

03/25/2024 18:08:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:08:05 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:08:05 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/25/2024 18:09:08 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.023854216560721397
03/25/2024 18:09:08 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.12218720465898514
03/25/2024 18:09:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:09:08 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:09:08 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/25/2024 18:10:11 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.0177354346960783
03/25/2024 18:10:11 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.0998280942440033
03/25/2024 18:10:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:10:11 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:10:11 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/25/2024 18:11:14 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.027673913165926933
03/25/2024 18:11:14 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.12838391959667206
03/25/2024 18:11:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:11:14 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:11:14 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/25/2024 18:12:18 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.017730193212628365
03/25/2024 18:12:18 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.09932618588209152
03/25/2024 18:12:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:12:18 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 18:12:18 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/25/2024 18:13:21 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.016048787161707878
03/25/2024 18:13:21 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.09552514553070068
03/25/2024 18:13:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:13:21 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:13:21 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/25/2024 18:14:24 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.03403432294726372
03/25/2024 18:14:24 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.14558720588684082
03/25/2024 18:14:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:14:25 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:14:25 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/25/2024 18:15:28 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.021622374653816223
03/25/2024 18:15:28 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.11383213847875595
03/25/2024 18:15:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:15:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:15:28 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/25/2024 18:16:31 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.025972971692681313
03/25/2024 18:16:31 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.12245938181877136
03/25/2024 18:16:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:16:31 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:16:31 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/25/2024 18:17:35 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.017012467607855797
03/25/2024 18:17:35 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.09422138333320618
03/25/2024 18:17:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:17:35 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:17:35 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/25/2024 18:18:38 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.015749020501971245
03/25/2024 18:18:38 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.09438208490610123
03/25/2024 18:18:38 - INFO - __main__ - 
######## Language: korean ######## 

03/25/2024 18:18:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:18:38 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:18:38 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/25/2024 18:19:41 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.07261204719543457
03/25/2024 18:19:41 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.206479012966156
03/25/2024 18:19:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:19:42 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:19:42 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/25/2024 18:20:45 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.026568902656435966
03/25/2024 18:20:45 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.13075272738933563
03/25/2024 18:20:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:20:45 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:20:45 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/25/2024 18:21:48 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.026378462091088295
03/25/2024 18:21:48 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.12798257172107697
03/25/2024 18:21:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:21:48 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:21:48 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/25/2024 18:22:51 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.0284044798463583
03/25/2024 18:22:51 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.13435399532318115
03/25/2024 18:22:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:22:51 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:22:51 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/25/2024 18:23:53 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.05764131247997284
03/25/2024 18:23:53 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.1858171671628952
03/25/2024 18:23:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:23:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:23:53 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/25/2024 18:24:56 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.029522007331252098
03/25/2024 18:24:56 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.13251830637454987
03/25/2024 18:24:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:24:56 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 18:24:56 - INFO - __main__ - ID text: korean-148115504649351135-0
03/25/2024 18:25:58 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.029694335535168648
03/25/2024 18:25:58 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.13970373570919037
03/25/2024 18:25:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:25:58 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:25:58 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/25/2024 18:27:01 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.07040636241436005
03/25/2024 18:27:01 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.20346485078334808
03/25/2024 18:27:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:27:01 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:27:01 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/25/2024 18:28:04 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.0865633487701416
03/25/2024 18:28:04 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.2293190211057663
03/25/2024 18:28:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:28:04 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:28:04 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/25/2024 18:29:07 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.10715734213590622
03/25/2024 18:29:07 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.2737232446670532
03/25/2024 18:29:07 - INFO - __main__ - 
######## Language: indonesian ######## 

03/25/2024 18:29:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:29:07 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 18:29:07 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/25/2024 18:30:10 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.02243315614759922
03/25/2024 18:30:10 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.11274266242980957
03/25/2024 18:30:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:30:10 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:30:10 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/25/2024 18:31:13 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.06667258590459824
03/25/2024 18:31:13 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.20449180901050568
03/25/2024 18:31:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:31:13 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:31:13 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/25/2024 18:32:16 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.017337357625365257
03/25/2024 18:32:16 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.09582199901342392
03/25/2024 18:32:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:32:16 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:32:16 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/25/2024 18:33:19 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.0153892757371068
03/25/2024 18:33:19 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.09234655648469925
03/25/2024 18:33:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:33:19 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:33:19 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/25/2024 18:34:21 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.016424326226115227
03/25/2024 18:34:21 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.09272386878728867
03/25/2024 18:34:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:34:21 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:34:21 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/25/2024 18:35:24 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.017169246450066566
03/25/2024 18:35:24 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.09548678249120712
03/25/2024 18:35:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:35:24 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:35:24 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/25/2024 18:36:26 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.015120097436010838
03/25/2024 18:36:26 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.09110478311777115
03/25/2024 18:36:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:36:26 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:36:26 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/25/2024 18:37:28 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.02606021799147129
03/25/2024 18:37:28 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.11950886994600296
03/25/2024 18:37:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:37:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:37:28 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/25/2024 18:38:30 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.019168416038155556
03/25/2024 18:38:30 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.10310658067464828
03/25/2024 18:38:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:38:30 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:38:30 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/25/2024 18:39:32 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.013920593075454235
03/25/2024 18:39:32 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.08856013417243958
03/25/2024 18:39:32 - INFO - __main__ - 
######## Language: english ######## 

03/25/2024 18:39:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:39:32 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:39:32 - INFO - __main__ - ID text: english-2852412434797041176-6
03/25/2024 18:40:36 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.09050559997558594
03/25/2024 18:40:36 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.24362891912460327
03/25/2024 18:40:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:40:36 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:40:36 - INFO - __main__ - ID text: english--1463732605740571606-0
03/25/2024 18:41:38 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.023687414824962616
03/25/2024 18:41:38 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.1075272336602211
03/25/2024 18:41:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:41:38 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:41:38 - INFO - __main__ - ID text: english-5441411281255470421-0
03/25/2024 18:42:40 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.019003551453351974
03/25/2024 18:42:40 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.10006088763475418
03/25/2024 18:42:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:42:41 - INFO - __main__ - Masked count: 118, ratio = 0.4609
03/25/2024 18:42:41 - INFO - __main__ - ID text: english-7294054492486093447-1
03/25/2024 18:43:43 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.059573400765657425
03/25/2024 18:43:43 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.1771281212568283
03/25/2024 18:43:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:43:43 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:43:43 - INFO - __main__ - ID text: english-8820750127045023244-0
03/25/2024 18:44:45 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.035084228962659836
03/25/2024 18:44:45 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.1374586820602417
03/25/2024 18:44:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:44:45 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:44:45 - INFO - __main__ - ID text: english--506693546683012611-2
03/25/2024 18:45:46 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.043303027749061584
03/25/2024 18:45:46 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.16092664003372192
03/25/2024 18:45:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:45:47 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:45:47 - INFO - __main__ - ID text: english-745411798111651115-0
03/25/2024 18:46:48 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.020727595314383507
03/25/2024 18:46:48 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.1050182580947876
03/25/2024 18:46:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:46:48 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:46:48 - INFO - __main__ - ID text: english-7740772185887912651-0
03/25/2024 18:47:50 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.02386864274740219
03/25/2024 18:47:50 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.10686945915222168
03/25/2024 18:47:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:47:50 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:47:50 - INFO - __main__ - ID text: english-383873188776267137-19
03/25/2024 18:48:52 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.018581904470920563
03/25/2024 18:48:52 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.09885291010141373
03/25/2024 18:48:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:48:52 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:48:52 - INFO - __main__ - ID text: english--8277537578703156284-0
03/25/2024 18:49:54 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.022032814100384712
03/25/2024 18:49:54 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.10895218700170517
03/25/2024 18:49:54 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/25/2024 18:49:54 - INFO - __main__ - 
######## Language: cola ######## 

03/25/2024 18:49:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:49:54 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:49:54 - INFO - __main__ - ID text: cola_228
03/25/2024 18:50:55 - INFO - __main__ - Mean variance for cola_228: 0.04992879554629326
03/25/2024 18:50:55 - INFO - __main__ - Mean std for for cola_228: 0.19659177958965302
03/25/2024 18:50:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:50:55 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:50:55 - INFO - __main__ - ID text: cola_51
03/25/2024 18:51:57 - INFO - __main__ - Mean variance for cola_51: 0.04301561415195465
03/25/2024 18:51:57 - INFO - __main__ - Mean std for for cola_51: 0.18503303825855255
03/25/2024 18:51:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:51:57 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:51:57 - INFO - __main__ - ID text: cola_563
03/25/2024 18:52:59 - INFO - __main__ - Mean variance for cola_563: 0.09564555436372757
03/25/2024 18:52:59 - INFO - __main__ - Mean std for for cola_563: 0.27570173144340515
03/25/2024 18:52:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:52:59 - INFO - __main__ - Masked count: 122, ratio = 0.4766
03/25/2024 18:52:59 - INFO - __main__ - ID text: cola_501
03/25/2024 18:54:01 - INFO - __main__ - Mean variance for cola_501: 0.05185839161276817
03/25/2024 18:54:01 - INFO - __main__ - Mean std for for cola_501: 0.20277468860149384
03/25/2024 18:54:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:54:01 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:54:01 - INFO - __main__ - ID text: cola_457
03/25/2024 18:55:02 - INFO - __main__ - Mean variance for cola_457: 0.06284093111753464
03/25/2024 18:55:02 - INFO - __main__ - Mean std for for cola_457: 0.22032874822616577
03/25/2024 18:55:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:55:02 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 18:55:02 - INFO - __main__ - ID text: cola_285
03/25/2024 18:56:04 - INFO - __main__ - Mean variance for cola_285: 0.04831526800990105
03/25/2024 18:56:04 - INFO - __main__ - Mean std for for cola_285: 0.1965707540512085
03/25/2024 18:56:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:56:04 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:56:04 - INFO - __main__ - ID text: cola_209
03/25/2024 18:57:06 - INFO - __main__ - Mean variance for cola_209: 0.04482614994049072
03/25/2024 18:57:06 - INFO - __main__ - Mean std for for cola_209: 0.18642087280750275
03/25/2024 18:57:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:57:06 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:57:06 - INFO - __main__ - ID text: cola_178
03/25/2024 18:58:07 - INFO - __main__ - Mean variance for cola_178: 0.052808549255132675
03/25/2024 18:58:07 - INFO - __main__ - Mean std for for cola_178: 0.20622949302196503
03/25/2024 18:58:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:58:07 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:58:07 - INFO - __main__ - ID text: cola_864
03/25/2024 18:59:09 - INFO - __main__ - Mean variance for cola_864: 0.04508553445339203
03/25/2024 18:59:09 - INFO - __main__ - Mean std for for cola_864: 0.19056914746761322
03/25/2024 18:59:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:59:09 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:59:09 - INFO - __main__ - ID text: cola_65
03/25/2024 19:00:11 - INFO - __main__ - Mean variance for cola_65: 0.05316856503486633
03/25/2024 19:00:11 - INFO - __main__ - Mean std for for cola_65: 0.19827179610729218
03/25/2024 19:00:11 - INFO - __main__ - 
######## Language: mnli ######## 

03/25/2024 19:00:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:00:11 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:00:11 - INFO - __main__ - ID text: mnli_488
03/25/2024 19:01:13 - INFO - __main__ - Mean variance for mnli_488: 0.03618110716342926
03/25/2024 19:01:13 - INFO - __main__ - Mean std for for mnli_488: 0.1546185463666916
03/25/2024 19:01:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:01:13 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:01:13 - INFO - __main__ - ID text: mnli_1535
03/25/2024 19:02:15 - INFO - __main__ - Mean variance for mnli_1535: 0.03914691507816315
03/25/2024 19:02:15 - INFO - __main__ - Mean std for for mnli_1535: 0.15452782809734344
03/25/2024 19:02:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:02:15 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:02:15 - INFO - __main__ - ID text: mnli_3582
03/25/2024 19:03:17 - INFO - __main__ - Mean variance for mnli_3582: 0.052558258175849915
03/25/2024 19:03:17 - INFO - __main__ - Mean std for for mnli_3582: 0.1891258805990219
03/25/2024 19:03:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:03:17 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:03:17 - INFO - __main__ - ID text: mnli_3811
03/25/2024 19:04:19 - INFO - __main__ - Mean variance for mnli_3811: 0.04025661572813988
03/25/2024 19:04:19 - INFO - __main__ - Mean std for for mnli_3811: 0.16649921238422394
03/25/2024 19:04:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:04:19 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 19:04:19 - INFO - __main__ - ID text: mnli_8279
03/25/2024 19:05:20 - INFO - __main__ - Mean variance for mnli_8279: 0.048124536871910095
03/25/2024 19:05:20 - INFO - __main__ - Mean std for for mnli_8279: 0.18819010257720947
03/25/2024 19:05:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:05:20 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:05:20 - INFO - __main__ - ID text: mnli_434
03/25/2024 19:06:22 - INFO - __main__ - Mean variance for mnli_434: 0.030488574877381325
03/25/2024 19:06:22 - INFO - __main__ - Mean std for for mnli_434: 0.1274781972169876
03/25/2024 19:06:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:06:22 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:06:22 - INFO - __main__ - ID text: mnli_9195
03/25/2024 19:07:24 - INFO - __main__ - Mean variance for mnli_9195: 0.04363768920302391
03/25/2024 19:07:24 - INFO - __main__ - Mean std for for mnli_9195: 0.18802951276302338
03/25/2024 19:07:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:07:24 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:07:24 - INFO - __main__ - ID text: mnli_3257
03/25/2024 19:08:26 - INFO - __main__ - Mean variance for mnli_3257: 0.0359288714826107
03/25/2024 19:08:26 - INFO - __main__ - Mean std for for mnli_3257: 0.15883149206638336
03/25/2024 19:08:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:08:26 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:08:26 - INFO - __main__ - ID text: mnli_8928
03/25/2024 19:09:28 - INFO - __main__ - Mean variance for mnli_8928: 0.03687796741724014
03/25/2024 19:09:28 - INFO - __main__ - Mean std for for mnli_8928: 0.15213936567306519
03/25/2024 19:09:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:09:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:09:28 - INFO - __main__ - ID text: mnli_6873
03/25/2024 19:10:30 - INFO - __main__ - Mean variance for mnli_6873: 0.03865105286240578
03/25/2024 19:10:30 - INFO - __main__ - Mean std for for mnli_6873: 0.14763495326042175
03/25/2024 19:10:30 - INFO - __main__ - 
######## Language: mrpc ######## 

03/25/2024 19:10:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:10:30 - INFO - __main__ - Masked count: 122, ratio = 0.4766
03/25/2024 19:10:30 - INFO - __main__ - ID text: mrpc_451
03/25/2024 19:11:32 - INFO - __main__ - Mean variance for mrpc_451: 0.0561436228454113
03/25/2024 19:11:32 - INFO - __main__ - Mean std for for mrpc_451: 0.18375355005264282
03/25/2024 19:11:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:11:32 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:11:32 - INFO - __main__ - ID text: mrpc_919
03/25/2024 19:12:33 - INFO - __main__ - Mean variance for mrpc_919: 0.039262086153030396
03/25/2024 19:12:33 - INFO - __main__ - Mean std for for mrpc_919: 0.15514789521694183
03/25/2024 19:12:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:12:33 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:12:33 - INFO - __main__ - ID text: mrpc_1206
03/25/2024 19:13:36 - INFO - __main__ - Mean variance for mrpc_1206: 0.04060004651546478
03/25/2024 19:13:36 - INFO - __main__ - Mean std for for mrpc_1206: 0.16766683757305145
03/25/2024 19:13:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:13:37 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:13:37 - INFO - __main__ - ID text: mrpc_569
03/25/2024 19:14:39 - INFO - __main__ - Mean variance for mrpc_569: 0.042907897382974625
03/25/2024 19:14:39 - INFO - __main__ - Mean std for for mrpc_569: 0.1617606282234192
03/25/2024 19:14:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:14:39 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:14:39 - INFO - __main__ - ID text: mrpc_1657
03/25/2024 19:15:41 - INFO - __main__ - Mean variance for mrpc_1657: 0.03221619874238968
03/25/2024 19:15:41 - INFO - __main__ - Mean std for for mrpc_1657: 0.1303555816411972
03/25/2024 19:15:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:15:41 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:15:41 - INFO - __main__ - ID text: mrpc_13
03/25/2024 19:16:43 - INFO - __main__ - Mean variance for mrpc_13: 0.03894030675292015
03/25/2024 19:16:43 - INFO - __main__ - Mean std for for mrpc_13: 0.15457873046398163
03/25/2024 19:16:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:16:43 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:16:43 - INFO - __main__ - ID text: mrpc_1554
03/25/2024 19:17:45 - INFO - __main__ - Mean variance for mrpc_1554: 0.02862793393433094
03/25/2024 19:17:45 - INFO - __main__ - Mean std for for mrpc_1554: 0.1221562996506691
03/25/2024 19:17:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:17:45 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:17:45 - INFO - __main__ - ID text: mrpc_1650
03/25/2024 19:18:47 - INFO - __main__ - Mean variance for mrpc_1650: 0.13169769942760468
03/25/2024 19:18:47 - INFO - __main__ - Mean std for for mrpc_1650: 0.2924629747867584
03/25/2024 19:18:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:18:47 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:18:47 - INFO - __main__ - ID text: mrpc_326
03/25/2024 19:19:49 - INFO - __main__ - Mean variance for mrpc_326: 0.035917993634939194
03/25/2024 19:19:49 - INFO - __main__ - Mean std for for mrpc_326: 0.15189296007156372
03/25/2024 19:19:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:19:49 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:19:49 - INFO - __main__ - ID text: mrpc_1429
03/25/2024 19:20:51 - INFO - __main__ - Mean variance for mrpc_1429: 0.040589045733213425
03/25/2024 19:20:51 - INFO - __main__ - Mean std for for mrpc_1429: 0.1551990956068039
03/25/2024 19:20:51 - INFO - __main__ - 
######## Language: qnli ######## 

03/25/2024 19:20:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:20:51 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:20:51 - INFO - __main__ - ID text: qnli_3462
03/25/2024 19:21:53 - INFO - __main__ - Mean variance for qnli_3462: 0.04565689340233803
03/25/2024 19:21:53 - INFO - __main__ - Mean std for for qnli_3462: 0.1680925339460373
03/25/2024 19:21:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:21:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:21:53 - INFO - __main__ - ID text: qnli_2787
03/25/2024 19:22:55 - INFO - __main__ - Mean variance for qnli_2787: 0.029413143172860146
03/25/2024 19:22:55 - INFO - __main__ - Mean std for for qnli_2787: 0.12675966322422028
03/25/2024 19:22:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:22:55 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:22:55 - INFO - __main__ - ID text: qnli_2276
03/25/2024 19:23:57 - INFO - __main__ - Mean variance for qnli_2276: 0.03098568134009838
03/25/2024 19:23:57 - INFO - __main__ - Mean std for for qnli_2276: 0.13440124690532684
03/25/2024 19:23:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:23:57 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:23:57 - INFO - __main__ - ID text: qnli_1273
03/25/2024 19:24:59 - INFO - __main__ - Mean variance for qnli_1273: 0.0301008690148592
03/25/2024 19:24:59 - INFO - __main__ - Mean std for for qnli_1273: 0.138279989361763
03/25/2024 19:24:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:24:59 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 19:24:59 - INFO - __main__ - ID text: qnli_1763
03/25/2024 19:26:01 - INFO - __main__ - Mean variance for qnli_1763: 0.03920212760567665
03/25/2024 19:26:01 - INFO - __main__ - Mean std for for qnli_1763: 0.15730057656764984
03/25/2024 19:26:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:26:01 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 19:26:01 - INFO - __main__ - ID text: qnli_2757
03/25/2024 19:27:03 - INFO - __main__ - Mean variance for qnli_2757: 0.050292983651161194
03/25/2024 19:27:03 - INFO - __main__ - Mean std for for qnli_2757: 0.17257671058177948
03/25/2024 19:27:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:27:03 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:27:03 - INFO - __main__ - ID text: qnli_837
03/25/2024 19:28:04 - INFO - __main__ - Mean variance for qnli_837: 0.037532735615968704
03/25/2024 19:28:04 - INFO - __main__ - Mean std for for qnli_837: 0.15167511999607086
03/25/2024 19:28:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:28:04 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:28:04 - INFO - __main__ - ID text: qnli_759
03/25/2024 19:29:06 - INFO - __main__ - Mean variance for qnli_759: 0.02182314358651638
03/25/2024 19:29:06 - INFO - __main__ - Mean std for for qnli_759: 0.10600411891937256
03/25/2024 19:29:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:29:06 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:29:06 - INFO - __main__ - ID text: qnli_3112
03/25/2024 19:30:07 - INFO - __main__ - Mean variance for qnli_3112: 0.04366515576839447
03/25/2024 19:30:07 - INFO - __main__ - Mean std for for qnli_3112: 0.16353224217891693
03/25/2024 19:30:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:30:09 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 19:30:09 - INFO - __main__ - ID text: qnli_792
03/25/2024 19:31:10 - INFO - __main__ - Mean variance for qnli_792: 0.04745960235595703
03/25/2024 19:31:10 - INFO - __main__ - Mean std for for qnli_792: 0.16808807849884033
03/25/2024 19:31:10 - INFO - __main__ - 
######## Language: qqp ######## 

03/25/2024 19:31:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:31:10 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:31:10 - INFO - __main__ - ID text: qqp_188208
03/25/2024 19:32:12 - INFO - __main__ - Mean variance for qqp_188208: 0.04695754870772362
03/25/2024 19:32:12 - INFO - __main__ - Mean std for for qqp_188208: 0.18633557856082916
03/25/2024 19:32:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:32:12 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 19:32:12 - INFO - __main__ - ID text: qqp_180331
03/25/2024 19:33:13 - INFO - __main__ - Mean variance for qqp_180331: 0.04140757396817207
03/25/2024 19:33:13 - INFO - __main__ - Mean std for for qqp_180331: 0.17219625413417816
03/25/2024 19:33:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:33:13 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:33:13 - INFO - __main__ - ID text: qqp_316526
03/25/2024 19:34:15 - INFO - __main__ - Mean variance for qqp_316526: 0.0390196293592453
03/25/2024 19:34:15 - INFO - __main__ - Mean std for for qqp_316526: 0.15636681020259857
03/25/2024 19:34:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:34:15 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:34:15 - INFO - __main__ - ID text: qqp_138685
03/25/2024 19:35:17 - INFO - __main__ - Mean variance for qqp_138685: 0.030381061136722565
03/25/2024 19:35:17 - INFO - __main__ - Mean std for for qqp_138685: 0.1281728893518448
03/25/2024 19:35:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:35:17 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:35:17 - INFO - __main__ - ID text: qqp_22780
03/25/2024 19:36:19 - INFO - __main__ - Mean variance for qqp_22780: 0.04539896547794342
03/25/2024 19:36:19 - INFO - __main__ - Mean std for for qqp_22780: 0.1835065633058548
03/25/2024 19:36:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:36:19 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:36:19 - INFO - __main__ - ID text: qqp_382589
03/25/2024 19:37:21 - INFO - __main__ - Mean variance for qqp_382589: 0.03442284092307091
03/25/2024 19:37:21 - INFO - __main__ - Mean std for for qqp_382589: 0.1500023454427719
03/25/2024 19:37:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:37:21 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:37:21 - INFO - __main__ - ID text: qqp_240870
03/25/2024 19:38:22 - INFO - __main__ - Mean variance for qqp_240870: 0.04927600920200348
03/25/2024 19:38:22 - INFO - __main__ - Mean std for for qqp_240870: 0.1856093555688858
03/25/2024 19:38:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:38:23 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 19:38:23 - INFO - __main__ - ID text: qqp_281137
03/25/2024 19:39:25 - INFO - __main__ - Mean variance for qqp_281137: 0.04402506723999977
03/25/2024 19:39:25 - INFO - __main__ - Mean std for for qqp_281137: 0.16896186769008636
03/25/2024 19:39:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:39:25 - INFO - __main__ - Masked count: 117, ratio = 0.4570
03/25/2024 19:39:25 - INFO - __main__ - ID text: qqp_65444
03/25/2024 19:40:27 - INFO - __main__ - Mean variance for qqp_65444: 0.04749344289302826
03/25/2024 19:40:27 - INFO - __main__ - Mean std for for qqp_65444: 0.18496595323085785
03/25/2024 19:40:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:40:27 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:40:27 - INFO - __main__ - ID text: qqp_198461
03/25/2024 19:41:28 - INFO - __main__ - Mean variance for qqp_198461: 0.03345261886715889
03/25/2024 19:41:28 - INFO - __main__ - Mean std for for qqp_198461: 0.1506057232618332
03/25/2024 19:41:28 - INFO - __main__ - 
######## Language: rte ######## 

03/25/2024 19:41:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:41:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:41:28 - INFO - __main__ - ID text: rte_322
03/25/2024 19:42:30 - INFO - __main__ - Mean variance for rte_322: 0.0410846509039402
03/25/2024 19:42:30 - INFO - __main__ - Mean std for for rte_322: 0.16275091469287872
03/25/2024 19:42:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:42:30 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:42:30 - INFO - __main__ - ID text: rte_2261
03/25/2024 19:43:31 - INFO - __main__ - Mean variance for rte_2261: 0.035859424620866776
03/25/2024 19:43:31 - INFO - __main__ - Mean std for for rte_2261: 0.16159574687480927
03/25/2024 19:43:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:43:31 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:43:31 - INFO - __main__ - ID text: rte_1200
03/25/2024 19:44:33 - INFO - __main__ - Mean variance for rte_1200: 0.02829333394765854
03/25/2024 19:44:33 - INFO - __main__ - Mean std for for rte_1200: 0.12231231480836868
03/25/2024 19:44:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:44:33 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:44:33 - INFO - __main__ - ID text: rte_2574
03/25/2024 19:45:34 - INFO - __main__ - Mean variance for rte_2574: 0.023549063131213188
03/25/2024 19:45:34 - INFO - __main__ - Mean std for for rte_2574: 0.1088014543056488
03/25/2024 19:45:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:45:34 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:45:34 - INFO - __main__ - ID text: rte_2533
03/25/2024 19:46:36 - INFO - __main__ - Mean variance for rte_2533: 0.021391699090600014
03/25/2024 19:46:36 - INFO - __main__ - Mean std for for rte_2533: 0.10411950945854187
03/25/2024 19:46:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:46:36 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:46:36 - INFO - __main__ - ID text: rte_1481
03/25/2024 19:47:38 - INFO - __main__ - Mean variance for rte_1481: 0.03482687100768089
03/25/2024 19:47:38 - INFO - __main__ - Mean std for for rte_1481: 0.14349311590194702
03/25/2024 19:47:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:47:38 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:47:38 - INFO - __main__ - ID text: rte_2364
03/25/2024 19:48:40 - INFO - __main__ - Mean variance for rte_2364: 0.036833297461271286
03/25/2024 19:48:40 - INFO - __main__ - Mean std for for rte_2364: 0.13983115553855896
03/25/2024 19:48:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:48:40 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:48:40 - INFO - __main__ - ID text: rte_787
03/25/2024 19:49:41 - INFO - __main__ - Mean variance for rte_787: 0.03439997509121895
03/25/2024 19:49:41 - INFO - __main__ - Mean std for for rte_787: 0.1421494334936142
03/25/2024 19:49:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:49:41 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 19:49:41 - INFO - __main__ - ID text: rte_2885
03/25/2024 19:50:43 - INFO - __main__ - Mean variance for rte_2885: 0.038286417722702026
03/25/2024 19:50:43 - INFO - __main__ - Mean std for for rte_2885: 0.14225070178508759
03/25/2024 19:50:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:50:43 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:50:43 - INFO - __main__ - ID text: rte_284
03/25/2024 19:51:44 - INFO - __main__ - Mean variance for rte_284: 0.04380420967936516
03/25/2024 19:51:44 - INFO - __main__ - Mean std for for rte_284: 0.16741210222244263
03/25/2024 19:51:44 - INFO - __main__ - 
######## Language: sst2 ######## 

03/25/2024 19:51:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:51:44 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:51:44 - INFO - __main__ - ID text: sst2_93
03/25/2024 19:52:46 - INFO - __main__ - Mean variance for sst2_93: 0.036479342728853226
03/25/2024 19:52:46 - INFO - __main__ - Mean std for for sst2_93: 0.15888144075870514
03/25/2024 19:52:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:52:46 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:52:46 - INFO - __main__ - ID text: sst2_1354
03/25/2024 19:53:48 - INFO - __main__ - Mean variance for sst2_1354: 0.05034582316875458
03/25/2024 19:53:48 - INFO - __main__ - Mean std for for sst2_1354: 0.19827014207839966
03/25/2024 19:53:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:53:48 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:53:48 - INFO - __main__ - ID text: sst2_466
03/25/2024 19:54:49 - INFO - __main__ - Mean variance for sst2_466: 0.05112285539507866
03/25/2024 19:54:49 - INFO - __main__ - Mean std for for sst2_466: 0.2010130137205124
03/25/2024 19:54:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:54:49 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:54:49 - INFO - __main__ - ID text: sst2_1583
03/25/2024 19:55:51 - INFO - __main__ - Mean variance for sst2_1583: 0.03441702574491501
03/25/2024 19:55:51 - INFO - __main__ - Mean std for for sst2_1583: 0.14738275110721588
03/25/2024 19:55:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:55:51 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:55:51 - INFO - __main__ - ID text: sst2_592
03/25/2024 19:56:52 - INFO - __main__ - Mean variance for sst2_592: 0.03495875746011734
03/25/2024 19:56:52 - INFO - __main__ - Mean std for for sst2_592: 0.14957498013973236
03/25/2024 19:56:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:56:52 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:56:52 - INFO - __main__ - ID text: sst2_163
03/25/2024 19:57:54 - INFO - __main__ - Mean variance for sst2_163: 0.061540525406599045
03/25/2024 19:57:54 - INFO - __main__ - Mean std for for sst2_163: 0.22274149954319
03/25/2024 19:57:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:57:54 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:57:54 - INFO - __main__ - ID text: sst2_1751
03/25/2024 19:58:55 - INFO - __main__ - Mean variance for sst2_1751: 0.0331868976354599
03/25/2024 19:58:55 - INFO - __main__ - Mean std for for sst2_1751: 0.16237245500087738
03/25/2024 19:58:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:58:55 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 19:58:55 - INFO - __main__ - ID text: sst2_476
03/25/2024 19:59:57 - INFO - __main__ - Mean variance for sst2_476: 0.030740531161427498
03/25/2024 19:59:57 - INFO - __main__ - Mean std for for sst2_476: 0.14564253389835358
03/25/2024 19:59:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:59:57 - INFO - __main__ - Masked count: 122, ratio = 0.4766
03/25/2024 19:59:57 - INFO - __main__ - ID text: sst2_1774
03/25/2024 20:00:59 - INFO - __main__ - Mean variance for sst2_1774: 0.047269999980926514
03/25/2024 20:00:59 - INFO - __main__ - Mean std for for sst2_1774: 0.18360990285873413
03/25/2024 20:00:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:00:59 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:00:59 - INFO - __main__ - ID text: sst2_206
03/25/2024 20:02:00 - INFO - __main__ - Mean variance for sst2_206: 0.040413226932287216
03/25/2024 20:02:00 - INFO - __main__ - Mean std for for sst2_206: 0.172144815325737
03/25/2024 20:02:00 - INFO - __main__ - 
######## Language: stsb ######## 

03/25/2024 20:02:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:02:00 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 20:02:00 - INFO - __main__ - ID text: stsb_778
03/25/2024 20:03:02 - INFO - __main__ - Mean variance for stsb_778: 0.04802371561527252
03/25/2024 20:03:02 - INFO - __main__ - Mean std for for stsb_778: 0.18717992305755615
03/25/2024 20:03:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:03:02 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:03:02 - INFO - __main__ - ID text: stsb_569
03/25/2024 20:04:03 - INFO - __main__ - Mean variance for stsb_569: 0.05551685765385628
03/25/2024 20:04:03 - INFO - __main__ - Mean std for for stsb_569: 0.2067774385213852
03/25/2024 20:04:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:04:03 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:04:03 - INFO - __main__ - ID text: stsb_928
03/25/2024 20:05:05 - INFO - __main__ - Mean variance for stsb_928: 0.03136454150080681
03/25/2024 20:05:05 - INFO - __main__ - Mean std for for stsb_928: 0.13012276589870453
03/25/2024 20:05:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:05:05 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:05:05 - INFO - __main__ - ID text: stsb_1301
03/25/2024 20:06:06 - INFO - __main__ - Mean variance for stsb_1301: 0.039793435484170914
03/25/2024 20:06:06 - INFO - __main__ - Mean std for for stsb_1301: 0.16386890411376953
03/25/2024 20:06:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:06:06 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:06:06 - INFO - __main__ - ID text: stsb_747
03/25/2024 20:07:08 - INFO - __main__ - Mean variance for stsb_747: 0.04349703714251518
03/25/2024 20:07:08 - INFO - __main__ - Mean std for for stsb_747: 0.16466893255710602
03/25/2024 20:07:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:07:08 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:07:08 - INFO - __main__ - ID text: stsb_333
03/25/2024 20:08:10 - INFO - __main__ - Mean variance for stsb_333: 0.0352168083190918
03/25/2024 20:08:10 - INFO - __main__ - Mean std for for stsb_333: 0.15540198981761932
03/25/2024 20:08:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:08:10 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:08:10 - INFO - __main__ - ID text: stsb_758
03/25/2024 20:09:11 - INFO - __main__ - Mean variance for stsb_758: 0.04712933301925659
03/25/2024 20:09:11 - INFO - __main__ - Mean std for for stsb_758: 0.1735319346189499
03/25/2024 20:09:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:09:11 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:09:11 - INFO - __main__ - ID text: stsb_727
03/25/2024 20:10:13 - INFO - __main__ - Mean variance for stsb_727: 0.03908897563815117
03/25/2024 20:10:13 - INFO - __main__ - Mean std for for stsb_727: 0.17180873453617096
03/25/2024 20:10:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:10:13 - INFO - __main__ - Masked count: 122, ratio = 0.4766
03/25/2024 20:10:13 - INFO - __main__ - ID text: stsb_429
03/25/2024 20:11:15 - INFO - __main__ - Mean variance for stsb_429: 0.04847651347517967
03/25/2024 20:11:15 - INFO - __main__ - Mean std for for stsb_429: 0.19031257927417755
03/25/2024 20:11:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:11:15 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:11:15 - INFO - __main__ - ID text: stsb_1372
03/25/2024 20:12:17 - INFO - __main__ - Mean variance for stsb_1372: 0.03195180743932724
03/25/2024 20:12:17 - INFO - __main__ - Mean std for for stsb_1372: 0.1503848284482956
03/25/2024 20:12:17 - INFO - __main__ - 
######## Language: wnli ######## 

03/25/2024 20:12:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:12:17 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:12:17 - INFO - __main__ - ID text: wnli_68
03/25/2024 20:13:19 - INFO - __main__ - Mean variance for wnli_68: 0.0361492820084095
03/25/2024 20:13:19 - INFO - __main__ - Mean std for for wnli_68: 0.14307056367397308
03/25/2024 20:13:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:13:19 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:13:19 - INFO - __main__ - ID text: wnli_18
03/25/2024 20:14:20 - INFO - __main__ - Mean variance for wnli_18: 0.03268149867653847
03/25/2024 20:14:20 - INFO - __main__ - Mean std for for wnli_18: 0.13067114353179932
03/25/2024 20:14:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:14:20 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:14:20 - INFO - __main__ - ID text: wnli_43
03/25/2024 20:15:22 - INFO - __main__ - Mean variance for wnli_43: 0.035804376006126404
03/25/2024 20:15:22 - INFO - __main__ - Mean std for for wnli_43: 0.14397470653057098
03/25/2024 20:15:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:15:22 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:15:22 - INFO - __main__ - ID text: wnli_136
03/25/2024 20:16:24 - INFO - __main__ - Mean variance for wnli_136: 0.036656275391578674
03/25/2024 20:16:24 - INFO - __main__ - Mean std for for wnli_136: 0.1450866013765335
03/25/2024 20:16:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:16:24 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 20:16:24 - INFO - __main__ - ID text: wnli_62
03/25/2024 20:17:26 - INFO - __main__ - Mean variance for wnli_62: 0.039822790771722794
03/25/2024 20:17:26 - INFO - __main__ - Mean std for for wnli_62: 0.15859664976596832
03/25/2024 20:17:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:17:26 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:17:26 - INFO - __main__ - ID text: wnli_41
03/25/2024 20:18:28 - INFO - __main__ - Mean variance for wnli_41: 0.04405524209141731
03/25/2024 20:18:28 - INFO - __main__ - Mean std for for wnli_41: 0.15920798480510712
03/25/2024 20:18:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:18:28 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:18:28 - INFO - __main__ - ID text: wnli_118
03/25/2024 20:19:30 - INFO - __main__ - Mean variance for wnli_118: 0.037457164376974106
03/25/2024 20:19:30 - INFO - __main__ - Mean std for for wnli_118: 0.15290164947509766
03/25/2024 20:19:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:19:30 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:19:30 - INFO - __main__ - ID text: wnli_97
03/25/2024 20:20:32 - INFO - __main__ - Mean variance for wnli_97: 0.02795357257127762
03/25/2024 20:20:32 - INFO - __main__ - Mean std for for wnli_97: 0.12747140228748322
03/25/2024 20:20:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:20:32 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:20:32 - INFO - __main__ - ID text: wnli_69
03/25/2024 20:21:34 - INFO - __main__ - Mean variance for wnli_69: 0.034840840846300125
03/25/2024 20:21:34 - INFO - __main__ - Mean std for for wnli_69: 0.15440808236598969
03/25/2024 20:21:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:21:34 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:21:34 - INFO - __main__ - ID text: wnli_142
03/25/2024 20:22:36 - INFO - __main__ - Mean variance for wnli_142: 0.030487025156617165
03/25/2024 20:22:36 - INFO - __main__ - Mean std for for wnli_142: 0.13062141835689545
03/25/2024 20:22:36 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.0799119621515274, 'amh_1': 0.10796644538640976, 'amh_2': 0.12122237682342529, 'amh_3': 0.12599457800388336, 'amh_4': 0.11884377151727676, 'amh_5': 0.13510353863239288, 'amh_6': 0.1318458765745163, 'amh_7': 0.12966839969158173, 'amh_8': 0.11138450354337692, 'amh_9': 0.11378861218690872}, 'conll_2003_en': {'conll_2003_en_0': 0.14300893247127533, 'conll_2003_en_1': 0.06377743929624557, 'conll_2003_en_2': 0.027643123641610146, 'conll_2003_en_3': 0.038348741829395294, 'conll_2003_en_4': 0.05375673249363899, 'conll_2003_en_5': 0.13601313531398773, 'conll_2003_en_6': 0.122132308781147, 'conll_2003_en_7': 0.14160756766796112, 'conll_2003_en_8': 0.13374707102775574, 'conll_2003_en_9': 0.03315339237451553}, 'hau': {'hau_0': 0.021873846650123596, 'hau_1': 0.04037005826830864, 'hau_2': 0.14414571225643158, 'hau_3': 0.023096740245819092, 'hau_4': 0.023155445232987404, 'hau_5': 0.02219722978770733, 'hau_6': 0.03236513212323189, 'hau_7': 0.023617245256900787, 'hau_8': 0.021544577553868294, 'hau_9': 0.031039884313941002}, 'ibo': {'ibo_0': 0.03282955661416054, 'ibo_1': 0.051568806171417236, 'ibo_2': 0.031911592930555344, 'ibo_3': 0.039556834846735, 'ibo_4': 0.03304843604564667, 'ibo_5': 0.02675618790090084, 'ibo_6': 0.028813710436224937, 'ibo_7': 0.025863289833068848, 'ibo_8': 0.03683732450008392, 'ibo_9': 0.025479277595877647}, 'kin': {'kin_0': 0.024949118494987488, 'kin_1': 0.0333612821996212, 'kin_2': 0.03638177737593651, 'kin_3': 0.02655993215739727, 'kin_4': 0.02669629454612732, 'kin_5': 0.03721396625041962, 'kin_6': 0.019751179963350296, 'kin_7': 0.026762589812278748, 'kin_8': 0.028092950582504272, 'kin_9': 0.022681646049022675}, 'lug': {'lug_0': 0.02484641782939434, 'lug_1': 0.02866673283278942, 'lug_2': 0.01724058948457241, 'lug_3': 0.019789090380072594, 'lug_4': 0.03169019892811775, 'lug_5': 0.024116287007927895, 'lug_6': 0.022425903007388115, 'lug_7': 0.02575686387717724, 'lug_8': 0.03681711107492447, 'lug_9': 0.02876836620271206}, 'luo': {'luo_0': 0.020432600751519203, 'luo_1': 0.031761545687913895, 'luo_2': 0.027631105855107307, 'luo_3': 0.01795073039829731, 'luo_4': 0.030418552458286285, 'luo_5': 0.026558637619018555, 'luo_6': 0.021356739103794098, 'luo_7': 0.04589661583304405, 'luo_8': 0.03756233677268028, 'luo_9': 0.047013938426971436}, 'pcm': {'pcm_0': 0.03012041188776493, 'pcm_1': 0.03239775076508522, 'pcm_2': 0.0278239194303751, 'pcm_3': 0.02707619220018387, 'pcm_4': 0.02873772569000721, 'pcm_5': 0.04562986269593239, 'pcm_6': 0.029905932024121284, 'pcm_7': 0.028790300711989403, 'pcm_8': 0.030348151922225952, 'pcm_9': 0.03215539827942848}, 'swa': {'swa_0': 0.025247326120734215, 'swa_1': 0.035273369401693344, 'swa_2': 0.02689284086227417, 'swa_3': 0.0341678149998188, 'swa_4': 0.01908901147544384, 'swa_5': 0.017945220693945885, 'swa_6': 0.02362828515470028, 'swa_7': 0.0390375480055809, 'swa_8': 0.02332216687500477, 'swa_9': 0.03995630145072937}, 'wol': {'wol_0': 0.025968125090003014, 'wol_1': 0.02812768518924713, 'wol_2': 0.029500829055905342, 'wol_3': 0.05404342710971832, 'wol_4': 0.030166367068886757, 'wol_5': 0.03182664141058922, 'wol_6': 0.12184125185012817, 'wol_7': 0.028505362570285797, 'wol_8': 0.040420930832624435, 'wol_9': 0.04213322699069977}, 'yor': {'yor_0': 0.1148691400885582, 'yor_1': 0.11786264181137085, 'yor_2': 0.031127428635954857, 'yor_3': 0.024241164326667786, 'yor_4': 0.12558306753635406, 'yor_5': 0.07732990384101868, 'yor_6': 0.02776460535824299, 'yor_7': 0.11933455616235733, 'yor_8': 0.024205615743994713, 'yor_9': 0.12705114483833313}, 'zh': {'zh_0': 0.09765227884054184, 'zh_1': 0.08889772742986679, 'zh_2': 0.11478129029273987, 'zh_3': 0.14907191693782806, 'zh_4': 0.09769292920827866, 'zh_5': 0.15693213045597076, 'zh_6': 0.08904007077217102, 'zh_7': 0.12846264243125916, 'zh_8': 0.11467784643173218, 'zh_9': 0.09625036269426346}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.043340567499399185, 'arabic--3340323169760881569-0': 0.031887754797935486, 'arabic-4544770624843559444-1': 0.030321739614009857, 'arabic-891952409566422966-0': 0.038613155484199524, 'arabic-3659291834714572527-0': 0.055217891931533813, 'arabic-9215226117011890166-0': 0.028775518760085106, 'arabic-6300896128538259469-0': 0.043701767921447754, 'arabic-2382507508588518905-0': 0.03310457244515419, 'arabic-1871632801094859741-1': 0.030274705961346626, 'arabic--7365809756232083807-0': 0.03445979580283165}, 'russian': {'russian-3457655197371763238-61': 0.023470714688301086, 'russian--1914807805318993335-49': 0.032015178352594376, 'russian--3307989180606173904-1': 0.018474692478775978, 'russian--2219512001175315660-0': 0.021100357174873352, 'russian--7076080992904718941-0': 0.021079614758491516, 'russian--6565862953558739013-1': 0.020617125555872917, 'russian--5098374684590548031-42': 0.04028933122754097, 'russian-3573734219967447693-1': 0.02860863506793976, 'russian--4521001374120505750-6': 0.029870837926864624, 'russian--1308382244018658424-9': 0.02190352976322174}, 'bengali': {'bengali--1199493965132146131-3': 0.06969815492630005, 'bengali-1807801556888134437-2': 0.06681550294160843, 'bengali-2113189855114052041-2': 0.055254653096199036, 'bengali--2527914488250041207-0': 0.07289310544729233, 'bengali--8260793280894408063-14': 0.04096752777695656, 'bengali-8313009204852557186-4': 0.06868350505828857, 'bengali--415964033364840061-0': 0.07809760421514511, 'bengali--4696865548928858824-5': 0.0644037202000618, 'bengali-6505224142472931712-1': 0.06488301604986191, 'bengali-599666913917674019-13': 0.09684144705533981}, 'telugu': {'telugu--3977923017846260053-0': 0.027404332533478737, 'telugu-2254198842560317781-0': 0.02761744149029255, 'telugu-5435080895440121384-0': 0.022181041538715363, 'telugu--1182505954974481191-2': 0.030901657417416573, 'telugu-119276511844068401-0': 0.02508961223065853, 'telugu--4111208545071789922-0': 0.02546744979918003, 'telugu--5922002196428211484-132': 0.06798010319471359, 'telugu--1817004721681155192-3': 0.029800700023770332, 'telugu-1602214480303968359-1': 0.024081170558929443, 'telugu--6495674712575945374-0': 0.02472439408302307}, 'finnish': {'finnish-6987763079741579998-0': 0.025699837133288383, 'finnish--8516625414052383903-0': 0.02679884433746338, 'finnish-4168898766124519517-0': 0.06599753350019455, 'finnish-783166898848672321-4': 0.03204496577382088, 'finnish-2208556840820233322-0': 0.03185046836733818, 'finnish--1981034637152391615-58': 0.014923438429832458, 'finnish-8689148941295949475-9': 0.014043844304978848, 'finnish-6900867945323517614-2': 0.11876428127288818, 'finnish-8023130170017405987-1': 0.01985877938568592, 'finnish-5001457972111781248-0': 0.016524724662303925}, 'swahili': {'swahili-7146838206539641546-10': 0.023854216560721397, 'swahili-7655634199707176439-0': 0.0177354346960783, 'swahili--4427180714267750534-1': 0.027673913165926933, 'swahili-4141779435061573138-0': 0.017730193212628365, 'swahili--5424518593960879661-0': 0.016048787161707878, 'swahili-4281845253405461584-0': 0.03403432294726372, 'swahili-4899164839984299762-2': 0.021622374653816223, 'swahili-1288750786498500530-0': 0.025972971692681313, 'swahili--2671134792844015228-3': 0.017012467607855797, 'swahili-4873225622490039485-2': 0.015749020501971245}, 'korean': {'korean--2869472392602314906-0': 0.07261204719543457, 'korean-4375199563921600155-0': 0.026568902656435966, 'korean--1715118423211755607-13': 0.026378462091088295, 'korean--8028977936696142934-9': 0.0284044798463583, 'korean-2807245034690443837-5': 0.05764131247997284, 'korean-3862451817164408576-0': 0.029522007331252098, 'korean-148115504649351135-0': 0.029694335535168648, 'korean--2885837157239647036-2': 0.07040636241436005, 'korean--1743220297777040002-22': 0.0865633487701416, 'korean-3268522368206106332-0': 0.10715734213590622}, 'indonesian': {'indonesian-9141868818310916091-0': 0.02243315614759922, 'indonesian-4609394337632433932-1': 0.06667258590459824, 'indonesian-2763468883290577923-0': 0.017337357625365257, 'indonesian-5633590583948933406-0': 0.0153892757371068, 'indonesian--5961409780035435015-0': 0.016424326226115227, 'indonesian-6274547934693326697-0': 0.017169246450066566, 'indonesian--2516321763567853082-0': 0.015120097436010838, 'indonesian-2048796427556239759-4': 0.02606021799147129, 'indonesian-6246592469157278547-2': 0.019168416038155556, 'indonesian--3724318458930736973-1': 0.013920593075454235}, 'english': {'english-2852412434797041176-6': 0.09050559997558594, 'english--1463732605740571606-0': 0.023687414824962616, 'english-5441411281255470421-0': 0.019003551453351974, 'english-7294054492486093447-1': 0.059573400765657425, 'english-8820750127045023244-0': 0.035084228962659836, 'english--506693546683012611-2': 0.043303027749061584, 'english-745411798111651115-0': 0.020727595314383507, 'english-7740772185887912651-0': 0.02386864274740219, 'english-383873188776267137-19': 0.018581904470920563, 'english--8277537578703156284-0': 0.022032814100384712}}, 'glue': {'cola': {'cola_228': 0.04992879554629326, 'cola_51': 0.04301561415195465, 'cola_563': 0.09564555436372757, 'cola_501': 0.05185839161276817, 'cola_457': 0.06284093111753464, 'cola_285': 0.04831526800990105, 'cola_209': 0.04482614994049072, 'cola_178': 0.052808549255132675, 'cola_864': 0.04508553445339203, 'cola_65': 0.05316856503486633}, 'mnli': {'mnli_488': 0.03618110716342926, 'mnli_1535': 0.03914691507816315, 'mnli_3582': 0.052558258175849915, 'mnli_3811': 0.04025661572813988, 'mnli_8279': 0.048124536871910095, 'mnli_434': 0.030488574877381325, 'mnli_9195': 0.04363768920302391, 'mnli_3257': 0.0359288714826107, 'mnli_8928': 0.03687796741724014, 'mnli_6873': 0.03865105286240578}, 'mrpc': {'mrpc_451': 0.0561436228454113, 'mrpc_919': 0.039262086153030396, 'mrpc_1206': 0.04060004651546478, 'mrpc_569': 0.042907897382974625, 'mrpc_1657': 0.03221619874238968, 'mrpc_13': 0.03894030675292015, 'mrpc_1554': 0.02862793393433094, 'mrpc_1650': 0.13169769942760468, 'mrpc_326': 0.035917993634939194, 'mrpc_1429': 0.040589045733213425}, 'qnli': {'qnli_3462': 0.04565689340233803, 'qnli_2787': 0.029413143172860146, 'qnli_2276': 0.03098568134009838, 'qnli_1273': 0.0301008690148592, 'qnli_1763': 0.03920212760567665, 'qnli_2757': 0.050292983651161194, 'qnli_837': 0.037532735615968704, 'qnli_759': 0.02182314358651638, 'qnli_3112': 0.04366515576839447, 'qnli_792': 0.04745960235595703}, 'qqp': {'qqp_188208': 0.04695754870772362, 'qqp_180331': 0.04140757396817207, 'qqp_316526': 0.0390196293592453, 'qqp_138685': 0.030381061136722565, 'qqp_22780': 0.04539896547794342, 'qqp_382589': 0.03442284092307091, 'qqp_240870': 0.04927600920200348, 'qqp_281137': 0.04402506723999977, 'qqp_65444': 0.04749344289302826, 'qqp_198461': 0.03345261886715889}, 'rte': {'rte_322': 0.0410846509039402, 'rte_2261': 0.035859424620866776, 'rte_1200': 0.02829333394765854, 'rte_2574': 0.023549063131213188, 'rte_2533': 0.021391699090600014, 'rte_1481': 0.03482687100768089, 'rte_2364': 0.036833297461271286, 'rte_787': 0.03439997509121895, 'rte_2885': 0.038286417722702026, 'rte_284': 0.04380420967936516}, 'sst2': {'sst2_93': 0.036479342728853226, 'sst2_1354': 0.05034582316875458, 'sst2_466': 0.05112285539507866, 'sst2_1583': 0.03441702574491501, 'sst2_592': 0.03495875746011734, 'sst2_163': 0.061540525406599045, 'sst2_1751': 0.0331868976354599, 'sst2_476': 0.030740531161427498, 'sst2_1774': 0.047269999980926514, 'sst2_206': 0.040413226932287216}, 'stsb': {'stsb_778': 0.04802371561527252, 'stsb_569': 0.05551685765385628, 'stsb_928': 0.03136454150080681, 'stsb_1301': 0.039793435484170914, 'stsb_747': 0.04349703714251518, 'stsb_333': 0.0352168083190918, 'stsb_758': 0.04712933301925659, 'stsb_727': 0.03908897563815117, 'stsb_429': 0.04847651347517967, 'stsb_1372': 0.03195180743932724}, 'wnli': {'wnli_68': 0.0361492820084095, 'wnli_18': 0.03268149867653847, 'wnli_43': 0.035804376006126404, 'wnli_136': 0.036656275391578674, 'wnli_62': 0.039822790771722794, 'wnli_41': 0.04405524209141731, 'wnli_118': 0.037457164376974106, 'wnli_97': 0.02795357257127762, 'wnli_69': 0.034840840846300125, 'wnli_142': 0.030487025156617165}}}
03/25/2024 20:22:36 - INFO - __main__ - Saving data in SD_per_task_mask_0.5.json
03/25/2024 20:22:36 - INFO - __main__ - Saving data in var_per_task_mask_0.5.json
03/25/2024 20:22:36 - INFO - __main__ - 
UNCERTAINTY (SD)

03/25/2024 20:22:36 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.11757300049066544, 'conll_2003_en': 0.08931884914636612, 'hau': 0.03834058716893196, 'ibo': 0.03326650708913803, 'kin': 0.028245072811841965, 'lug': 0.0260117556899786, 'luo': 0.030658280476927757, 'pcm': 0.03129856660962105, 'swa': 0.028455987572669983, 'wol': 0.04325338453054428, 'yor': 0.07893692702054977, 'zh': 0.1133459210395813}, 'tydiqa': {'arabic': 0.03696974739432335, 'russian': 0.02574300207197666, 'bengali': 0.06785382330417633, 'telugu': 0.030524790287017822, 'finnish': 0.03665066882967949, 'swahili': 0.021743370220065117, 'korean': 0.053494859486818314, 'indonesian': 0.022969529032707214, 'english': 0.035636819899082184}, 'glue': {'cola': 0.05474933236837387, 'mnli': 0.04018516093492508, 'mrpc': 0.04869028180837631, 'qnli': 0.03761323541402817, 'qqp': 0.0411834791302681, 'rte': 0.03383289650082588, 'sst2': 0.042047496885061264, 'stsb': 0.04200590029358864, 'wnli': 0.03559080511331558}}

###############################################################################
Hábrók Cluster
Job 7725890 for user s3919609
Finished at: Mon Mar 25 20:22:40 CET 2024

Job details:
============

Job ID              : 7725890
Name                : std_monte_carlo_mask_0.5
User                : s3919609
Partition           : regularmedium
Nodes               : node95
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : COMPLETED
Submit              : 2024-03-25T15:02:27
Start               : 2024-03-25T15:02:30
End                 : 2024-03-25T20:22:40
Reserved walltime   : 10:00:00
Used walltime       : 05:20:10
Used CPU time       : 05:16:48 (efficiency: 98.95%)
% User (Computation): 99.78%
% System (I/O)      :  0.22%
Mem reserved        : 20G
Max Mem (Node/step) : 2.53G (node95, per node)
Full Max Mem usage  : 2.53G
Total Disk Read     : 1014.82M
Total Disk Write    : 2.43M

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
