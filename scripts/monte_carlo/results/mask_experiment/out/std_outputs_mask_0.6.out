The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/25/2024 14:29:17 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/25/2024 14:29:17 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 14:29:17 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 14:29:17 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/25/2024 14:29:19 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/25/2024 14:29:19 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/25/2024 14:29:19 - INFO - __main__ - Running MONTE CARLO experiment: mask_ratio
03/25/2024 14:29:19 - INFO - __main__ - Loading data from loss_per_task_mask_0.6.json
03/25/2024 14:29:19 - INFO - __main__ - 
LOSS

03/25/2024 14:29:19 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.841972827911377, 'conll_2003_en': 0.7209588289260864, 'hau': 0.6705061197280884, 'ibo': 0.6614187359809875, 'kin': 0.645398736000061, 'lug': 0.6212059259414673, 'luo': 0.6608453392982483, 'pcm': 0.6450988054275513, 'swa': 0.6561985611915588, 'wol': 0.6985005140304565, 'yor': 0.7535424828529358, 'zh': 0.8573639988899231}, 'tydiqa': {'arabic': 0.8445965647697449, 'russian': 0.6594206094741821, 'bengali': 0.7456845045089722, 'telugu': 0.7831696271896362, 'finnish': 0.616827130317688, 'swahili': 0.6064831018447876, 'korean': 0.8563364148139954, 'indonesian': 0.5953760147094727, 'english': 0.4230819344520569}, 'glue': {'cola': 0.4372158944606781, 'mnli': 0.44550997018814087, 'mrpc': 0.4485417902469635, 'qnli': 0.437565416097641, 'qqp': 0.48057255148887634, 'rte': 0.44527482986450195, 'sst2': 0.5704510807991028, 'stsb': 0.4326837956905365, 'wnli': 0.4343821406364441}}
03/25/2024 14:29:19 - INFO - __main__ - Lowest losses:
03/25/2024 14:29:19 - INFO - __main__ - ID: cola_209, Loss: 0.1721888929605484
03/25/2024 14:29:19 - INFO - __main__ - ID: mrpc_1429, Loss: 0.21947219967842102
03/25/2024 14:29:19 - INFO - __main__ - ID: english-383873188776267137-19, Loss: 0.2598728537559509
03/25/2024 14:29:19 - INFO - __main__ - ID: stsb_747, Loss: 0.2935391366481781
03/25/2024 14:29:19 - INFO - __main__ - ID: english--1463732605740571606-0, Loss: 0.29488593339920044
03/25/2024 14:29:19 - INFO - __main__ - Highest losses:
03/25/2024 14:29:19 - INFO - __main__ - ID: yor_9, Loss: 0.8851271271705627
03/25/2024 14:29:19 - INFO - __main__ - ID: zh_0, Loss: 0.8896827101707458
03/25/2024 14:29:19 - INFO - __main__ - ID: zh_5, Loss: 0.9125927090644836
03/25/2024 14:29:19 - INFO - __main__ - ID: zh_4, Loss: 0.9160335659980774
03/25/2024 14:29:19 - INFO - __main__ - ID: conll_2003_en_6, Loss: 1.0359355211257935
03/25/2024 14:29:19 - INFO - __main__ - Monte Carlo samples: 100
03/25/2024 14:29:19 - INFO - __main__ - Training mode: True
03/25/2024 14:29:19 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/25/2024 14:29:19 - INFO - __main__ - 
######## Language: amh ######## 

03/25/2024 14:29:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:29:19 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:29:19 - INFO - __main__ - ID text: amh_0
03/25/2024 14:30:08 - INFO - __main__ - Mean variance for amh_0: 0.08089577406644821
03/25/2024 14:30:08 - INFO - __main__ - Mean std for for amh_0: 0.25066015124320984
03/25/2024 14:30:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:30:08 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:30:08 - INFO - __main__ - ID text: amh_1
03/25/2024 14:30:55 - INFO - __main__ - Mean variance for amh_1: 0.11183186620473862
03/25/2024 14:30:55 - INFO - __main__ - Mean std for for amh_1: 0.2909313142299652
03/25/2024 14:30:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:30:55 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:30:55 - INFO - __main__ - ID text: amh_2
03/25/2024 14:31:43 - INFO - __main__ - Mean variance for amh_2: 0.10954321175813675
03/25/2024 14:31:43 - INFO - __main__ - Mean std for for amh_2: 0.2862333357334137
03/25/2024 14:31:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:31:43 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:31:43 - INFO - __main__ - ID text: amh_3
03/25/2024 14:32:29 - INFO - __main__ - Mean variance for amh_3: 0.12759585678577423
03/25/2024 14:32:29 - INFO - __main__ - Mean std for for amh_3: 0.30729940533638
03/25/2024 14:32:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:32:29 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:32:29 - INFO - __main__ - ID text: amh_4
03/25/2024 14:33:15 - INFO - __main__ - Mean variance for amh_4: 0.13014037907123566
03/25/2024 14:33:15 - INFO - __main__ - Mean std for for amh_4: 0.30894872546195984
03/25/2024 14:33:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:33:15 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:33:15 - INFO - __main__ - ID text: amh_5
03/25/2024 14:34:01 - INFO - __main__ - Mean variance for amh_5: 0.10267684608697891
03/25/2024 14:34:01 - INFO - __main__ - Mean std for for amh_5: 0.2803822457790375
03/25/2024 14:34:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:34:01 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:34:01 - INFO - __main__ - ID text: amh_6
03/25/2024 14:34:47 - INFO - __main__ - Mean variance for amh_6: 0.10025384277105331
03/25/2024 14:34:47 - INFO - __main__ - Mean std for for amh_6: 0.2741250693798065
03/25/2024 14:34:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:34:47 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:34:47 - INFO - __main__ - ID text: amh_7
03/25/2024 14:35:51 - INFO - __main__ - Mean variance for amh_7: 0.1156868040561676
03/25/2024 14:35:51 - INFO - __main__ - Mean std for for amh_7: 0.29506391286849976
03/25/2024 14:35:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:35:51 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:35:51 - INFO - __main__ - ID text: amh_8
03/25/2024 14:37:02 - INFO - __main__ - Mean variance for amh_8: 0.06435186415910721
03/25/2024 14:37:02 - INFO - __main__ - Mean std for for amh_8: 0.22293482720851898
03/25/2024 14:37:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:37:02 - INFO - __main__ - Masked count: 122, ratio = 0.4766
03/25/2024 14:37:02 - INFO - __main__ - ID text: amh_9
03/25/2024 14:38:13 - INFO - __main__ - Mean variance for amh_9: 0.12788493931293488
03/25/2024 14:38:13 - INFO - __main__ - Mean std for for amh_9: 0.3104410767555237
03/25/2024 14:38:13 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/25/2024 14:38:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:38:13 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:38:13 - INFO - __main__ - ID text: conll_2003_en_0
03/25/2024 14:39:24 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.1581905335187912
03/25/2024 14:39:24 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.35326460003852844
03/25/2024 14:39:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:39:25 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:39:25 - INFO - __main__ - ID text: conll_2003_en_1
03/25/2024 14:40:36 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.0374908484518528
03/25/2024 14:40:36 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.175003781914711
03/25/2024 14:40:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:40:36 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:40:36 - INFO - __main__ - ID text: conll_2003_en_2
03/25/2024 14:41:47 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.03867707401514053
03/25/2024 14:41:47 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.16134391725063324
03/25/2024 14:41:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:41:47 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 14:41:47 - INFO - __main__ - ID text: conll_2003_en_3
03/25/2024 14:42:59 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.049168024212121964
03/25/2024 14:42:59 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.19363617897033691
03/25/2024 14:42:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:42:59 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 14:42:59 - INFO - __main__ - ID text: conll_2003_en_4
03/25/2024 14:44:10 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.04772272706031799
03/25/2024 14:44:10 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.19799987971782684
03/25/2024 14:44:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:44:10 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:44:10 - INFO - __main__ - ID text: conll_2003_en_5
03/25/2024 14:45:22 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.1453036665916443
03/25/2024 14:45:22 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.3440752923488617
03/25/2024 14:45:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:45:22 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 14:45:22 - INFO - __main__ - ID text: conll_2003_en_6
03/25/2024 14:46:35 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.11799657344818115
03/25/2024 14:46:35 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.3091883361339569
03/25/2024 14:46:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:46:38 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 14:46:38 - INFO - __main__ - ID text: conll_2003_en_7
03/25/2024 14:47:50 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.1126566156744957
03/25/2024 14:47:50 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.30433106422424316
03/25/2024 14:47:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:47:50 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:47:50 - INFO - __main__ - ID text: conll_2003_en_8
03/25/2024 14:49:01 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.1396767497062683
03/25/2024 14:49:01 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.3359791040420532
03/25/2024 14:49:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:49:01 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:49:01 - INFO - __main__ - ID text: conll_2003_en_9
03/25/2024 14:50:12 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.041915107518434525
03/25/2024 14:50:12 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.1778033971786499
03/25/2024 14:50:12 - INFO - __main__ - 
######## Language: hau ######## 

03/25/2024 14:50:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:50:12 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:50:12 - INFO - __main__ - ID text: hau_0
03/25/2024 14:51:23 - INFO - __main__ - Mean variance for hau_0: 0.03720330819487572
03/25/2024 14:51:23 - INFO - __main__ - Mean std for for hau_0: 0.1510411649942398
03/25/2024 14:51:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:51:23 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 14:51:23 - INFO - __main__ - ID text: hau_1
03/25/2024 14:52:33 - INFO - __main__ - Mean variance for hau_1: 0.044633667916059494
03/25/2024 14:52:33 - INFO - __main__ - Mean std for for hau_1: 0.18755555152893066
03/25/2024 14:52:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:52:33 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:52:33 - INFO - __main__ - ID text: hau_2
03/25/2024 14:53:43 - INFO - __main__ - Mean variance for hau_2: 0.1228150725364685
03/25/2024 14:53:43 - INFO - __main__ - Mean std for for hau_2: 0.31269025802612305
03/25/2024 14:53:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:53:43 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 14:53:43 - INFO - __main__ - ID text: hau_3
03/25/2024 14:54:53 - INFO - __main__ - Mean variance for hau_3: 0.03573393449187279
03/25/2024 14:54:53 - INFO - __main__ - Mean std for for hau_3: 0.1362444907426834
03/25/2024 14:54:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:54:53 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:54:53 - INFO - __main__ - ID text: hau_4
03/25/2024 14:56:03 - INFO - __main__ - Mean variance for hau_4: 0.0376417376101017
03/25/2024 14:56:03 - INFO - __main__ - Mean std for for hau_4: 0.14918865263462067
03/25/2024 14:56:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:56:03 - INFO - __main__ - Masked count: 149, ratio = 0.5820
03/25/2024 14:56:03 - INFO - __main__ - ID text: hau_5
03/25/2024 14:57:13 - INFO - __main__ - Mean variance for hau_5: 0.02586282789707184
03/25/2024 14:57:13 - INFO - __main__ - Mean std for for hau_5: 0.12240730971097946
03/25/2024 14:57:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:57:13 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:57:13 - INFO - __main__ - ID text: hau_6
03/25/2024 14:58:22 - INFO - __main__ - Mean variance for hau_6: 0.048275578767061234
03/25/2024 14:58:23 - INFO - __main__ - Mean std for for hau_6: 0.18037565052509308
03/25/2024 14:58:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:58:23 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:58:23 - INFO - __main__ - ID text: hau_7
03/25/2024 14:59:32 - INFO - __main__ - Mean variance for hau_7: 0.03450477123260498
03/25/2024 14:59:32 - INFO - __main__ - Mean std for for hau_7: 0.14924190938472748
03/25/2024 14:59:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:59:32 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:59:32 - INFO - __main__ - ID text: hau_8
03/25/2024 15:00:42 - INFO - __main__ - Mean variance for hau_8: 0.04410099983215332
03/25/2024 15:00:42 - INFO - __main__ - Mean std for for hau_8: 0.15879610180854797
03/25/2024 15:00:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:00:42 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:00:42 - INFO - __main__ - ID text: hau_9
03/25/2024 15:01:52 - INFO - __main__ - Mean variance for hau_9: 0.043835412710905075
03/25/2024 15:01:52 - INFO - __main__ - Mean std for for hau_9: 0.17310196161270142
03/25/2024 15:01:52 - INFO - __main__ - 
######## Language: ibo ######## 

03/25/2024 15:01:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:01:53 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:01:53 - INFO - __main__ - ID text: ibo_0
03/25/2024 15:03:03 - INFO - __main__ - Mean variance for ibo_0: 0.03760022670030594
03/25/2024 15:03:03 - INFO - __main__ - Mean std for for ibo_0: 0.1644803136587143
03/25/2024 15:03:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:03:03 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:03:03 - INFO - __main__ - ID text: ibo_1
03/25/2024 15:04:13 - INFO - __main__ - Mean variance for ibo_1: 0.03873322531580925
03/25/2024 15:04:13 - INFO - __main__ - Mean std for for ibo_1: 0.16028156876564026
03/25/2024 15:04:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:04:13 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:04:13 - INFO - __main__ - ID text: ibo_2
03/25/2024 15:05:24 - INFO - __main__ - Mean variance for ibo_2: 0.045138414949178696
03/25/2024 15:05:24 - INFO - __main__ - Mean std for for ibo_2: 0.17232614755630493
03/25/2024 15:05:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:05:24 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:05:24 - INFO - __main__ - ID text: ibo_3
03/25/2024 15:06:34 - INFO - __main__ - Mean variance for ibo_3: 0.039624642580747604
03/25/2024 15:06:34 - INFO - __main__ - Mean std for for ibo_3: 0.18023143708705902
03/25/2024 15:06:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:06:34 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 15:06:34 - INFO - __main__ - ID text: ibo_4
03/25/2024 15:07:45 - INFO - __main__ - Mean variance for ibo_4: 0.04668261110782623
03/25/2024 15:07:45 - INFO - __main__ - Mean std for for ibo_4: 0.1813487410545349
03/25/2024 15:07:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:07:45 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 15:07:45 - INFO - __main__ - ID text: ibo_5
03/25/2024 15:08:55 - INFO - __main__ - Mean variance for ibo_5: 0.03894038870930672
03/25/2024 15:08:55 - INFO - __main__ - Mean std for for ibo_5: 0.1749403029680252
03/25/2024 15:08:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:08:55 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:08:55 - INFO - __main__ - ID text: ibo_6
03/25/2024 15:10:05 - INFO - __main__ - Mean variance for ibo_6: 0.04105882719159126
03/25/2024 15:10:05 - INFO - __main__ - Mean std for for ibo_6: 0.17215286195278168
03/25/2024 15:10:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:10:05 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:10:05 - INFO - __main__ - ID text: ibo_7
03/25/2024 15:11:15 - INFO - __main__ - Mean variance for ibo_7: 0.043953556567430496
03/25/2024 15:11:15 - INFO - __main__ - Mean std for for ibo_7: 0.16361619532108307
03/25/2024 15:11:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:11:15 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:11:15 - INFO - __main__ - ID text: ibo_8
03/25/2024 15:12:24 - INFO - __main__ - Mean variance for ibo_8: 0.05307634547352791
03/25/2024 15:12:24 - INFO - __main__ - Mean std for for ibo_8: 0.20407800376415253
03/25/2024 15:12:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:12:24 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:12:24 - INFO - __main__ - ID text: ibo_9
03/25/2024 15:13:34 - INFO - __main__ - Mean variance for ibo_9: 0.03894520178437233
03/25/2024 15:13:34 - INFO - __main__ - Mean std for for ibo_9: 0.1641855239868164
03/25/2024 15:13:34 - INFO - __main__ - 
######## Language: kin ######## 

03/25/2024 15:13:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:13:34 - INFO - __main__ - Masked count: 114, ratio = 0.4453
03/25/2024 15:13:34 - INFO - __main__ - ID text: kin_0
03/25/2024 15:14:45 - INFO - __main__ - Mean variance for kin_0: 0.05854250118136406
03/25/2024 15:14:45 - INFO - __main__ - Mean std for for kin_0: 0.20049433410167694
03/25/2024 15:14:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:14:45 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:14:45 - INFO - __main__ - ID text: kin_1
03/25/2024 15:15:55 - INFO - __main__ - Mean variance for kin_1: 0.042676955461502075
03/25/2024 15:15:55 - INFO - __main__ - Mean std for for kin_1: 0.17328457534313202
03/25/2024 15:15:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:15:55 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:15:55 - INFO - __main__ - ID text: kin_2
03/25/2024 15:17:05 - INFO - __main__ - Mean variance for kin_2: 0.04500415921211243
03/25/2024 15:17:05 - INFO - __main__ - Mean std for for kin_2: 0.19222372770309448
03/25/2024 15:17:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:17:05 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:17:05 - INFO - __main__ - ID text: kin_3
03/25/2024 15:18:16 - INFO - __main__ - Mean variance for kin_3: 0.03707406297326088
03/25/2024 15:18:16 - INFO - __main__ - Mean std for for kin_3: 0.16022148728370667
03/25/2024 15:18:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:18:16 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:18:16 - INFO - __main__ - ID text: kin_4
03/25/2024 15:19:26 - INFO - __main__ - Mean variance for kin_4: 0.04102840647101402
03/25/2024 15:19:26 - INFO - __main__ - Mean std for for kin_4: 0.16250917315483093
03/25/2024 15:19:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:19:26 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 15:19:26 - INFO - __main__ - ID text: kin_5
03/25/2024 15:20:37 - INFO - __main__ - Mean variance for kin_5: 0.0343274362385273
03/25/2024 15:20:37 - INFO - __main__ - Mean std for for kin_5: 0.16557784378528595
03/25/2024 15:20:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:20:37 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 15:20:37 - INFO - __main__ - ID text: kin_6
03/25/2024 15:21:47 - INFO - __main__ - Mean variance for kin_6: 0.04553087055683136
03/25/2024 15:21:47 - INFO - __main__ - Mean std for for kin_6: 0.16122789680957794
03/25/2024 15:21:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:21:47 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:21:47 - INFO - __main__ - ID text: kin_7
03/25/2024 15:22:58 - INFO - __main__ - Mean variance for kin_7: 0.04968247935175896
03/25/2024 15:22:58 - INFO - __main__ - Mean std for for kin_7: 0.1787993162870407
03/25/2024 15:22:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:22:58 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 15:22:58 - INFO - __main__ - ID text: kin_8
03/25/2024 15:24:09 - INFO - __main__ - Mean variance for kin_8: 0.04313535615801811
03/25/2024 15:24:09 - INFO - __main__ - Mean std for for kin_8: 0.18071569502353668
03/25/2024 15:24:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:24:09 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:24:09 - INFO - __main__ - ID text: kin_9
03/25/2024 15:25:19 - INFO - __main__ - Mean variance for kin_9: 0.05009022355079651
03/25/2024 15:25:19 - INFO - __main__ - Mean std for for kin_9: 0.19628888368606567
03/25/2024 15:25:19 - INFO - __main__ - 
######## Language: lug ######## 

03/25/2024 15:25:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:25:19 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:25:19 - INFO - __main__ - ID text: lug_0
03/25/2024 15:26:30 - INFO - __main__ - Mean variance for lug_0: 0.037276264280080795
03/25/2024 15:26:30 - INFO - __main__ - Mean std for for lug_0: 0.1474141925573349
03/25/2024 15:26:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:26:30 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:26:30 - INFO - __main__ - ID text: lug_1
03/25/2024 15:27:41 - INFO - __main__ - Mean variance for lug_1: 0.04041512683033943
03/25/2024 15:27:41 - INFO - __main__ - Mean std for for lug_1: 0.1628769040107727
03/25/2024 15:27:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:27:41 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:27:41 - INFO - __main__ - ID text: lug_2
03/25/2024 15:28:52 - INFO - __main__ - Mean variance for lug_2: 0.0520581416785717
03/25/2024 15:28:52 - INFO - __main__ - Mean std for for lug_2: 0.16484490036964417
03/25/2024 15:28:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:28:52 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:28:52 - INFO - __main__ - ID text: lug_3
03/25/2024 15:30:02 - INFO - __main__ - Mean variance for lug_3: 0.04448624327778816
03/25/2024 15:30:02 - INFO - __main__ - Mean std for for lug_3: 0.15906083583831787
03/25/2024 15:30:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:30:02 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:30:02 - INFO - __main__ - ID text: lug_4
03/25/2024 15:31:13 - INFO - __main__ - Mean variance for lug_4: 0.04748636484146118
03/25/2024 15:31:13 - INFO - __main__ - Mean std for for lug_4: 0.18318621814250946
03/25/2024 15:31:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:31:13 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 15:31:13 - INFO - __main__ - ID text: lug_5
03/25/2024 15:32:23 - INFO - __main__ - Mean variance for lug_5: 0.0510379821062088
03/25/2024 15:32:23 - INFO - __main__ - Mean std for for lug_5: 0.17524881660938263
03/25/2024 15:32:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:32:23 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:32:23 - INFO - __main__ - ID text: lug_6
03/25/2024 15:33:33 - INFO - __main__ - Mean variance for lug_6: 0.04170997813344002
03/25/2024 15:33:33 - INFO - __main__ - Mean std for for lug_6: 0.16652941703796387
03/25/2024 15:33:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:33:33 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:33:33 - INFO - __main__ - ID text: lug_7
03/25/2024 15:34:42 - INFO - __main__ - Mean variance for lug_7: 0.0386115200817585
03/25/2024 15:34:42 - INFO - __main__ - Mean std for for lug_7: 0.16720513999462128
03/25/2024 15:34:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:34:42 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 15:34:42 - INFO - __main__ - ID text: lug_8
03/25/2024 15:35:52 - INFO - __main__ - Mean variance for lug_8: 0.0385211817920208
03/25/2024 15:35:52 - INFO - __main__ - Mean std for for lug_8: 0.1579393893480301
03/25/2024 15:35:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:35:52 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:35:52 - INFO - __main__ - ID text: lug_9
03/25/2024 15:37:02 - INFO - __main__ - Mean variance for lug_9: 0.03904677554965019
03/25/2024 15:37:02 - INFO - __main__ - Mean std for for lug_9: 0.16007088124752045
03/25/2024 15:37:02 - INFO - __main__ - 
######## Language: luo ######## 

03/25/2024 15:37:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:37:02 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:37:02 - INFO - __main__ - ID text: luo_0
03/25/2024 15:38:11 - INFO - __main__ - Mean variance for luo_0: 0.03662310168147087
03/25/2024 15:38:11 - INFO - __main__ - Mean std for for luo_0: 0.14206546545028687
03/25/2024 15:38:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:38:11 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:38:11 - INFO - __main__ - ID text: luo_1
03/25/2024 15:39:25 - INFO - __main__ - Mean variance for luo_1: 0.048437267541885376
03/25/2024 15:39:25 - INFO - __main__ - Mean std for for luo_1: 0.1925676465034485
03/25/2024 15:39:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:39:25 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 15:39:25 - INFO - __main__ - ID text: luo_2
03/25/2024 15:40:35 - INFO - __main__ - Mean variance for luo_2: 0.04191879555583
03/25/2024 15:40:35 - INFO - __main__ - Mean std for for luo_2: 0.16205601394176483
03/25/2024 15:40:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:40:35 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:40:35 - INFO - __main__ - ID text: luo_3
03/25/2024 15:41:46 - INFO - __main__ - Mean variance for luo_3: 0.04081021994352341
03/25/2024 15:41:46 - INFO - __main__ - Mean std for for luo_3: 0.1503724306821823
03/25/2024 15:41:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:41:46 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:41:46 - INFO - __main__ - ID text: luo_4
03/25/2024 15:42:57 - INFO - __main__ - Mean variance for luo_4: 0.041324492543935776
03/25/2024 15:42:57 - INFO - __main__ - Mean std for for luo_4: 0.17312730848789215
03/25/2024 15:42:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:42:57 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:42:57 - INFO - __main__ - ID text: luo_5
03/25/2024 15:44:07 - INFO - __main__ - Mean variance for luo_5: 0.04324133321642876
03/25/2024 15:44:07 - INFO - __main__ - Mean std for for luo_5: 0.1741929054260254
03/25/2024 15:44:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:44:07 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 15:44:07 - INFO - __main__ - ID text: luo_6
03/25/2024 15:45:18 - INFO - __main__ - Mean variance for luo_6: 0.051842112094163895
03/25/2024 15:45:18 - INFO - __main__ - Mean std for for luo_6: 0.1768479198217392
03/25/2024 15:45:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:45:18 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:45:18 - INFO - __main__ - ID text: luo_7
03/25/2024 15:46:29 - INFO - __main__ - Mean variance for luo_7: 0.0513162799179554
03/25/2024 15:46:29 - INFO - __main__ - Mean std for for luo_7: 0.19889910519123077
03/25/2024 15:46:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:46:29 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:46:29 - INFO - __main__ - ID text: luo_8
03/25/2024 15:47:40 - INFO - __main__ - Mean variance for luo_8: 0.03793681040406227
03/25/2024 15:47:40 - INFO - __main__ - Mean std for for luo_8: 0.1624121069908142
03/25/2024 15:47:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:47:40 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 15:47:40 - INFO - __main__ - ID text: luo_9
03/25/2024 15:48:52 - INFO - __main__ - Mean variance for luo_9: 0.04813946411013603
03/25/2024 15:48:52 - INFO - __main__ - Mean std for for luo_9: 0.20049946010112762
03/25/2024 15:48:52 - INFO - __main__ - 
######## Language: pcm ######## 

03/25/2024 15:48:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:48:52 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 15:48:52 - INFO - __main__ - ID text: pcm_0
03/25/2024 15:50:03 - INFO - __main__ - Mean variance for pcm_0: 0.036540351808071136
03/25/2024 15:50:03 - INFO - __main__ - Mean std for for pcm_0: 0.16539500653743744
03/25/2024 15:50:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:50:03 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:50:03 - INFO - __main__ - ID text: pcm_1
03/25/2024 15:51:14 - INFO - __main__ - Mean variance for pcm_1: 0.050099920481443405
03/25/2024 15:51:14 - INFO - __main__ - Mean std for for pcm_1: 0.2000955492258072
03/25/2024 15:51:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:51:14 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:51:14 - INFO - __main__ - ID text: pcm_2
03/25/2024 15:52:25 - INFO - __main__ - Mean variance for pcm_2: 0.03922256827354431
03/25/2024 15:52:25 - INFO - __main__ - Mean std for for pcm_2: 0.1684490293264389
03/25/2024 15:52:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:52:25 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:52:25 - INFO - __main__ - ID text: pcm_3
03/25/2024 15:53:35 - INFO - __main__ - Mean variance for pcm_3: 0.049594487994909286
03/25/2024 15:53:35 - INFO - __main__ - Mean std for for pcm_3: 0.1798011064529419
03/25/2024 15:53:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:53:35 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:53:35 - INFO - __main__ - ID text: pcm_4
03/25/2024 15:54:46 - INFO - __main__ - Mean variance for pcm_4: 0.0521555095911026
03/25/2024 15:54:46 - INFO - __main__ - Mean std for for pcm_4: 0.1828310638666153
03/25/2024 15:54:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:54:46 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:54:46 - INFO - __main__ - ID text: pcm_5
03/25/2024 15:55:56 - INFO - __main__ - Mean variance for pcm_5: 0.0443350225687027
03/25/2024 15:55:56 - INFO - __main__ - Mean std for for pcm_5: 0.18958395719528198
03/25/2024 15:55:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:55:56 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:55:56 - INFO - __main__ - ID text: pcm_6
03/25/2024 15:57:07 - INFO - __main__ - Mean variance for pcm_6: 0.040980298072099686
03/25/2024 15:57:07 - INFO - __main__ - Mean std for for pcm_6: 0.16617737710475922
03/25/2024 15:57:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:57:07 - INFO - __main__ - Masked count: 119, ratio = 0.4648
03/25/2024 15:57:07 - INFO - __main__ - ID text: pcm_7
03/25/2024 15:58:18 - INFO - __main__ - Mean variance for pcm_7: 0.057324785739183426
03/25/2024 15:58:18 - INFO - __main__ - Mean std for for pcm_7: 0.19555996358394623
03/25/2024 15:58:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:58:18 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:58:18 - INFO - __main__ - ID text: pcm_8
03/25/2024 15:59:29 - INFO - __main__ - Mean variance for pcm_8: 0.04515811800956726
03/25/2024 15:59:29 - INFO - __main__ - Mean std for for pcm_8: 0.16718395054340363
03/25/2024 15:59:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:59:29 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:59:29 - INFO - __main__ - ID text: pcm_9
03/25/2024 16:00:39 - INFO - __main__ - Mean variance for pcm_9: 0.04300958290696144
03/25/2024 16:00:39 - INFO - __main__ - Mean std for for pcm_9: 0.18178021907806396
03/25/2024 16:00:39 - INFO - __main__ - 
######## Language: swa ######## 

03/25/2024 16:00:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:00:39 - INFO - __main__ - Masked count: 146, ratio = 0.5703
03/25/2024 16:00:39 - INFO - __main__ - ID text: swa_0
03/25/2024 16:01:50 - INFO - __main__ - Mean variance for swa_0: 0.029354939237236977
03/25/2024 16:01:50 - INFO - __main__ - Mean std for for swa_0: 0.13953860104084015
03/25/2024 16:01:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:01:50 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 16:01:50 - INFO - __main__ - ID text: swa_1
03/25/2024 16:03:01 - INFO - __main__ - Mean variance for swa_1: 0.04605461657047272
03/25/2024 16:03:01 - INFO - __main__ - Mean std for for swa_1: 0.17897190153598785
03/25/2024 16:03:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:03:01 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 16:03:01 - INFO - __main__ - ID text: swa_2
03/25/2024 16:04:12 - INFO - __main__ - Mean variance for swa_2: 0.041440751403570175
03/25/2024 16:04:12 - INFO - __main__ - Mean std for for swa_2: 0.15721631050109863
03/25/2024 16:04:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:04:12 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 16:04:12 - INFO - __main__ - ID text: swa_3
03/25/2024 16:05:22 - INFO - __main__ - Mean variance for swa_3: 0.04568813741207123
03/25/2024 16:05:22 - INFO - __main__ - Mean std for for swa_3: 0.18781010806560516
03/25/2024 16:05:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:05:22 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 16:05:22 - INFO - __main__ - ID text: swa_4
03/25/2024 16:06:33 - INFO - __main__ - Mean variance for swa_4: 0.046649906784296036
03/25/2024 16:06:33 - INFO - __main__ - Mean std for for swa_4: 0.16692624986171722
03/25/2024 16:06:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:06:33 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 16:06:33 - INFO - __main__ - ID text: swa_5
03/25/2024 16:07:44 - INFO - __main__ - Mean variance for swa_5: 0.027431903406977654
03/25/2024 16:07:44 - INFO - __main__ - Mean std for for swa_5: 0.12690840661525726
03/25/2024 16:07:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:07:44 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 16:07:44 - INFO - __main__ - ID text: swa_6
03/25/2024 16:08:55 - INFO - __main__ - Mean variance for swa_6: 0.03490268439054489
03/25/2024 16:08:55 - INFO - __main__ - Mean std for for swa_6: 0.14190591871738434
03/25/2024 16:08:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:08:55 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 16:08:55 - INFO - __main__ - ID text: swa_7
03/25/2024 16:10:06 - INFO - __main__ - Mean variance for swa_7: 0.04835617169737816
03/25/2024 16:10:06 - INFO - __main__ - Mean std for for swa_7: 0.20025388896465302
03/25/2024 16:10:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:10:06 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 16:10:06 - INFO - __main__ - ID text: swa_8
03/25/2024 16:11:17 - INFO - __main__ - Mean variance for swa_8: 0.042358871549367905
03/25/2024 16:11:17 - INFO - __main__ - Mean std for for swa_8: 0.1752452850341797
03/25/2024 16:11:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:11:17 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 16:11:17 - INFO - __main__ - ID text: swa_9
03/25/2024 16:12:27 - INFO - __main__ - Mean variance for swa_9: 0.03243398293852806
03/25/2024 16:12:27 - INFO - __main__ - Mean std for for swa_9: 0.1513606756925583
03/25/2024 16:12:27 - INFO - __main__ - 
######## Language: wol ######## 

03/25/2024 16:12:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:12:27 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 16:12:27 - INFO - __main__ - ID text: wol_0
03/25/2024 16:13:38 - INFO - __main__ - Mean variance for wol_0: 0.03944554179906845
03/25/2024 16:13:38 - INFO - __main__ - Mean std for for wol_0: 0.15616640448570251
03/25/2024 16:13:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:13:38 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:13:38 - INFO - __main__ - ID text: wol_1
03/25/2024 16:14:48 - INFO - __main__ - Mean variance for wol_1: 0.042459722608327866
03/25/2024 16:14:48 - INFO - __main__ - Mean std for for wol_1: 0.17104928195476532
03/25/2024 16:14:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:14:48 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 16:14:48 - INFO - __main__ - ID text: wol_2
03/25/2024 16:16:00 - INFO - __main__ - Mean variance for wol_2: 0.04224097356200218
03/25/2024 16:16:00 - INFO - __main__ - Mean std for for wol_2: 0.17233480513095856
03/25/2024 16:16:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:16:01 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 16:16:01 - INFO - __main__ - ID text: wol_3
03/25/2024 16:17:14 - INFO - __main__ - Mean variance for wol_3: 0.06467781215906143
03/25/2024 16:17:14 - INFO - __main__ - Mean std for for wol_3: 0.23041735589504242
03/25/2024 16:17:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:17:14 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:17:14 - INFO - __main__ - ID text: wol_4
03/25/2024 16:18:25 - INFO - __main__ - Mean variance for wol_4: 0.04268333315849304
03/25/2024 16:18:25 - INFO - __main__ - Mean std for for wol_4: 0.18620401620864868
03/25/2024 16:18:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:18:25 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 16:18:25 - INFO - __main__ - ID text: wol_5
03/25/2024 16:19:36 - INFO - __main__ - Mean variance for wol_5: 0.03456644341349602
03/25/2024 16:19:36 - INFO - __main__ - Mean std for for wol_5: 0.15604056417942047
03/25/2024 16:19:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:19:36 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 16:19:36 - INFO - __main__ - ID text: wol_6
03/25/2024 16:20:48 - INFO - __main__ - Mean variance for wol_6: 0.13516350090503693
03/25/2024 16:20:48 - INFO - __main__ - Mean std for for wol_6: 0.3255942165851593
03/25/2024 16:20:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:20:48 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:20:48 - INFO - __main__ - ID text: wol_7
03/25/2024 16:21:59 - INFO - __main__ - Mean variance for wol_7: 0.043787527829408646
03/25/2024 16:21:59 - INFO - __main__ - Mean std for for wol_7: 0.18002279102802277
03/25/2024 16:21:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:21:59 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 16:21:59 - INFO - __main__ - ID text: wol_8
03/25/2024 16:23:10 - INFO - __main__ - Mean variance for wol_8: 0.05000479891896248
03/25/2024 16:23:10 - INFO - __main__ - Mean std for for wol_8: 0.2006250023841858
03/25/2024 16:23:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:23:10 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 16:23:10 - INFO - __main__ - ID text: wol_9
03/25/2024 16:24:21 - INFO - __main__ - Mean variance for wol_9: 0.049300506711006165
03/25/2024 16:24:21 - INFO - __main__ - Mean std for for wol_9: 0.1941308230161667
03/25/2024 16:24:21 - INFO - __main__ - 
######## Language: yor ######## 

03/25/2024 16:24:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:24:21 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 16:24:21 - INFO - __main__ - ID text: yor_0
03/25/2024 16:25:32 - INFO - __main__ - Mean variance for yor_0: 0.12932325899600983
03/25/2024 16:25:32 - INFO - __main__ - Mean std for for yor_0: 0.3122519552707672
03/25/2024 16:25:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:25:32 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 16:25:32 - INFO - __main__ - ID text: yor_1
03/25/2024 16:26:43 - INFO - __main__ - Mean variance for yor_1: 0.11329100281000137
03/25/2024 16:26:43 - INFO - __main__ - Mean std for for yor_1: 0.2808264493942261
03/25/2024 16:26:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:26:43 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 16:26:43 - INFO - __main__ - ID text: yor_2
03/25/2024 16:27:53 - INFO - __main__ - Mean variance for yor_2: 0.039232250303030014
03/25/2024 16:27:53 - INFO - __main__ - Mean std for for yor_2: 0.16264618933200836
03/25/2024 16:27:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:27:53 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 16:27:53 - INFO - __main__ - ID text: yor_3
03/25/2024 16:29:04 - INFO - __main__ - Mean variance for yor_3: 0.03691328316926956
03/25/2024 16:29:04 - INFO - __main__ - Mean std for for yor_3: 0.1522744745016098
03/25/2024 16:29:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:29:04 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 16:29:04 - INFO - __main__ - ID text: yor_4
03/25/2024 16:30:15 - INFO - __main__ - Mean variance for yor_4: 0.13159872591495514
03/25/2024 16:30:15 - INFO - __main__ - Mean std for for yor_4: 0.3155224621295929
03/25/2024 16:30:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:30:15 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 16:30:15 - INFO - __main__ - ID text: yor_5
03/25/2024 16:31:26 - INFO - __main__ - Mean variance for yor_5: 0.09230244904756546
03/25/2024 16:31:26 - INFO - __main__ - Mean std for for yor_5: 0.2418438196182251
03/25/2024 16:31:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:31:26 - INFO - __main__ - Masked count: 146, ratio = 0.5703
03/25/2024 16:31:26 - INFO - __main__ - ID text: yor_6
03/25/2024 16:32:37 - INFO - __main__ - Mean variance for yor_6: 0.03234400227665901
03/25/2024 16:32:37 - INFO - __main__ - Mean std for for yor_6: 0.15159021317958832
03/25/2024 16:32:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:32:38 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 16:32:38 - INFO - __main__ - ID text: yor_7
03/25/2024 16:33:49 - INFO - __main__ - Mean variance for yor_7: 0.11348827928304672
03/25/2024 16:33:49 - INFO - __main__ - Mean std for for yor_7: 0.2865537703037262
03/25/2024 16:33:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:33:49 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 16:33:49 - INFO - __main__ - ID text: yor_8
03/25/2024 16:35:00 - INFO - __main__ - Mean variance for yor_8: 0.041752684861421585
03/25/2024 16:35:00 - INFO - __main__ - Mean std for for yor_8: 0.1614760160446167
03/25/2024 16:35:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:35:00 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 16:35:00 - INFO - __main__ - ID text: yor_9
03/25/2024 16:36:11 - INFO - __main__ - Mean variance for yor_9: 0.13226868212223053
03/25/2024 16:36:11 - INFO - __main__ - Mean std for for yor_9: 0.3134006857872009
03/25/2024 16:36:13 - INFO - __main__ - 
######## Language: zh ######## 

03/25/2024 16:36:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:36:13 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 16:36:13 - INFO - __main__ - ID text: zh_0
03/25/2024 16:37:24 - INFO - __main__ - Mean variance for zh_0: 0.09027750045061111
03/25/2024 16:37:24 - INFO - __main__ - Mean std for for zh_0: 0.27411219477653503
03/25/2024 16:37:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:37:25 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 16:37:25 - INFO - __main__ - ID text: zh_1
03/25/2024 16:38:36 - INFO - __main__ - Mean variance for zh_1: 0.07724976539611816
03/25/2024 16:38:36 - INFO - __main__ - Mean std for for zh_1: 0.2301284521818161
03/25/2024 16:38:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:38:36 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 16:38:36 - INFO - __main__ - ID text: zh_2
03/25/2024 16:39:47 - INFO - __main__ - Mean variance for zh_2: 0.11761436611413956
03/25/2024 16:39:47 - INFO - __main__ - Mean std for for zh_2: 0.29013481736183167
03/25/2024 16:39:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:39:47 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 16:39:47 - INFO - __main__ - ID text: zh_3
03/25/2024 16:40:58 - INFO - __main__ - Mean variance for zh_3: 0.15245626866817474
03/25/2024 16:40:58 - INFO - __main__ - Mean std for for zh_3: 0.34786999225616455
03/25/2024 16:40:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:40:58 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 16:40:58 - INFO - __main__ - ID text: zh_4
03/25/2024 16:42:09 - INFO - __main__ - Mean variance for zh_4: 0.08907271176576614
03/25/2024 16:42:09 - INFO - __main__ - Mean std for for zh_4: 0.2686552107334137
03/25/2024 16:42:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:42:10 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 16:42:10 - INFO - __main__ - ID text: zh_5
03/25/2024 16:43:22 - INFO - __main__ - Mean variance for zh_5: 0.1312360018491745
03/25/2024 16:43:22 - INFO - __main__ - Mean std for for zh_5: 0.32789912819862366
03/25/2024 16:43:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:43:22 - INFO - __main__ - Masked count: 151, ratio = 0.5898
03/25/2024 16:43:22 - INFO - __main__ - ID text: zh_6
03/25/2024 16:44:34 - INFO - __main__ - Mean variance for zh_6: 0.044461533427238464
03/25/2024 16:44:34 - INFO - __main__ - Mean std for for zh_6: 0.17180775105953217
03/25/2024 16:44:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:44:34 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 16:44:34 - INFO - __main__ - ID text: zh_7
03/25/2024 16:45:45 - INFO - __main__ - Mean variance for zh_7: 0.12876419723033905
03/25/2024 16:45:45 - INFO - __main__ - Mean std for for zh_7: 0.3104316294193268
03/25/2024 16:45:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:45:45 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 16:45:45 - INFO - __main__ - ID text: zh_8
03/25/2024 16:46:56 - INFO - __main__ - Mean variance for zh_8: 0.12312927097082138
03/25/2024 16:46:56 - INFO - __main__ - Mean std for for zh_8: 0.30249711871147156
03/25/2024 16:46:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:46:56 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 16:46:56 - INFO - __main__ - ID text: zh_9
03/25/2024 16:48:07 - INFO - __main__ - Mean variance for zh_9: 0.09494223445653915
03/25/2024 16:48:07 - INFO - __main__ - Mean std for for zh_9: 0.25656071305274963
03/25/2024 16:48:07 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/25/2024 16:48:07 - INFO - __main__ - 
######## Language: arabic ######## 

03/25/2024 16:48:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:48:07 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 16:48:07 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/25/2024 16:49:17 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.05526076629757881
03/25/2024 16:49:17 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.19810450077056885
03/25/2024 16:49:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:49:17 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 16:49:17 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/25/2024 16:50:27 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.04345495626330376
03/25/2024 16:50:27 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.16035780310630798
03/25/2024 16:50:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:50:27 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 16:50:27 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/25/2024 16:51:38 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.0465317964553833
03/25/2024 16:51:38 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.16808408498764038
03/25/2024 16:51:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:51:38 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 16:51:38 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/25/2024 16:52:49 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.03963913023471832
03/25/2024 16:52:49 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.15434934198856354
03/25/2024 16:52:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:52:49 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 16:52:49 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/25/2024 16:54:00 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.08035372942686081
03/25/2024 16:54:00 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.23490183055400848
03/25/2024 16:54:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:54:00 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 16:54:00 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/25/2024 16:55:10 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.04777619615197182
03/25/2024 16:55:10 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.16985763609409332
03/25/2024 16:55:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:55:10 - INFO - __main__ - Masked count: 144, ratio = 0.5625
03/25/2024 16:55:10 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/25/2024 16:56:20 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.04113568365573883
03/25/2024 16:56:21 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.15991029143333435
03/25/2024 16:56:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:56:21 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 16:56:21 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/25/2024 16:57:31 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.03752700239419937
03/25/2024 16:57:31 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.1514458954334259
03/25/2024 16:57:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:57:31 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 16:57:31 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/25/2024 16:58:41 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.04129188880324364
03/25/2024 16:58:41 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.1573740392923355
03/25/2024 16:58:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:58:41 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 16:58:41 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/25/2024 16:59:52 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.04122034087777138
03/25/2024 16:59:52 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.1563858985900879
03/25/2024 16:59:52 - INFO - __main__ - 
######## Language: russian ######## 

03/25/2024 16:59:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:59:52 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 16:59:52 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/25/2024 17:01:04 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.048288311809301376
03/25/2024 17:01:04 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.15958137810230255
03/25/2024 17:01:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:01:05 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 17:01:05 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/25/2024 17:02:15 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.04192708060145378
03/25/2024 17:02:15 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.16586512327194214
03/25/2024 17:02:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:02:15 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 17:02:15 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/25/2024 17:03:25 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.036489635705947876
03/25/2024 17:03:25 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.14065779745578766
03/25/2024 17:03:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:03:25 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 17:03:25 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/25/2024 17:04:36 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.03131847828626633
03/25/2024 17:04:36 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.13054494559764862
03/25/2024 17:04:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:04:36 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:04:36 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/25/2024 17:05:45 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.04358179494738579
03/25/2024 17:05:46 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.15445102751255035
03/25/2024 17:05:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:05:46 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 17:05:46 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/25/2024 17:06:55 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.03740539774298668
03/25/2024 17:06:55 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.14170841872692108
03/25/2024 17:06:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:06:55 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 17:06:55 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/25/2024 17:08:05 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.039798442274332047
03/25/2024 17:08:05 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.16991078853607178
03/25/2024 17:08:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:08:05 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 17:08:05 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/25/2024 17:09:14 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.04440167173743248
03/25/2024 17:09:14 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.15408740937709808
03/25/2024 17:09:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:09:14 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:09:14 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/25/2024 17:10:24 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.04637714847922325
03/25/2024 17:10:24 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.17949926853179932
03/25/2024 17:10:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:10:24 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 17:10:24 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/25/2024 17:11:34 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.041536156088113785
03/25/2024 17:11:34 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.1486385017633438
03/25/2024 17:11:34 - INFO - __main__ - 
######## Language: bengali ######## 

03/25/2024 17:11:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:11:34 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 17:11:34 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/25/2024 17:12:44 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.058076292276382446
03/25/2024 17:12:44 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.1833765059709549
03/25/2024 17:12:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:12:44 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 17:12:44 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/25/2024 17:13:54 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.06263093650341034
03/25/2024 17:13:54 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.19253431260585785
03/25/2024 17:13:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:13:54 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:13:54 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/25/2024 17:15:03 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.04569096863269806
03/25/2024 17:15:03 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.16551174223423004
03/25/2024 17:15:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:15:03 - INFO - __main__ - Masked count: 109, ratio = 0.4258
03/25/2024 17:15:03 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/25/2024 17:16:13 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.08461757749319077
03/25/2024 17:16:13 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.23370619118213654
03/25/2024 17:16:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:16:13 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 17:16:13 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/25/2024 17:17:22 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.053856924176216125
03/25/2024 17:17:22 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.18323582410812378
03/25/2024 17:17:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:17:22 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 17:17:22 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/25/2024 17:18:32 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.07073304802179337
03/25/2024 17:18:32 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.20684267580509186
03/25/2024 17:18:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:18:32 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 17:18:32 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/25/2024 17:19:42 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.05291194096207619
03/25/2024 17:19:42 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.1769264191389084
03/25/2024 17:19:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:19:42 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:19:42 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/25/2024 17:20:52 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.06168416514992714
03/25/2024 17:20:52 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.19220443069934845
03/25/2024 17:20:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:20:52 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 17:20:52 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/25/2024 17:22:03 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.06284237653017044
03/25/2024 17:22:03 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.19531221687793732
03/25/2024 17:22:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:22:03 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 17:22:03 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/25/2024 17:23:12 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.10308787971735
03/25/2024 17:23:12 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.27078041434288025
03/25/2024 17:23:12 - INFO - __main__ - 
######## Language: telugu ######## 

03/25/2024 17:23:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:23:13 - INFO - __main__ - Masked count: 118, ratio = 0.4609
03/25/2024 17:23:13 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/25/2024 17:24:23 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.03970320522785187
03/25/2024 17:24:23 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.15651078522205353
03/25/2024 17:24:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:24:23 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:24:23 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/25/2024 17:25:32 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.03854895755648613
03/25/2024 17:25:32 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.15695315599441528
03/25/2024 17:25:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:25:32 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:25:32 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/25/2024 17:26:43 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.031993065029382706
03/25/2024 17:26:43 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.13998670876026154
03/25/2024 17:26:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:26:43 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 17:26:43 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/25/2024 17:27:53 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.031090324744582176
03/25/2024 17:27:53 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.14131031930446625
03/25/2024 17:27:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:27:53 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:27:53 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/25/2024 17:29:03 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.03689301759004593
03/25/2024 17:29:03 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.1496829241514206
03/25/2024 17:29:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:29:03 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 17:29:03 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/25/2024 17:30:13 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.034631360322237015
03/25/2024 17:30:13 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.1462317258119583
03/25/2024 17:30:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:30:13 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 17:30:13 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/25/2024 17:31:23 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.06285608559846878
03/25/2024 17:31:24 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.19122456014156342
03/25/2024 17:31:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:31:24 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 17:31:24 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/25/2024 17:32:34 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.030981874093413353
03/25/2024 17:32:34 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.13922759890556335
03/25/2024 17:32:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:32:34 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:32:34 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/25/2024 17:33:44 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.0376712940633297
03/25/2024 17:33:44 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.1531946063041687
03/25/2024 17:33:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:33:44 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 17:33:44 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/25/2024 17:34:54 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.031195534393191338
03/25/2024 17:34:54 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.13846193253993988
03/25/2024 17:34:54 - INFO - __main__ - 
######## Language: finnish ######## 

03/25/2024 17:34:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:34:54 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 17:34:54 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/25/2024 17:36:04 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.044100385159254074
03/25/2024 17:36:04 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.16691821813583374
03/25/2024 17:36:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:36:04 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 17:36:04 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/25/2024 17:37:14 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.03899848461151123
03/25/2024 17:37:14 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.15642844140529633
03/25/2024 17:37:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:37:14 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 17:37:14 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/25/2024 17:38:24 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.11949322372674942
03/25/2024 17:38:24 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.2642510235309601
03/25/2024 17:38:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:38:24 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 17:38:24 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/25/2024 17:39:34 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.05859604850411415
03/25/2024 17:39:34 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.19004936516284943
03/25/2024 17:39:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:39:34 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:39:34 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/25/2024 17:40:45 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.0456179678440094
03/25/2024 17:40:45 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.1732468456029892
03/25/2024 17:40:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:40:45 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 17:40:45 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/25/2024 17:41:55 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.06621091812849045
03/25/2024 17:41:56 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.18498563766479492
03/25/2024 17:41:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:41:56 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 17:41:56 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/25/2024 17:43:06 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.0670911893248558
03/25/2024 17:43:06 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.1850208044052124
03/25/2024 17:43:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:43:06 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 17:43:06 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/25/2024 17:44:16 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.11875175684690475
03/25/2024 17:44:16 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.26231512427330017
03/25/2024 17:44:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:44:16 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:44:16 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/25/2024 17:45:26 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.04327705129981041
03/25/2024 17:45:26 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.1545671671628952
03/25/2024 17:45:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:45:26 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 17:45:26 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/25/2024 17:46:37 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.0681222677230835
03/25/2024 17:46:37 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.18826527893543243
03/25/2024 17:46:37 - INFO - __main__ - 
######## Language: swahili ######## 

03/25/2024 17:46:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:46:37 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 17:46:37 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/25/2024 17:47:47 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.05705980956554413
03/25/2024 17:47:47 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.19150035083293915
03/25/2024 17:47:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:47:47 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 17:47:47 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/25/2024 17:48:58 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.05689285323023796
03/25/2024 17:48:58 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.17505455017089844
03/25/2024 17:48:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:48:58 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:48:58 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/25/2024 17:50:08 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.047504980117082596
03/25/2024 17:50:08 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.17265373468399048
03/25/2024 17:50:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:50:08 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 17:50:08 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/25/2024 17:51:19 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.04731551930308342
03/25/2024 17:51:19 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.1559564173221588
03/25/2024 17:51:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:51:19 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 17:51:19 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/25/2024 17:52:29 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.03669099882245064
03/25/2024 17:52:29 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.13898564875125885
03/25/2024 17:52:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:52:29 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 17:52:29 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/25/2024 17:53:40 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.05046236515045166
03/25/2024 17:53:40 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.18262304365634918
03/25/2024 17:53:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:53:40 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 17:53:40 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/25/2024 17:54:50 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.044240932911634445
03/25/2024 17:54:50 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.16413021087646484
03/25/2024 17:54:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:54:50 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:54:50 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/25/2024 17:56:01 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.05168827995657921
03/25/2024 17:56:01 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.18335400521755219
03/25/2024 17:56:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:56:01 - INFO - __main__ - Masked count: 146, ratio = 0.5703
03/25/2024 17:56:01 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/25/2024 17:57:12 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.03162181377410889
03/25/2024 17:57:12 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.13223741948604584
03/25/2024 17:57:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:57:12 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:57:12 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/25/2024 17:58:23 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.04567946121096611
03/25/2024 17:58:23 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.15408504009246826
03/25/2024 17:58:23 - INFO - __main__ - 
######## Language: korean ######## 

03/25/2024 17:58:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:58:23 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 17:58:23 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/25/2024 17:59:34 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.054945480078458786
03/25/2024 17:59:34 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.18069405853748322
03/25/2024 17:59:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:59:34 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:59:34 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/25/2024 18:00:44 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.033282455056905746
03/25/2024 18:00:44 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.1468346267938614
03/25/2024 18:00:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:00:44 - INFO - __main__ - Masked count: 120, ratio = 0.4688
03/25/2024 18:00:44 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/25/2024 18:01:55 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.0517384372651577
03/25/2024 18:01:55 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.17636001110076904
03/25/2024 18:01:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:01:55 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 18:01:55 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/25/2024 18:03:06 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.04077772796154022
03/25/2024 18:03:06 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.16190862655639648
03/25/2024 18:03:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:03:06 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 18:03:06 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/25/2024 18:04:17 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.06526947021484375
03/25/2024 18:04:17 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.20508141815662384
03/25/2024 18:04:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:04:17 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 18:04:17 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/25/2024 18:05:28 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.048550769686698914
03/25/2024 18:05:28 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.17441576719284058
03/25/2024 18:05:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:05:28 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 18:05:28 - INFO - __main__ - ID text: korean-148115504649351135-0
03/25/2024 18:06:40 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.04214959964156151
03/25/2024 18:06:40 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.16706232726573944
03/25/2024 18:06:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:06:40 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 18:06:40 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/25/2024 18:07:50 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.053604673594236374
03/25/2024 18:07:50 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.17815078794956207
03/25/2024 18:07:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:07:50 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 18:07:50 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/25/2024 18:09:00 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.07582537829875946
03/25/2024 18:09:00 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.22276504337787628
03/25/2024 18:09:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:09:00 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 18:09:00 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/25/2024 18:10:10 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.13217808306217194
03/25/2024 18:10:10 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.31377437710762024
03/25/2024 18:10:10 - INFO - __main__ - 
######## Language: indonesian ######## 

03/25/2024 18:10:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:10:10 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 18:10:10 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/25/2024 18:11:19 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.057845499366521835
03/25/2024 18:11:19 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.1757805496454239
03/25/2024 18:11:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:11:19 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 18:11:19 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/25/2024 18:12:29 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.14800214767456055
03/25/2024 18:12:29 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.2998409569263458
03/25/2024 18:12:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:12:29 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 18:12:29 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/25/2024 18:13:40 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.056317105889320374
03/25/2024 18:13:40 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.1687876433134079
03/25/2024 18:13:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:13:40 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 18:13:40 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/25/2024 18:14:50 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.03917825222015381
03/25/2024 18:14:50 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.15000216662883759
03/25/2024 18:14:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:14:50 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 18:14:50 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/25/2024 18:16:00 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.05826231837272644
03/25/2024 18:16:00 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.17366589605808258
03/25/2024 18:16:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:16:00 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 18:16:00 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/25/2024 18:17:09 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.050541799515485764
03/25/2024 18:17:09 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.16132834553718567
03/25/2024 18:17:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:17:09 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 18:17:09 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/25/2024 18:18:19 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.046131134033203125
03/25/2024 18:18:19 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.15077005326747894
03/25/2024 18:18:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:18:19 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 18:18:19 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/25/2024 18:19:29 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.05229325592517853
03/25/2024 18:19:29 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.18109895288944244
03/25/2024 18:19:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:19:29 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 18:19:29 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/25/2024 18:20:39 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.050085049122571945
03/25/2024 18:20:39 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.16474832594394684
03/25/2024 18:20:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:20:39 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 18:20:39 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/25/2024 18:21:50 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.04782828316092491
03/25/2024 18:21:50 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.15748435258865356
03/25/2024 18:21:50 - INFO - __main__ - 
######## Language: english ######## 

03/25/2024 18:21:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:21:50 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 18:21:50 - INFO - __main__ - ID text: english-2852412434797041176-6
03/25/2024 18:23:00 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.12630696594715118
03/25/2024 18:23:00 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.28250041604042053
03/25/2024 18:23:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:23:00 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 18:23:00 - INFO - __main__ - ID text: english--1463732605740571606-0
03/25/2024 18:24:10 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.08341451734304428
03/25/2024 18:24:10 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.2113741785287857
03/25/2024 18:24:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:24:10 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 18:24:10 - INFO - __main__ - ID text: english-5441411281255470421-0
03/25/2024 18:25:20 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.0849091112613678
03/25/2024 18:25:20 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.21324986219406128
03/25/2024 18:25:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:25:20 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 18:25:20 - INFO - __main__ - ID text: english-7294054492486093447-1
03/25/2024 18:26:31 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.09251699596643448
03/25/2024 18:26:31 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.2224511355161667
03/25/2024 18:26:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:26:31 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 18:26:31 - INFO - __main__ - ID text: english-8820750127045023244-0
03/25/2024 18:27:41 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.059117451310157776
03/25/2024 18:27:41 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.18695490062236786
03/25/2024 18:27:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:27:41 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 18:27:41 - INFO - __main__ - ID text: english--506693546683012611-2
03/25/2024 18:28:51 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.08025854080915451
03/25/2024 18:28:51 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.22839610278606415
03/25/2024 18:28:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:28:52 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 18:28:52 - INFO - __main__ - ID text: english-745411798111651115-0
03/25/2024 18:30:02 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.09610691666603088
03/25/2024 18:30:02 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.2275586575269699
03/25/2024 18:30:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:30:02 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 18:30:02 - INFO - __main__ - ID text: english-7740772185887912651-0
03/25/2024 18:31:12 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.08850428462028503
03/25/2024 18:31:12 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.21306242048740387
03/25/2024 18:31:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:31:12 - INFO - __main__ - Masked count: 144, ratio = 0.5625
03/25/2024 18:31:12 - INFO - __main__ - ID text: english-383873188776267137-19
03/25/2024 18:32:23 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.05754624679684639
03/25/2024 18:32:23 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.17308759689331055
03/25/2024 18:32:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:32:24 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 18:32:24 - INFO - __main__ - ID text: english--8277537578703156284-0
03/25/2024 18:33:34 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.12061629444360733
03/25/2024 18:33:34 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.258831650018692
03/25/2024 18:33:34 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/25/2024 18:33:34 - INFO - __main__ - 
######## Language: cola ######## 

03/25/2024 18:33:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:33:34 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 18:33:34 - INFO - __main__ - ID text: cola_228
03/25/2024 18:34:45 - INFO - __main__ - Mean variance for cola_228: 0.04472827911376953
03/25/2024 18:34:45 - INFO - __main__ - Mean std for for cola_228: 0.19055552780628204
03/25/2024 18:34:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:34:45 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 18:34:45 - INFO - __main__ - ID text: cola_51
03/25/2024 18:35:55 - INFO - __main__ - Mean variance for cola_51: 0.04545864835381508
03/25/2024 18:35:55 - INFO - __main__ - Mean std for for cola_51: 0.1912999153137207
03/25/2024 18:35:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:35:56 - INFO - __main__ - Masked count: 149, ratio = 0.5820
03/25/2024 18:35:56 - INFO - __main__ - ID text: cola_563
03/25/2024 18:37:06 - INFO - __main__ - Mean variance for cola_563: 0.1525292843580246
03/25/2024 18:37:06 - INFO - __main__ - Mean std for for cola_563: 0.34963247179985046
03/25/2024 18:37:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:37:06 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 18:37:06 - INFO - __main__ - ID text: cola_501
03/25/2024 18:38:16 - INFO - __main__ - Mean variance for cola_501: 0.050488557666540146
03/25/2024 18:38:16 - INFO - __main__ - Mean std for for cola_501: 0.20050306618213654
03/25/2024 18:38:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:38:16 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 18:38:16 - INFO - __main__ - ID text: cola_457
03/25/2024 18:39:26 - INFO - __main__ - Mean variance for cola_457: 0.04473384842276573
03/25/2024 18:39:26 - INFO - __main__ - Mean std for for cola_457: 0.1925526261329651
03/25/2024 18:39:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:39:26 - INFO - __main__ - Masked count: 148, ratio = 0.5781
03/25/2024 18:39:26 - INFO - __main__ - ID text: cola_285
03/25/2024 18:40:37 - INFO - __main__ - Mean variance for cola_285: 0.044784460216760635
03/25/2024 18:40:37 - INFO - __main__ - Mean std for for cola_285: 0.19172315299510956
03/25/2024 18:40:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:40:37 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 18:40:37 - INFO - __main__ - ID text: cola_209
03/25/2024 18:41:52 - INFO - __main__ - Mean variance for cola_209: 0.0532398484647274
03/25/2024 18:41:52 - INFO - __main__ - Mean std for for cola_209: 0.2064082771539688
03/25/2024 18:41:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:41:54 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 18:41:54 - INFO - __main__ - ID text: cola_178
03/25/2024 18:43:05 - INFO - __main__ - Mean variance for cola_178: 0.05868063494563103
03/25/2024 18:43:05 - INFO - __main__ - Mean std for for cola_178: 0.2181573361158371
03/25/2024 18:43:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:43:05 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 18:43:05 - INFO - __main__ - ID text: cola_864
03/25/2024 18:44:15 - INFO - __main__ - Mean variance for cola_864: 0.044871747493743896
03/25/2024 18:44:15 - INFO - __main__ - Mean std for for cola_864: 0.1936223953962326
03/25/2024 18:44:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:44:15 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 18:44:15 - INFO - __main__ - ID text: cola_65
03/25/2024 18:45:25 - INFO - __main__ - Mean variance for cola_65: 0.045119840651750565
03/25/2024 18:45:25 - INFO - __main__ - Mean std for for cola_65: 0.18457217514514923
03/25/2024 18:45:26 - INFO - __main__ - 
######## Language: mnli ######## 

03/25/2024 18:45:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:45:26 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 18:45:26 - INFO - __main__ - ID text: mnli_488
03/25/2024 18:46:36 - INFO - __main__ - Mean variance for mnli_488: 0.0660848543047905
03/25/2024 18:46:36 - INFO - __main__ - Mean std for for mnli_488: 0.21338248252868652
03/25/2024 18:46:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:46:36 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 18:46:36 - INFO - __main__ - ID text: mnli_1535
03/25/2024 18:47:46 - INFO - __main__ - Mean variance for mnli_1535: 0.0736992284655571
03/25/2024 18:47:46 - INFO - __main__ - Mean std for for mnli_1535: 0.2228737324476242
03/25/2024 18:47:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:47:46 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 18:47:46 - INFO - __main__ - ID text: mnli_3582
03/25/2024 18:48:55 - INFO - __main__ - Mean variance for mnli_3582: 0.06478311866521835
03/25/2024 18:48:55 - INFO - __main__ - Mean std for for mnli_3582: 0.22180284559726715
03/25/2024 18:48:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:48:56 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 18:48:56 - INFO - __main__ - ID text: mnli_3811
03/25/2024 18:50:05 - INFO - __main__ - Mean variance for mnli_3811: 0.05158381164073944
03/25/2024 18:50:05 - INFO - __main__ - Mean std for for mnli_3811: 0.19081400334835052
03/25/2024 18:50:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:50:05 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 18:50:05 - INFO - __main__ - ID text: mnli_8279
03/25/2024 18:51:15 - INFO - __main__ - Mean variance for mnli_8279: 0.04795502498745918
03/25/2024 18:51:15 - INFO - __main__ - Mean std for for mnli_8279: 0.19166500866413116
03/25/2024 18:51:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:51:15 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 18:51:15 - INFO - __main__ - ID text: mnli_434
03/25/2024 18:52:25 - INFO - __main__ - Mean variance for mnli_434: 0.07339516282081604
03/25/2024 18:52:25 - INFO - __main__ - Mean std for for mnli_434: 0.20746569335460663
03/25/2024 18:52:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:52:25 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 18:52:25 - INFO - __main__ - ID text: mnli_9195
03/25/2024 18:53:35 - INFO - __main__ - Mean variance for mnli_9195: 0.04800315573811531
03/25/2024 18:53:35 - INFO - __main__ - Mean std for for mnli_9195: 0.19927890598773956
03/25/2024 18:53:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:53:35 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 18:53:35 - INFO - __main__ - ID text: mnli_3257
03/25/2024 18:54:45 - INFO - __main__ - Mean variance for mnli_3257: 0.06058257818222046
03/25/2024 18:54:45 - INFO - __main__ - Mean std for for mnli_3257: 0.206471785902977
03/25/2024 18:54:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:54:45 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 18:54:45 - INFO - __main__ - ID text: mnli_8928
03/25/2024 18:55:56 - INFO - __main__ - Mean variance for mnli_8928: 0.06244313344359398
03/25/2024 18:55:56 - INFO - __main__ - Mean std for for mnli_8928: 0.20160271227359772
03/25/2024 18:55:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:55:56 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 18:55:56 - INFO - __main__ - ID text: mnli_6873
03/25/2024 18:57:06 - INFO - __main__ - Mean variance for mnli_6873: 0.0656016394495964
03/25/2024 18:57:06 - INFO - __main__ - Mean std for for mnli_6873: 0.20361942052841187
03/25/2024 18:57:06 - INFO - __main__ - 
######## Language: mrpc ######## 

03/25/2024 18:57:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:57:06 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 18:57:06 - INFO - __main__ - ID text: mrpc_451
03/25/2024 18:58:17 - INFO - __main__ - Mean variance for mrpc_451: 0.060176998376846313
03/25/2024 18:58:17 - INFO - __main__ - Mean std for for mrpc_451: 0.19956696033477783
03/25/2024 18:58:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:58:17 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 18:58:17 - INFO - __main__ - ID text: mrpc_919
03/25/2024 18:59:26 - INFO - __main__ - Mean variance for mrpc_919: 0.06280205398797989
03/25/2024 18:59:26 - INFO - __main__ - Mean std for for mrpc_919: 0.20356613397598267
03/25/2024 18:59:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:59:26 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 18:59:26 - INFO - __main__ - ID text: mrpc_1206
03/25/2024 19:00:37 - INFO - __main__ - Mean variance for mrpc_1206: 0.055973950773477554
03/25/2024 19:00:37 - INFO - __main__ - Mean std for for mrpc_1206: 0.19427324831485748
03/25/2024 19:00:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:00:37 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 19:00:37 - INFO - __main__ - ID text: mrpc_569
03/25/2024 19:01:47 - INFO - __main__ - Mean variance for mrpc_569: 0.05918338894844055
03/25/2024 19:01:47 - INFO - __main__ - Mean std for for mrpc_569: 0.19923286139965057
03/25/2024 19:01:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:01:47 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 19:01:47 - INFO - __main__ - ID text: mrpc_1657
03/25/2024 19:02:57 - INFO - __main__ - Mean variance for mrpc_1657: 0.05823569372296333
03/25/2024 19:02:57 - INFO - __main__ - Mean std for for mrpc_1657: 0.18675212562084198
03/25/2024 19:02:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:02:57 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 19:02:57 - INFO - __main__ - ID text: mrpc_13
03/25/2024 19:04:07 - INFO - __main__ - Mean variance for mrpc_13: 0.0592961311340332
03/25/2024 19:04:07 - INFO - __main__ - Mean std for for mrpc_13: 0.20428605377674103
03/25/2024 19:04:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:04:07 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 19:04:07 - INFO - __main__ - ID text: mrpc_1554
03/25/2024 19:05:17 - INFO - __main__ - Mean variance for mrpc_1554: 0.06427391618490219
03/25/2024 19:05:17 - INFO - __main__ - Mean std for for mrpc_1554: 0.19629843533039093
03/25/2024 19:05:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:05:17 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 19:05:17 - INFO - __main__ - ID text: mrpc_1650
03/25/2024 19:06:27 - INFO - __main__ - Mean variance for mrpc_1650: 0.12679646909236908
03/25/2024 19:06:27 - INFO - __main__ - Mean std for for mrpc_1650: 0.29613223671913147
03/25/2024 19:06:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:06:27 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 19:06:27 - INFO - __main__ - ID text: mrpc_326
03/25/2024 19:07:37 - INFO - __main__ - Mean variance for mrpc_326: 0.058025553822517395
03/25/2024 19:07:37 - INFO - __main__ - Mean std for for mrpc_326: 0.1980561465024948
03/25/2024 19:07:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:07:37 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 19:07:37 - INFO - __main__ - ID text: mrpc_1429
03/25/2024 19:08:48 - INFO - __main__ - Mean variance for mrpc_1429: 0.06674348562955856
03/25/2024 19:08:48 - INFO - __main__ - Mean std for for mrpc_1429: 0.20884601771831512
03/25/2024 19:08:49 - INFO - __main__ - 
######## Language: qnli ######## 

03/25/2024 19:08:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:08:49 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 19:08:49 - INFO - __main__ - ID text: qnli_3462
03/25/2024 19:09:59 - INFO - __main__ - Mean variance for qnli_3462: 0.06859740614891052
03/25/2024 19:09:59 - INFO - __main__ - Mean std for for qnli_3462: 0.21245020627975464
03/25/2024 19:09:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:09:59 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 19:09:59 - INFO - __main__ - ID text: qnli_2787
03/25/2024 19:11:09 - INFO - __main__ - Mean variance for qnli_2787: 0.0720188245177269
03/25/2024 19:11:09 - INFO - __main__ - Mean std for for qnli_2787: 0.20872890949249268
03/25/2024 19:11:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:11:09 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 19:11:09 - INFO - __main__ - ID text: qnli_2276
03/25/2024 19:12:20 - INFO - __main__ - Mean variance for qnli_2276: 0.055395904928445816
03/25/2024 19:12:20 - INFO - __main__ - Mean std for for qnli_2276: 0.1882280558347702
03/25/2024 19:12:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:12:20 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 19:12:20 - INFO - __main__ - ID text: qnli_1273
03/25/2024 19:13:30 - INFO - __main__ - Mean variance for qnli_1273: 0.06061893701553345
03/25/2024 19:13:30 - INFO - __main__ - Mean std for for qnli_1273: 0.1965252012014389
03/25/2024 19:13:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:13:30 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 19:13:30 - INFO - __main__ - ID text: qnli_1763
03/25/2024 19:14:40 - INFO - __main__ - Mean variance for qnli_1763: 0.07564527541399002
03/25/2024 19:14:40 - INFO - __main__ - Mean std for for qnli_1763: 0.2240898758172989
03/25/2024 19:14:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:14:40 - INFO - __main__ - Masked count: 150, ratio = 0.5859
03/25/2024 19:14:40 - INFO - __main__ - ID text: qnli_2757
03/25/2024 19:15:50 - INFO - __main__ - Mean variance for qnli_2757: 0.04636378213763237
03/25/2024 19:15:50 - INFO - __main__ - Mean std for for qnli_2757: 0.169270321726799
03/25/2024 19:15:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:15:50 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 19:15:50 - INFO - __main__ - ID text: qnli_837
03/25/2024 19:17:00 - INFO - __main__ - Mean variance for qnli_837: 0.05667082965373993
03/25/2024 19:17:00 - INFO - __main__ - Mean std for for qnli_837: 0.1980484277009964
03/25/2024 19:17:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:17:00 - INFO - __main__ - Masked count: 121, ratio = 0.4727
03/25/2024 19:17:00 - INFO - __main__ - ID text: qnli_759
03/25/2024 19:18:11 - INFO - __main__ - Mean variance for qnli_759: 0.09687986224889755
03/25/2024 19:18:11 - INFO - __main__ - Mean std for for qnli_759: 0.22671300172805786
03/25/2024 19:18:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:18:11 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 19:18:11 - INFO - __main__ - ID text: qnli_3112
03/25/2024 19:19:21 - INFO - __main__ - Mean variance for qnli_3112: 0.06960613280534744
03/25/2024 19:19:21 - INFO - __main__ - Mean std for for qnli_3112: 0.22087334096431732
03/25/2024 19:19:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:19:21 - INFO - __main__ - Masked count: 120, ratio = 0.4688
03/25/2024 19:19:21 - INFO - __main__ - ID text: qnli_792
03/25/2024 19:20:31 - INFO - __main__ - Mean variance for qnli_792: 0.07655888050794601
03/25/2024 19:20:31 - INFO - __main__ - Mean std for for qnli_792: 0.2180129438638687
03/25/2024 19:20:31 - INFO - __main__ - 
######## Language: qqp ######## 

03/25/2024 19:20:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:20:31 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 19:20:31 - INFO - __main__ - ID text: qqp_188208
03/25/2024 19:21:41 - INFO - __main__ - Mean variance for qqp_188208: 0.05799563601613045
03/25/2024 19:21:41 - INFO - __main__ - Mean std for for qqp_188208: 0.21026396751403809
03/25/2024 19:21:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:21:41 - INFO - __main__ - Masked count: 144, ratio = 0.5625
03/25/2024 19:21:41 - INFO - __main__ - ID text: qqp_180331
03/25/2024 19:22:51 - INFO - __main__ - Mean variance for qqp_180331: 0.049388229846954346
03/25/2024 19:22:51 - INFO - __main__ - Mean std for for qqp_180331: 0.19216227531433105
03/25/2024 19:22:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:22:52 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 19:22:52 - INFO - __main__ - ID text: qqp_316526
03/25/2024 19:24:02 - INFO - __main__ - Mean variance for qqp_316526: 0.06351032108068466
03/25/2024 19:24:02 - INFO - __main__ - Mean std for for qqp_316526: 0.20634786784648895
03/25/2024 19:24:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:24:02 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 19:24:02 - INFO - __main__ - ID text: qqp_138685
03/25/2024 19:25:12 - INFO - __main__ - Mean variance for qqp_138685: 0.08234397321939468
03/25/2024 19:25:12 - INFO - __main__ - Mean std for for qqp_138685: 0.2208573967218399
03/25/2024 19:25:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:25:12 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 19:25:12 - INFO - __main__ - ID text: qqp_22780
03/25/2024 19:26:21 - INFO - __main__ - Mean variance for qqp_22780: 0.05324901267886162
03/25/2024 19:26:21 - INFO - __main__ - Mean std for for qqp_22780: 0.2047836184501648
03/25/2024 19:26:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:26:22 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 19:26:22 - INFO - __main__ - ID text: qqp_382589
03/25/2024 19:27:31 - INFO - __main__ - Mean variance for qqp_382589: 0.05105046555399895
03/25/2024 19:27:31 - INFO - __main__ - Mean std for for qqp_382589: 0.1914844512939453
03/25/2024 19:27:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:27:31 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 19:27:31 - INFO - __main__ - ID text: qqp_240870
03/25/2024 19:28:42 - INFO - __main__ - Mean variance for qqp_240870: 0.05240746960043907
03/25/2024 19:28:42 - INFO - __main__ - Mean std for for qqp_240870: 0.1993042379617691
03/25/2024 19:28:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:28:42 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 19:28:42 - INFO - __main__ - ID text: qqp_281137
03/25/2024 19:29:51 - INFO - __main__ - Mean variance for qqp_281137: 0.060155633836984634
03/25/2024 19:29:51 - INFO - __main__ - Mean std for for qqp_281137: 0.20549188554286957
03/25/2024 19:29:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:29:51 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 19:29:51 - INFO - __main__ - ID text: qqp_65444
03/25/2024 19:31:02 - INFO - __main__ - Mean variance for qqp_65444: 0.04227157309651375
03/25/2024 19:31:02 - INFO - __main__ - Mean std for for qqp_65444: 0.17725145816802979
03/25/2024 19:31:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:31:02 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 19:31:02 - INFO - __main__ - ID text: qqp_198461
03/25/2024 19:32:12 - INFO - __main__ - Mean variance for qqp_198461: 0.05118562653660774
03/25/2024 19:32:12 - INFO - __main__ - Mean std for for qqp_198461: 0.18570315837860107
03/25/2024 19:32:13 - INFO - __main__ - 
######## Language: rte ######## 

03/25/2024 19:32:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:32:13 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 19:32:13 - INFO - __main__ - ID text: rte_322
03/25/2024 19:33:23 - INFO - __main__ - Mean variance for rte_322: 0.05450594052672386
03/25/2024 19:33:23 - INFO - __main__ - Mean std for for rte_322: 0.19331975281238556
03/25/2024 19:33:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:33:23 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 19:33:23 - INFO - __main__ - ID text: rte_2261
03/25/2024 19:34:33 - INFO - __main__ - Mean variance for rte_2261: 0.07062171399593353
03/25/2024 19:34:33 - INFO - __main__ - Mean std for for rte_2261: 0.22866535186767578
03/25/2024 19:34:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:34:33 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 19:34:33 - INFO - __main__ - ID text: rte_1200
03/25/2024 19:35:43 - INFO - __main__ - Mean variance for rte_1200: 0.05201871693134308
03/25/2024 19:35:43 - INFO - __main__ - Mean std for for rte_1200: 0.174397811293602
03/25/2024 19:35:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:35:43 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 19:35:43 - INFO - __main__ - ID text: rte_2574
03/25/2024 19:36:52 - INFO - __main__ - Mean variance for rte_2574: 0.09001395106315613
03/25/2024 19:36:52 - INFO - __main__ - Mean std for for rte_2574: 0.21856284141540527
03/25/2024 19:36:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:36:52 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 19:36:52 - INFO - __main__ - ID text: rte_2533
03/25/2024 19:38:02 - INFO - __main__ - Mean variance for rte_2533: 0.10614657402038574
03/25/2024 19:38:02 - INFO - __main__ - Mean std for for rte_2533: 0.2372225970029831
03/25/2024 19:38:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:38:03 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 19:38:03 - INFO - __main__ - ID text: rte_1481
03/25/2024 19:39:13 - INFO - __main__ - Mean variance for rte_1481: 0.06506333500146866
03/25/2024 19:39:13 - INFO - __main__ - Mean std for for rte_1481: 0.2032151073217392
03/25/2024 19:39:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:39:13 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 19:39:13 - INFO - __main__ - ID text: rte_2364
03/25/2024 19:40:23 - INFO - __main__ - Mean variance for rte_2364: 0.08304127305746078
03/25/2024 19:40:23 - INFO - __main__ - Mean std for for rte_2364: 0.22030042111873627
03/25/2024 19:40:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:40:23 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 19:40:23 - INFO - __main__ - ID text: rte_787
03/25/2024 19:41:34 - INFO - __main__ - Mean variance for rte_787: 0.06698235869407654
03/25/2024 19:41:34 - INFO - __main__ - Mean std for for rte_787: 0.2077609747648239
03/25/2024 19:41:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:41:34 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 19:41:34 - INFO - __main__ - ID text: rte_2885
03/25/2024 19:42:44 - INFO - __main__ - Mean variance for rte_2885: 0.10088763386011124
03/25/2024 19:42:44 - INFO - __main__ - Mean std for for rte_2885: 0.2335205078125
03/25/2024 19:42:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:42:44 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 19:42:44 - INFO - __main__ - ID text: rte_284
03/25/2024 19:43:54 - INFO - __main__ - Mean variance for rte_284: 0.058864083141088486
03/25/2024 19:43:54 - INFO - __main__ - Mean std for for rte_284: 0.19908906519412994
03/25/2024 19:43:54 - INFO - __main__ - 
######## Language: sst2 ######## 

03/25/2024 19:43:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:43:54 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 19:43:54 - INFO - __main__ - ID text: sst2_93
03/25/2024 19:45:05 - INFO - __main__ - Mean variance for sst2_93: 0.047268226742744446
03/25/2024 19:45:05 - INFO - __main__ - Mean std for for sst2_93: 0.18180911242961884
03/25/2024 19:45:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:45:05 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 19:45:05 - INFO - __main__ - ID text: sst2_1354
03/25/2024 19:46:15 - INFO - __main__ - Mean variance for sst2_1354: 0.05831371620297432
03/25/2024 19:46:15 - INFO - __main__ - Mean std for for sst2_1354: 0.21749180555343628
03/25/2024 19:46:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:46:15 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 19:46:15 - INFO - __main__ - ID text: sst2_466
03/25/2024 19:47:27 - INFO - __main__ - Mean variance for sst2_466: 0.051042456179857254
03/25/2024 19:47:27 - INFO - __main__ - Mean std for for sst2_466: 0.2031872719526291
03/25/2024 19:47:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:47:27 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 19:47:27 - INFO - __main__ - ID text: sst2_1583
03/25/2024 19:48:37 - INFO - __main__ - Mean variance for sst2_1583: 0.056107450276613235
03/25/2024 19:48:37 - INFO - __main__ - Mean std for for sst2_1583: 0.19612593948841095
03/25/2024 19:48:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:48:37 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 19:48:37 - INFO - __main__ - ID text: sst2_592
03/25/2024 19:49:47 - INFO - __main__ - Mean variance for sst2_592: 0.05903162434697151
03/25/2024 19:49:47 - INFO - __main__ - Mean std for for sst2_592: 0.19876986742019653
03/25/2024 19:49:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:49:47 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 19:49:47 - INFO - __main__ - ID text: sst2_163
03/25/2024 19:50:58 - INFO - __main__ - Mean variance for sst2_163: 0.06463373452425003
03/25/2024 19:50:58 - INFO - __main__ - Mean std for for sst2_163: 0.23019880056381226
03/25/2024 19:50:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:50:58 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 19:50:58 - INFO - __main__ - ID text: sst2_1751
03/25/2024 19:52:09 - INFO - __main__ - Mean variance for sst2_1751: 0.05291140452027321
03/25/2024 19:52:09 - INFO - __main__ - Mean std for for sst2_1751: 0.208515003323555
03/25/2024 19:52:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:52:09 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 19:52:09 - INFO - __main__ - ID text: sst2_476
03/25/2024 19:53:18 - INFO - __main__ - Mean variance for sst2_476: 0.041666124016046524
03/25/2024 19:53:18 - INFO - __main__ - Mean std for for sst2_476: 0.1707092523574829
03/25/2024 19:53:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:53:19 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 19:53:19 - INFO - __main__ - ID text: sst2_1774
03/25/2024 19:54:29 - INFO - __main__ - Mean variance for sst2_1774: 0.0455336831510067
03/25/2024 19:54:29 - INFO - __main__ - Mean std for for sst2_1774: 0.18200214207172394
03/25/2024 19:54:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:54:29 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 19:54:29 - INFO - __main__ - ID text: sst2_206
03/25/2024 19:55:40 - INFO - __main__ - Mean variance for sst2_206: 0.0503426231443882
03/25/2024 19:55:40 - INFO - __main__ - Mean std for for sst2_206: 0.1963997632265091
03/25/2024 19:55:40 - INFO - __main__ - 
######## Language: stsb ######## 

03/25/2024 19:55:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:55:40 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 19:55:40 - INFO - __main__ - ID text: stsb_778
03/25/2024 19:56:50 - INFO - __main__ - Mean variance for stsb_778: 0.060769516974687576
03/25/2024 19:56:50 - INFO - __main__ - Mean std for for stsb_778: 0.20901916921138763
03/25/2024 19:56:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:56:50 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 19:56:50 - INFO - __main__ - ID text: stsb_569
03/25/2024 19:58:00 - INFO - __main__ - Mean variance for stsb_569: 0.058370914310216904
03/25/2024 19:58:00 - INFO - __main__ - Mean std for for stsb_569: 0.21100707352161407
03/25/2024 19:58:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:58:00 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 19:58:00 - INFO - __main__ - ID text: stsb_928
03/25/2024 19:59:10 - INFO - __main__ - Mean variance for stsb_928: 0.06466058641672134
03/25/2024 19:59:10 - INFO - __main__ - Mean std for for stsb_928: 0.19854505360126495
03/25/2024 19:59:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:59:10 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 19:59:10 - INFO - __main__ - ID text: stsb_1301
03/25/2024 20:00:21 - INFO - __main__ - Mean variance for stsb_1301: 0.05813033878803253
03/25/2024 20:00:21 - INFO - __main__ - Mean std for for stsb_1301: 0.20453809201717377
03/25/2024 20:00:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:00:21 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 20:00:21 - INFO - __main__ - ID text: stsb_747
03/25/2024 20:01:31 - INFO - __main__ - Mean variance for stsb_747: 0.059656377881765366
03/25/2024 20:01:31 - INFO - __main__ - Mean std for for stsb_747: 0.20537322759628296
03/25/2024 20:01:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:01:33 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 20:01:33 - INFO - __main__ - ID text: stsb_333
03/25/2024 20:02:44 - INFO - __main__ - Mean variance for stsb_333: 0.06100885570049286
03/25/2024 20:02:44 - INFO - __main__ - Mean std for for stsb_333: 0.2064489722251892
03/25/2024 20:02:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:02:44 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 20:02:44 - INFO - __main__ - ID text: stsb_758
03/25/2024 20:03:55 - INFO - __main__ - Mean variance for stsb_758: 0.07385209202766418
03/25/2024 20:03:55 - INFO - __main__ - Mean std for for stsb_758: 0.2227059155702591
03/25/2024 20:03:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:03:55 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 20:03:55 - INFO - __main__ - ID text: stsb_727
03/25/2024 20:05:06 - INFO - __main__ - Mean variance for stsb_727: 0.06829077005386353
03/25/2024 20:05:06 - INFO - __main__ - Mean std for for stsb_727: 0.22650595009326935
03/25/2024 20:05:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:05:06 - INFO - __main__ - Masked count: 148, ratio = 0.5781
03/25/2024 20:05:06 - INFO - __main__ - ID text: stsb_429
03/25/2024 20:06:17 - INFO - __main__ - Mean variance for stsb_429: 0.040363576263189316
03/25/2024 20:06:17 - INFO - __main__ - Mean std for for stsb_429: 0.17371441423892975
03/25/2024 20:06:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:06:17 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 20:06:17 - INFO - __main__ - ID text: stsb_1372
03/25/2024 20:07:28 - INFO - __main__ - Mean variance for stsb_1372: 0.055325135588645935
03/25/2024 20:07:28 - INFO - __main__ - Mean std for for stsb_1372: 0.2017124891281128
03/25/2024 20:07:28 - INFO - __main__ - 
######## Language: wnli ######## 

03/25/2024 20:07:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:07:28 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 20:07:28 - INFO - __main__ - ID text: wnli_68
03/25/2024 20:08:40 - INFO - __main__ - Mean variance for wnli_68: 0.07244477421045303
03/25/2024 20:08:40 - INFO - __main__ - Mean std for for wnli_68: 0.21552181243896484
03/25/2024 20:08:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:08:40 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 20:08:40 - INFO - __main__ - ID text: wnli_18
03/25/2024 20:09:50 - INFO - __main__ - Mean variance for wnli_18: 0.07203933596611023
03/25/2024 20:09:50 - INFO - __main__ - Mean std for for wnli_18: 0.20939166843891144
03/25/2024 20:09:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:09:50 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 20:09:50 - INFO - __main__ - ID text: wnli_43
03/25/2024 20:11:01 - INFO - __main__ - Mean variance for wnli_43: 0.07377267628908157
03/25/2024 20:11:01 - INFO - __main__ - Mean std for for wnli_43: 0.21738535165786743
03/25/2024 20:11:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:11:01 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 20:11:01 - INFO - __main__ - ID text: wnli_136
03/25/2024 20:12:12 - INFO - __main__ - Mean variance for wnli_136: 0.07371004670858383
03/25/2024 20:12:12 - INFO - __main__ - Mean std for for wnli_136: 0.21203750371932983
03/25/2024 20:12:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:12:12 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:12:12 - INFO - __main__ - ID text: wnli_62
03/25/2024 20:13:23 - INFO - __main__ - Mean variance for wnli_62: 0.06860477477312088
03/25/2024 20:13:23 - INFO - __main__ - Mean std for for wnli_62: 0.21617071330547333
03/25/2024 20:13:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:13:23 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 20:13:23 - INFO - __main__ - ID text: wnli_41
03/25/2024 20:14:34 - INFO - __main__ - Mean variance for wnli_41: 0.07437161356210709
03/25/2024 20:14:34 - INFO - __main__ - Mean std for for wnli_41: 0.21665990352630615
03/25/2024 20:14:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:14:35 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 20:14:35 - INFO - __main__ - ID text: wnli_118
03/25/2024 20:15:46 - INFO - __main__ - Mean variance for wnli_118: 0.04957696422934532
03/25/2024 20:15:46 - INFO - __main__ - Mean std for for wnli_118: 0.18695347011089325
03/25/2024 20:15:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:15:46 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 20:15:46 - INFO - __main__ - ID text: wnli_97
03/25/2024 20:16:59 - INFO - __main__ - Mean variance for wnli_97: 0.07461699843406677
03/25/2024 20:16:59 - INFO - __main__ - Mean std for for wnli_97: 0.21017031371593475
03/25/2024 20:16:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:16:59 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 20:16:59 - INFO - __main__ - ID text: wnli_69
03/25/2024 20:18:10 - INFO - __main__ - Mean variance for wnli_69: 0.0515928752720356
03/25/2024 20:18:10 - INFO - __main__ - Mean std for for wnli_69: 0.18739736080169678
03/25/2024 20:18:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:18:10 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 20:18:10 - INFO - __main__ - ID text: wnli_142
03/25/2024 20:19:21 - INFO - __main__ - Mean variance for wnli_142: 0.0664733275771141
03/25/2024 20:19:21 - INFO - __main__ - Mean std for for wnli_142: 0.20042824745178223
03/25/2024 20:19:21 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.08089577406644821, 'amh_1': 0.11183186620473862, 'amh_2': 0.10954321175813675, 'amh_3': 0.12759585678577423, 'amh_4': 0.13014037907123566, 'amh_5': 0.10267684608697891, 'amh_6': 0.10025384277105331, 'amh_7': 0.1156868040561676, 'amh_8': 0.06435186415910721, 'amh_9': 0.12788493931293488}, 'conll_2003_en': {'conll_2003_en_0': 0.1581905335187912, 'conll_2003_en_1': 0.0374908484518528, 'conll_2003_en_2': 0.03867707401514053, 'conll_2003_en_3': 0.049168024212121964, 'conll_2003_en_4': 0.04772272706031799, 'conll_2003_en_5': 0.1453036665916443, 'conll_2003_en_6': 0.11799657344818115, 'conll_2003_en_7': 0.1126566156744957, 'conll_2003_en_8': 0.1396767497062683, 'conll_2003_en_9': 0.041915107518434525}, 'hau': {'hau_0': 0.03720330819487572, 'hau_1': 0.044633667916059494, 'hau_2': 0.1228150725364685, 'hau_3': 0.03573393449187279, 'hau_4': 0.0376417376101017, 'hau_5': 0.02586282789707184, 'hau_6': 0.048275578767061234, 'hau_7': 0.03450477123260498, 'hau_8': 0.04410099983215332, 'hau_9': 0.043835412710905075}, 'ibo': {'ibo_0': 0.03760022670030594, 'ibo_1': 0.03873322531580925, 'ibo_2': 0.045138414949178696, 'ibo_3': 0.039624642580747604, 'ibo_4': 0.04668261110782623, 'ibo_5': 0.03894038870930672, 'ibo_6': 0.04105882719159126, 'ibo_7': 0.043953556567430496, 'ibo_8': 0.05307634547352791, 'ibo_9': 0.03894520178437233}, 'kin': {'kin_0': 0.05854250118136406, 'kin_1': 0.042676955461502075, 'kin_2': 0.04500415921211243, 'kin_3': 0.03707406297326088, 'kin_4': 0.04102840647101402, 'kin_5': 0.0343274362385273, 'kin_6': 0.04553087055683136, 'kin_7': 0.04968247935175896, 'kin_8': 0.04313535615801811, 'kin_9': 0.05009022355079651}, 'lug': {'lug_0': 0.037276264280080795, 'lug_1': 0.04041512683033943, 'lug_2': 0.0520581416785717, 'lug_3': 0.04448624327778816, 'lug_4': 0.04748636484146118, 'lug_5': 0.0510379821062088, 'lug_6': 0.04170997813344002, 'lug_7': 0.0386115200817585, 'lug_8': 0.0385211817920208, 'lug_9': 0.03904677554965019}, 'luo': {'luo_0': 0.03662310168147087, 'luo_1': 0.048437267541885376, 'luo_2': 0.04191879555583, 'luo_3': 0.04081021994352341, 'luo_4': 0.041324492543935776, 'luo_5': 0.04324133321642876, 'luo_6': 0.051842112094163895, 'luo_7': 0.0513162799179554, 'luo_8': 0.03793681040406227, 'luo_9': 0.04813946411013603}, 'pcm': {'pcm_0': 0.036540351808071136, 'pcm_1': 0.050099920481443405, 'pcm_2': 0.03922256827354431, 'pcm_3': 0.049594487994909286, 'pcm_4': 0.0521555095911026, 'pcm_5': 0.0443350225687027, 'pcm_6': 0.040980298072099686, 'pcm_7': 0.057324785739183426, 'pcm_8': 0.04515811800956726, 'pcm_9': 0.04300958290696144}, 'swa': {'swa_0': 0.029354939237236977, 'swa_1': 0.04605461657047272, 'swa_2': 0.041440751403570175, 'swa_3': 0.04568813741207123, 'swa_4': 0.046649906784296036, 'swa_5': 0.027431903406977654, 'swa_6': 0.03490268439054489, 'swa_7': 0.04835617169737816, 'swa_8': 0.042358871549367905, 'swa_9': 0.03243398293852806}, 'wol': {'wol_0': 0.03944554179906845, 'wol_1': 0.042459722608327866, 'wol_2': 0.04224097356200218, 'wol_3': 0.06467781215906143, 'wol_4': 0.04268333315849304, 'wol_5': 0.03456644341349602, 'wol_6': 0.13516350090503693, 'wol_7': 0.043787527829408646, 'wol_8': 0.05000479891896248, 'wol_9': 0.049300506711006165}, 'yor': {'yor_0': 0.12932325899600983, 'yor_1': 0.11329100281000137, 'yor_2': 0.039232250303030014, 'yor_3': 0.03691328316926956, 'yor_4': 0.13159872591495514, 'yor_5': 0.09230244904756546, 'yor_6': 0.03234400227665901, 'yor_7': 0.11348827928304672, 'yor_8': 0.041752684861421585, 'yor_9': 0.13226868212223053}, 'zh': {'zh_0': 0.09027750045061111, 'zh_1': 0.07724976539611816, 'zh_2': 0.11761436611413956, 'zh_3': 0.15245626866817474, 'zh_4': 0.08907271176576614, 'zh_5': 0.1312360018491745, 'zh_6': 0.044461533427238464, 'zh_7': 0.12876419723033905, 'zh_8': 0.12312927097082138, 'zh_9': 0.09494223445653915}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.05526076629757881, 'arabic--3340323169760881569-0': 0.04345495626330376, 'arabic-4544770624843559444-1': 0.0465317964553833, 'arabic-891952409566422966-0': 0.03963913023471832, 'arabic-3659291834714572527-0': 0.08035372942686081, 'arabic-9215226117011890166-0': 0.04777619615197182, 'arabic-6300896128538259469-0': 0.04113568365573883, 'arabic-2382507508588518905-0': 0.03752700239419937, 'arabic-1871632801094859741-1': 0.04129188880324364, 'arabic--7365809756232083807-0': 0.04122034087777138}, 'russian': {'russian-3457655197371763238-61': 0.048288311809301376, 'russian--1914807805318993335-49': 0.04192708060145378, 'russian--3307989180606173904-1': 0.036489635705947876, 'russian--2219512001175315660-0': 0.03131847828626633, 'russian--7076080992904718941-0': 0.04358179494738579, 'russian--6565862953558739013-1': 0.03740539774298668, 'russian--5098374684590548031-42': 0.039798442274332047, 'russian-3573734219967447693-1': 0.04440167173743248, 'russian--4521001374120505750-6': 0.04637714847922325, 'russian--1308382244018658424-9': 0.041536156088113785}, 'bengali': {'bengali--1199493965132146131-3': 0.058076292276382446, 'bengali-1807801556888134437-2': 0.06263093650341034, 'bengali-2113189855114052041-2': 0.04569096863269806, 'bengali--2527914488250041207-0': 0.08461757749319077, 'bengali--8260793280894408063-14': 0.053856924176216125, 'bengali-8313009204852557186-4': 0.07073304802179337, 'bengali--415964033364840061-0': 0.05291194096207619, 'bengali--4696865548928858824-5': 0.06168416514992714, 'bengali-6505224142472931712-1': 0.06284237653017044, 'bengali-599666913917674019-13': 0.10308787971735}, 'telugu': {'telugu--3977923017846260053-0': 0.03970320522785187, 'telugu-2254198842560317781-0': 0.03854895755648613, 'telugu-5435080895440121384-0': 0.031993065029382706, 'telugu--1182505954974481191-2': 0.031090324744582176, 'telugu-119276511844068401-0': 0.03689301759004593, 'telugu--4111208545071789922-0': 0.034631360322237015, 'telugu--5922002196428211484-132': 0.06285608559846878, 'telugu--1817004721681155192-3': 0.030981874093413353, 'telugu-1602214480303968359-1': 0.0376712940633297, 'telugu--6495674712575945374-0': 0.031195534393191338}, 'finnish': {'finnish-6987763079741579998-0': 0.044100385159254074, 'finnish--8516625414052383903-0': 0.03899848461151123, 'finnish-4168898766124519517-0': 0.11949322372674942, 'finnish-783166898848672321-4': 0.05859604850411415, 'finnish-2208556840820233322-0': 0.0456179678440094, 'finnish--1981034637152391615-58': 0.06621091812849045, 'finnish-8689148941295949475-9': 0.0670911893248558, 'finnish-6900867945323517614-2': 0.11875175684690475, 'finnish-8023130170017405987-1': 0.04327705129981041, 'finnish-5001457972111781248-0': 0.0681222677230835}, 'swahili': {'swahili-7146838206539641546-10': 0.05705980956554413, 'swahili-7655634199707176439-0': 0.05689285323023796, 'swahili--4427180714267750534-1': 0.047504980117082596, 'swahili-4141779435061573138-0': 0.04731551930308342, 'swahili--5424518593960879661-0': 0.03669099882245064, 'swahili-4281845253405461584-0': 0.05046236515045166, 'swahili-4899164839984299762-2': 0.044240932911634445, 'swahili-1288750786498500530-0': 0.05168827995657921, 'swahili--2671134792844015228-3': 0.03162181377410889, 'swahili-4873225622490039485-2': 0.04567946121096611}, 'korean': {'korean--2869472392602314906-0': 0.054945480078458786, 'korean-4375199563921600155-0': 0.033282455056905746, 'korean--1715118423211755607-13': 0.0517384372651577, 'korean--8028977936696142934-9': 0.04077772796154022, 'korean-2807245034690443837-5': 0.06526947021484375, 'korean-3862451817164408576-0': 0.048550769686698914, 'korean-148115504649351135-0': 0.04214959964156151, 'korean--2885837157239647036-2': 0.053604673594236374, 'korean--1743220297777040002-22': 0.07582537829875946, 'korean-3268522368206106332-0': 0.13217808306217194}, 'indonesian': {'indonesian-9141868818310916091-0': 0.057845499366521835, 'indonesian-4609394337632433932-1': 0.14800214767456055, 'indonesian-2763468883290577923-0': 0.056317105889320374, 'indonesian-5633590583948933406-0': 0.03917825222015381, 'indonesian--5961409780035435015-0': 0.05826231837272644, 'indonesian-6274547934693326697-0': 0.050541799515485764, 'indonesian--2516321763567853082-0': 0.046131134033203125, 'indonesian-2048796427556239759-4': 0.05229325592517853, 'indonesian-6246592469157278547-2': 0.050085049122571945, 'indonesian--3724318458930736973-1': 0.04782828316092491}, 'english': {'english-2852412434797041176-6': 0.12630696594715118, 'english--1463732605740571606-0': 0.08341451734304428, 'english-5441411281255470421-0': 0.0849091112613678, 'english-7294054492486093447-1': 0.09251699596643448, 'english-8820750127045023244-0': 0.059117451310157776, 'english--506693546683012611-2': 0.08025854080915451, 'english-745411798111651115-0': 0.09610691666603088, 'english-7740772185887912651-0': 0.08850428462028503, 'english-383873188776267137-19': 0.05754624679684639, 'english--8277537578703156284-0': 0.12061629444360733}}, 'glue': {'cola': {'cola_228': 0.04472827911376953, 'cola_51': 0.04545864835381508, 'cola_563': 0.1525292843580246, 'cola_501': 0.050488557666540146, 'cola_457': 0.04473384842276573, 'cola_285': 0.044784460216760635, 'cola_209': 0.0532398484647274, 'cola_178': 0.05868063494563103, 'cola_864': 0.044871747493743896, 'cola_65': 0.045119840651750565}, 'mnli': {'mnli_488': 0.0660848543047905, 'mnli_1535': 0.0736992284655571, 'mnli_3582': 0.06478311866521835, 'mnli_3811': 0.05158381164073944, 'mnli_8279': 0.04795502498745918, 'mnli_434': 0.07339516282081604, 'mnli_9195': 0.04800315573811531, 'mnli_3257': 0.06058257818222046, 'mnli_8928': 0.06244313344359398, 'mnli_6873': 0.0656016394495964}, 'mrpc': {'mrpc_451': 0.060176998376846313, 'mrpc_919': 0.06280205398797989, 'mrpc_1206': 0.055973950773477554, 'mrpc_569': 0.05918338894844055, 'mrpc_1657': 0.05823569372296333, 'mrpc_13': 0.0592961311340332, 'mrpc_1554': 0.06427391618490219, 'mrpc_1650': 0.12679646909236908, 'mrpc_326': 0.058025553822517395, 'mrpc_1429': 0.06674348562955856}, 'qnli': {'qnli_3462': 0.06859740614891052, 'qnli_2787': 0.0720188245177269, 'qnli_2276': 0.055395904928445816, 'qnli_1273': 0.06061893701553345, 'qnli_1763': 0.07564527541399002, 'qnli_2757': 0.04636378213763237, 'qnli_837': 0.05667082965373993, 'qnli_759': 0.09687986224889755, 'qnli_3112': 0.06960613280534744, 'qnli_792': 0.07655888050794601}, 'qqp': {'qqp_188208': 0.05799563601613045, 'qqp_180331': 0.049388229846954346, 'qqp_316526': 0.06351032108068466, 'qqp_138685': 0.08234397321939468, 'qqp_22780': 0.05324901267886162, 'qqp_382589': 0.05105046555399895, 'qqp_240870': 0.05240746960043907, 'qqp_281137': 0.060155633836984634, 'qqp_65444': 0.04227157309651375, 'qqp_198461': 0.05118562653660774}, 'rte': {'rte_322': 0.05450594052672386, 'rte_2261': 0.07062171399593353, 'rte_1200': 0.05201871693134308, 'rte_2574': 0.09001395106315613, 'rte_2533': 0.10614657402038574, 'rte_1481': 0.06506333500146866, 'rte_2364': 0.08304127305746078, 'rte_787': 0.06698235869407654, 'rte_2885': 0.10088763386011124, 'rte_284': 0.058864083141088486}, 'sst2': {'sst2_93': 0.047268226742744446, 'sst2_1354': 0.05831371620297432, 'sst2_466': 0.051042456179857254, 'sst2_1583': 0.056107450276613235, 'sst2_592': 0.05903162434697151, 'sst2_163': 0.06463373452425003, 'sst2_1751': 0.05291140452027321, 'sst2_476': 0.041666124016046524, 'sst2_1774': 0.0455336831510067, 'sst2_206': 0.0503426231443882}, 'stsb': {'stsb_778': 0.060769516974687576, 'stsb_569': 0.058370914310216904, 'stsb_928': 0.06466058641672134, 'stsb_1301': 0.05813033878803253, 'stsb_747': 0.059656377881765366, 'stsb_333': 0.06100885570049286, 'stsb_758': 0.07385209202766418, 'stsb_727': 0.06829077005386353, 'stsb_429': 0.040363576263189316, 'stsb_1372': 0.055325135588645935}, 'wnli': {'wnli_68': 0.07244477421045303, 'wnli_18': 0.07203933596611023, 'wnli_43': 0.07377267628908157, 'wnli_136': 0.07371004670858383, 'wnli_62': 0.06860477477312088, 'wnli_41': 0.07437161356210709, 'wnli_118': 0.04957696422934532, 'wnli_97': 0.07461699843406677, 'wnli_69': 0.0515928752720356, 'wnli_142': 0.0664733275771141}}}
03/25/2024 20:19:21 - INFO - __main__ - Saving data in SD_per_task_mask_0.6.json
03/25/2024 20:19:21 - INFO - __main__ - Saving data in var_per_task_mask_0.6.json
03/25/2024 20:19:21 - INFO - __main__ - 
UNCERTAINTY (SD)

03/25/2024 20:19:21 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.10708613693714142, 'conll_2003_en': 0.0888797864317894, 'hau': 0.047460734844207764, 'ibo': 0.042375348508358, 'kin': 0.04470924288034439, 'lug': 0.04306495934724808, 'luo': 0.04415898770093918, 'pcm': 0.045842062681913376, 'swa': 0.03946719691157341, 'wol': 0.05443301796913147, 'yor': 0.08625145256519318, 'zh': 0.1049203872680664}, 'tydiqa': {'arabic': 0.04741915315389633, 'russian': 0.04111241176724434, 'bengali': 0.06561321765184402, 'telugu': 0.037556469440460205, 'finnish': 0.06702592968940735, 'swahili': 0.046915702521800995, 'korean': 0.05983220785856247, 'indonesian': 0.06064848229289055, 'english': 0.08892973512411118}, 'glue': {'cola': 0.05846351385116577, 'mnli': 0.06141316890716553, 'mrpc': 0.06715076416730881, 'qnli': 0.06783558428287506, 'qqp': 0.0563557930290699, 'rte': 0.0748145580291748, 'sst2': 0.05268510431051254, 'stsb': 0.060042817145586014, 'wnli': 0.06772033870220184}}

###############################################################################
Hábrók Cluster
Job 7723365 for user s3919609
Finished at: Mon Mar 25 20:19:25 CET 2024

Job details:
============

Job ID              : 7723365
Name                : std_monte_carlo_mask_0.6
User                : s3919609
Partition           : regularmedium
Nodes               : node85
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-25T14:27:57
Start               : 2024-03-25T14:28:49
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 05:50:36
Used CPU time       : 05:46:17 (efficiency: 98.77%)
% User (Computation): 99.90%
% System (I/O)      :  0.10%
Mem reserved        : 20G
Max Mem (Node/step) : 2.78G (node85, per node)
Full Max Mem usage  : 2.78G (Until last completed step)
Total Disk Read     : 1.01G (Until last completed step)
Total Disk Write    : 2.27M (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
