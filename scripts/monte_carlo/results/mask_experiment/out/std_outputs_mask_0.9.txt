Running MONTE CARLO experiment: mask_ratio
Monte Carlo samples: 100
Training mode: True

######## Computing Loss for task: ner ########

######## Language: amh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: amh_0
mean loss: 0.8793594241142273
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: amh_1
mean loss: 0.9018903970718384
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: amh_2
mean loss: 0.8785967826843262
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: amh_3
mean loss: 0.8774377703666687
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: amh_4
mean loss: 0.8930203914642334
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: amh_5
mean loss: 0.8810036182403564
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: amh_6
mean loss: 0.8982369899749756
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: amh_7
mean loss: 0.8758130073547363
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: amh_8
mean loss: 0.877846896648407
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 122, ratio = 0.4766

ID text: amh_9
mean loss: 0.87725830078125

######## Language: conll_2003_en ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: conll_2003_en_0
mean loss: 0.8894994258880615
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: conll_2003_en_1
mean loss: 0.8260016441345215
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: conll_2003_en_2
mean loss: 0.7586872577667236
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: conll_2003_en_3
mean loss: 0.7394438982009888
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_4
mean loss: 0.7737412452697754
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: conll_2003_en_5
mean loss: 0.9235794544219971
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: conll_2003_en_6
mean loss: 0.9408612847328186
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: conll_2003_en_7
mean loss: 0.8785645961761475
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: conll_2003_en_8
mean loss: 0.9161434769630432
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: conll_2003_en_9
mean loss: 0.761034369468689

######## Language: hau ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: hau_0
mean loss: 0.7439703345298767
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: hau_1
mean loss: 0.7344486713409424
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: hau_2
mean loss: 0.9250243306159973
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: hau_3
mean loss: 0.7441655993461609
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: hau_4
mean loss: 0.7302984595298767
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 149, ratio = 0.5820

ID text: hau_5
mean loss: 0.7448700070381165
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: hau_6
mean loss: 0.7417593598365784
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: hau_7
mean loss: 0.7596662640571594
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: hau_8
mean loss: 0.7579392790794373
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: hau_9
mean loss: 0.742156445980072

######## Language: ibo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: ibo_0
mean loss: 0.7530716061592102
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: ibo_1
mean loss: 0.7675182819366455
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: ibo_2
mean loss: 0.7336894273757935
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: ibo_3
mean loss: 0.7752034068107605
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: ibo_4
mean loss: 0.7406339049339294
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: ibo_5
mean loss: 0.7646658420562744
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: ibo_6
mean loss: 0.7363393306732178
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: ibo_7
mean loss: 0.7711873650550842
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: ibo_8
mean loss: 0.7542934417724609
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: ibo_9
mean loss: 0.7477588057518005

######## Language: kin ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 114, ratio = 0.4453

ID text: kin_0
mean loss: 0.748538076877594
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: kin_1
mean loss: 0.7460987567901611
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: kin_2
mean loss: 0.704630970954895
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: kin_3
mean loss: 0.7176161408424377
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: kin_4
mean loss: 0.7529125213623047
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: kin_5
mean loss: 0.7112470865249634
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: kin_6
mean loss: 0.7636862397193909
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: kin_7
mean loss: 0.7648748755455017
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: kin_8
mean loss: 0.707100510597229
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: kin_9
mean loss: 0.7528032660484314

######## Language: lug ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: lug_0
mean loss: 0.7257353067398071
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: lug_1
mean loss: 0.7461037635803223
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: lug_2
mean loss: 0.7311437129974365
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: lug_3
mean loss: 0.7194368839263916
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: lug_4
mean loss: 0.7328311800956726
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: lug_5
mean loss: 0.731203019618988
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: lug_6
mean loss: 0.7259268760681152
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: lug_7
mean loss: 0.7169069647789001
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: lug_8
mean loss: 0.7184240818023682
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: lug_9
mean loss: 0.7297382354736328

######## Language: luo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: luo_0
mean loss: 0.7528887987136841
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: luo_1
mean loss: 0.7593119740486145
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: luo_2
mean loss: 0.7378328442573547
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: luo_3
mean loss: 0.7400491833686829
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: luo_4
mean loss: 0.711986780166626
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: luo_5
mean loss: 0.7528687119483948
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805

ID text: luo_6
mean loss: 0.7551751136779785
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: luo_7
mean loss: 0.7860586047172546
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: luo_8
mean loss: 0.749138355255127
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805

ID text: luo_9
mean loss: 0.8329060077667236

######## Language: pcm ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: pcm_0
mean loss: 0.7906331419944763
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: pcm_1
mean loss: 0.8063176870346069
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: pcm_2
mean loss: 0.7831227779388428
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: pcm_3
mean loss: 0.7530146241188049
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: pcm_4
mean loss: 0.7577317953109741
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: pcm_5
mean loss: 0.7789863348007202
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: pcm_6
mean loss: 0.7543049454689026
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 119, ratio = 0.4648

ID text: pcm_7
mean loss: 0.7405098080635071
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: pcm_8
mean loss: 0.7404974102973938
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: pcm_9
mean loss: 0.7529720067977905

######## Language: swa ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703

ID text: swa_0
mean loss: 0.7383697628974915
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: swa_1
mean loss: 0.7441577315330505
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: swa_2
mean loss: 0.7521670460700989
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: swa_3
mean loss: 0.7409613728523254
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: swa_4
mean loss: 0.7435078620910645
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: swa_5
mean loss: 0.7396205067634583
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: swa_6
mean loss: 0.7524275183677673
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: swa_7
mean loss: 0.7033936977386475
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: swa_8
mean loss: 0.6965228319168091
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: swa_9
mean loss: 0.7350689172744751

######## Language: wol ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: wol_0
mean loss: 0.7667319774627686
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: wol_1
mean loss: 0.7731859683990479
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: wol_2
mean loss: 0.7849701046943665
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: wol_3
mean loss: 0.9176642894744873
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: wol_4
mean loss: 0.7790363430976868
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: wol_5
mean loss: 0.7710413336753845
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: wol_6
mean loss: 0.9490516781806946
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: wol_7
mean loss: 0.7607372403144836
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: wol_8
mean loss: 0.7790998220443726
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: wol_9
mean loss: 0.7424696087837219

######## Language: yor ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: yor_0
mean loss: 0.9073052406311035
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: yor_1
mean loss: 0.9046391248703003
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: yor_2
mean loss: 0.83421790599823
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: yor_3
mean loss: 0.7951306700706482
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: yor_4
mean loss: 0.9275814890861511
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: yor_5
mean loss: 0.9116827249526978
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703

ID text: yor_6
mean loss: 0.8079593777656555
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: yor_7
mean loss: 0.9093025922775269
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: yor_8
mean loss: 0.8016131520271301
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: yor_9
mean loss: 0.9245352149009705

######## Language: zh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: zh_0
mean loss: 0.9690409302711487
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: zh_1
mean loss: 0.9568181037902832
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: zh_2
mean loss: 0.9551087021827698
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: zh_3
mean loss: 0.988965630531311
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: zh_4
mean loss: 0.963409423828125
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: zh_5
mean loss: 0.9530784487724304
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 151, ratio = 0.5898

ID text: zh_6
mean loss: 0.9756222367286682
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: zh_7
mean loss: 0.964392900466919
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: zh_8
mean loss: 0.9589859843254089
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: zh_9
mean loss: 0.9708642363548279

######## Computing Loss for task: tydiqa ########

######## Language: arabic ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: arabic-4449832350126320768-0
mean loss: 0.9689227938652039
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: arabic--3340323169760881569-0
mean loss: 0.9359067678451538
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: arabic-4544770624843559444-1
mean loss: 0.9588441252708435
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: arabic-891952409566422966-0
mean loss: 0.9647526741027832
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: arabic-3659291834714572527-0
mean loss: 0.9562227725982666
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: arabic-9215226117011890166-0
mean loss: 0.9531437754631042
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625

ID text: arabic-6300896128538259469-0
mean loss: 0.962883710861206
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: arabic-2382507508588518905-0
mean loss: 0.9705606698989868
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: arabic-1871632801094859741-1
mean loss: 0.9670061469078064
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: arabic--7365809756232083807-0
mean loss: 0.950706422328949

######## Language: russian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: russian-3457655197371763238-61
mean loss: 0.7137166857719421
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: russian--1914807805318993335-49
mean loss: 0.7307543754577637
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: russian--3307989180606173904-1
mean loss: 0.7191504836082458
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: russian--2219512001175315660-0
mean loss: 0.7176730632781982
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: russian--7076080992904718941-0
mean loss: 0.7376124858856201
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: russian--6565862953558739013-1
mean loss: 0.7212834358215332
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: russian--5098374684590548031-42
mean loss: 0.734578013420105
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: russian-3573734219967447693-1
mean loss: 0.704843282699585
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: russian--4521001374120505750-6
mean loss: 0.7292592525482178
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: russian--1308382244018658424-9
mean loss: 0.7240402698516846

######## Language: bengali ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: bengali--1199493965132146131-3
mean loss: 0.7871202230453491
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: bengali-1807801556888134437-2
mean loss: 0.7794038653373718
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: bengali-2113189855114052041-2
mean loss: 0.7781985998153687
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 109, ratio = 0.4258

ID text: bengali--2527914488250041207-0
mean loss: 0.7914311289787292
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: bengali--8260793280894408063-14
mean loss: 0.7886230945587158
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: bengali-8313009204852557186-4
mean loss: 0.7858867049217224
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: bengali--415964033364840061-0
mean loss: 0.7935487627983093
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: bengali--4696865548928858824-5
mean loss: 0.7843248248100281
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: bengali-6505224142472931712-1
mean loss: 0.7781179547309875
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: bengali-599666913917674019-13
mean loss: 0.7622030377388

######## Language: telugu ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 118, ratio = 0.4609

ID text: telugu--3977923017846260053-0
mean loss: 0.8136141300201416
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: telugu-2254198842560317781-0
mean loss: 0.8128425478935242
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: telugu-5435080895440121384-0
mean loss: 0.8109975457191467
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: telugu--1182505954974481191-2
mean loss: 0.8114066123962402
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: telugu-119276511844068401-0
mean loss: 0.8112901449203491
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: telugu--4111208545071789922-0
mean loss: 0.8140637874603271
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: telugu--5922002196428211484-132
mean loss: 0.8261633515357971
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: telugu--1817004721681155192-3
mean loss: 0.7896341681480408
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: telugu-1602214480303968359-1
mean loss: 0.8125122785568237
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: telugu--6495674712575945374-0
mean loss: 0.8088552951812744

######## Language: finnish ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: finnish-6987763079741579998-0
mean loss: 0.7246150374412537
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: finnish--8516625414052383903-0
mean loss: 0.7168731093406677
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: finnish-4168898766124519517-0
mean loss: 0.8591185808181763
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: finnish-783166898848672321-4
mean loss: 0.7638876438140869
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: finnish-2208556840820233322-0
mean loss: 0.7359965443611145
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805

ID text: finnish--1981034637152391615-58
mean loss: 0.7265889644622803
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: finnish-8689148941295949475-9
mean loss: 0.7190673351287842
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: finnish-6900867945323517614-2
mean loss: 0.8395805358886719
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: finnish-8023130170017405987-1
mean loss: 0.7023026347160339
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: finnish-5001457972111781248-0
mean loss: 0.7401365637779236

######## Language: swahili ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: swahili-7146838206539641546-10
mean loss: 0.7215832471847534
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: swahili-7655634199707176439-0
mean loss: 0.7371153235435486
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: swahili--4427180714267750534-1
mean loss: 0.741483211517334
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: swahili-4141779435061573138-0
mean loss: 0.7308151721954346
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: swahili--5424518593960879661-0
mean loss: 0.7330353260040283
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: swahili-4281845253405461584-0
mean loss: 0.7365001440048218
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: swahili-4899164839984299762-2
mean loss: 0.7197821140289307
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: swahili-1288750786498500530-0
mean loss: 0.7217147350311279
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703

ID text: swahili--2671134792844015228-3
mean loss: 0.7234259247779846
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: swahili-4873225622490039485-2
mean loss: 0.7344183921813965

######## Language: korean ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: korean--2869472392602314906-0
mean loss: 0.9227312207221985
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: korean-4375199563921600155-0
mean loss: 0.9219012260437012
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 120, ratio = 0.4688

ID text: korean--1715118423211755607-13
mean loss: 0.9249449968338013
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: korean--8028977936696142934-9
mean loss: 0.9236979484558105
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: korean-2807245034690443837-5
mean loss: 0.9321935772895813
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: korean-3862451817164408576-0
mean loss: 0.9116256833076477
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: korean-148115504649351135-0
mean loss: 0.928751528263092
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: korean--2885837157239647036-2
mean loss: 0.9222484827041626
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: korean--1743220297777040002-22
mean loss: 0.9085440635681152
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: korean-3268522368206106332-0
mean loss: 0.9285671710968018

######## Language: indonesian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: indonesian-9141868818310916091-0
mean loss: 0.7534514665603638
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: indonesian-4609394337632433932-1
mean loss: 0.8386924266815186
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: indonesian-2763468883290577923-0
mean loss: 0.7222772836685181
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: indonesian-5633590583948933406-0
mean loss: 0.7266970872879028
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: indonesian--5961409780035435015-0
mean loss: 0.7322422862052917
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: indonesian-6274547934693326697-0
mean loss: 0.7395730018615723
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: indonesian--2516321763567853082-0
mean loss: 0.7171154618263245
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: indonesian-2048796427556239759-4
mean loss: 0.760789155960083
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: indonesian-6246592469157278547-2
mean loss: 0.7376406192779541
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: indonesian--3724318458930736973-1
mean loss: 0.7190824151039124

######## Language: english ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: english-2852412434797041176-6
mean loss: 0.9078668355941772
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: english--1463732605740571606-0
mean loss: 0.7322202920913696
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: english-5441411281255470421-0
mean loss: 0.7205734848976135
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: english-7294054492486093447-1
mean loss: 0.7161707282066345
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: english-8820750127045023244-0
mean loss: 0.7213862538337708
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: english--506693546683012611-2
mean loss: 0.7548037767410278
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: english-745411798111651115-0
mean loss: 0.7261856198310852
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: english-7740772185887912651-0
mean loss: 0.7195908427238464
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625

ID text: english-383873188776267137-19
mean loss: 0.7126619815826416
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: english--8277537578703156284-0
mean loss: 0.7271750569343567

######## Computing Loss for task: glue ########

######## Language: cola ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: cola_228
mean loss: 0.7291943430900574
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: cola_51
mean loss: 0.7217555046081543
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 149, ratio = 0.5820

ID text: cola_563
mean loss: 0.8738641142845154
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: cola_501
mean loss: 0.7208516001701355
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: cola_457
mean loss: 0.7093617916107178
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 148, ratio = 0.5781

ID text: cola_285
mean loss: 0.7318832874298096
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: cola_209
mean loss: 0.6919316053390503
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: cola_178
mean loss: 0.732206404209137
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: cola_864
mean loss: 0.6676780581474304
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: cola_65
mean loss: 0.6731225848197937

######## Language: mnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: mnli_488
mean loss: 0.7043067812919617
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883

ID text: mnli_1535
mean loss: 0.692870020866394
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: mnli_3582
mean loss: 0.6874683499336243
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: mnli_3811
mean loss: 0.7473891973495483
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547

ID text: mnli_8279
mean loss: 0.7236630320549011
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: mnli_434
mean loss: 0.7024334669113159
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: mnli_9195
mean loss: 0.7205589413642883
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: mnli_3257
mean loss: 0.7171734571456909
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: mnli_8928
mean loss: 0.7027180194854736
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: mnli_6873
mean loss: 0.7225671410560608

######## Language: mrpc ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430

ID text: mrpc_451
mean loss: 0.7203533053398132
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: mrpc_919
mean loss: 0.704343855381012
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: mrpc_1206
mean loss: 0.7296887040138245
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: mrpc_569
mean loss: 0.7638700604438782
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: mrpc_1657
mean loss: 0.7353526949882507
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: mrpc_13
mean loss: 0.7436246275901794
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: mrpc_1554
mean loss: 0.7328855395317078
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: mrpc_1650
mean loss: 0.8413179516792297
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: mrpc_326
mean loss: 0.727267324924469
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: mrpc_1429
mean loss: 0.7334426641464233

######## Language: qnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: qnli_3462
mean loss: 0.7143438458442688
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: qnli_2787
mean loss: 0.6943607926368713
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: qnli_2276
mean loss: 0.7045825719833374
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: qnli_1273
mean loss: 0.7200336456298828
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: qnli_1763
mean loss: 0.7021413445472717
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 150, ratio = 0.5859

ID text: qnli_2757
mean loss: 0.7321058511734009
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: qnli_837
mean loss: 0.739094614982605
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 121, ratio = 0.4727

ID text: qnli_759
mean loss: 0.7203147411346436
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: qnli_3112
mean loss: 0.6985859870910645
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 120, ratio = 0.4688

ID text: qnli_792
mean loss: 0.7108456492424011

######## Language: qqp ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: qqp_188208
mean loss: 0.7450605034828186
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625

ID text: qqp_180331
mean loss: 0.7090632915496826
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: qqp_316526
mean loss: 0.7239015698432922
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: qqp_138685
mean loss: 0.7177469730377197
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: qqp_22780
mean loss: 0.7788110375404358
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: qqp_382589
mean loss: 0.7676650285720825
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: qqp_240870
mean loss: 0.7180513143539429
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: qqp_281137
mean loss: 0.7495365142822266
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: qqp_65444
mean loss: 0.7266024947166443
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: qqp_198461
mean loss: 0.7309216260910034

######## Language: rte ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: rte_322
mean loss: 0.7199518084526062
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: rte_2261
mean loss: 0.7395626306533813
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: rte_1200
mean loss: 0.7192701101303101
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: rte_2574
mean loss: 0.7248924970626831
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805

ID text: rte_2533
mean loss: 0.7288478016853333
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352

ID text: rte_1481
mean loss: 0.7317177653312683
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: rte_2364
mean loss: 0.7166761755943298
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: rte_787
mean loss: 0.7142801880836487
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922

ID text: rte_2885
mean loss: 0.727803647518158
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: rte_284
mean loss: 0.7013307213783264

######## Language: sst2 ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: sst2_93
mean loss: 0.7150593400001526
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844

ID text: sst2_1354
mean loss: 0.7142699360847473
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: sst2_466
mean loss: 0.6480652689933777
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: sst2_1583
mean loss: 0.7114804983139038
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: sst2_592
mean loss: 0.7165042161941528
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: sst2_163
mean loss: 0.9140859842300415
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961

ID text: sst2_1751
mean loss: 0.7649331092834473
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586

ID text: sst2_476
mean loss: 0.7159835696220398
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664

ID text: sst2_1774
mean loss: 0.7153916954994202
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117

ID text: sst2_206
mean loss: 0.7128050327301025

######## Language: stsb ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: stsb_778
mean loss: 0.7349959015846252
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508

ID text: stsb_569
mean loss: 0.7172386050224304
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312

ID text: stsb_928
mean loss: 0.7211148142814636
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469

ID text: stsb_1301
mean loss: 0.7225839495658875
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: stsb_747
mean loss: 0.6971566677093506
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078

ID text: stsb_333
mean loss: 0.6920854449272156
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195

ID text: stsb_758
mean loss: 0.7138668298721313
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273

ID text: stsb_727
mean loss: 0.6829545497894287
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 148, ratio = 0.5781

ID text: stsb_429
mean loss: 0.7349807024002075
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: stsb_1372
mean loss: 0.697815477848053

######## Language: wnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234

ID text: wnli_68
mean loss: 0.7261741757392883
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: wnli_18
mean loss: 0.7063784599304199
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039

ID text: wnli_43
mean loss: 0.7124612331390381
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: wnli_136
mean loss: 0.713820219039917
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: wnli_62
mean loss: 0.7198262214660645
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: wnli_41
mean loss: 0.7140371203422546
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391

ID text: wnli_118
mean loss: 0.7252750992774963
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000

ID text: wnli_97
mean loss: 0.7214977145195007
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: wnli_69
mean loss: 0.7265392541885376
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156

ID text: wnli_142
mean loss: 0.7341600060462952
Losses per task: {'ner': {'amh': {'amh_0': 0.8793594241142273, 'amh_1': 0.9018903970718384, 'amh_2': 0.8785967826843262, 'amh_3': 0.8774377703666687, 'amh_4': 0.8930203914642334, 'amh_5': 0.8810036182403564, 'amh_6': 0.8982369899749756, 'amh_7': 0.8758130073547363, 'amh_8': 0.877846896648407, 'amh_9': 0.87725830078125}, 'conll_2003_en': {'conll_2003_en_0': 0.8894994258880615, 'conll_2003_en_1': 0.8260016441345215, 'conll_2003_en_2': 0.7586872577667236, 'conll_2003_en_3': 0.7394438982009888, 'conll_2003_en_4': 0.7737412452697754, 'conll_2003_en_5': 0.9235794544219971, 'conll_2003_en_6': 0.9408612847328186, 'conll_2003_en_7': 0.8785645961761475, 'conll_2003_en_8': 0.9161434769630432, 'conll_2003_en_9': 0.761034369468689}, 'hau': {'hau_0': 0.7439703345298767, 'hau_1': 0.7344486713409424, 'hau_2': 0.9250243306159973, 'hau_3': 0.7441655993461609, 'hau_4': 0.7302984595298767, 'hau_5': 0.7448700070381165, 'hau_6': 0.7417593598365784, 'hau_7': 0.7596662640571594, 'hau_8': 0.7579392790794373, 'hau_9': 0.742156445980072}, 'ibo': {'ibo_0': 0.7530716061592102, 'ibo_1': 0.7675182819366455, 'ibo_2': 0.7336894273757935, 'ibo_3': 0.7752034068107605, 'ibo_4': 0.7406339049339294, 'ibo_5': 0.7646658420562744, 'ibo_6': 0.7363393306732178, 'ibo_7': 0.7711873650550842, 'ibo_8': 0.7542934417724609, 'ibo_9': 0.7477588057518005}, 'kin': {'kin_0': 0.748538076877594, 'kin_1': 0.7460987567901611, 'kin_2': 0.704630970954895, 'kin_3': 0.7176161408424377, 'kin_4': 0.7529125213623047, 'kin_5': 0.7112470865249634, 'kin_6': 0.7636862397193909, 'kin_7': 0.7648748755455017, 'kin_8': 0.707100510597229, 'kin_9': 0.7528032660484314}, 'lug': {'lug_0': 0.7257353067398071, 'lug_1': 0.7461037635803223, 'lug_2': 0.7311437129974365, 'lug_3': 0.7194368839263916, 'lug_4': 0.7328311800956726, 'lug_5': 0.731203019618988, 'lug_6': 0.7259268760681152, 'lug_7': 0.7169069647789001, 'lug_8': 0.7184240818023682, 'lug_9': 0.7297382354736328}, 'luo': {'luo_0': 0.7528887987136841, 'luo_1': 0.7593119740486145, 'luo_2': 0.7378328442573547, 'luo_3': 0.7400491833686829, 'luo_4': 0.711986780166626, 'luo_5': 0.7528687119483948, 'luo_6': 0.7551751136779785, 'luo_7': 0.7860586047172546, 'luo_8': 0.749138355255127, 'luo_9': 0.8329060077667236}, 'pcm': {'pcm_0': 0.7906331419944763, 'pcm_1': 0.8063176870346069, 'pcm_2': 0.7831227779388428, 'pcm_3': 0.7530146241188049, 'pcm_4': 0.7577317953109741, 'pcm_5': 0.7789863348007202, 'pcm_6': 0.7543049454689026, 'pcm_7': 0.7405098080635071, 'pcm_8': 0.7404974102973938, 'pcm_9': 0.7529720067977905}, 'swa': {'swa_0': 0.7383697628974915, 'swa_1': 0.7441577315330505, 'swa_2': 0.7521670460700989, 'swa_3': 0.7409613728523254, 'swa_4': 0.7435078620910645, 'swa_5': 0.7396205067634583, 'swa_6': 0.7524275183677673, 'swa_7': 0.7033936977386475, 'swa_8': 0.6965228319168091, 'swa_9': 0.7350689172744751}, 'wol': {'wol_0': 0.7667319774627686, 'wol_1': 0.7731859683990479, 'wol_2': 0.7849701046943665, 'wol_3': 0.9176642894744873, 'wol_4': 0.7790363430976868, 'wol_5': 0.7710413336753845, 'wol_6': 0.9490516781806946, 'wol_7': 0.7607372403144836, 'wol_8': 0.7790998220443726, 'wol_9': 0.7424696087837219}, 'yor': {'yor_0': 0.9073052406311035, 'yor_1': 0.9046391248703003, 'yor_2': 0.83421790599823, 'yor_3': 0.7951306700706482, 'yor_4': 0.9275814890861511, 'yor_5': 0.9116827249526978, 'yor_6': 0.8079593777656555, 'yor_7': 0.9093025922775269, 'yor_8': 0.8016131520271301, 'yor_9': 0.9245352149009705}, 'zh': {'zh_0': 0.9690409302711487, 'zh_1': 0.9568181037902832, 'zh_2': 0.9551087021827698, 'zh_3': 0.988965630531311, 'zh_4': 0.963409423828125, 'zh_5': 0.9530784487724304, 'zh_6': 0.9756222367286682, 'zh_7': 0.964392900466919, 'zh_8': 0.9589859843254089, 'zh_9': 0.9708642363548279}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.9689227938652039, 'arabic--3340323169760881569-0': 0.9359067678451538, 'arabic-4544770624843559444-1': 0.9588441252708435, 'arabic-891952409566422966-0': 0.9647526741027832, 'arabic-3659291834714572527-0': 0.9562227725982666, 'arabic-9215226117011890166-0': 0.9531437754631042, 'arabic-6300896128538259469-0': 0.962883710861206, 'arabic-2382507508588518905-0': 0.9705606698989868, 'arabic-1871632801094859741-1': 0.9670061469078064, 'arabic--7365809756232083807-0': 0.950706422328949}, 'russian': {'russian-3457655197371763238-61': 0.7137166857719421, 'russian--1914807805318993335-49': 0.7307543754577637, 'russian--3307989180606173904-1': 0.7191504836082458, 'russian--2219512001175315660-0': 0.7176730632781982, 'russian--7076080992904718941-0': 0.7376124858856201, 'russian--6565862953558739013-1': 0.7212834358215332, 'russian--5098374684590548031-42': 0.734578013420105, 'russian-3573734219967447693-1': 0.704843282699585, 'russian--4521001374120505750-6': 0.7292592525482178, 'russian--1308382244018658424-9': 0.7240402698516846}, 'bengali': {'bengali--1199493965132146131-3': 0.7871202230453491, 'bengali-1807801556888134437-2': 0.7794038653373718, 'bengali-2113189855114052041-2': 0.7781985998153687, 'bengali--2527914488250041207-0': 0.7914311289787292, 'bengali--8260793280894408063-14': 0.7886230945587158, 'bengali-8313009204852557186-4': 0.7858867049217224, 'bengali--415964033364840061-0': 0.7935487627983093, 'bengali--4696865548928858824-5': 0.7843248248100281, 'bengali-6505224142472931712-1': 0.7781179547309875, 'bengali-599666913917674019-13': 0.7622030377388}, 'telugu': {'telugu--3977923017846260053-0': 0.8136141300201416, 'telugu-2254198842560317781-0': 0.8128425478935242, 'telugu-5435080895440121384-0': 0.8109975457191467, 'telugu--1182505954974481191-2': 0.8114066123962402, 'telugu-119276511844068401-0': 0.8112901449203491, 'telugu--4111208545071789922-0': 0.8140637874603271, 'telugu--5922002196428211484-132': 0.8261633515357971, 'telugu--1817004721681155192-3': 0.7896341681480408, 'telugu-1602214480303968359-1': 0.8125122785568237, 'telugu--6495674712575945374-0': 0.8088552951812744}, 'finnish': {'finnish-6987763079741579998-0': 0.7246150374412537, 'finnish--8516625414052383903-0': 0.7168731093406677, 'finnish-4168898766124519517-0': 0.8591185808181763, 'finnish-783166898848672321-4': 0.7638876438140869, 'finnish-2208556840820233322-0': 0.7359965443611145, 'finnish--1981034637152391615-58': 0.7265889644622803, 'finnish-8689148941295949475-9': 0.7190673351287842, 'finnish-6900867945323517614-2': 0.8395805358886719, 'finnish-8023130170017405987-1': 0.7023026347160339, 'finnish-5001457972111781248-0': 0.7401365637779236}, 'swahili': {'swahili-7146838206539641546-10': 0.7215832471847534, 'swahili-7655634199707176439-0': 0.7371153235435486, 'swahili--4427180714267750534-1': 0.741483211517334, 'swahili-4141779435061573138-0': 0.7308151721954346, 'swahili--5424518593960879661-0': 0.7330353260040283, 'swahili-4281845253405461584-0': 0.7365001440048218, 'swahili-4899164839984299762-2': 0.7197821140289307, 'swahili-1288750786498500530-0': 0.7217147350311279, 'swahili--2671134792844015228-3': 0.7234259247779846, 'swahili-4873225622490039485-2': 0.7344183921813965}, 'korean': {'korean--2869472392602314906-0': 0.9227312207221985, 'korean-4375199563921600155-0': 0.9219012260437012, 'korean--1715118423211755607-13': 0.9249449968338013, 'korean--8028977936696142934-9': 0.9236979484558105, 'korean-2807245034690443837-5': 0.9321935772895813, 'korean-3862451817164408576-0': 0.9116256833076477, 'korean-148115504649351135-0': 0.928751528263092, 'korean--2885837157239647036-2': 0.9222484827041626, 'korean--1743220297777040002-22': 0.9085440635681152, 'korean-3268522368206106332-0': 0.9285671710968018}, 'indonesian': {'indonesian-9141868818310916091-0': 0.7534514665603638, 'indonesian-4609394337632433932-1': 0.8386924266815186, 'indonesian-2763468883290577923-0': 0.7222772836685181, 'indonesian-5633590583948933406-0': 0.7266970872879028, 'indonesian--5961409780035435015-0': 0.7322422862052917, 'indonesian-6274547934693326697-0': 0.7395730018615723, 'indonesian--2516321763567853082-0': 0.7171154618263245, 'indonesian-2048796427556239759-4': 0.760789155960083, 'indonesian-6246592469157278547-2': 0.7376406192779541, 'indonesian--3724318458930736973-1': 0.7190824151039124}, 'english': {'english-2852412434797041176-6': 0.9078668355941772, 'english--1463732605740571606-0': 0.7322202920913696, 'english-5441411281255470421-0': 0.7205734848976135, 'english-7294054492486093447-1': 0.7161707282066345, 'english-8820750127045023244-0': 0.7213862538337708, 'english--506693546683012611-2': 0.7548037767410278, 'english-745411798111651115-0': 0.7261856198310852, 'english-7740772185887912651-0': 0.7195908427238464, 'english-383873188776267137-19': 0.7126619815826416, 'english--8277537578703156284-0': 0.7271750569343567}}, 'glue': {'cola': {'cola_228': 0.7291943430900574, 'cola_51': 0.7217555046081543, 'cola_563': 0.8738641142845154, 'cola_501': 0.7208516001701355, 'cola_457': 0.7093617916107178, 'cola_285': 0.7318832874298096, 'cola_209': 0.6919316053390503, 'cola_178': 0.732206404209137, 'cola_864': 0.6676780581474304, 'cola_65': 0.6731225848197937}, 'mnli': {'mnli_488': 0.7043067812919617, 'mnli_1535': 0.692870020866394, 'mnli_3582': 0.6874683499336243, 'mnli_3811': 0.7473891973495483, 'mnli_8279': 0.7236630320549011, 'mnli_434': 0.7024334669113159, 'mnli_9195': 0.7205589413642883, 'mnli_3257': 0.7171734571456909, 'mnli_8928': 0.7027180194854736, 'mnli_6873': 0.7225671410560608}, 'mrpc': {'mrpc_451': 0.7203533053398132, 'mrpc_919': 0.704343855381012, 'mrpc_1206': 0.7296887040138245, 'mrpc_569': 0.7638700604438782, 'mrpc_1657': 0.7353526949882507, 'mrpc_13': 0.7436246275901794, 'mrpc_1554': 0.7328855395317078, 'mrpc_1650': 0.8413179516792297, 'mrpc_326': 0.727267324924469, 'mrpc_1429': 0.7334426641464233}, 'qnli': {'qnli_3462': 0.7143438458442688, 'qnli_2787': 0.6943607926368713, 'qnli_2276': 0.7045825719833374, 'qnli_1273': 0.7200336456298828, 'qnli_1763': 0.7021413445472717, 'qnli_2757': 0.7321058511734009, 'qnli_837': 0.739094614982605, 'qnli_759': 0.7203147411346436, 'qnli_3112': 0.6985859870910645, 'qnli_792': 0.7108456492424011}, 'qqp': {'qqp_188208': 0.7450605034828186, 'qqp_180331': 0.7090632915496826, 'qqp_316526': 0.7239015698432922, 'qqp_138685': 0.7177469730377197, 'qqp_22780': 0.7788110375404358, 'qqp_382589': 0.7676650285720825, 'qqp_240870': 0.7180513143539429, 'qqp_281137': 0.7495365142822266, 'qqp_65444': 0.7266024947166443, 'qqp_198461': 0.7309216260910034}, 'rte': {'rte_322': 0.7199518084526062, 'rte_2261': 0.7395626306533813, 'rte_1200': 0.7192701101303101, 'rte_2574': 0.7248924970626831, 'rte_2533': 0.7288478016853333, 'rte_1481': 0.7317177653312683, 'rte_2364': 0.7166761755943298, 'rte_787': 0.7142801880836487, 'rte_2885': 0.727803647518158, 'rte_284': 0.7013307213783264}, 'sst2': {'sst2_93': 0.7150593400001526, 'sst2_1354': 0.7142699360847473, 'sst2_466': 0.6480652689933777, 'sst2_1583': 0.7114804983139038, 'sst2_592': 0.7165042161941528, 'sst2_163': 0.9140859842300415, 'sst2_1751': 0.7649331092834473, 'sst2_476': 0.7159835696220398, 'sst2_1774': 0.7153916954994202, 'sst2_206': 0.7128050327301025}, 'stsb': {'stsb_778': 0.7349959015846252, 'stsb_569': 0.7172386050224304, 'stsb_928': 0.7211148142814636, 'stsb_1301': 0.7225839495658875, 'stsb_747': 0.6971566677093506, 'stsb_333': 0.6920854449272156, 'stsb_758': 0.7138668298721313, 'stsb_727': 0.6829545497894287, 'stsb_429': 0.7349807024002075, 'stsb_1372': 0.697815477848053}, 'wnli': {'wnli_68': 0.7261741757392883, 'wnli_18': 0.7063784599304199, 'wnli_43': 0.7124612331390381, 'wnli_136': 0.713820219039917, 'wnli_62': 0.7198262214660645, 'wnli_41': 0.7140371203422546, 'wnli_118': 0.7252750992774963, 'wnli_97': 0.7214977145195007, 'wnli_69': 0.7265392541885376, 'wnli_142': 0.7341600060462952}}}
Saving data in loss_per_task_mask_0.9.json

LOSS

Mean loss per task: {'ner': {'amh': 0.8840463757514954, 'conll_2003_en': 0.8407556414604187, 'hau': 0.7624298930168152, 'ibo': 0.7544361352920532, 'kin': 0.7369508147239685, 'lug': 0.727744996547699, 'luo': 0.7578216195106506, 'pcm': 0.7658091187477112, 'swa': 0.7346197366714478, 'wol': 0.8023988604545593, 'yor': 0.8723967671394348, 'zh': 0.9656286239624023}, 'tydiqa': {'arabic': 0.9588950276374817, 'russian': 0.7232910990715027, 'bengali': 0.782885730266571, 'telugu': 0.8111379742622375, 'finnish': 0.7528166770935059, 'swahili': 0.7299874424934387, 'korean': 0.922520637512207, 'indonesian': 0.7447561025619507, 'english': 0.7438634634017944}, 'glue': {'cola': 0.7251849174499512, 'mnli': 0.7121148705482483, 'mrpc': 0.7432146668434143, 'qnli': 0.7136408686637878, 'qqp': 0.736735999584198, 'rte': 0.7224333882331848, 'sst2': 0.7328578233718872, 'stsb': 0.7114793062210083, 'wnli': 0.7200168967247009}}
Lowest losses:
ID: sst2_466, Loss: 0.6480652689933777
ID: cola_864, Loss: 0.6676780581474304
ID: cola_65, Loss: 0.6731225848197937
ID: stsb_727, Loss: 0.6829545497894287
ID: mnli_3582, Loss: 0.6874683499336243
Highest losses:
ID: zh_0, Loss: 0.9690409302711487
ID: arabic-2382507508588518905-0, Loss: 0.9705606698989868
ID: zh_9, Loss: 0.9708642363548279
ID: zh_6, Loss: 0.9756222367286682
ID: zh_3, Loss: 0.988965630531311
Monte Carlo samples: 100
Training mode: True

######## Computing SDs for task: ner ########


######## Language: amh ######## 

Running MONTE CARLO experiment: mask_ratio
Loading data from loss_per_task_mask_0.9.json

LOSS

Mean loss per task: {'ner': {'amh': 0.8840463757514954, 'conll_2003_en': 0.8407556414604187, 'hau': 0.7624298930168152, 'ibo': 0.7544361352920532, 'kin': 0.7369508147239685, 'lug': 0.727744996547699, 'luo': 0.7578216195106506, 'pcm': 0.7658091187477112, 'swa': 0.7346197366714478, 'wol': 0.8023988604545593, 'yor': 0.8723967671394348, 'zh': 0.9656286239624023}, 'tydiqa': {'arabic': 0.9588950276374817, 'russian': 0.7232910990715027, 'bengali': 0.782885730266571, 'telugu': 0.8111379742622375, 'finnish': 0.7528166770935059, 'swahili': 0.7299874424934387, 'korean': 0.922520637512207, 'indonesian': 0.7447561025619507, 'english': 0.7438634634017944}, 'glue': {'cola': 0.7251849174499512, 'mnli': 0.7121148705482483, 'mrpc': 0.7432146668434143, 'qnli': 0.7136408686637878, 'qqp': 0.736735999584198, 'rte': 0.7224333882331848, 'sst2': 0.7328578233718872, 'stsb': 0.7114793062210083, 'wnli': 0.7200168967247009}}
Lowest losses:
ID: sst2_466, Loss: 0.6480652689933777
ID: cola_864, Loss: 0.6676780581474304
ID: cola_65, Loss: 0.6731225848197937
ID: stsb_727, Loss: 0.6829545497894287
ID: mnli_3582, Loss: 0.6874683499336243
Highest losses:
ID: zh_0, Loss: 0.9690409302711487
ID: arabic-2382507508588518905-0, Loss: 0.9705606698989868
ID: zh_9, Loss: 0.9708642363548279
ID: zh_6, Loss: 0.9756222367286682
ID: zh_3, Loss: 0.988965630531311
Monte Carlo samples: 100
Training mode: True

######## Computing SDs for task: ner ########


######## Language: amh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: amh_0
Mean variance for amh_0: 0.06416615098714828
Mean std for for amh_0: 0.23014670610427856
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: amh_1
Mean variance for amh_1: 0.0573517270386219
Mean std for for amh_1: 0.2174614667892456
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: amh_2
Mean variance for amh_2: 0.0589149184525013
Mean std for for amh_2: 0.22225849330425262
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: amh_3
Mean variance for amh_3: 0.07494007796049118
Mean std for for amh_3: 0.2443116158246994
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: amh_4
Mean variance for amh_4: 0.06184835359454155
Mean std for for amh_4: 0.22671811282634735
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: amh_5
Mean variance for amh_5: 0.051554471254348755
Mean std for for amh_5: 0.20925231277942657
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: amh_6
Mean variance for amh_6: 0.062489885836839676
Mean std for for amh_6: 0.22925472259521484
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: amh_7
Mean variance for amh_7: 0.0559193380177021
Mean std for for amh_7: 0.21639375388622284
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: amh_8
Mean variance for amh_8: 0.05907637998461723
Mean std for for amh_8: 0.22214579582214355
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 122, ratio = 0.4766
ID text: amh_9
Mean variance for amh_9: 0.06150830164551735
Mean std for for amh_9: 0.22369349002838135

######## Language: conll_2003_en ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: conll_2003_en_0
Mean variance for conll_2003_en_0: 0.09192550182342529
Mean std for for conll_2003_en_0: 0.27592864632606506
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: conll_2003_en_1
Mean variance for conll_2003_en_1: 0.02195391058921814
Mean std for for conll_2003_en_1: 0.13350187242031097
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: conll_2003_en_2
Mean variance for conll_2003_en_2: 0.02561260759830475
Mean std for for conll_2003_en_2: 0.1400640308856964
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: conll_2003_en_3
Mean variance for conll_2003_en_3: 0.034585077315568924
Mean std for for conll_2003_en_3: 0.16925913095474243
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_4
Mean variance for conll_2003_en_4: 0.028269285336136818
Mean std for for conll_2003_en_4: 0.1542186141014099
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: conll_2003_en_5
Mean variance for conll_2003_en_5: 0.06620769202709198
Mean std for for conll_2003_en_5: 0.231348916888237
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: conll_2003_en_6
Mean variance for conll_2003_en_6: 0.041259076446294785
Mean std for for conll_2003_en_6: 0.18330465257167816
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: conll_2003_en_7
Mean variance for conll_2003_en_7: 0.03660806640982628
Mean std for for conll_2003_en_7: 0.17326253652572632
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: conll_2003_en_8
Mean variance for conll_2003_en_8: 0.058890651911497116
Mean std for for conll_2003_en_8: 0.2181466817855835
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: conll_2003_en_9
Mean variance for conll_2003_en_9: 0.027177974581718445
Mean std for for conll_2003_en_9: 0.14901204407215118

######## Language: hau ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: hau_0
Mean variance for hau_0: 0.022172240540385246
Mean std for for hau_0: 0.12891139090061188
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_1
Mean variance for hau_1: 0.035925496369600296
Mean std for for hau_1: 0.1737068146467209
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: hau_2
Mean variance for hau_2: 0.044119153171777725
Mean std for for hau_2: 0.18855057656764984
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: hau_3
Mean variance for hau_3: 0.01981143094599247
Mean std for for hau_3: 0.11284203082323074
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: hau_4
Mean variance for hau_4: 0.02387365885078907
Mean std for for hau_4: 0.13387742638587952
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 149, ratio = 0.5820
ID text: hau_5
Mean variance for hau_5: 0.022157130762934685
Mean std for for hau_5: 0.12565438449382782
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: hau_6
Mean variance for hau_6: 0.027407927438616753
Mean std for for hau_6: 0.14775139093399048
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: hau_7
Mean variance for hau_7: 0.02158723957836628
Mean std for for hau_7: 0.1269402652978897
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: hau_8
Mean variance for hau_8: 0.02152695320546627
Mean std for for hau_8: 0.12471133470535278
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: hau_9
Mean variance for hau_9: 0.028856834396719933
Mean std for for hau_9: 0.15206576883792877

######## Language: ibo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: ibo_0
Mean variance for ibo_0: 0.03055661730468273
Mean std for for ibo_0: 0.15670442581176758
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: ibo_1
Mean variance for ibo_1: 0.030085088685154915
Mean std for for ibo_1: 0.15598194301128387
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: ibo_2
Mean variance for ibo_2: 0.03287490829825401
Mean std for for ibo_2: 0.1613451987504959
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: ibo_3
Mean variance for ibo_3: 0.02397833578288555
Mean std for for ibo_3: 0.13986815512180328
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: ibo_4
Mean variance for ibo_4: 0.03281484916806221
Mean std for for ibo_4: 0.1637001484632492
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: ibo_5
Mean variance for ibo_5: 0.029400810599327087
Mean std for for ibo_5: 0.15626879036426544
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: ibo_6
Mean variance for ibo_6: 0.02790786884725094
Mean std for for ibo_6: 0.15089339017868042
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: ibo_7
Mean variance for ibo_7: 0.024145476520061493
Mean std for for ibo_7: 0.13561013340950012
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: ibo_8
Mean variance for ibo_8: 0.03525269404053688
Mean std for for ibo_8: 0.17188261449337006
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: ibo_9
Mean variance for ibo_9: 0.03007717989385128
Mean std for for ibo_9: 0.15652042627334595

######## Language: kin ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 114, ratio = 0.4453
ID text: kin_0
Mean variance for kin_0: 0.028676055371761322
Mean std for for kin_0: 0.15057088434696198
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: kin_1
Mean variance for kin_1: 0.03069637157022953
Mean std for for kin_1: 0.1577700525522232
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: kin_2
Mean variance for kin_2: 0.031494345515966415
Mean std for for kin_2: 0.1617584377527237
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: kin_3
Mean variance for kin_3: 0.02979861944913864
Mean std for for kin_3: 0.1519673466682434
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: kin_4
Mean variance for kin_4: 0.022724905982613564
Mean std for for kin_4: 0.1311948001384735
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: kin_5
Mean variance for kin_5: 0.02811291813850403
Mean std for for kin_5: 0.15349417924880981
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: kin_6
Mean variance for kin_6: 0.022137528285384178
Mean std for for kin_6: 0.1277412623167038
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: kin_7
Mean variance for kin_7: 0.029634902253746986
Mean std for for kin_7: 0.15189407765865326
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: kin_8
Mean variance for kin_8: 0.04000021889805794
Mean std for for kin_8: 0.1837485432624817
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: kin_9
Mean variance for kin_9: 0.03385130688548088
Mean std for for kin_9: 0.16797541081905365

######## Language: lug ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: lug_0
Mean variance for lug_0: 0.024461885914206505
Mean std for for lug_0: 0.13533005118370056
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: lug_1
Mean variance for lug_1: 0.028036512434482574
Mean std for for lug_1: 0.14880965650081635
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: lug_2
Mean variance for lug_2: 0.02078341692686081
Mean std for for lug_2: 0.11549662798643112
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: lug_3
Mean variance for lug_3: 0.02138288877904415
Mean std for for lug_3: 0.12448351830244064
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: lug_4
Mean variance for lug_4: 0.03249936178326607
Mean std for for lug_4: 0.1636074185371399
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: lug_5
Mean variance for lug_5: 0.026691384613513947
Mean std for for lug_5: 0.1420748084783554
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: lug_6
Mean variance for lug_6: 0.024164199829101562
Mean std for for lug_6: 0.1344846785068512
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: lug_7
Mean variance for lug_7: 0.028059659525752068
Mean std for for lug_7: 0.1496879607439041
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: lug_8
Mean variance for lug_8: 0.03241648152470589
Mean std for for lug_8: 0.16073156893253326
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: lug_9
Mean variance for lug_9: 0.02755730412900448
Mean std for for lug_9: 0.14670167863368988

######## Language: luo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: luo_0
Mean variance for luo_0: 0.021874770522117615
Mean std for for luo_0: 0.12360772490501404
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: luo_1
Mean variance for luo_1: 0.03447246178984642
Mean std for for luo_1: 0.1696242243051529
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: luo_2
Mean variance for luo_2: 0.030038723722100258
Mean std for for luo_2: 0.1521255522966385
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: luo_3
Mean variance for luo_3: 0.022087888792157173
Mean std for for luo_3: 0.12434761971235275
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: luo_4
Mean variance for luo_4: 0.03274115175008774
Mean std for for luo_4: 0.16460299491882324
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: luo_5
Mean variance for luo_5: 0.031488511711359024
Mean std for for luo_5: 0.1611054539680481
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: luo_6
Mean variance for luo_6: 0.024855205789208412
Mean std for for luo_6: 0.13680300116539001
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: luo_7
Mean variance for luo_7: 0.035766322165727615
Mean std for for luo_7: 0.1737050563097
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: luo_8
Mean variance for luo_8: 0.02602122537791729
Mean std for for luo_8: 0.14210285246372223
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: luo_9
Mean variance for luo_9: 0.030862724408507347
Mean std for for luo_9: 0.16076628863811493

######## Language: pcm ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: pcm_0
Mean variance for pcm_0: 0.02832113951444626
Mean std for for pcm_0: 0.15238849818706512
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: pcm_1
Mean variance for pcm_1: 0.03140443563461304
Mean std for for pcm_1: 0.161568745970726
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: pcm_2
Mean variance for pcm_2: 0.029262853786349297
Mean std for for pcm_2: 0.15532821416854858
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: pcm_3
Mean variance for pcm_3: 0.030106516554951668
Mean std for for pcm_3: 0.1551007777452469
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: pcm_4
Mean variance for pcm_4: 0.030803173780441284
Mean std for for pcm_4: 0.15579549968242645
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: pcm_5
Mean variance for pcm_5: 0.02817004732787609
Mean std for for pcm_5: 0.15292130410671234
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: pcm_6
Mean variance for pcm_6: 0.03215014562010765
Mean std for for pcm_6: 0.1614970862865448
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 119, ratio = 0.4648
ID text: pcm_7
Mean variance for pcm_7: 0.03054661490023136
Mean std for for pcm_7: 0.15609268844127655
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: pcm_8
Mean variance for pcm_8: 0.02856280840933323
Mean std for for pcm_8: 0.14958010613918304
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: pcm_9
Mean variance for pcm_9: 0.0322018638253212
Mean std for for pcm_9: 0.16426004469394684

######## Language: swa ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703
ID text: swa_0
Mean variance for swa_0: 0.021824337542057037
Mean std for for swa_0: 0.12740416824817657
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: swa_1
Mean variance for swa_1: 0.02967868000268936
Mean std for for swa_1: 0.15666532516479492
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: swa_2
Mean variance for swa_2: 0.025600142776966095
Mean std for for swa_2: 0.14039625227451324
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: swa_3
Mean variance for swa_3: 0.030446374788880348
Mean std for for swa_3: 0.1584778130054474
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: swa_4
Mean variance for swa_4: 0.018562057986855507
Mean std for for swa_4: 0.11472824215888977
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: swa_5
Mean variance for swa_5: 0.01740073226392269
Mean std for for swa_5: 0.10909409075975418
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: swa_6
Mean variance for swa_6: 0.025275617837905884
Mean std for for swa_6: 0.1355520337820053
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: swa_7
Mean variance for swa_7: 0.032496239989995956
Mean std for for swa_7: 0.1632978767156601
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: swa_8
Mean variance for swa_8: 0.030442848801612854
Mean std for for swa_8: 0.1585744321346283
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: swa_9
Mean variance for swa_9: 0.030051013454794884
Mean std for for swa_9: 0.15704865753650665

######## Language: wol ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: wol_0
Mean variance for wol_0: 0.027553336694836617
Mean std for for wol_0: 0.14591242372989655
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: wol_1
Mean variance for wol_1: 0.03439444676041603
Mean std for for wol_1: 0.16715769469738007
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: wol_2
Mean variance for wol_2: 0.029657604172825813
Mean std for for wol_2: 0.1558401733636856
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: wol_3
Mean variance for wol_3: 0.036566976457834244
Mean std for for wol_3: 0.17508606612682343
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: wol_4
Mean variance for wol_4: 0.027377286925911903
Mean std for for wol_4: 0.15129674971103668
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: wol_5
Mean variance for wol_5: 0.029212189838290215
Mean std for for wol_5: 0.1534547060728073
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: wol_6
Mean variance for wol_6: 0.05181879922747612
Mean std for for wol_6: 0.20390117168426514
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: wol_7
Mean variance for wol_7: 0.036381594836711884
Mean std for for wol_7: 0.17434632778167725
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: wol_8
Mean variance for wol_8: 0.0276839267462492
Mean std for for wol_8: 0.15241487324237823
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: wol_9
Mean variance for wol_9: 0.03575542941689491
Mean std for for wol_9: 0.17269758880138397

######## Language: yor ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: yor_0
Mean variance for yor_0: 0.07772641628980637
Mean std for for yor_0: 0.24899858236312866
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: yor_1
Mean variance for yor_1: 0.06411533802747726
Mean std for for yor_1: 0.22720378637313843
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: yor_2
Mean variance for yor_2: 0.03139827772974968
Mean std for for yor_2: 0.16020824015140533
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: yor_3
Mean variance for yor_3: 0.02025848627090454
Mean std for for yor_3: 0.12315893173217773
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: yor_4
Mean variance for yor_4: 0.06884094327688217
Mean std for for yor_4: 0.23389320075511932
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: yor_5
Mean variance for yor_5: 0.04201963543891907
Mean std for for yor_5: 0.1779000610113144
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703
ID text: yor_6
Mean variance for yor_6: 0.028286121785640717
Mean std for for yor_6: 0.15216483175754547
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: yor_7
Mean variance for yor_7: 0.06443581730127335
Mean std for for yor_7: 0.22554440796375275
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: yor_8
Mean variance for yor_8: 0.024559788405895233
Mean std for for yor_8: 0.13723832368850708
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: yor_9
Mean variance for yor_9: 0.07012545317411423
Mean std for for yor_9: 0.2380303144454956

######## Language: zh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: zh_0
Mean variance for zh_0: 0.0386413149535656
Mean std for for zh_0: 0.1812981516122818
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: zh_1
Mean variance for zh_1: 0.032771311700344086
Mean std for for zh_1: 0.16152538359165192
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: zh_2
Mean variance for zh_2: 0.054951589554548264
Mean std for for zh_2: 0.21305452287197113
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: zh_3
Mean variance for zh_3: 0.06909830123186111
Mean std for for zh_3: 0.23777256906032562
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: zh_4
Mean variance for zh_4: 0.05010411515831947
Mean std for for zh_4: 0.20318138599395752
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: zh_5
Mean variance for zh_5: 0.05641404911875725
Mean std for for zh_5: 0.21533964574337006
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 151, ratio = 0.5898
ID text: zh_6
Mean variance for zh_6: 0.0328381173312664
Mean std for for zh_6: 0.16293257474899292
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: zh_7
Mean variance for zh_7: 0.059448957443237305
Mean std for for zh_7: 0.2214687019586563
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: zh_8
Mean variance for zh_8: 0.057202283293008804
Mean std for for zh_8: 0.21616186201572418
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: zh_9
Mean variance for zh_9: 0.04256926476955414
Mean std for for zh_9: 0.18696509301662445

######## Computing SDs for task: tydiqa ########


######## Language: arabic ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: arabic-4449832350126320768-0
Mean variance for arabic-4449832350126320768-0: 0.030295630916953087
Mean std for for arabic-4449832350126320768-0: 0.15752482414245605
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: arabic--3340323169760881569-0
Mean variance for arabic--3340323169760881569-0: 0.021100766956806183
Mean std for for arabic--3340323169760881569-0: 0.12439942359924316
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: arabic-4544770624843559444-1
Mean variance for arabic-4544770624843559444-1: 0.017639320343732834
Mean std for for arabic-4544770624843559444-1: 0.11168306320905685
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: arabic-891952409566422966-0
Mean variance for arabic-891952409566422966-0: 0.015437615104019642
Mean std for for arabic-891952409566422966-0: 0.10244632512331009
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: arabic-3659291834714572527-0
Mean variance for arabic-3659291834714572527-0: 0.04249807074666023
Mean std for for arabic-3659291834714572527-0: 0.18860943615436554
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: arabic-9215226117011890166-0
Mean variance for arabic-9215226117011890166-0: 0.018044454976916313
Mean std for for arabic-9215226117011890166-0: 0.11349892616271973
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625
ID text: arabic-6300896128538259469-0
Mean variance for arabic-6300896128538259469-0: 0.018660442903637886
Mean std for for arabic-6300896128538259469-0: 0.11651762574911118
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: arabic-2382507508588518905-0
Mean variance for arabic-2382507508588518905-0: 0.014732723124325275
Mean std for for arabic-2382507508588518905-0: 0.10075053572654724
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: arabic-1871632801094859741-1
Mean variance for arabic-1871632801094859741-1: 0.013122625648975372
Mean std for for arabic-1871632801094859741-1: 0.09560676664113998
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: arabic--7365809756232083807-0
Mean variance for arabic--7365809756232083807-0: 0.018347954377532005
Mean std for for arabic--7365809756232083807-0: 0.11402646452188492

######## Language: russian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: russian-3457655197371763238-61
Mean variance for russian-3457655197371763238-61: 0.014920388348400593
Mean std for for russian-3457655197371763238-61: 0.09127848595380783
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: russian--1914807805318993335-49
Mean variance for russian--1914807805318993335-49: 0.027569612488150597
Mean std for for russian--1914807805318993335-49: 0.1453762650489807
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: russian--3307989180606173904-1
Mean variance for russian--3307989180606173904-1: 0.013509436510503292
Mean std for for russian--3307989180606173904-1: 0.0875014066696167
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: russian--2219512001175315660-0
Mean variance for russian--2219512001175315660-0: 0.011937775649130344
Mean std for for russian--2219512001175315660-0: 0.08246030658483505
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: russian--7076080992904718941-0
Mean variance for russian--7076080992904718941-0: 0.01748575083911419
Mean std for for russian--7076080992904718941-0: 0.10524515062570572
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: russian--6565862953558739013-1
Mean variance for russian--6565862953558739013-1: 0.014745961874723434
Mean std for for russian--6565862953558739013-1: 0.08996173739433289
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: russian--5098374684590548031-42
Mean variance for russian--5098374684590548031-42: 0.039905767887830734
Mean std for for russian--5098374684590548031-42: 0.18253104388713837
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: russian-3573734219967447693-1
Mean variance for russian-3573734219967447693-1: 0.013901855796575546
Mean std for for russian-3573734219967447693-1: 0.0883316695690155
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: russian--4521001374120505750-6
Mean variance for russian--4521001374120505750-6: 0.03179038316011429
Mean std for for russian--4521001374120505750-6: 0.1581132709980011
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: russian--1308382244018658424-9
Mean variance for russian--1308382244018658424-9: 0.013843715190887451
Mean std for for russian--1308382244018658424-9: 0.08897623419761658

######## Language: bengali ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: bengali--1199493965132146131-3
Mean variance for bengali--1199493965132146131-3: 0.013672571629285812
Mean std for for bengali--1199493965132146131-3: 0.093622587621212
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: bengali-1807801556888134437-2
Mean variance for bengali-1807801556888134437-2: 0.015601417981088161
Mean std for for bengali-1807801556888134437-2: 0.10046885162591934
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: bengali-2113189855114052041-2
Mean variance for bengali-2113189855114052041-2: 0.012856471352279186
Mean std for for bengali-2113189855114052041-2: 0.09110643714666367
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 109, ratio = 0.4258
ID text: bengali--2527914488250041207-0
Mean variance for bengali--2527914488250041207-0: 0.01865193620324135
Mean std for for bengali--2527914488250041207-0: 0.11375933140516281
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: bengali--8260793280894408063-14
Mean variance for bengali--8260793280894408063-14: 0.013919605873525143
Mean std for for bengali--8260793280894408063-14: 0.09756941348314285
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: bengali-8313009204852557186-4
Mean variance for bengali-8313009204852557186-4: 0.015589587390422821
Mean std for for bengali-8313009204852557186-4: 0.10109328478574753
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: bengali--415964033364840061-0
Mean variance for bengali--415964033364840061-0: 0.011976249516010284
Mean std for for bengali--415964033364840061-0: 0.0885586366057396
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: bengali--4696865548928858824-5
Mean variance for bengali--4696865548928858824-5: 0.011264375410974026
Mean std for for bengali--4696865548928858824-5: 0.08712219446897507
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: bengali-6505224142472931712-1
Mean variance for bengali-6505224142472931712-1: 0.013081737793982029
Mean std for for bengali-6505224142472931712-1: 0.09211212396621704
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: bengali-599666913917674019-13
Mean variance for bengali-599666913917674019-13: 0.040134452283382416
Mean std for for bengali-599666913917674019-13: 0.17913275957107544

######## Language: telugu ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 118, ratio = 0.4609
ID text: telugu--3977923017846260053-0
Mean variance for telugu--3977923017846260053-0: 0.014281750656664371
Mean std for for telugu--3977923017846260053-0: 0.10028155893087387
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu-2254198842560317781-0
Mean variance for telugu-2254198842560317781-0: 0.015058517456054688
Mean std for for telugu-2254198842560317781-0: 0.10382908582687378
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: telugu-5435080895440121384-0
Mean variance for telugu-5435080895440121384-0: 0.01502478588372469
Mean std for for telugu-5435080895440121384-0: 0.10290295630693436
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: telugu--1182505954974481191-2
Mean variance for telugu--1182505954974481191-2: 0.02041170932352543
Mean std for for telugu--1182505954974481191-2: 0.12502533197402954
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: telugu-119276511844068401-0
Mean variance for telugu-119276511844068401-0: 0.015038363635540009
Mean std for for telugu-119276511844068401-0: 0.10330458730459213
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: telugu--4111208545071789922-0
Mean variance for telugu--4111208545071789922-0: 0.014200645498931408
Mean std for for telugu--4111208545071789922-0: 0.10081497579813004
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: telugu--5922002196428211484-132
Mean variance for telugu--5922002196428211484-132: 0.02173066884279251
Mean std for for telugu--5922002196428211484-132: 0.126400887966156
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: telugu--1817004721681155192-3
Mean variance for telugu--1817004721681155192-3: 0.008273796178400517
Mean std for for telugu--1817004721681155192-3: 0.07669418305158615
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: telugu-1602214480303968359-1
Mean variance for telugu-1602214480303968359-1: 0.018196403980255127
Mean std for for telugu-1602214480303968359-1: 0.1153925284743309
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: telugu--6495674712575945374-0
Mean variance for telugu--6495674712575945374-0: 0.015613961033523083
Mean std for for telugu--6495674712575945374-0: 0.10548510402441025

######## Language: finnish ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: finnish-6987763079741579998-0
Mean variance for finnish-6987763079741579998-0: 0.024983085691928864
Mean std for for finnish-6987763079741579998-0: 0.13744120299816132
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: finnish--8516625414052383903-0
Mean variance for finnish--8516625414052383903-0: 0.028006939217448235
Mean std for for finnish--8516625414052383903-0: 0.14662374556064606
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: finnish-4168898766124519517-0
Mean variance for finnish-4168898766124519517-0: 0.034676503390073776
Mean std for for finnish-4168898766124519517-0: 0.1460508406162262
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: finnish-783166898848672321-4
Mean variance for finnish-783166898848672321-4: 0.026171749457716942
Mean std for for finnish-783166898848672321-4: 0.14246846735477448
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: finnish-2208556840820233322-0
Mean variance for finnish-2208556840820233322-0: 0.027228765189647675
Mean std for for finnish-2208556840820233322-0: 0.1451040357351303
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: finnish--1981034637152391615-58
Mean variance for finnish--1981034637152391615-58: 0.021382829174399376
Mean std for for finnish--1981034637152391615-58: 0.11468727141618729
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: finnish-8689148941295949475-9
Mean variance for finnish-8689148941295949475-9: 0.02091183327138424
Mean std for for finnish-8689148941295949475-9: 0.10575014352798462
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: finnish-6900867945323517614-2
Mean variance for finnish-6900867945323517614-2: 0.03198935464024544
Mean std for for finnish-6900867945323517614-2: 0.14333175122737885
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: finnish-8023130170017405987-1
Mean variance for finnish-8023130170017405987-1: 0.022974789142608643
Mean std for for finnish-8023130170017405987-1: 0.12621335685253143
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: finnish-5001457972111781248-0
Mean variance for finnish-5001457972111781248-0: 0.021558865904808044
Mean std for for finnish-5001457972111781248-0: 0.10838835686445236

######## Language: swahili ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: swahili-7146838206539641546-10
Mean variance for swahili-7146838206539641546-10: 0.03157101199030876
Mean std for for swahili-7146838206539641546-10: 0.15795882046222687
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: swahili-7655634199707176439-0
Mean variance for swahili-7655634199707176439-0: 0.021755561232566833
Mean std for for swahili-7655634199707176439-0: 0.10856902599334717
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: swahili--4427180714267750534-1
Mean variance for swahili--4427180714267750534-1: 0.02888861857354641
Mean std for for swahili--4427180714267750534-1: 0.1499098539352417
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: swahili-4141779435061573138-0
Mean variance for swahili-4141779435061573138-0: 0.022037750110030174
Mean std for for swahili-4141779435061573138-0: 0.10735400766134262
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: swahili--5424518593960879661-0
Mean variance for swahili--5424518593960879661-0: 0.020964570343494415
Mean std for for swahili--5424518593960879661-0: 0.11400922387838364
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: swahili-4281845253405461584-0
Mean variance for swahili-4281845253405461584-0: 0.027731643989682198
Mean std for for swahili-4281845253405461584-0: 0.1474844366312027
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: swahili-4899164839984299762-2
Mean variance for swahili-4899164839984299762-2: 0.028690477833151817
Mean std for for swahili-4899164839984299762-2: 0.14580246806144714
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: swahili-1288750786498500530-0
Mean variance for swahili-1288750786498500530-0: 0.02809532918035984
Mean std for for swahili-1288750786498500530-0: 0.147083580493927
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 146, ratio = 0.5703
ID text: swahili--2671134792844015228-3
Mean variance for swahili--2671134792844015228-3: 0.02040921151638031
Mean std for for swahili--2671134792844015228-3: 0.11747563630342484
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: swahili-4873225622490039485-2
Mean variance for swahili-4873225622490039485-2: 0.020531464368104935
Mean std for for swahili-4873225622490039485-2: 0.11688222736120224

######## Language: korean ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: korean--2869472392602314906-0
Mean variance for korean--2869472392602314906-0: 0.014626762829720974
Mean std for for korean--2869472392602314906-0: 0.10252650827169418
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: korean-4375199563921600155-0
Mean variance for korean-4375199563921600155-0: 0.012454818934202194
Mean std for for korean-4375199563921600155-0: 0.0957949161529541
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 120, ratio = 0.4688
ID text: korean--1715118423211755607-13
Mean variance for korean--1715118423211755607-13: 0.01629304140806198
Mean std for for korean--1715118423211755607-13: 0.10899534076452255
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: korean--8028977936696142934-9
Mean variance for korean--8028977936696142934-9: 0.018265755847096443
Mean std for for korean--8028977936696142934-9: 0.11830016225576401
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: korean-2807245034690443837-5
Mean variance for korean-2807245034690443837-5: 0.026708999648690224
Mean std for for korean-2807245034690443837-5: 0.14576883614063263
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: korean-3862451817164408576-0
Mean variance for korean-3862451817164408576-0: 0.02045130729675293
Mean std for for korean-3862451817164408576-0: 0.1262996792793274
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: korean-148115504649351135-0
Mean variance for korean-148115504649351135-0: 0.019543051719665527
Mean std for for korean-148115504649351135-0: 0.12420299649238586
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: korean--2885837157239647036-2
Mean variance for korean--2885837157239647036-2: 0.015713099390268326
Mean std for for korean--2885837157239647036-2: 0.1067899763584137
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: korean--1743220297777040002-22
Mean variance for korean--1743220297777040002-22: 0.03257480636239052
Mean std for for korean--1743220297777040002-22: 0.16251732409000397
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: korean-3268522368206106332-0
Mean variance for korean-3268522368206106332-0: 0.06450717896223068
Mean std for for korean-3268522368206106332-0: 0.2282446026802063

######## Language: indonesian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: indonesian-9141868818310916091-0
Mean variance for indonesian-9141868818310916091-0: 0.02122689038515091
Mean std for for indonesian-9141868818310916091-0: 0.10738981515169144
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: indonesian-4609394337632433932-1
Mean variance for indonesian-4609394337632433932-1: 0.03890056535601616
Mean std for for indonesian-4609394337632433932-1: 0.1534360647201538
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: indonesian-2763468883290577923-0
Mean variance for indonesian-2763468883290577923-0: 0.02401919849216938
Mean std for for indonesian-2763468883290577923-0: 0.12159805744886398
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: indonesian-5633590583948933406-0
Mean variance for indonesian-5633590583948933406-0: 0.020494690164923668
Mean std for for indonesian-5633590583948933406-0: 0.1201154887676239
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: indonesian--5961409780035435015-0
Mean variance for indonesian--5961409780035435015-0: 0.023835359141230583
Mean std for for indonesian--5961409780035435015-0: 0.1162838563323021
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: indonesian-6274547934693326697-0
Mean variance for indonesian-6274547934693326697-0: 0.02274952083826065
Mean std for for indonesian-6274547934693326697-0: 0.12128033488988876
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: indonesian--2516321763567853082-0
Mean variance for indonesian--2516321763567853082-0: 0.023788193240761757
Mean std for for indonesian--2516321763567853082-0: 0.11818859726190567
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: indonesian-2048796427556239759-4
Mean variance for indonesian-2048796427556239759-4: 0.025439897552132607
Mean std for for indonesian-2048796427556239759-4: 0.13918916881084442
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: indonesian-6246592469157278547-2
Mean variance for indonesian-6246592469157278547-2: 0.023446014150977135
Mean std for for indonesian-6246592469157278547-2: 0.1255817711353302
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: indonesian--3724318458930736973-1
Mean variance for indonesian--3724318458930736973-1: 0.022584354504942894
Mean std for for indonesian--3724318458930736973-1: 0.10879800468683243

######## Language: english ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: english-2852412434797041176-6
Mean variance for english-2852412434797041176-6: 0.028175050392746925
Mean std for for english-2852412434797041176-6: 0.13124196231365204
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: english--1463732605740571606-0
Mean variance for english--1463732605740571606-0: 0.028323328122496605
Mean std for for english--1463732605740571606-0: 0.12990698218345642
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: english-5441411281255470421-0
Mean variance for english-5441411281255470421-0: 0.02689441479742527
Mean std for for english-5441411281255470421-0: 0.12001285701990128
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: english-7294054492486093447-1
Mean variance for english-7294054492486093447-1: 0.029608195647597313
Mean std for for english-7294054492486093447-1: 0.12640635669231415
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: english-8820750127045023244-0
Mean variance for english-8820750127045023244-0: 0.029392316937446594
Mean std for for english-8820750127045023244-0: 0.14760904014110565
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: english--506693546683012611-2
Mean variance for english--506693546683012611-2: 0.03286006674170494
Mean std for for english--506693546683012611-2: 0.1598084419965744
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: english-745411798111651115-0
Mean variance for english-745411798111651115-0: 0.028441840782761574
Mean std for for english-745411798111651115-0: 0.12332919985055923
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: english-7740772185887912651-0
Mean variance for english-7740772185887912651-0: 0.030497094616293907
Mean std for for english-7740772185887912651-0: 0.1299450695514679
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625
ID text: english-383873188776267137-19
Mean variance for english-383873188776267137-19: 0.02985323965549469
Mean std for for english-383873188776267137-19: 0.13272589445114136
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: english--8277537578703156284-0
Mean variance for english--8277537578703156284-0: 0.02947751246392727
Mean std for for english--8277537578703156284-0: 0.1282624900341034

######## Computing SDs for task: glue ########


######## Language: cola ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: cola_228
Mean variance for cola_228: 0.022112935781478882
Mean std for for cola_228: 0.135165274143219
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: cola_51
Mean variance for cola_51: 0.02649485506117344
Mean std for for cola_51: 0.14863160252571106
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 149, ratio = 0.5820
ID text: cola_563
Mean variance for cola_563: 0.05552409216761589
Mean std for for cola_563: 0.21507646143436432
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: cola_501
Mean variance for cola_501: 0.02755211852490902
Mean std for for cola_501: 0.15150098502635956
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: cola_457
Mean variance for cola_457: 0.034853577613830566
Mean std for for cola_457: 0.1701434850692749
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 148, ratio = 0.5781
ID text: cola_285
Mean variance for cola_285: 0.030001260340213776
Mean std for for cola_285: 0.15819700062274933
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: cola_209
Mean variance for cola_209: 0.027285458520054817
Mean std for for cola_209: 0.15069317817687988
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: cola_178
Mean variance for cola_178: 0.03204264119267464
Mean std for for cola_178: 0.16347937285900116
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: cola_864
Mean variance for cola_864: 0.026960736140608788
Mean std for for cola_864: 0.1493435651063919
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: cola_65
Mean variance for cola_65: 0.032637644559144974
Mean std for for cola_65: 0.16378183662891388

######## Language: mnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: mnli_488
Mean variance for mnli_488: 0.02783358283340931
Mean std for for mnli_488: 0.1453094333410263
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: mnli_1535
Mean variance for mnli_1535: 0.033437807112932205
Mean std for for mnli_1535: 0.16085456311702728
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: mnli_3582
Mean variance for mnli_3582: 0.03215939179062843
Mean std for for mnli_3582: 0.16269439458847046
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: mnli_3811
Mean variance for mnli_3811: 0.031586941331624985
Mean std for for mnli_3811: 0.16040049493312836
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 142, ratio = 0.5547
ID text: mnli_8279
Mean variance for mnli_8279: 0.031792767345905304
Mean std for for mnli_8279: 0.1627267599105835
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_434
Mean variance for mnli_434: 0.0270068421959877
Mean std for for mnli_434: 0.13918043673038483
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: mnli_9195
Mean variance for mnli_9195: 0.03300810232758522
Mean std for for mnli_9195: 0.16512519121170044
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: mnli_3257
Mean variance for mnli_3257: 0.03260646387934685
Mean std for for mnli_3257: 0.16321010887622833
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: mnli_8928
Mean variance for mnli_8928: 0.02895948477089405
Mean std for for mnli_8928: 0.14868688583374023
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: mnli_6873
Mean variance for mnli_6873: 0.029715491458773613
Mean std for for mnli_6873: 0.15047667920589447

######## Language: mrpc ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 139, ratio = 0.5430
ID text: mrpc_451
Mean variance for mrpc_451: 0.027003811672329903
Mean std for for mrpc_451: 0.14308176934719086
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: mrpc_919
Mean variance for mrpc_919: 0.034308213740587234
Mean std for for mrpc_919: 0.16323305666446686
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: mrpc_1206
Mean variance for mrpc_1206: 0.03486873209476471
Mean std for for mrpc_1206: 0.16786175966262817
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: mrpc_569
Mean variance for mrpc_569: 0.029328467324376106
Mean std for for mrpc_569: 0.15329024195671082
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: mrpc_1657
Mean variance for mrpc_1657: 0.024040281772613525
Mean std for for mrpc_1657: 0.13151459395885468
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: mrpc_13
Mean variance for mrpc_13: 0.027411580085754395
Mean std for for mrpc_13: 0.1464410126209259
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: mrpc_1554
Mean variance for mrpc_1554: 0.02281676046550274
Mean std for for mrpc_1554: 0.1283576935529709
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: mrpc_1650
Mean variance for mrpc_1650: 0.06048021838068962
Mean std for for mrpc_1650: 0.2195972353219986
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: mrpc_326
Mean variance for mrpc_326: 0.02746153064072132
Mean std for for mrpc_326: 0.14618520438671112
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: mrpc_1429
Mean variance for mrpc_1429: 0.03131807595491409
Mean std for for mrpc_1429: 0.15703295171260834

######## Language: qnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: qnli_3462
Mean variance for qnli_3462: 0.031795382499694824
Mean std for for qnli_3462: 0.15755094587802887
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: qnli_2787
Mean variance for qnli_2787: 0.02928123064339161
Mean std for for qnli_2787: 0.14526918530464172
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: qnli_2276
Mean variance for qnli_2276: 0.02478932775557041
Mean std for for qnli_2276: 0.13487567007541656
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: qnli_1273
Mean variance for qnli_1273: 0.028782876208424568
Mean std for for qnli_1273: 0.14703470468521118
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: qnli_1763
Mean variance for qnli_1763: 0.03341814875602722
Mean std for for qnli_1763: 0.16158491373062134
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 150, ratio = 0.5859
ID text: qnli_2757
Mean variance for qnli_2757: 0.026947086676955223
Mean std for for qnli_2757: 0.14329580962657928
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: qnli_837
Mean variance for qnli_837: 0.03120439313352108
Mean std for for qnli_837: 0.15759910643100739
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 121, ratio = 0.4727
ID text: qnli_759
Mean variance for qnli_759: 0.028629304841160774
Mean std for for qnli_759: 0.1339767724275589
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: qnli_3112
Mean variance for qnli_3112: 0.02973243035376072
Mean std for for qnli_3112: 0.15157561004161835
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 120, ratio = 0.4688
ID text: qnli_792
Mean variance for qnli_792: 0.028315814211964607
Mean std for for qnli_792: 0.14650976657867432

######## Language: qqp ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: qqp_188208
Mean variance for qqp_188208: 0.033787284046411514
Mean std for for qqp_188208: 0.16736817359924316
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 144, ratio = 0.5625
ID text: qqp_180331
Mean variance for qqp_180331: 0.03186362609267235
Mean std for for qqp_180331: 0.16009800136089325
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: qqp_316526
Mean variance for qqp_316526: 0.02939009666442871
Mean std for for qqp_316526: 0.15267254412174225
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: qqp_138685
Mean variance for qqp_138685: 0.027673019096255302
Mean std for for qqp_138685: 0.14251892268657684
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: qqp_22780
Mean variance for qqp_22780: 0.03521276265382767
Mean std for for qqp_22780: 0.1705641746520996
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: qqp_382589
Mean variance for qqp_382589: 0.02617551200091839
Mean std for for qqp_382589: 0.1455659419298172
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: qqp_240870
Mean variance for qqp_240870: 0.030580684542655945
Mean std for for qqp_240870: 0.15808753669261932
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: qqp_281137
Mean variance for qqp_281137: 0.03178875893354416
Mean std for for qqp_281137: 0.16081131994724274
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: qqp_65444
Mean variance for qqp_65444: 0.02911008708178997
Mean std for for qqp_65444: 0.15428338944911957
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: qqp_198461
Mean variance for qqp_198461: 0.03503900766372681
Mean std for for qqp_198461: 0.16828124225139618

######## Language: rte ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: rte_322
Mean variance for rte_322: 0.02839910425245762
Mean std for for rte_322: 0.15034089982509613
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: rte_2261
Mean variance for rte_2261: 0.03590201959013939
Mean std for for rte_2261: 0.1726531833410263
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: rte_1200
Mean variance for rte_1200: 0.024181770160794258
Mean std for for rte_1200: 0.13112850487232208
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: rte_2574
Mean variance for rte_2574: 0.029886877164244652
Mean std for for rte_2574: 0.12601079046726227
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: rte_2533
Mean variance for rte_2533: 0.029402950778603554
Mean std for for rte_2533: 0.13171102106571198
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 137, ratio = 0.5352
ID text: rte_1481
Mean variance for rte_1481: 0.02667437680065632
Mean std for for rte_1481: 0.14083361625671387
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_2364
Mean variance for rte_2364: 0.03053876757621765
Mean std for for rte_2364: 0.15058906376361847
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: rte_787
Mean variance for rte_787: 0.027348311617970467
Mean std for for rte_787: 0.1435108482837677
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: rte_2885
Mean variance for rte_2885: 0.030286826193332672
Mean std for for rte_2885: 0.13424889743328094
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: rte_284
Mean variance for rte_284: 0.03416655212640762
Mean std for for rte_284: 0.16608671844005585

######## Language: sst2 ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: sst2_93
Mean variance for sst2_93: 0.032529812306165695
Mean std for for sst2_93: 0.16266077756881714
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: sst2_1354
Mean variance for sst2_1354: 0.030069274827837944
Mean std for for sst2_1354: 0.15792594850063324
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: sst2_466
Mean variance for sst2_466: 0.03179975971579552
Mean std for for sst2_466: 0.16373778879642487
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: sst2_1583
Mean variance for sst2_1583: 0.03153745457530022
Mean std for for sst2_1583: 0.15750879049301147
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: sst2_592
Mean variance for sst2_592: 0.032827798277139664
Mean std for for sst2_592: 0.16000793874263763
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: sst2_163
Mean variance for sst2_163: 0.034694403409957886
Mean std for for sst2_163: 0.17069405317306519
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: sst2_1751
Mean variance for sst2_1751: 0.02686118148267269
Mean std for for sst2_1751: 0.14957600831985474
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 143, ratio = 0.5586
ID text: sst2_476
Mean variance for sst2_476: 0.030614353716373444
Mean std for for sst2_476: 0.15658919513225555
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 145, ratio = 0.5664
ID text: sst2_1774
Mean variance for sst2_1774: 0.03115203231573105
Mean std for for sst2_1774: 0.158333882689476
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 131, ratio = 0.5117
ID text: sst2_206
Mean variance for sst2_206: 0.030907852575182915
Mean std for for sst2_206: 0.15963687002658844

######## Language: stsb ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: stsb_778
Mean variance for stsb_778: 0.035513658076524734
Mean std for for stsb_778: 0.17149432003498077
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 141, ratio = 0.5508
ID text: stsb_569
Mean variance for stsb_569: 0.04015164449810982
Mean std for for stsb_569: 0.18280671536922455
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 136, ratio = 0.5312
ID text: stsb_928
Mean variance for stsb_928: 0.02298262156546116
Mean std for for stsb_928: 0.1294671893119812
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 140, ratio = 0.5469
ID text: stsb_1301
Mean variance for stsb_1301: 0.0366707369685173
Mean std for for stsb_1301: 0.17412365972995758
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: stsb_747
Mean variance for stsb_747: 0.033319514244794846
Mean std for for stsb_747: 0.16358067095279694
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 130, ratio = 0.5078
ID text: stsb_333
Mean variance for stsb_333: 0.03177706524729729
Mean std for for stsb_333: 0.1616111695766449
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 133, ratio = 0.5195
ID text: stsb_758
Mean variance for stsb_758: 0.03440156579017639
Mean std for for stsb_758: 0.16518694162368774
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 135, ratio = 0.5273
ID text: stsb_727
Mean variance for stsb_727: 0.03585885092616081
Mean std for for stsb_727: 0.17286936938762665
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 148, ratio = 0.5781
ID text: stsb_429
Mean variance for stsb_429: 0.03954606130719185
Mean std for for stsb_429: 0.18131746351718903
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: stsb_1372
Mean variance for stsb_1372: 0.03469218313694
Mean std for for stsb_1372: 0.17003430426120758

######## Language: wnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 134, ratio = 0.5234
ID text: wnli_68
Mean variance for wnli_68: 0.028923144564032555
Mean std for for wnli_68: 0.14818476140499115
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: wnli_18
Mean variance for wnli_18: 0.02639472670853138
Mean std for for wnli_18: 0.1384972482919693
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 129, ratio = 0.5039
ID text: wnli_43
Mean variance for wnli_43: 0.03346314653754234
Mean std for for wnli_43: 0.16091808676719666
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: wnli_136
Mean variance for wnli_136: 0.02740783803164959
Mean std for for wnli_136: 0.14433057606220245
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_62
Mean variance for wnli_62: 0.03117927722632885
Mean std for for wnli_62: 0.15683986246585846
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: wnli_41
Mean variance for wnli_41: 0.033190011978149414
Mean std for for wnli_41: 0.16074319183826447
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 138, ratio = 0.5391
ID text: wnli_118
Mean variance for wnli_118: 0.027172183617949486
Mean std for for wnli_118: 0.14700673520565033
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_97
Mean variance for wnli_97: 0.023650474846363068
Mean std for for wnli_97: 0.12921030819416046
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: wnli_69
Mean variance for wnli_69: 0.034096550196409225
Mean std for for wnli_69: 0.16609549522399902
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 132, ratio = 0.5156
ID text: wnli_142
Mean variance for wnli_142: 0.023574648424983025
Mean std for for wnli_142: 0.13075216114521027
SD per task: {'ner': {'amh': {'amh_0': 0.06416615098714828, 'amh_1': 0.0573517270386219, 'amh_2': 0.0589149184525013, 'amh_3': 0.07494007796049118, 'amh_4': 0.06184835359454155, 'amh_5': 0.051554471254348755, 'amh_6': 0.062489885836839676, 'amh_7': 0.0559193380177021, 'amh_8': 0.05907637998461723, 'amh_9': 0.06150830164551735}, 'conll_2003_en': {'conll_2003_en_0': 0.09192550182342529, 'conll_2003_en_1': 0.02195391058921814, 'conll_2003_en_2': 0.02561260759830475, 'conll_2003_en_3': 0.034585077315568924, 'conll_2003_en_4': 0.028269285336136818, 'conll_2003_en_5': 0.06620769202709198, 'conll_2003_en_6': 0.041259076446294785, 'conll_2003_en_7': 0.03660806640982628, 'conll_2003_en_8': 0.058890651911497116, 'conll_2003_en_9': 0.027177974581718445}, 'hau': {'hau_0': 0.022172240540385246, 'hau_1': 0.035925496369600296, 'hau_2': 0.044119153171777725, 'hau_3': 0.01981143094599247, 'hau_4': 0.02387365885078907, 'hau_5': 0.022157130762934685, 'hau_6': 0.027407927438616753, 'hau_7': 0.02158723957836628, 'hau_8': 0.02152695320546627, 'hau_9': 0.028856834396719933}, 'ibo': {'ibo_0': 0.03055661730468273, 'ibo_1': 0.030085088685154915, 'ibo_2': 0.03287490829825401, 'ibo_3': 0.02397833578288555, 'ibo_4': 0.03281484916806221, 'ibo_5': 0.029400810599327087, 'ibo_6': 0.02790786884725094, 'ibo_7': 0.024145476520061493, 'ibo_8': 0.03525269404053688, 'ibo_9': 0.03007717989385128}, 'kin': {'kin_0': 0.028676055371761322, 'kin_1': 0.03069637157022953, 'kin_2': 0.031494345515966415, 'kin_3': 0.02979861944913864, 'kin_4': 0.022724905982613564, 'kin_5': 0.02811291813850403, 'kin_6': 0.022137528285384178, 'kin_7': 0.029634902253746986, 'kin_8': 0.04000021889805794, 'kin_9': 0.03385130688548088}, 'lug': {'lug_0': 0.024461885914206505, 'lug_1': 0.028036512434482574, 'lug_2': 0.02078341692686081, 'lug_3': 0.02138288877904415, 'lug_4': 0.03249936178326607, 'lug_5': 0.026691384613513947, 'lug_6': 0.024164199829101562, 'lug_7': 0.028059659525752068, 'lug_8': 0.03241648152470589, 'lug_9': 0.02755730412900448}, 'luo': {'luo_0': 0.021874770522117615, 'luo_1': 0.03447246178984642, 'luo_2': 0.030038723722100258, 'luo_3': 0.022087888792157173, 'luo_4': 0.03274115175008774, 'luo_5': 0.031488511711359024, 'luo_6': 0.024855205789208412, 'luo_7': 0.035766322165727615, 'luo_8': 0.02602122537791729, 'luo_9': 0.030862724408507347}, 'pcm': {'pcm_0': 0.02832113951444626, 'pcm_1': 0.03140443563461304, 'pcm_2': 0.029262853786349297, 'pcm_3': 0.030106516554951668, 'pcm_4': 0.030803173780441284, 'pcm_5': 0.02817004732787609, 'pcm_6': 0.03215014562010765, 'pcm_7': 0.03054661490023136, 'pcm_8': 0.02856280840933323, 'pcm_9': 0.0322018638253212}, 'swa': {'swa_0': 0.021824337542057037, 'swa_1': 0.02967868000268936, 'swa_2': 0.025600142776966095, 'swa_3': 0.030446374788880348, 'swa_4': 0.018562057986855507, 'swa_5': 0.01740073226392269, 'swa_6': 0.025275617837905884, 'swa_7': 0.032496239989995956, 'swa_8': 0.030442848801612854, 'swa_9': 0.030051013454794884}, 'wol': {'wol_0': 0.027553336694836617, 'wol_1': 0.03439444676041603, 'wol_2': 0.029657604172825813, 'wol_3': 0.036566976457834244, 'wol_4': 0.027377286925911903, 'wol_5': 0.029212189838290215, 'wol_6': 0.05181879922747612, 'wol_7': 0.036381594836711884, 'wol_8': 0.0276839267462492, 'wol_9': 0.03575542941689491}, 'yor': {'yor_0': 0.07772641628980637, 'yor_1': 0.06411533802747726, 'yor_2': 0.03139827772974968, 'yor_3': 0.02025848627090454, 'yor_4': 0.06884094327688217, 'yor_5': 0.04201963543891907, 'yor_6': 0.028286121785640717, 'yor_7': 0.06443581730127335, 'yor_8': 0.024559788405895233, 'yor_9': 0.07012545317411423}, 'zh': {'zh_0': 0.0386413149535656, 'zh_1': 0.032771311700344086, 'zh_2': 0.054951589554548264, 'zh_3': 0.06909830123186111, 'zh_4': 0.05010411515831947, 'zh_5': 0.05641404911875725, 'zh_6': 0.0328381173312664, 'zh_7': 0.059448957443237305, 'zh_8': 0.057202283293008804, 'zh_9': 0.04256926476955414}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.030295630916953087, 'arabic--3340323169760881569-0': 0.021100766956806183, 'arabic-4544770624843559444-1': 0.017639320343732834, 'arabic-891952409566422966-0': 0.015437615104019642, 'arabic-3659291834714572527-0': 0.04249807074666023, 'arabic-9215226117011890166-0': 0.018044454976916313, 'arabic-6300896128538259469-0': 0.018660442903637886, 'arabic-2382507508588518905-0': 0.014732723124325275, 'arabic-1871632801094859741-1': 0.013122625648975372, 'arabic--7365809756232083807-0': 0.018347954377532005}, 'russian': {'russian-3457655197371763238-61': 0.014920388348400593, 'russian--1914807805318993335-49': 0.027569612488150597, 'russian--3307989180606173904-1': 0.013509436510503292, 'russian--2219512001175315660-0': 0.011937775649130344, 'russian--7076080992904718941-0': 0.01748575083911419, 'russian--6565862953558739013-1': 0.014745961874723434, 'russian--5098374684590548031-42': 0.039905767887830734, 'russian-3573734219967447693-1': 0.013901855796575546, 'russian--4521001374120505750-6': 0.03179038316011429, 'russian--1308382244018658424-9': 0.013843715190887451}, 'bengali': {'bengali--1199493965132146131-3': 0.013672571629285812, 'bengali-1807801556888134437-2': 0.015601417981088161, 'bengali-2113189855114052041-2': 0.012856471352279186, 'bengali--2527914488250041207-0': 0.01865193620324135, 'bengali--8260793280894408063-14': 0.013919605873525143, 'bengali-8313009204852557186-4': 0.015589587390422821, 'bengali--415964033364840061-0': 0.011976249516010284, 'bengali--4696865548928858824-5': 0.011264375410974026, 'bengali-6505224142472931712-1': 0.013081737793982029, 'bengali-599666913917674019-13': 0.040134452283382416}, 'telugu': {'telugu--3977923017846260053-0': 0.014281750656664371, 'telugu-2254198842560317781-0': 0.015058517456054688, 'telugu-5435080895440121384-0': 0.01502478588372469, 'telugu--1182505954974481191-2': 0.02041170932352543, 'telugu-119276511844068401-0': 0.015038363635540009, 'telugu--4111208545071789922-0': 0.014200645498931408, 'telugu--5922002196428211484-132': 0.02173066884279251, 'telugu--1817004721681155192-3': 0.008273796178400517, 'telugu-1602214480303968359-1': 0.018196403980255127, 'telugu--6495674712575945374-0': 0.015613961033523083}, 'finnish': {'finnish-6987763079741579998-0': 0.024983085691928864, 'finnish--8516625414052383903-0': 0.028006939217448235, 'finnish-4168898766124519517-0': 0.034676503390073776, 'finnish-783166898848672321-4': 0.026171749457716942, 'finnish-2208556840820233322-0': 0.027228765189647675, 'finnish--1981034637152391615-58': 0.021382829174399376, 'finnish-8689148941295949475-9': 0.02091183327138424, 'finnish-6900867945323517614-2': 0.03198935464024544, 'finnish-8023130170017405987-1': 0.022974789142608643, 'finnish-5001457972111781248-0': 0.021558865904808044}, 'swahili': {'swahili-7146838206539641546-10': 0.03157101199030876, 'swahili-7655634199707176439-0': 0.021755561232566833, 'swahili--4427180714267750534-1': 0.02888861857354641, 'swahili-4141779435061573138-0': 0.022037750110030174, 'swahili--5424518593960879661-0': 0.020964570343494415, 'swahili-4281845253405461584-0': 0.027731643989682198, 'swahili-4899164839984299762-2': 0.028690477833151817, 'swahili-1288750786498500530-0': 0.02809532918035984, 'swahili--2671134792844015228-3': 0.02040921151638031, 'swahili-4873225622490039485-2': 0.020531464368104935}, 'korean': {'korean--2869472392602314906-0': 0.014626762829720974, 'korean-4375199563921600155-0': 0.012454818934202194, 'korean--1715118423211755607-13': 0.01629304140806198, 'korean--8028977936696142934-9': 0.018265755847096443, 'korean-2807245034690443837-5': 0.026708999648690224, 'korean-3862451817164408576-0': 0.02045130729675293, 'korean-148115504649351135-0': 0.019543051719665527, 'korean--2885837157239647036-2': 0.015713099390268326, 'korean--1743220297777040002-22': 0.03257480636239052, 'korean-3268522368206106332-0': 0.06450717896223068}, 'indonesian': {'indonesian-9141868818310916091-0': 0.02122689038515091, 'indonesian-4609394337632433932-1': 0.03890056535601616, 'indonesian-2763468883290577923-0': 0.02401919849216938, 'indonesian-5633590583948933406-0': 0.020494690164923668, 'indonesian--5961409780035435015-0': 0.023835359141230583, 'indonesian-6274547934693326697-0': 0.02274952083826065, 'indonesian--2516321763567853082-0': 0.023788193240761757, 'indonesian-2048796427556239759-4': 0.025439897552132607, 'indonesian-6246592469157278547-2': 0.023446014150977135, 'indonesian--3724318458930736973-1': 0.022584354504942894}, 'english': {'english-2852412434797041176-6': 0.028175050392746925, 'english--1463732605740571606-0': 0.028323328122496605, 'english-5441411281255470421-0': 0.02689441479742527, 'english-7294054492486093447-1': 0.029608195647597313, 'english-8820750127045023244-0': 0.029392316937446594, 'english--506693546683012611-2': 0.03286006674170494, 'english-745411798111651115-0': 0.028441840782761574, 'english-7740772185887912651-0': 0.030497094616293907, 'english-383873188776267137-19': 0.02985323965549469, 'english--8277537578703156284-0': 0.02947751246392727}}, 'glue': {'cola': {'cola_228': 0.022112935781478882, 'cola_51': 0.02649485506117344, 'cola_563': 0.05552409216761589, 'cola_501': 0.02755211852490902, 'cola_457': 0.034853577613830566, 'cola_285': 0.030001260340213776, 'cola_209': 0.027285458520054817, 'cola_178': 0.03204264119267464, 'cola_864': 0.026960736140608788, 'cola_65': 0.032637644559144974}, 'mnli': {'mnli_488': 0.02783358283340931, 'mnli_1535': 0.033437807112932205, 'mnli_3582': 0.03215939179062843, 'mnli_3811': 0.031586941331624985, 'mnli_8279': 0.031792767345905304, 'mnli_434': 0.0270068421959877, 'mnli_9195': 0.03300810232758522, 'mnli_3257': 0.03260646387934685, 'mnli_8928': 0.02895948477089405, 'mnli_6873': 0.029715491458773613}, 'mrpc': {'mrpc_451': 0.027003811672329903, 'mrpc_919': 0.034308213740587234, 'mrpc_1206': 0.03486873209476471, 'mrpc_569': 0.029328467324376106, 'mrpc_1657': 0.024040281772613525, 'mrpc_13': 0.027411580085754395, 'mrpc_1554': 0.02281676046550274, 'mrpc_1650': 0.06048021838068962, 'mrpc_326': 0.02746153064072132, 'mrpc_1429': 0.03131807595491409}, 'qnli': {'qnli_3462': 0.031795382499694824, 'qnli_2787': 0.02928123064339161, 'qnli_2276': 0.02478932775557041, 'qnli_1273': 0.028782876208424568, 'qnli_1763': 0.03341814875602722, 'qnli_2757': 0.026947086676955223, 'qnli_837': 0.03120439313352108, 'qnli_759': 0.028629304841160774, 'qnli_3112': 0.02973243035376072, 'qnli_792': 0.028315814211964607}, 'qqp': {'qqp_188208': 0.033787284046411514, 'qqp_180331': 0.03186362609267235, 'qqp_316526': 0.02939009666442871, 'qqp_138685': 0.027673019096255302, 'qqp_22780': 0.03521276265382767, 'qqp_382589': 0.02617551200091839, 'qqp_240870': 0.030580684542655945, 'qqp_281137': 0.03178875893354416, 'qqp_65444': 0.02911008708178997, 'qqp_198461': 0.03503900766372681}, 'rte': {'rte_322': 0.02839910425245762, 'rte_2261': 0.03590201959013939, 'rte_1200': 0.024181770160794258, 'rte_2574': 0.029886877164244652, 'rte_2533': 0.029402950778603554, 'rte_1481': 0.02667437680065632, 'rte_2364': 0.03053876757621765, 'rte_787': 0.027348311617970467, 'rte_2885': 0.030286826193332672, 'rte_284': 0.03416655212640762}, 'sst2': {'sst2_93': 0.032529812306165695, 'sst2_1354': 0.030069274827837944, 'sst2_466': 0.03179975971579552, 'sst2_1583': 0.03153745457530022, 'sst2_592': 0.032827798277139664, 'sst2_163': 0.034694403409957886, 'sst2_1751': 0.02686118148267269, 'sst2_476': 0.030614353716373444, 'sst2_1774': 0.03115203231573105, 'sst2_206': 0.030907852575182915}, 'stsb': {'stsb_778': 0.035513658076524734, 'stsb_569': 0.04015164449810982, 'stsb_928': 0.02298262156546116, 'stsb_1301': 0.0366707369685173, 'stsb_747': 0.033319514244794846, 'stsb_333': 0.03177706524729729, 'stsb_758': 0.03440156579017639, 'stsb_727': 0.03585885092616081, 'stsb_429': 0.03954606130719185, 'stsb_1372': 0.03469218313694}, 'wnli': {'wnli_68': 0.028923144564032555, 'wnli_18': 0.02639472670853138, 'wnli_43': 0.03346314653754234, 'wnli_136': 0.02740783803164959, 'wnli_62': 0.03117927722632885, 'wnli_41': 0.033190011978149414, 'wnli_118': 0.027172183617949486, 'wnli_97': 0.023650474846363068, 'wnli_69': 0.034096550196409225, 'wnli_142': 0.023574648424983025}}}
Saving data in SD_per_task_mask_0.9.json
Saving data in var_per_task_mask_0.9.json

UNCERTAINTY (SD)

Mean loss per task: {'ner': {'amh': 0.0607769601047039, 'conll_2003_en': 0.043248988687992096, 'hau': 0.026743808761239052, 'ibo': 0.029709383845329285, 'kin': 0.029712717980146408, 'lug': 0.026605308055877686, 'luo': 0.029020899906754494, 'pcm': 0.030152957886457443, 'swa': 0.02617780491709709, 'wol': 0.03364015743136406, 'yor': 0.04917662590742111, 'zh': 0.049403928220272064}, 'tydiqa': {'arabic': 0.020987961441278458, 'russian': 0.01996106468141079, 'bengali': 0.016674838960170746, 'telugu': 0.01578306034207344, 'finnish': 0.025988470762968063, 'swahili': 0.025067564100027084, 'korean': 0.024113882333040237, 'indonesian': 0.02464846894145012, 'english': 0.029352307319641113}, 'glue': {'cola': 0.03154653310775757, 'mnli': 0.030810683965682983, 'mrpc': 0.031903766095638275, 'qnli': 0.029289599508047104, 'qqp': 0.031062085181474686, 'rte': 0.02967875264585018, 'sst2': 0.03129938989877701, 'stsb': 0.034491389989852905, 'wnli': 0.028905201703310013}}
