The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/25/2024 15:11:07 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/25/2024 15:11:07 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 15:11:07 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 15:11:07 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/25/2024 15:11:09 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/25/2024 15:11:09 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/25/2024 15:11:09 - INFO - __main__ - Running MONTE CARLO experiment: mask_ratio
03/25/2024 15:11:09 - INFO - __main__ - Loading data from loss_per_task_mask_0.4.json
03/25/2024 15:11:09 - INFO - __main__ - 
LOSS

03/25/2024 15:11:09 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8227535486221313, 'conll_2003_en': 0.692507266998291, 'hau': 0.621537983417511, 'ibo': 0.5969002842903137, 'kin': 0.625767707824707, 'lug': 0.5601159334182739, 'luo': 0.5693085193634033, 'pcm': 0.5941788554191589, 'swa': 0.6136629581451416, 'wol': 0.646415650844574, 'yor': 0.6845003366470337, 'zh': 0.8649724125862122}, 'tydiqa': {'arabic': 0.8228209614753723, 'russian': 0.6275095343589783, 'bengali': 0.7088870406150818, 'telugu': 0.7685834169387817, 'finnish': 0.5213406682014465, 'swahili': 0.5135464668273926, 'korean': 0.8566048741340637, 'indonesian': 0.4910866618156433, 'english': 0.22962041199207306}, 'glue': {'cola': 0.4714427888393402, 'mnli': 0.2786151170730591, 'mrpc': 0.2472984492778778, 'qnli': 0.2891039252281189, 'qqp': 0.3640367388725281, 'rte': 0.23632879555225372, 'sst2': 0.47822460532188416, 'stsb': 0.287489116191864, 'wnli': 0.21890203654766083}}
03/25/2024 15:11:09 - INFO - __main__ - Lowest losses:
03/25/2024 15:11:09 - INFO - __main__ - ID: mnli_3811, Loss: 0.033144474029541016
03/25/2024 15:11:09 - INFO - __main__ - ID: mrpc_13, Loss: 0.05600865185260773
03/25/2024 15:11:09 - INFO - __main__ - ID: mrpc_326, Loss: 0.07471281290054321
03/25/2024 15:11:09 - INFO - __main__ - ID: english-7740772185887912651-0, Loss: 0.08604472130537033
03/25/2024 15:11:09 - INFO - __main__ - ID: rte_787, Loss: 0.08686008304357529
03/25/2024 15:11:09 - INFO - __main__ - Highest losses:
03/25/2024 15:11:09 - INFO - __main__ - ID: korean--2885837157239647036-2, Loss: 0.8867088556289673
03/25/2024 15:11:09 - INFO - __main__ - ID: korean--2869472392602314906-0, Loss: 0.8936517238616943
03/25/2024 15:11:09 - INFO - __main__ - ID: korean-3268522368206106332-0, Loss: 0.8940839171409607
03/25/2024 15:11:09 - INFO - __main__ - ID: amh_2, Loss: 0.8978754281997681
03/25/2024 15:11:09 - INFO - __main__ - ID: zh_5, Loss: 0.9397002458572388
03/25/2024 15:11:09 - INFO - __main__ - Monte Carlo samples: 100
03/25/2024 15:11:09 - INFO - __main__ - Training mode: True
03/25/2024 15:11:09 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/25/2024 15:11:09 - INFO - __main__ - 
######## Language: amh ######## 

03/25/2024 15:11:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:11:09 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:11:09 - INFO - __main__ - ID text: amh_0
03/25/2024 15:12:08 - INFO - __main__ - Mean variance for amh_0: 0.13991056382656097
03/25/2024 15:12:08 - INFO - __main__ - Mean std for for amh_0: 0.3214004635810852
03/25/2024 15:12:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:12:08 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:12:08 - INFO - __main__ - ID text: amh_1
03/25/2024 15:13:04 - INFO - __main__ - Mean variance for amh_1: 0.1304222047328949
03/25/2024 15:13:04 - INFO - __main__ - Mean std for for amh_1: 0.31114766001701355
03/25/2024 15:13:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:13:04 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:13:04 - INFO - __main__ - ID text: amh_2
03/25/2024 15:14:00 - INFO - __main__ - Mean variance for amh_2: 0.08716949820518494
03/25/2024 15:14:00 - INFO - __main__ - Mean std for for amh_2: 0.2561565935611725
03/25/2024 15:14:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:14:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:14:01 - INFO - __main__ - ID text: amh_3
03/25/2024 15:14:57 - INFO - __main__ - Mean variance for amh_3: 0.1355457752943039
03/25/2024 15:14:57 - INFO - __main__ - Mean std for for amh_3: 0.31480076909065247
03/25/2024 15:14:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:14:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:14:57 - INFO - __main__ - ID text: amh_4
03/25/2024 15:15:53 - INFO - __main__ - Mean variance for amh_4: 0.14410316944122314
03/25/2024 15:15:53 - INFO - __main__ - Mean std for for amh_4: 0.3232533037662506
03/25/2024 15:15:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:15:53 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:15:53 - INFO - __main__ - ID text: amh_5
03/25/2024 15:16:48 - INFO - __main__ - Mean variance for amh_5: 0.13845549523830414
03/25/2024 15:16:48 - INFO - __main__ - Mean std for for amh_5: 0.3228350579738617
03/25/2024 15:16:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:16:48 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:16:48 - INFO - __main__ - ID text: amh_6
03/25/2024 15:17:44 - INFO - __main__ - Mean variance for amh_6: 0.13269969820976257
03/25/2024 15:17:44 - INFO - __main__ - Mean std for for amh_6: 0.3108898997306824
03/25/2024 15:17:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:17:44 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:17:44 - INFO - __main__ - ID text: amh_7
03/25/2024 15:18:40 - INFO - __main__ - Mean variance for amh_7: 0.14162090420722961
03/25/2024 15:18:40 - INFO - __main__ - Mean std for for amh_7: 0.3199422061443329
03/25/2024 15:18:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:18:40 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:18:40 - INFO - __main__ - ID text: amh_8
03/25/2024 15:19:36 - INFO - __main__ - Mean variance for amh_8: 0.13670116662979126
03/25/2024 15:19:36 - INFO - __main__ - Mean std for for amh_8: 0.31257063150405884
03/25/2024 15:19:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:19:36 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:19:36 - INFO - __main__ - ID text: amh_9
03/25/2024 15:20:31 - INFO - __main__ - Mean variance for amh_9: 0.1384475827217102
03/25/2024 15:20:31 - INFO - __main__ - Mean std for for amh_9: 0.3193693459033966
03/25/2024 15:20:31 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/25/2024 15:20:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:20:31 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:20:31 - INFO - __main__ - ID text: conll_2003_en_0
03/25/2024 15:21:27 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.16249333322048187
03/25/2024 15:21:27 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.3557093143463135
03/25/2024 15:21:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:21:27 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:21:27 - INFO - __main__ - ID text: conll_2003_en_1
03/25/2024 15:22:23 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.04513018950819969
03/25/2024 15:22:23 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.18903593719005585
03/25/2024 15:22:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:22:23 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:22:23 - INFO - __main__ - ID text: conll_2003_en_2
03/25/2024 15:23:18 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.03132238611578941
03/25/2024 15:23:18 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.13460557162761688
03/25/2024 15:23:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:23:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:23:18 - INFO - __main__ - ID text: conll_2003_en_3
03/25/2024 15:24:14 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.03955047205090523
03/25/2024 15:24:14 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.17174269258975983
03/25/2024 15:24:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:24:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:24:14 - INFO - __main__ - ID text: conll_2003_en_4
03/25/2024 15:25:10 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.042685654014348984
03/25/2024 15:25:10 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.18330983817577362
03/25/2024 15:25:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:25:10 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:25:10 - INFO - __main__ - ID text: conll_2003_en_5
03/25/2024 15:26:05 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.14356723427772522
03/25/2024 15:26:05 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.33798471093177795
03/25/2024 15:26:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:26:05 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:26:05 - INFO - __main__ - ID text: conll_2003_en_6
03/25/2024 15:27:01 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.1404622197151184
03/25/2024 15:27:01 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.33668598532676697
03/25/2024 15:27:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:27:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:27:01 - INFO - __main__ - ID text: conll_2003_en_7
03/25/2024 15:27:57 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.16074737906455994
03/25/2024 15:27:57 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.36031225323677063
03/25/2024 15:27:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:27:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:27:57 - INFO - __main__ - ID text: conll_2003_en_8
03/25/2024 15:28:52 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.15352830290794373
03/25/2024 15:28:52 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.35161349177360535
03/25/2024 15:28:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:28:52 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:28:52 - INFO - __main__ - ID text: conll_2003_en_9
03/25/2024 15:29:48 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.0366845540702343
03/25/2024 15:29:48 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.1560550332069397
03/25/2024 15:29:48 - INFO - __main__ - 
######## Language: hau ######## 

03/25/2024 15:29:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:29:48 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:29:48 - INFO - __main__ - ID text: hau_0
03/25/2024 15:30:44 - INFO - __main__ - Mean variance for hau_0: 0.025123706087470055
03/25/2024 15:30:44 - INFO - __main__ - Mean std for for hau_0: 0.11588853597640991
03/25/2024 15:30:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:30:44 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:30:44 - INFO - __main__ - ID text: hau_1
03/25/2024 15:31:39 - INFO - __main__ - Mean variance for hau_1: 0.03906060755252838
03/25/2024 15:31:39 - INFO - __main__ - Mean std for for hau_1: 0.1717938631772995
03/25/2024 15:31:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:31:39 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:31:39 - INFO - __main__ - ID text: hau_2
03/25/2024 15:32:35 - INFO - __main__ - Mean variance for hau_2: 0.15200349688529968
03/25/2024 15:32:35 - INFO - __main__ - Mean std for for hau_2: 0.34968283772468567
03/25/2024 15:32:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:32:35 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:32:35 - INFO - __main__ - ID text: hau_3
03/25/2024 15:33:31 - INFO - __main__ - Mean variance for hau_3: 0.015704452991485596
03/25/2024 15:33:31 - INFO - __main__ - Mean std for for hau_3: 0.0951317846775055
03/25/2024 15:33:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:33:31 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:33:31 - INFO - __main__ - ID text: hau_4
03/25/2024 15:34:27 - INFO - __main__ - Mean variance for hau_4: 0.025027954950928688
03/25/2024 15:34:27 - INFO - __main__ - Mean std for for hau_4: 0.12627828121185303
03/25/2024 15:34:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:34:27 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:34:27 - INFO - __main__ - ID text: hau_5
03/25/2024 15:35:22 - INFO - __main__ - Mean variance for hau_5: 0.022718369960784912
03/25/2024 15:35:22 - INFO - __main__ - Mean std for for hau_5: 0.11147681623697281
03/25/2024 15:35:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:35:22 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:35:22 - INFO - __main__ - ID text: hau_6
03/25/2024 15:36:18 - INFO - __main__ - Mean variance for hau_6: 0.034765250980854034
03/25/2024 15:36:18 - INFO - __main__ - Mean std for for hau_6: 0.147227942943573
03/25/2024 15:36:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:36:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:36:18 - INFO - __main__ - ID text: hau_7
03/25/2024 15:37:14 - INFO - __main__ - Mean variance for hau_7: 0.026213062927126884
03/25/2024 15:37:14 - INFO - __main__ - Mean std for for hau_7: 0.121513731777668
03/25/2024 15:37:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:37:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:37:14 - INFO - __main__ - ID text: hau_8
03/25/2024 15:38:09 - INFO - __main__ - Mean variance for hau_8: 0.022221580147743225
03/25/2024 15:38:09 - INFO - __main__ - Mean std for for hau_8: 0.1101631224155426
03/25/2024 15:38:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:38:09 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:38:09 - INFO - __main__ - ID text: hau_9
03/25/2024 15:39:08 - INFO - __main__ - Mean variance for hau_9: 0.03303602710366249
03/25/2024 15:39:08 - INFO - __main__ - Mean std for for hau_9: 0.1492931991815567
03/25/2024 15:39:09 - INFO - __main__ - 
######## Language: ibo ######## 

03/25/2024 15:39:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:39:09 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:39:09 - INFO - __main__ - ID text: ibo_0
03/25/2024 15:40:05 - INFO - __main__ - Mean variance for ibo_0: 0.032943304628133774
03/25/2024 15:40:05 - INFO - __main__ - Mean std for for ibo_0: 0.14462588727474213
03/25/2024 15:40:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:40:05 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:40:05 - INFO - __main__ - ID text: ibo_1
03/25/2024 15:41:01 - INFO - __main__ - Mean variance for ibo_1: 0.036596205085515976
03/25/2024 15:41:01 - INFO - __main__ - Mean std for for ibo_1: 0.15264396369457245
03/25/2024 15:41:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:41:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:41:01 - INFO - __main__ - ID text: ibo_2
03/25/2024 15:41:58 - INFO - __main__ - Mean variance for ibo_2: 0.029548728838562965
03/25/2024 15:41:58 - INFO - __main__ - Mean std for for ibo_2: 0.13442514836788177
03/25/2024 15:41:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:41:58 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:41:58 - INFO - __main__ - ID text: ibo_3
03/25/2024 15:42:54 - INFO - __main__ - Mean variance for ibo_3: 0.04008102789521217
03/25/2024 15:42:54 - INFO - __main__ - Mean std for for ibo_3: 0.17897844314575195
03/25/2024 15:42:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:42:54 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:42:54 - INFO - __main__ - ID text: ibo_4
03/25/2024 15:43:51 - INFO - __main__ - Mean variance for ibo_4: 0.0363379530608654
03/25/2024 15:43:51 - INFO - __main__ - Mean std for for ibo_4: 0.1518176645040512
03/25/2024 15:43:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:43:51 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:43:51 - INFO - __main__ - ID text: ibo_5
03/25/2024 15:44:48 - INFO - __main__ - Mean variance for ibo_5: 0.03578534349799156
03/25/2024 15:44:48 - INFO - __main__ - Mean std for for ibo_5: 0.15980885922908783
03/25/2024 15:44:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:44:48 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:44:48 - INFO - __main__ - ID text: ibo_6
03/25/2024 15:45:44 - INFO - __main__ - Mean variance for ibo_6: 0.03062276542186737
03/25/2024 15:45:44 - INFO - __main__ - Mean std for for ibo_6: 0.14082090556621552
03/25/2024 15:45:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:45:44 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:45:44 - INFO - __main__ - ID text: ibo_7
03/25/2024 15:46:41 - INFO - __main__ - Mean variance for ibo_7: 0.030605526641011238
03/25/2024 15:46:41 - INFO - __main__ - Mean std for for ibo_7: 0.13200198113918304
03/25/2024 15:46:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:46:41 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:46:41 - INFO - __main__ - ID text: ibo_8
03/25/2024 15:47:38 - INFO - __main__ - Mean variance for ibo_8: 0.03251507505774498
03/25/2024 15:47:38 - INFO - __main__ - Mean std for for ibo_8: 0.15657594799995422
03/25/2024 15:47:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:47:38 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:47:38 - INFO - __main__ - ID text: ibo_9
03/25/2024 15:48:34 - INFO - __main__ - Mean variance for ibo_9: 0.0291821900755167
03/25/2024 15:48:34 - INFO - __main__ - Mean std for for ibo_9: 0.13460274040699005
03/25/2024 15:48:34 - INFO - __main__ - 
######## Language: kin ######## 

03/25/2024 15:48:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:48:34 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:48:34 - INFO - __main__ - ID text: kin_0
03/25/2024 15:49:31 - INFO - __main__ - Mean variance for kin_0: 0.03221097216010094
03/25/2024 15:49:31 - INFO - __main__ - Mean std for for kin_0: 0.14225365221500397
03/25/2024 15:49:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:49:31 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:49:31 - INFO - __main__ - ID text: kin_1
03/25/2024 15:50:28 - INFO - __main__ - Mean variance for kin_1: 0.030982444062829018
03/25/2024 15:50:28 - INFO - __main__ - Mean std for for kin_1: 0.1381329894065857
03/25/2024 15:50:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:50:28 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:50:28 - INFO - __main__ - ID text: kin_2
03/25/2024 15:51:24 - INFO - __main__ - Mean variance for kin_2: 0.03908838704228401
03/25/2024 15:51:24 - INFO - __main__ - Mean std for for kin_2: 0.17838208377361298
03/25/2024 15:51:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:51:24 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:51:24 - INFO - __main__ - ID text: kin_3
03/25/2024 15:52:21 - INFO - __main__ - Mean variance for kin_3: 0.029142310842871666
03/25/2024 15:52:21 - INFO - __main__ - Mean std for for kin_3: 0.130406454205513
03/25/2024 15:52:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:52:21 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:52:21 - INFO - __main__ - ID text: kin_4
03/25/2024 15:53:18 - INFO - __main__ - Mean variance for kin_4: 0.02898239530622959
03/25/2024 15:53:18 - INFO - __main__ - Mean std for for kin_4: 0.12751920521259308
03/25/2024 15:53:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:53:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:53:18 - INFO - __main__ - ID text: kin_5
03/25/2024 15:54:14 - INFO - __main__ - Mean variance for kin_5: 0.02877686358988285
03/25/2024 15:54:14 - INFO - __main__ - Mean std for for kin_5: 0.15101258456707
03/25/2024 15:54:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:54:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:54:14 - INFO - __main__ - ID text: kin_6
03/25/2024 15:55:11 - INFO - __main__ - Mean variance for kin_6: 0.022456778213381767
03/25/2024 15:55:11 - INFO - __main__ - Mean std for for kin_6: 0.10805544257164001
03/25/2024 15:55:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:55:11 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:55:11 - INFO - __main__ - ID text: kin_7
03/25/2024 15:56:07 - INFO - __main__ - Mean variance for kin_7: 0.023296058177947998
03/25/2024 15:56:07 - INFO - __main__ - Mean std for for kin_7: 0.11885196715593338
03/25/2024 15:56:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:56:07 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:56:07 - INFO - __main__ - ID text: kin_8
03/25/2024 15:57:02 - INFO - __main__ - Mean variance for kin_8: 0.024694466963410378
03/25/2024 15:57:02 - INFO - __main__ - Mean std for for kin_8: 0.13425685465335846
03/25/2024 15:57:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:57:02 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:57:02 - INFO - __main__ - ID text: kin_9
03/25/2024 15:57:58 - INFO - __main__ - Mean variance for kin_9: 0.026915952563285828
03/25/2024 15:57:58 - INFO - __main__ - Mean std for for kin_9: 0.13816475868225098
03/25/2024 15:57:58 - INFO - __main__ - 
######## Language: lug ######## 

03/25/2024 15:57:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:57:58 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:57:58 - INFO - __main__ - ID text: lug_0
03/25/2024 15:58:53 - INFO - __main__ - Mean variance for lug_0: 0.022922048345208168
03/25/2024 15:58:53 - INFO - __main__ - Mean std for for lug_0: 0.11652051657438278
03/25/2024 15:58:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:58:53 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:58:53 - INFO - __main__ - ID text: lug_1
03/25/2024 15:59:49 - INFO - __main__ - Mean variance for lug_1: 0.028375566005706787
03/25/2024 15:59:49 - INFO - __main__ - Mean std for for lug_1: 0.12965665757656097
03/25/2024 15:59:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:59:49 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 15:59:49 - INFO - __main__ - ID text: lug_2
03/25/2024 16:00:44 - INFO - __main__ - Mean variance for lug_2: 0.018248258158564568
03/25/2024 16:00:44 - INFO - __main__ - Mean std for for lug_2: 0.09883538633584976
03/25/2024 16:00:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:00:44 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:00:44 - INFO - __main__ - ID text: lug_3
03/25/2024 16:01:40 - INFO - __main__ - Mean variance for lug_3: 0.021489910781383514
03/25/2024 16:01:40 - INFO - __main__ - Mean std for for lug_3: 0.1097501590847969
03/25/2024 16:01:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:01:40 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:01:40 - INFO - __main__ - ID text: lug_4
03/25/2024 16:02:35 - INFO - __main__ - Mean variance for lug_4: 0.034381166100502014
03/25/2024 16:02:35 - INFO - __main__ - Mean std for for lug_4: 0.1490022987127304
03/25/2024 16:02:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:02:35 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:02:35 - INFO - __main__ - ID text: lug_5
03/25/2024 16:03:31 - INFO - __main__ - Mean variance for lug_5: 0.03313746675848961
03/25/2024 16:03:31 - INFO - __main__ - Mean std for for lug_5: 0.13450917601585388
03/25/2024 16:03:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:03:31 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:03:31 - INFO - __main__ - ID text: lug_6
03/25/2024 16:04:26 - INFO - __main__ - Mean variance for lug_6: 0.028136441484093666
03/25/2024 16:04:26 - INFO - __main__ - Mean std for for lug_6: 0.12793536484241486
03/25/2024 16:04:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:04:26 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:04:26 - INFO - __main__ - ID text: lug_7
03/25/2024 16:05:22 - INFO - __main__ - Mean variance for lug_7: 0.03070901893079281
03/25/2024 16:05:22 - INFO - __main__ - Mean std for for lug_7: 0.14179934561252594
03/25/2024 16:05:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:05:22 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:05:22 - INFO - __main__ - ID text: lug_8
03/25/2024 16:06:17 - INFO - __main__ - Mean variance for lug_8: 0.03632200136780739
03/25/2024 16:06:17 - INFO - __main__ - Mean std for for lug_8: 0.14800621569156647
03/25/2024 16:06:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:06:17 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:06:17 - INFO - __main__ - ID text: lug_9
03/25/2024 16:07:13 - INFO - __main__ - Mean variance for lug_9: 0.033407073467969894
03/25/2024 16:07:13 - INFO - __main__ - Mean std for for lug_9: 0.1429721564054489
03/25/2024 16:07:13 - INFO - __main__ - 
######## Language: luo ######## 

03/25/2024 16:07:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:07:13 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:07:13 - INFO - __main__ - ID text: luo_0
03/25/2024 16:08:09 - INFO - __main__ - Mean variance for luo_0: 0.02358543872833252
03/25/2024 16:08:09 - INFO - __main__ - Mean std for for luo_0: 0.11298800259828568
03/25/2024 16:08:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:08:09 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:08:09 - INFO - __main__ - ID text: luo_1
03/25/2024 16:09:05 - INFO - __main__ - Mean variance for luo_1: 0.0342240035533905
03/25/2024 16:09:05 - INFO - __main__ - Mean std for for luo_1: 0.15523795783519745
03/25/2024 16:09:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:09:05 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:09:05 - INFO - __main__ - ID text: luo_2
03/25/2024 16:10:01 - INFO - __main__ - Mean variance for luo_2: 0.03250114992260933
03/25/2024 16:10:01 - INFO - __main__ - Mean std for for luo_2: 0.1347305327653885
03/25/2024 16:10:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:10:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:10:01 - INFO - __main__ - ID text: luo_3
03/25/2024 16:10:57 - INFO - __main__ - Mean variance for luo_3: 0.019837673753499985
03/25/2024 16:10:57 - INFO - __main__ - Mean std for for luo_3: 0.11006608605384827
03/25/2024 16:10:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:10:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:10:57 - INFO - __main__ - ID text: luo_4
03/25/2024 16:11:52 - INFO - __main__ - Mean variance for luo_4: 0.030891479924321175
03/25/2024 16:11:52 - INFO - __main__ - Mean std for for luo_4: 0.14357836544513702
03/25/2024 16:11:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:11:52 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:11:52 - INFO - __main__ - ID text: luo_5
03/25/2024 16:12:48 - INFO - __main__ - Mean variance for luo_5: 0.02619250863790512
03/25/2024 16:12:48 - INFO - __main__ - Mean std for for luo_5: 0.130756676197052
03/25/2024 16:12:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:12:48 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:12:48 - INFO - __main__ - ID text: luo_6
03/25/2024 16:13:44 - INFO - __main__ - Mean variance for luo_6: 0.03005809523165226
03/25/2024 16:13:44 - INFO - __main__ - Mean std for for luo_6: 0.13107259571552277
03/25/2024 16:13:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:13:44 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:13:44 - INFO - __main__ - ID text: luo_7
03/25/2024 16:14:40 - INFO - __main__ - Mean variance for luo_7: 0.04364561662077904
03/25/2024 16:14:40 - INFO - __main__ - Mean std for for luo_7: 0.1819741278886795
03/25/2024 16:14:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:14:40 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:14:40 - INFO - __main__ - ID text: luo_8
03/25/2024 16:15:36 - INFO - __main__ - Mean variance for luo_8: 0.032852653414011
03/25/2024 16:15:36 - INFO - __main__ - Mean std for for luo_8: 0.14512206614017487
03/25/2024 16:15:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:15:36 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:15:36 - INFO - __main__ - ID text: luo_9
03/25/2024 16:16:35 - INFO - __main__ - Mean variance for luo_9: 0.046553224325180054
03/25/2024 16:16:35 - INFO - __main__ - Mean std for for luo_9: 0.193087637424469
03/25/2024 16:16:35 - INFO - __main__ - 
######## Language: pcm ######## 

03/25/2024 16:16:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:16:36 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:16:36 - INFO - __main__ - ID text: pcm_0
03/25/2024 16:17:31 - INFO - __main__ - Mean variance for pcm_0: 0.032178886234760284
03/25/2024 16:17:31 - INFO - __main__ - Mean std for for pcm_0: 0.14992257952690125
03/25/2024 16:17:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:17:31 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:17:31 - INFO - __main__ - ID text: pcm_1
03/25/2024 16:18:27 - INFO - __main__ - Mean variance for pcm_1: 0.04377994313836098
03/25/2024 16:18:27 - INFO - __main__ - Mean std for for pcm_1: 0.18158333003520966
03/25/2024 16:18:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:18:27 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:18:27 - INFO - __main__ - ID text: pcm_2
03/25/2024 16:19:23 - INFO - __main__ - Mean variance for pcm_2: 0.030093541368842125
03/25/2024 16:19:23 - INFO - __main__ - Mean std for for pcm_2: 0.14188678562641144
03/25/2024 16:19:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:19:23 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:19:23 - INFO - __main__ - ID text: pcm_3
03/25/2024 16:20:19 - INFO - __main__ - Mean variance for pcm_3: 0.029885491356253624
03/25/2024 16:20:19 - INFO - __main__ - Mean std for for pcm_3: 0.13589610159397125
03/25/2024 16:20:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:20:19 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:20:19 - INFO - __main__ - ID text: pcm_4
03/25/2024 16:21:14 - INFO - __main__ - Mean variance for pcm_4: 0.034861404448747635
03/25/2024 16:21:14 - INFO - __main__ - Mean std for for pcm_4: 0.1455632448196411
03/25/2024 16:21:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:21:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:21:14 - INFO - __main__ - ID text: pcm_5
03/25/2024 16:22:10 - INFO - __main__ - Mean variance for pcm_5: 0.04639551416039467
03/25/2024 16:22:10 - INFO - __main__ - Mean std for for pcm_5: 0.19072622060775757
03/25/2024 16:22:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:22:10 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:22:10 - INFO - __main__ - ID text: pcm_6
03/25/2024 16:23:06 - INFO - __main__ - Mean variance for pcm_6: 0.03266752138733864
03/25/2024 16:23:06 - INFO - __main__ - Mean std for for pcm_6: 0.1451474279165268
03/25/2024 16:23:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:23:06 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:23:06 - INFO - __main__ - ID text: pcm_7
03/25/2024 16:24:01 - INFO - __main__ - Mean variance for pcm_7: 0.03295143321156502
03/25/2024 16:24:01 - INFO - __main__ - Mean std for for pcm_7: 0.1402187943458557
03/25/2024 16:24:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:24:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:24:01 - INFO - __main__ - ID text: pcm_8
03/25/2024 16:24:57 - INFO - __main__ - Mean variance for pcm_8: 0.027922211214900017
03/25/2024 16:24:57 - INFO - __main__ - Mean std for for pcm_8: 0.1290813684463501
03/25/2024 16:24:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:24:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:24:57 - INFO - __main__ - ID text: pcm_9
03/25/2024 16:25:53 - INFO - __main__ - Mean variance for pcm_9: 0.03450460359454155
03/25/2024 16:25:53 - INFO - __main__ - Mean std for for pcm_9: 0.15593808889389038
03/25/2024 16:25:53 - INFO - __main__ - 
######## Language: swa ######## 

03/25/2024 16:25:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:25:53 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:25:53 - INFO - __main__ - ID text: swa_0
03/25/2024 16:26:48 - INFO - __main__ - Mean variance for swa_0: 0.02961074374616146
03/25/2024 16:26:48 - INFO - __main__ - Mean std for for swa_0: 0.13012973964214325
03/25/2024 16:26:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:26:48 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:26:48 - INFO - __main__ - ID text: swa_1
03/25/2024 16:27:44 - INFO - __main__ - Mean variance for swa_1: 0.034047383815050125
03/25/2024 16:27:44 - INFO - __main__ - Mean std for for swa_1: 0.14980198442935944
03/25/2024 16:27:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:27:44 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:27:44 - INFO - __main__ - ID text: swa_2
03/25/2024 16:28:40 - INFO - __main__ - Mean variance for swa_2: 0.03275046870112419
03/25/2024 16:28:40 - INFO - __main__ - Mean std for for swa_2: 0.13744889199733734
03/25/2024 16:28:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:28:40 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:28:40 - INFO - __main__ - ID text: swa_3
03/25/2024 16:29:35 - INFO - __main__ - Mean variance for swa_3: 0.031797751784324646
03/25/2024 16:29:35 - INFO - __main__ - Mean std for for swa_3: 0.1512402594089508
03/25/2024 16:29:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:29:35 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:29:35 - INFO - __main__ - ID text: swa_4
03/25/2024 16:30:31 - INFO - __main__ - Mean variance for swa_4: 0.019130123779177666
03/25/2024 16:30:31 - INFO - __main__ - Mean std for for swa_4: 0.10600791126489639
03/25/2024 16:30:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:30:31 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:30:31 - INFO - __main__ - ID text: swa_5
03/25/2024 16:31:27 - INFO - __main__ - Mean variance for swa_5: 0.021603921428322792
03/25/2024 16:31:27 - INFO - __main__ - Mean std for for swa_5: 0.10851701349020004
03/25/2024 16:31:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:31:27 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:31:27 - INFO - __main__ - ID text: swa_6
03/25/2024 16:32:23 - INFO - __main__ - Mean variance for swa_6: 0.02456548996269703
03/25/2024 16:32:23 - INFO - __main__ - Mean std for for swa_6: 0.1193542554974556
03/25/2024 16:32:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:32:23 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:32:23 - INFO - __main__ - ID text: swa_7
03/25/2024 16:33:18 - INFO - __main__ - Mean variance for swa_7: 0.0455155186355114
03/25/2024 16:33:18 - INFO - __main__ - Mean std for for swa_7: 0.19222693145275116
03/25/2024 16:33:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:33:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:33:18 - INFO - __main__ - ID text: swa_8
03/25/2024 16:34:14 - INFO - __main__ - Mean variance for swa_8: 0.03391294181346893
03/25/2024 16:34:14 - INFO - __main__ - Mean std for for swa_8: 0.1532662957906723
03/25/2024 16:34:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:34:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:34:14 - INFO - __main__ - ID text: swa_9
03/25/2024 16:35:09 - INFO - __main__ - Mean variance for swa_9: 0.029716739431023598
03/25/2024 16:35:09 - INFO - __main__ - Mean std for for swa_9: 0.13982254266738892
03/25/2024 16:35:09 - INFO - __main__ - 
######## Language: wol ######## 

03/25/2024 16:35:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:35:09 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:35:09 - INFO - __main__ - ID text: wol_0
03/25/2024 16:36:05 - INFO - __main__ - Mean variance for wol_0: 0.028932221233844757
03/25/2024 16:36:05 - INFO - __main__ - Mean std for for wol_0: 0.12978637218475342
03/25/2024 16:36:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:36:05 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:36:05 - INFO - __main__ - ID text: wol_1
03/25/2024 16:37:01 - INFO - __main__ - Mean variance for wol_1: 0.03692101314663887
03/25/2024 16:37:01 - INFO - __main__ - Mean std for for wol_1: 0.15660429000854492
03/25/2024 16:37:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:37:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:37:01 - INFO - __main__ - ID text: wol_2
03/25/2024 16:37:57 - INFO - __main__ - Mean variance for wol_2: 0.035262223333120346
03/25/2024 16:37:57 - INFO - __main__ - Mean std for for wol_2: 0.1537356972694397
03/25/2024 16:37:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:37:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:37:57 - INFO - __main__ - ID text: wol_3
03/25/2024 16:38:52 - INFO - __main__ - Mean variance for wol_3: 0.05996175482869148
03/25/2024 16:38:52 - INFO - __main__ - Mean std for for wol_3: 0.21898265182971954
03/25/2024 16:38:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:38:52 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:38:52 - INFO - __main__ - ID text: wol_4
03/25/2024 16:39:48 - INFO - __main__ - Mean variance for wol_4: 0.03132763132452965
03/25/2024 16:39:48 - INFO - __main__ - Mean std for for wol_4: 0.15718978643417358
03/25/2024 16:39:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:39:48 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:39:48 - INFO - __main__ - ID text: wol_5
03/25/2024 16:40:44 - INFO - __main__ - Mean variance for wol_5: 0.030599521473050117
03/25/2024 16:40:44 - INFO - __main__ - Mean std for for wol_5: 0.1393737941980362
03/25/2024 16:40:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:40:44 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:40:44 - INFO - __main__ - ID text: wol_6
03/25/2024 16:41:39 - INFO - __main__ - Mean variance for wol_6: 0.1387772560119629
03/25/2024 16:41:39 - INFO - __main__ - Mean std for for wol_6: 0.32758331298828125
03/25/2024 16:41:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:41:39 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:41:39 - INFO - __main__ - ID text: wol_7
03/25/2024 16:42:35 - INFO - __main__ - Mean variance for wol_7: 0.034390490502119064
03/25/2024 16:42:35 - INFO - __main__ - Mean std for for wol_7: 0.15374550223350525
03/25/2024 16:42:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:42:35 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:42:35 - INFO - __main__ - ID text: wol_8
03/25/2024 16:43:30 - INFO - __main__ - Mean variance for wol_8: 0.0422639399766922
03/25/2024 16:43:30 - INFO - __main__ - Mean std for for wol_8: 0.18186074495315552
03/25/2024 16:43:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:43:30 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:43:30 - INFO - __main__ - ID text: wol_9
03/25/2024 16:44:26 - INFO - __main__ - Mean variance for wol_9: 0.030226200819015503
03/25/2024 16:44:26 - INFO - __main__ - Mean std for for wol_9: 0.15157562494277954
03/25/2024 16:44:26 - INFO - __main__ - 
######## Language: yor ######## 

03/25/2024 16:44:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:44:26 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:44:26 - INFO - __main__ - ID text: yor_0
03/25/2024 16:45:22 - INFO - __main__ - Mean variance for yor_0: 0.12889181077480316
03/25/2024 16:45:22 - INFO - __main__ - Mean std for for yor_0: 0.30843308568000793
03/25/2024 16:45:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:45:22 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:45:22 - INFO - __main__ - ID text: yor_1
03/25/2024 16:46:18 - INFO - __main__ - Mean variance for yor_1: 0.12666864693164825
03/25/2024 16:46:18 - INFO - __main__ - Mean std for for yor_1: 0.29956838488578796
03/25/2024 16:46:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:46:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:46:18 - INFO - __main__ - ID text: yor_2
03/25/2024 16:47:13 - INFO - __main__ - Mean variance for yor_2: 0.03654323145747185
03/25/2024 16:47:13 - INFO - __main__ - Mean std for for yor_2: 0.15236322581768036
03/25/2024 16:47:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:47:13 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:47:13 - INFO - __main__ - ID text: yor_3
03/25/2024 16:48:09 - INFO - __main__ - Mean variance for yor_3: 0.025658493861556053
03/25/2024 16:48:09 - INFO - __main__ - Mean std for for yor_3: 0.12435764819383621
03/25/2024 16:48:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:48:09 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:48:09 - INFO - __main__ - ID text: yor_4
03/25/2024 16:49:05 - INFO - __main__ - Mean variance for yor_4: 0.11892161518335342
03/25/2024 16:49:05 - INFO - __main__ - Mean std for for yor_4: 0.2945312559604645
03/25/2024 16:49:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:49:05 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:49:05 - INFO - __main__ - ID text: yor_5
03/25/2024 16:50:00 - INFO - __main__ - Mean variance for yor_5: 0.08686476200819016
03/25/2024 16:50:00 - INFO - __main__ - Mean std for for yor_5: 0.23471921682357788
03/25/2024 16:50:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:50:00 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:50:00 - INFO - __main__ - ID text: yor_6
03/25/2024 16:50:56 - INFO - __main__ - Mean variance for yor_6: 0.028920307755470276
03/25/2024 16:50:56 - INFO - __main__ - Mean std for for yor_6: 0.14169222116470337
03/25/2024 16:50:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:50:56 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:50:56 - INFO - __main__ - ID text: yor_7
03/25/2024 16:51:52 - INFO - __main__ - Mean variance for yor_7: 0.11996806412935257
03/25/2024 16:51:52 - INFO - __main__ - Mean std for for yor_7: 0.2926804721355438
03/25/2024 16:51:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:51:52 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:51:52 - INFO - __main__ - ID text: yor_8
03/25/2024 16:52:47 - INFO - __main__ - Mean variance for yor_8: 0.029100773856043816
03/25/2024 16:52:47 - INFO - __main__ - Mean std for for yor_8: 0.1300213783979416
03/25/2024 16:52:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:52:47 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:52:47 - INFO - __main__ - ID text: yor_9
03/25/2024 16:53:43 - INFO - __main__ - Mean variance for yor_9: 0.11338469386100769
03/25/2024 16:53:43 - INFO - __main__ - Mean std for for yor_9: 0.285733699798584
03/25/2024 16:53:43 - INFO - __main__ - 
######## Language: zh ######## 

03/25/2024 16:53:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:53:43 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:53:43 - INFO - __main__ - ID text: zh_0
03/25/2024 16:54:39 - INFO - __main__ - Mean variance for zh_0: 0.14305688440799713
03/25/2024 16:54:39 - INFO - __main__ - Mean std for for zh_0: 0.3358156979084015
03/25/2024 16:54:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:54:39 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:54:39 - INFO - __main__ - ID text: zh_1
03/25/2024 16:55:35 - INFO - __main__ - Mean variance for zh_1: 0.09738585352897644
03/25/2024 16:55:35 - INFO - __main__ - Mean std for for zh_1: 0.25052496790885925
03/25/2024 16:55:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:55:35 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:55:35 - INFO - __main__ - ID text: zh_2
03/25/2024 16:56:31 - INFO - __main__ - Mean variance for zh_2: 0.12132909893989563
03/25/2024 16:56:31 - INFO - __main__ - Mean std for for zh_2: 0.2914426326751709
03/25/2024 16:56:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:56:31 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:56:31 - INFO - __main__ - ID text: zh_3
03/25/2024 16:57:27 - INFO - __main__ - Mean variance for zh_3: 0.14694161713123322
03/25/2024 16:57:27 - INFO - __main__ - Mean std for for zh_3: 0.33839020133018494
03/25/2024 16:57:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:57:27 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:57:27 - INFO - __main__ - ID text: zh_4
03/25/2024 16:58:23 - INFO - __main__ - Mean variance for zh_4: 0.13890396058559418
03/25/2024 16:58:23 - INFO - __main__ - Mean std for for zh_4: 0.3300999104976654
03/25/2024 16:58:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:58:23 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:58:23 - INFO - __main__ - ID text: zh_5
03/25/2024 16:59:19 - INFO - __main__ - Mean variance for zh_5: 0.1036636233329773
03/25/2024 16:59:19 - INFO - __main__ - Mean std for for zh_5: 0.28824514150619507
03/25/2024 16:59:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:59:20 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 16:59:20 - INFO - __main__ - ID text: zh_6
03/25/2024 17:00:16 - INFO - __main__ - Mean variance for zh_6: 0.1078798696398735
03/25/2024 17:00:16 - INFO - __main__ - Mean std for for zh_6: 0.2657252252101898
03/25/2024 17:00:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:00:16 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:00:16 - INFO - __main__ - ID text: zh_7
03/25/2024 17:01:14 - INFO - __main__ - Mean variance for zh_7: 0.12803223729133606
03/25/2024 17:01:14 - INFO - __main__ - Mean std for for zh_7: 0.3076940178871155
03/25/2024 17:01:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:01:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:01:14 - INFO - __main__ - ID text: zh_8
03/25/2024 17:02:10 - INFO - __main__ - Mean variance for zh_8: 0.12369831651449203
03/25/2024 17:02:10 - INFO - __main__ - Mean std for for zh_8: 0.29460227489471436
03/25/2024 17:02:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:02:10 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:02:10 - INFO - __main__ - ID text: zh_9
03/25/2024 17:03:05 - INFO - __main__ - Mean variance for zh_9: 0.11837705224752426
03/25/2024 17:03:05 - INFO - __main__ - Mean std for for zh_9: 0.27794304490089417
03/25/2024 17:03:05 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/25/2024 17:03:05 - INFO - __main__ - 
######## Language: arabic ######## 

03/25/2024 17:03:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:03:05 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:03:05 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/25/2024 17:04:01 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.04577866569161415
03/25/2024 17:04:01 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.1771780252456665
03/25/2024 17:04:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:04:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:04:01 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/25/2024 17:04:57 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.03570421040058136
03/25/2024 17:04:57 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.14570355415344238
03/25/2024 17:04:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:04:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:04:57 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/25/2024 17:05:53 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.035150930285453796
03/25/2024 17:05:53 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.14703063666820526
03/25/2024 17:05:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:05:53 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:05:53 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/25/2024 17:06:49 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.03638255596160889
03/25/2024 17:06:49 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.14979200065135956
03/25/2024 17:06:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:06:49 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:06:49 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/25/2024 17:07:45 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.10321372747421265
03/25/2024 17:07:45 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.26698195934295654
03/25/2024 17:07:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:07:45 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:07:45 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/25/2024 17:08:41 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.037358444184064865
03/25/2024 17:08:41 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.1499299257993698
03/25/2024 17:08:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:08:41 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:08:41 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/25/2024 17:09:37 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.035979896783828735
03/25/2024 17:09:37 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.1494988203048706
03/25/2024 17:09:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:09:37 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:09:37 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/25/2024 17:10:33 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.038170043379068375
03/25/2024 17:10:33 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.15324953198432922
03/25/2024 17:10:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:10:33 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:10:33 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/25/2024 17:11:29 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.031309571117162704
03/25/2024 17:11:29 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.13747690618038177
03/25/2024 17:11:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:11:30 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:11:30 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/25/2024 17:12:26 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.03217505291104317
03/25/2024 17:12:26 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.13966313004493713
03/25/2024 17:12:26 - INFO - __main__ - 
######## Language: russian ######## 

03/25/2024 17:12:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:12:26 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:12:26 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/25/2024 17:13:22 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.01890055648982525
03/25/2024 17:13:22 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.10630551725625992
03/25/2024 17:13:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:13:22 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:13:22 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/25/2024 17:14:18 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.03180288150906563
03/25/2024 17:14:18 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.13748674094676971
03/25/2024 17:14:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:14:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:14:18 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/25/2024 17:15:14 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.01784195564687252
03/25/2024 17:15:14 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.10175987333059311
03/25/2024 17:15:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:15:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:15:14 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/25/2024 17:16:10 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.02261742390692234
03/25/2024 17:16:10 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.11603111773729324
03/25/2024 17:16:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:16:10 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:16:10 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/25/2024 17:17:06 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.01958289183676243
03/25/2024 17:17:06 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.10622004419565201
03/25/2024 17:17:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:17:06 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:17:06 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/25/2024 17:18:02 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.022236300632357597
03/25/2024 17:18:02 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.11517912149429321
03/25/2024 17:18:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:18:02 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:18:02 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/25/2024 17:18:58 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.03438938036561012
03/25/2024 17:18:58 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.15250658988952637
03/25/2024 17:18:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:18:58 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:18:58 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/25/2024 17:19:54 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.021117711439728737
03/25/2024 17:19:54 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.11222711950540543
03/25/2024 17:19:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:19:54 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:19:54 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/25/2024 17:20:51 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.037594858556985855
03/25/2024 17:20:51 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.14828374981880188
03/25/2024 17:20:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:20:51 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:20:51 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/25/2024 17:21:48 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.021916301921010017
03/25/2024 17:21:48 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.11306864023208618
03/25/2024 17:21:48 - INFO - __main__ - 
######## Language: bengali ######## 

03/25/2024 17:21:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:21:49 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:21:49 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/25/2024 17:22:44 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.07941381633281708
03/25/2024 17:22:44 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.22592003643512726
03/25/2024 17:22:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:22:44 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:22:44 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/25/2024 17:23:40 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.07763556391000748
03/25/2024 17:23:40 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.2232271283864975
03/25/2024 17:23:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:23:40 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:23:40 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/25/2024 17:24:37 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.08467862755060196
03/25/2024 17:24:37 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.23197853565216064
03/25/2024 17:24:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:24:37 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:24:37 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/25/2024 17:25:32 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.08411697298288345
03/25/2024 17:25:32 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.23176677525043488
03/25/2024 17:25:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:25:32 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:25:32 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/25/2024 17:26:28 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.0968523696064949
03/25/2024 17:26:28 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.24608857929706573
03/25/2024 17:26:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:26:28 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:26:28 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/25/2024 17:27:24 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.0820005014538765
03/25/2024 17:27:24 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.22778333723545074
03/25/2024 17:27:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:27:24 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:27:24 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/25/2024 17:28:20 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.0817914679646492
03/25/2024 17:28:20 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.22896336019039154
03/25/2024 17:28:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:28:20 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:28:20 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/25/2024 17:29:16 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.08161170035600662
03/25/2024 17:29:16 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.22748027741909027
03/25/2024 17:29:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:29:16 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:29:16 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/25/2024 17:30:11 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.07912704348564148
03/25/2024 17:30:11 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.22488953173160553
03/25/2024 17:30:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:30:12 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:30:12 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/25/2024 17:31:07 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.10668343305587769
03/25/2024 17:31:07 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.272320032119751
03/25/2024 17:31:07 - INFO - __main__ - 
######## Language: telugu ######## 

03/25/2024 17:31:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:31:07 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:31:07 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/25/2024 17:32:03 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.06000295653939247
03/25/2024 17:32:03 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.18863236904144287
03/25/2024 17:32:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:32:03 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:32:03 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/25/2024 17:32:59 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.03463289514183998
03/25/2024 17:32:59 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.14458151161670685
03/25/2024 17:32:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:32:59 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:32:59 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/25/2024 17:33:55 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.03543538972735405
03/25/2024 17:33:55 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.1444951891899109
03/25/2024 17:33:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:33:55 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:33:55 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/25/2024 17:34:51 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.035957518965005875
03/25/2024 17:34:51 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.14799585938453674
03/25/2024 17:34:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:34:51 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:34:51 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/25/2024 17:35:46 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.028976192697882652
03/25/2024 17:35:46 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.13059616088867188
03/25/2024 17:35:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:35:46 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:35:46 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/25/2024 17:36:42 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.03189719095826149
03/25/2024 17:36:42 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.13736282289028168
03/25/2024 17:36:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:36:42 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:36:42 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/25/2024 17:37:38 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.08863252401351929
03/25/2024 17:37:38 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.23447366058826447
03/25/2024 17:37:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:37:38 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:37:38 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/25/2024 17:38:34 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.031087622046470642
03/25/2024 17:38:34 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.13850969076156616
03/25/2024 17:38:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:38:34 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:38:34 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/25/2024 17:39:29 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.03393526375293732
03/25/2024 17:39:29 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.14462344348430634
03/25/2024 17:39:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:39:29 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:39:29 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/25/2024 17:40:25 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.02872077375650406
03/25/2024 17:40:25 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.13048149645328522
03/25/2024 17:40:25 - INFO - __main__ - 
######## Language: finnish ######## 

03/25/2024 17:40:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:40:25 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:40:25 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/25/2024 17:41:21 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.029408885166049004
03/25/2024 17:41:21 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.12700892984867096
03/25/2024 17:41:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:41:21 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:41:21 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/25/2024 17:42:17 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.0322154238820076
03/25/2024 17:42:17 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.13553817570209503
03/25/2024 17:42:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:42:17 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:42:17 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/25/2024 17:43:13 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.04987639561295509
03/25/2024 17:43:13 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.1793900728225708
03/25/2024 17:43:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:43:13 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:43:13 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/25/2024 17:44:09 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.03947475925087929
03/25/2024 17:44:09 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.14487865567207336
03/25/2024 17:44:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:44:09 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:44:09 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/25/2024 17:45:04 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.03321803733706474
03/25/2024 17:45:04 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.13739927113056183
03/25/2024 17:45:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:45:04 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:45:04 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/25/2024 17:46:00 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.0127062126994133
03/25/2024 17:46:00 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.08608195930719376
03/25/2024 17:46:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:46:00 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:46:00 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/25/2024 17:46:56 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.013166877441108227
03/25/2024 17:46:56 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.08900255709886551
03/25/2024 17:46:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:46:56 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:46:56 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/25/2024 17:47:52 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.04998057708144188
03/25/2024 17:47:52 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.17853868007659912
03/25/2024 17:47:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:47:52 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:47:52 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/25/2024 17:48:47 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.02123635821044445
03/25/2024 17:48:47 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.10860712081193924
03/25/2024 17:48:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:48:47 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:48:47 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/25/2024 17:49:43 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.0149071728810668
03/25/2024 17:49:43 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.09497606754302979
03/25/2024 17:49:43 - INFO - __main__ - 
######## Language: swahili ######## 

03/25/2024 17:49:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:49:43 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:49:43 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/25/2024 17:50:39 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.030726661905646324
03/25/2024 17:50:39 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.1347082108259201
03/25/2024 17:50:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:50:39 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:50:39 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/25/2024 17:51:35 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.01756385900080204
03/25/2024 17:51:35 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.10031399130821228
03/25/2024 17:51:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:51:35 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:51:35 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/25/2024 17:52:31 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.027506379410624504
03/25/2024 17:52:31 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.12423371523618698
03/25/2024 17:52:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:52:31 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:52:31 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/25/2024 17:53:26 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.018361425027251244
03/25/2024 17:53:26 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.10417711734771729
03/25/2024 17:53:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:53:26 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:53:26 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/25/2024 17:54:22 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.014537922106683254
03/25/2024 17:54:22 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.09122449159622192
03/25/2024 17:54:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:54:22 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:54:22 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/25/2024 17:55:18 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.032691363245248795
03/25/2024 17:55:18 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.14452014863491058
03/25/2024 17:55:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:55:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:55:18 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/25/2024 17:56:14 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.030227089300751686
03/25/2024 17:56:14 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.1287376582622528
03/25/2024 17:56:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:56:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:56:14 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/25/2024 17:57:10 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.030995937064290047
03/25/2024 17:57:10 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.13141655921936035
03/25/2024 17:57:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:57:10 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:57:10 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/25/2024 17:58:05 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.01875297911465168
03/25/2024 17:58:05 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.10118646174669266
03/25/2024 17:58:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:58:06 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:58:06 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/25/2024 17:59:01 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.019413715228438377
03/25/2024 17:59:01 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.10538945347070694
03/25/2024 17:59:01 - INFO - __main__ - 
######## Language: korean ######## 

03/25/2024 17:59:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:59:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:59:01 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/25/2024 17:59:57 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.0768982395529747
03/25/2024 17:59:57 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.21755658090114594
03/25/2024 17:59:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:59:59 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 17:59:59 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/25/2024 18:00:55 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.03026164509356022
03/25/2024 18:00:55 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.14017798006534576
03/25/2024 18:00:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:00:55 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:00:55 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/25/2024 18:01:51 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.026170486584305763
03/25/2024 18:01:51 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.12830595672130585
03/25/2024 18:01:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:01:51 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:01:51 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/25/2024 18:02:47 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.0300274845212698
03/25/2024 18:02:47 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.13524854183197021
03/25/2024 18:02:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:02:47 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:02:47 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/25/2024 18:03:43 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.09436199814081192
03/25/2024 18:03:43 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.2437794953584671
03/25/2024 18:03:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:03:43 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:03:43 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/25/2024 18:04:39 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.02908671833574772
03/25/2024 18:04:39 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.1337321251630783
03/25/2024 18:04:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:04:39 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:04:39 - INFO - __main__ - ID text: korean-148115504649351135-0
03/25/2024 18:05:35 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.03584090247750282
03/25/2024 18:05:35 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.15100954473018646
03/25/2024 18:05:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:05:35 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:05:35 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/25/2024 18:06:33 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.08736208081245422
03/25/2024 18:06:33 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.23299187421798706
03/25/2024 18:06:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:06:34 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:06:34 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/25/2024 18:07:30 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.09842536598443985
03/25/2024 18:07:30 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.24947501718997955
03/25/2024 18:07:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:07:30 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:07:30 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/25/2024 18:08:26 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.16369663178920746
03/25/2024 18:08:26 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.34726962447166443
03/25/2024 18:08:27 - INFO - __main__ - 
######## Language: indonesian ######## 

03/25/2024 18:08:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:08:27 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:08:27 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/25/2024 18:09:23 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.016586802899837494
03/25/2024 18:09:23 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.09832374006509781
03/25/2024 18:09:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:09:23 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:09:23 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/25/2024 18:10:19 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.049600452184677124
03/25/2024 18:10:19 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.18147487938404083
03/25/2024 18:10:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:10:19 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:10:19 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/25/2024 18:11:16 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.016225412487983704
03/25/2024 18:11:16 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.09776825457811356
03/25/2024 18:11:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:11:16 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:11:16 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/25/2024 18:12:12 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.02169177494943142
03/25/2024 18:12:12 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.11114683002233505
03/25/2024 18:12:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:12:12 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:12:12 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/25/2024 18:13:08 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.013160289265215397
03/25/2024 18:13:08 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.09029236435890198
03/25/2024 18:13:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:13:08 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:13:08 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/25/2024 18:14:04 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.01821546070277691
03/25/2024 18:14:04 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.10018313676118851
03/25/2024 18:14:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:14:04 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:14:04 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/25/2024 18:15:01 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.011988922953605652
03/25/2024 18:15:01 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.08465638011693954
03/25/2024 18:15:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:15:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:15:01 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/25/2024 18:15:57 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.031528908759355545
03/25/2024 18:15:57 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.13137377798557281
03/25/2024 18:15:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:15:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:15:57 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/25/2024 18:16:53 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.021212110295891762
03/25/2024 18:16:53 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.10767290741205215
03/25/2024 18:16:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:16:53 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:16:53 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/25/2024 18:17:49 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.013211138546466827
03/25/2024 18:17:49 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.08934032171964645
03/25/2024 18:17:49 - INFO - __main__ - 
######## Language: english ######## 

03/25/2024 18:17:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:17:49 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:17:49 - INFO - __main__ - ID text: english-2852412434797041176-6
03/25/2024 18:18:45 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.09072688221931458
03/25/2024 18:18:45 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.25103965401649475
03/25/2024 18:18:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:18:45 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:18:45 - INFO - __main__ - ID text: english--1463732605740571606-0
03/25/2024 18:19:41 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.019262589514255524
03/25/2024 18:19:41 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.10384863615036011
03/25/2024 18:19:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:19:41 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:19:41 - INFO - __main__ - ID text: english-5441411281255470421-0
03/25/2024 18:20:38 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.01954805850982666
03/25/2024 18:20:38 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.10447507351636887
03/25/2024 18:20:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:20:38 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:20:38 - INFO - __main__ - ID text: english-7294054492486093447-1
03/25/2024 18:21:34 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.01887424848973751
03/25/2024 18:21:34 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.10222256183624268
03/25/2024 18:21:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:21:34 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:21:34 - INFO - __main__ - ID text: english-8820750127045023244-0
03/25/2024 18:22:30 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.034215882420539856
03/25/2024 18:22:30 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.1371791809797287
03/25/2024 18:22:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:22:30 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:22:30 - INFO - __main__ - ID text: english--506693546683012611-2
03/25/2024 18:23:27 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.04306824132800102
03/25/2024 18:23:27 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.15696921944618225
03/25/2024 18:23:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:23:27 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:23:27 - INFO - __main__ - ID text: english-745411798111651115-0
03/25/2024 18:24:23 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.02171166241168976
03/25/2024 18:24:23 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.10726779699325562
03/25/2024 18:24:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:24:23 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:24:23 - INFO - __main__ - ID text: english-7740772185887912651-0
03/25/2024 18:25:19 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.01853545755147934
03/25/2024 18:25:19 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.10044202953577042
03/25/2024 18:25:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:25:20 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:25:20 - INFO - __main__ - ID text: english-383873188776267137-19
03/25/2024 18:26:16 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.01741778664290905
03/25/2024 18:26:16 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.09732213616371155
03/25/2024 18:26:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:26:17 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:26:17 - INFO - __main__ - ID text: english--8277537578703156284-0
03/25/2024 18:27:14 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.01891453005373478
03/25/2024 18:27:14 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.10349419713020325
03/25/2024 18:27:14 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/25/2024 18:27:14 - INFO - __main__ - 
######## Language: cola ######## 

03/25/2024 18:27:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:27:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:27:14 - INFO - __main__ - ID text: cola_228
03/25/2024 18:28:11 - INFO - __main__ - Mean variance for cola_228: 0.0566057525575161
03/25/2024 18:28:11 - INFO - __main__ - Mean std for for cola_228: 0.2069348841905594
03/25/2024 18:28:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:28:11 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:28:11 - INFO - __main__ - ID text: cola_51
03/25/2024 18:29:07 - INFO - __main__ - Mean variance for cola_51: 0.039723265916109085
03/25/2024 18:29:07 - INFO - __main__ - Mean std for for cola_51: 0.1742616891860962
03/25/2024 18:29:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:29:07 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:29:07 - INFO - __main__ - ID text: cola_563
03/25/2024 18:30:04 - INFO - __main__ - Mean variance for cola_563: 0.13878458738327026
03/25/2024 18:30:04 - INFO - __main__ - Mean std for for cola_563: 0.3345921039581299
03/25/2024 18:30:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:30:04 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:30:04 - INFO - __main__ - ID text: cola_501
03/25/2024 18:31:01 - INFO - __main__ - Mean variance for cola_501: 0.04768158122897148
03/25/2024 18:31:01 - INFO - __main__ - Mean std for for cola_501: 0.1910645216703415
03/25/2024 18:31:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:31:01 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:31:01 - INFO - __main__ - ID text: cola_457
03/25/2024 18:31:57 - INFO - __main__ - Mean variance for cola_457: 0.048442285507917404
03/25/2024 18:31:57 - INFO - __main__ - Mean std for for cola_457: 0.19371388852596283
03/25/2024 18:31:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:31:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:31:57 - INFO - __main__ - ID text: cola_285
03/25/2024 18:32:54 - INFO - __main__ - Mean variance for cola_285: 0.04731467366218567
03/25/2024 18:32:54 - INFO - __main__ - Mean std for for cola_285: 0.19344912469387054
03/25/2024 18:32:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:32:54 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:32:54 - INFO - __main__ - ID text: cola_209
03/25/2024 18:33:51 - INFO - __main__ - Mean variance for cola_209: 0.04336516186594963
03/25/2024 18:33:51 - INFO - __main__ - Mean std for for cola_209: 0.18411503732204437
03/25/2024 18:33:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:33:51 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:33:51 - INFO - __main__ - ID text: cola_178
03/25/2024 18:34:47 - INFO - __main__ - Mean variance for cola_178: 0.04561183229088783
03/25/2024 18:34:47 - INFO - __main__ - Mean std for for cola_178: 0.18911461532115936
03/25/2024 18:34:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:34:47 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:34:47 - INFO - __main__ - ID text: cola_864
03/25/2024 18:35:44 - INFO - __main__ - Mean variance for cola_864: 0.04889679327607155
03/25/2024 18:35:44 - INFO - __main__ - Mean std for for cola_864: 0.19851045310497284
03/25/2024 18:35:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:35:44 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:35:44 - INFO - __main__ - ID text: cola_65
03/25/2024 18:36:40 - INFO - __main__ - Mean variance for cola_65: 0.040979232639074326
03/25/2024 18:36:40 - INFO - __main__ - Mean std for for cola_65: 0.17383162677288055
03/25/2024 18:36:40 - INFO - __main__ - 
######## Language: mnli ######## 

03/25/2024 18:36:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:36:40 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:36:40 - INFO - __main__ - ID text: mnli_488
03/25/2024 18:37:37 - INFO - __main__ - Mean variance for mnli_488: 0.04527351260185242
03/25/2024 18:37:37 - INFO - __main__ - Mean std for for mnli_488: 0.16478735208511353
03/25/2024 18:37:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:37:37 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:37:37 - INFO - __main__ - ID text: mnli_1535
03/25/2024 18:38:34 - INFO - __main__ - Mean variance for mnli_1535: 0.043973714113235474
03/25/2024 18:38:34 - INFO - __main__ - Mean std for for mnli_1535: 0.16298849880695343
03/25/2024 18:38:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:38:34 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:38:34 - INFO - __main__ - ID text: mnli_3582
03/25/2024 18:39:30 - INFO - __main__ - Mean variance for mnli_3582: 0.0485299788415432
03/25/2024 18:39:30 - INFO - __main__ - Mean std for for mnli_3582: 0.18386633694171906
03/25/2024 18:39:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:39:30 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:39:30 - INFO - __main__ - ID text: mnli_3811
03/25/2024 18:40:27 - INFO - __main__ - Mean variance for mnli_3811: 0.05090966820716858
03/25/2024 18:40:27 - INFO - __main__ - Mean std for for mnli_3811: 0.17937302589416504
03/25/2024 18:40:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:40:28 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:40:28 - INFO - __main__ - ID text: mnli_8279
03/25/2024 18:41:24 - INFO - __main__ - Mean variance for mnli_8279: 0.03418196365237236
03/25/2024 18:41:24 - INFO - __main__ - Mean std for for mnli_8279: 0.1554502546787262
03/25/2024 18:41:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:41:24 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:41:24 - INFO - __main__ - ID text: mnli_434
03/25/2024 18:42:22 - INFO - __main__ - Mean variance for mnli_434: 0.03515086695551872
03/25/2024 18:42:22 - INFO - __main__ - Mean std for for mnli_434: 0.13893651962280273
03/25/2024 18:42:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:42:22 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:42:22 - INFO - __main__ - ID text: mnli_9195
03/25/2024 18:43:18 - INFO - __main__ - Mean variance for mnli_9195: 0.044333551079034805
03/25/2024 18:43:18 - INFO - __main__ - Mean std for for mnli_9195: 0.18813316524028778
03/25/2024 18:43:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:43:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:43:18 - INFO - __main__ - ID text: mnli_3257
03/25/2024 18:44:15 - INFO - __main__ - Mean variance for mnli_3257: 0.045676689594984055
03/25/2024 18:44:15 - INFO - __main__ - Mean std for for mnli_3257: 0.17733895778656006
03/25/2024 18:44:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:44:15 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:44:15 - INFO - __main__ - ID text: mnli_8928
03/25/2024 18:45:11 - INFO - __main__ - Mean variance for mnli_8928: 0.046418774873018265
03/25/2024 18:45:11 - INFO - __main__ - Mean std for for mnli_8928: 0.1621129959821701
03/25/2024 18:45:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:45:11 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:45:11 - INFO - __main__ - ID text: mnli_6873
03/25/2024 18:46:07 - INFO - __main__ - Mean variance for mnli_6873: 0.039402373135089874
03/25/2024 18:46:07 - INFO - __main__ - Mean std for for mnli_6873: 0.1503666788339615
03/25/2024 18:46:07 - INFO - __main__ - 
######## Language: mrpc ######## 

03/25/2024 18:46:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:46:07 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:46:07 - INFO - __main__ - ID text: mrpc_451
03/25/2024 18:47:04 - INFO - __main__ - Mean variance for mrpc_451: 0.043856143951416016
03/25/2024 18:47:04 - INFO - __main__ - Mean std for for mrpc_451: 0.15928135812282562
03/25/2024 18:47:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:47:04 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:47:04 - INFO - __main__ - ID text: mrpc_919
03/25/2024 18:48:00 - INFO - __main__ - Mean variance for mrpc_919: 0.04214799776673317
03/25/2024 18:48:00 - INFO - __main__ - Mean std for for mrpc_919: 0.15792150795459747
03/25/2024 18:48:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:48:00 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:48:00 - INFO - __main__ - ID text: mrpc_1206
03/25/2024 18:48:56 - INFO - __main__ - Mean variance for mrpc_1206: 0.04303092136979103
03/25/2024 18:48:56 - INFO - __main__ - Mean std for for mrpc_1206: 0.16823579370975494
03/25/2024 18:48:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:48:56 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:48:56 - INFO - __main__ - ID text: mrpc_569
03/25/2024 18:49:53 - INFO - __main__ - Mean variance for mrpc_569: 0.043107837438583374
03/25/2024 18:49:53 - INFO - __main__ - Mean std for for mrpc_569: 0.16084174811840057
03/25/2024 18:49:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:49:53 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:49:53 - INFO - __main__ - ID text: mrpc_1657
03/25/2024 18:50:49 - INFO - __main__ - Mean variance for mrpc_1657: 0.03547656908631325
03/25/2024 18:50:49 - INFO - __main__ - Mean std for for mrpc_1657: 0.14093545079231262
03/25/2024 18:50:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:50:49 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:50:49 - INFO - __main__ - ID text: mrpc_13
03/25/2024 18:51:45 - INFO - __main__ - Mean variance for mrpc_13: 0.049538325518369675
03/25/2024 18:51:45 - INFO - __main__ - Mean std for for mrpc_13: 0.16880489885807037
03/25/2024 18:51:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:51:47 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:51:47 - INFO - __main__ - ID text: mrpc_1554
03/25/2024 18:52:43 - INFO - __main__ - Mean variance for mrpc_1554: 0.03419344872236252
03/25/2024 18:52:43 - INFO - __main__ - Mean std for for mrpc_1554: 0.13814042508602142
03/25/2024 18:52:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:52:43 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:52:43 - INFO - __main__ - ID text: mrpc_1650
03/25/2024 18:53:40 - INFO - __main__ - Mean variance for mrpc_1650: 0.12379353493452072
03/25/2024 18:53:40 - INFO - __main__ - Mean std for for mrpc_1650: 0.296613484621048
03/25/2024 18:53:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:53:40 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:53:40 - INFO - __main__ - ID text: mrpc_326
03/25/2024 18:54:36 - INFO - __main__ - Mean variance for mrpc_326: 0.05397341772913933
03/25/2024 18:54:36 - INFO - __main__ - Mean std for for mrpc_326: 0.18000812828540802
03/25/2024 18:54:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:54:37 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:54:37 - INFO - __main__ - ID text: mrpc_1429
03/25/2024 18:55:33 - INFO - __main__ - Mean variance for mrpc_1429: 0.04366238787770271
03/25/2024 18:55:33 - INFO - __main__ - Mean std for for mrpc_1429: 0.16478231549263
03/25/2024 18:55:34 - INFO - __main__ - 
######## Language: qnli ######## 

03/25/2024 18:55:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:55:34 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:55:34 - INFO - __main__ - ID text: qnli_3462
03/25/2024 18:56:30 - INFO - __main__ - Mean variance for qnli_3462: 0.047693442553281784
03/25/2024 18:56:30 - INFO - __main__ - Mean std for for qnli_3462: 0.17001402378082275
03/25/2024 18:56:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:56:30 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:56:30 - INFO - __main__ - ID text: qnli_2787
03/25/2024 18:57:27 - INFO - __main__ - Mean variance for qnli_2787: 0.0357600636780262
03/25/2024 18:57:27 - INFO - __main__ - Mean std for for qnli_2787: 0.1414107233285904
03/25/2024 18:57:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:57:27 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:57:27 - INFO - __main__ - ID text: qnli_2276
03/25/2024 18:58:23 - INFO - __main__ - Mean variance for qnli_2276: 0.04179993271827698
03/25/2024 18:58:23 - INFO - __main__ - Mean std for for qnli_2276: 0.1511593610048294
03/25/2024 18:58:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:58:23 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:58:23 - INFO - __main__ - ID text: qnli_1273
03/25/2024 18:59:20 - INFO - __main__ - Mean variance for qnli_1273: 0.041181836277246475
03/25/2024 18:59:20 - INFO - __main__ - Mean std for for qnli_1273: 0.15620851516723633
03/25/2024 18:59:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:59:20 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 18:59:20 - INFO - __main__ - ID text: qnli_1763
03/25/2024 19:00:16 - INFO - __main__ - Mean variance for qnli_1763: 0.045580748468637466
03/25/2024 19:00:16 - INFO - __main__ - Mean std for for qnli_1763: 0.16722841560840607
03/25/2024 19:00:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:00:16 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:00:16 - INFO - __main__ - ID text: qnli_2757
03/25/2024 19:01:13 - INFO - __main__ - Mean variance for qnli_2757: 0.03694462403655052
03/25/2024 19:01:13 - INFO - __main__ - Mean std for for qnli_2757: 0.1421908289194107
03/25/2024 19:01:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:01:13 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:01:13 - INFO - __main__ - ID text: qnli_837
03/25/2024 19:02:09 - INFO - __main__ - Mean variance for qnli_837: 0.034460246562957764
03/25/2024 19:02:09 - INFO - __main__ - Mean std for for qnli_837: 0.1484813541173935
03/25/2024 19:02:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:02:09 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:02:09 - INFO - __main__ - ID text: qnli_759
03/25/2024 19:03:06 - INFO - __main__ - Mean variance for qnli_759: 0.01953481137752533
03/25/2024 19:03:06 - INFO - __main__ - Mean std for for qnli_759: 0.10440734773874283
03/25/2024 19:03:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:03:06 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:03:06 - INFO - __main__ - ID text: qnli_3112
03/25/2024 19:04:02 - INFO - __main__ - Mean variance for qnli_3112: 0.04977463185787201
03/25/2024 19:04:02 - INFO - __main__ - Mean std for for qnli_3112: 0.1737997680902481
03/25/2024 19:04:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:04:02 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:04:02 - INFO - __main__ - ID text: qnli_792
03/25/2024 19:04:59 - INFO - __main__ - Mean variance for qnli_792: 0.04229860380291939
03/25/2024 19:04:59 - INFO - __main__ - Mean std for for qnli_792: 0.1493721753358841
03/25/2024 19:04:59 - INFO - __main__ - 
######## Language: qqp ######## 

03/25/2024 19:04:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:04:59 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:04:59 - INFO - __main__ - ID text: qqp_188208
03/25/2024 19:05:55 - INFO - __main__ - Mean variance for qqp_188208: 0.054290663450956345
03/25/2024 19:05:55 - INFO - __main__ - Mean std for for qqp_188208: 0.19805389642715454
03/25/2024 19:05:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:05:55 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:05:55 - INFO - __main__ - ID text: qqp_180331
03/25/2024 19:06:52 - INFO - __main__ - Mean variance for qqp_180331: 0.039743196219205856
03/25/2024 19:06:52 - INFO - __main__ - Mean std for for qqp_180331: 0.16290472447872162
03/25/2024 19:06:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:06:52 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:06:52 - INFO - __main__ - ID text: qqp_316526
03/25/2024 19:07:48 - INFO - __main__ - Mean variance for qqp_316526: 0.045730460435152054
03/25/2024 19:07:48 - INFO - __main__ - Mean std for for qqp_316526: 0.17000548541545868
03/25/2024 19:07:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:07:48 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:07:48 - INFO - __main__ - ID text: qqp_138685
03/25/2024 19:08:45 - INFO - __main__ - Mean variance for qqp_138685: 0.03507734462618828
03/25/2024 19:08:45 - INFO - __main__ - Mean std for for qqp_138685: 0.13754357397556305
03/25/2024 19:08:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:08:45 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:08:45 - INFO - __main__ - ID text: qqp_22780
03/25/2024 19:09:41 - INFO - __main__ - Mean variance for qqp_22780: 0.03757219389081001
03/25/2024 19:09:41 - INFO - __main__ - Mean std for for qqp_22780: 0.16535329818725586
03/25/2024 19:09:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:09:41 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:09:41 - INFO - __main__ - ID text: qqp_382589
03/25/2024 19:10:38 - INFO - __main__ - Mean variance for qqp_382589: 0.040243662893772125
03/25/2024 19:10:38 - INFO - __main__ - Mean std for for qqp_382589: 0.15798835456371307
03/25/2024 19:10:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:10:38 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:10:38 - INFO - __main__ - ID text: qqp_240870
03/25/2024 19:11:35 - INFO - __main__ - Mean variance for qqp_240870: 0.05281868577003479
03/25/2024 19:11:35 - INFO - __main__ - Mean std for for qqp_240870: 0.1937786191701889
03/25/2024 19:11:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:11:36 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:11:36 - INFO - __main__ - ID text: qqp_281137
03/25/2024 19:12:32 - INFO - __main__ - Mean variance for qqp_281137: 0.03938274458050728
03/25/2024 19:12:32 - INFO - __main__ - Mean std for for qqp_281137: 0.15988339483737946
03/25/2024 19:12:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:12:32 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:12:32 - INFO - __main__ - ID text: qqp_65444
03/25/2024 19:13:28 - INFO - __main__ - Mean variance for qqp_65444: 0.03821348026394844
03/25/2024 19:13:28 - INFO - __main__ - Mean std for for qqp_65444: 0.16448171436786652
03/25/2024 19:13:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:13:28 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:13:28 - INFO - __main__ - ID text: qqp_198461
03/25/2024 19:14:25 - INFO - __main__ - Mean variance for qqp_198461: 0.03398795798420906
03/25/2024 19:14:25 - INFO - __main__ - Mean std for for qqp_198461: 0.14650359749794006
03/25/2024 19:14:25 - INFO - __main__ - 
######## Language: rte ######## 

03/25/2024 19:14:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:14:25 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:14:25 - INFO - __main__ - ID text: rte_322
03/25/2024 19:15:21 - INFO - __main__ - Mean variance for rte_322: 0.04367080330848694
03/25/2024 19:15:21 - INFO - __main__ - Mean std for for rte_322: 0.1645389348268509
03/25/2024 19:15:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:15:21 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:15:21 - INFO - __main__ - ID text: rte_2261
03/25/2024 19:16:18 - INFO - __main__ - Mean variance for rte_2261: 0.04724803566932678
03/25/2024 19:16:18 - INFO - __main__ - Mean std for for rte_2261: 0.18245945870876312
03/25/2024 19:16:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:16:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:16:18 - INFO - __main__ - ID text: rte_1200
03/25/2024 19:17:14 - INFO - __main__ - Mean variance for rte_1200: 0.030982596799731255
03/25/2024 19:17:14 - INFO - __main__ - Mean std for for rte_1200: 0.13035236299037933
03/25/2024 19:17:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:17:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:17:14 - INFO - __main__ - ID text: rte_2574
03/25/2024 19:18:10 - INFO - __main__ - Mean variance for rte_2574: 0.017279578372836113
03/25/2024 19:18:10 - INFO - __main__ - Mean std for for rte_2574: 0.10063591599464417
03/25/2024 19:18:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:18:10 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:18:10 - INFO - __main__ - ID text: rte_2533
03/25/2024 19:19:07 - INFO - __main__ - Mean variance for rte_2533: 0.019482774659991264
03/25/2024 19:19:07 - INFO - __main__ - Mean std for for rte_2533: 0.10330409556627274
03/25/2024 19:19:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:19:07 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:19:07 - INFO - __main__ - ID text: rte_1481
03/25/2024 19:20:03 - INFO - __main__ - Mean variance for rte_1481: 0.043424706906080246
03/25/2024 19:20:03 - INFO - __main__ - Mean std for for rte_1481: 0.1584118753671646
03/25/2024 19:20:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:20:03 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:20:03 - INFO - __main__ - ID text: rte_2364
03/25/2024 19:21:00 - INFO - __main__ - Mean variance for rte_2364: 0.03725813329219818
03/25/2024 19:21:00 - INFO - __main__ - Mean std for for rte_2364: 0.143168643116951
03/25/2024 19:21:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:21:00 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:21:00 - INFO - __main__ - ID text: rte_787
03/25/2024 19:21:56 - INFO - __main__ - Mean variance for rte_787: 0.04988889768719673
03/25/2024 19:21:56 - INFO - __main__ - Mean std for for rte_787: 0.16520671546459198
03/25/2024 19:21:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:21:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:21:57 - INFO - __main__ - ID text: rte_2885
03/25/2024 19:22:53 - INFO - __main__ - Mean variance for rte_2885: 0.01854538731276989
03/25/2024 19:22:53 - INFO - __main__ - Mean std for for rte_2885: 0.1020369902253151
03/25/2024 19:22:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:22:53 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:22:53 - INFO - __main__ - ID text: rte_284
03/25/2024 19:23:49 - INFO - __main__ - Mean variance for rte_284: 0.0364183709025383
03/25/2024 19:23:49 - INFO - __main__ - Mean std for for rte_284: 0.15241245925426483
03/25/2024 19:23:49 - INFO - __main__ - 
######## Language: sst2 ######## 

03/25/2024 19:23:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:23:49 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:23:49 - INFO - __main__ - ID text: sst2_93
03/25/2024 19:24:46 - INFO - __main__ - Mean variance for sst2_93: 0.04247325286269188
03/25/2024 19:24:46 - INFO - __main__ - Mean std for for sst2_93: 0.16439907252788544
03/25/2024 19:24:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:24:46 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:24:46 - INFO - __main__ - ID text: sst2_1354
03/25/2024 19:25:42 - INFO - __main__ - Mean variance for sst2_1354: 0.04531528055667877
03/25/2024 19:25:42 - INFO - __main__ - Mean std for for sst2_1354: 0.1901201754808426
03/25/2024 19:25:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:25:42 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:25:42 - INFO - __main__ - ID text: sst2_466
03/25/2024 19:26:38 - INFO - __main__ - Mean variance for sst2_466: 0.03613978251814842
03/25/2024 19:26:38 - INFO - __main__ - Mean std for for sst2_466: 0.16966640949249268
03/25/2024 19:26:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:26:39 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:26:39 - INFO - __main__ - ID text: sst2_1583
03/25/2024 19:27:35 - INFO - __main__ - Mean variance for sst2_1583: 0.03129895403981209
03/25/2024 19:27:35 - INFO - __main__ - Mean std for for sst2_1583: 0.14125744998455048
03/25/2024 19:27:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:27:35 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:27:35 - INFO - __main__ - ID text: sst2_592
03/25/2024 19:28:31 - INFO - __main__ - Mean variance for sst2_592: 0.03863605484366417
03/25/2024 19:28:31 - INFO - __main__ - Mean std for for sst2_592: 0.15642261505126953
03/25/2024 19:28:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:28:31 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:28:31 - INFO - __main__ - ID text: sst2_163
03/25/2024 19:29:28 - INFO - __main__ - Mean variance for sst2_163: 0.06984131783246994
03/25/2024 19:29:28 - INFO - __main__ - Mean std for for sst2_163: 0.2363491803407669
03/25/2024 19:29:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:29:28 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:29:28 - INFO - __main__ - ID text: sst2_1751
03/25/2024 19:30:24 - INFO - __main__ - Mean variance for sst2_1751: 0.045267269015312195
03/25/2024 19:30:24 - INFO - __main__ - Mean std for for sst2_1751: 0.18541419506072998
03/25/2024 19:30:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:30:24 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:30:24 - INFO - __main__ - ID text: sst2_476
03/25/2024 19:31:20 - INFO - __main__ - Mean variance for sst2_476: 0.035640183836221695
03/25/2024 19:31:20 - INFO - __main__ - Mean std for for sst2_476: 0.15158070623874664
03/25/2024 19:31:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:31:21 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:31:21 - INFO - __main__ - ID text: sst2_1774
03/25/2024 19:32:18 - INFO - __main__ - Mean variance for sst2_1774: 0.03398073837161064
03/25/2024 19:32:18 - INFO - __main__ - Mean std for for sst2_1774: 0.1502184420824051
03/25/2024 19:32:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:32:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:32:18 - INFO - __main__ - ID text: sst2_206
03/25/2024 19:33:14 - INFO - __main__ - Mean variance for sst2_206: 0.04378281161189079
03/25/2024 19:33:14 - INFO - __main__ - Mean std for for sst2_206: 0.17680509388446808
03/25/2024 19:33:14 - INFO - __main__ - 
######## Language: stsb ######## 

03/25/2024 19:33:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:33:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:33:14 - INFO - __main__ - ID text: stsb_778
03/25/2024 19:34:11 - INFO - __main__ - Mean variance for stsb_778: 0.056471820920705795
03/25/2024 19:34:11 - INFO - __main__ - Mean std for for stsb_778: 0.19677989184856415
03/25/2024 19:34:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:34:11 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:34:11 - INFO - __main__ - ID text: stsb_569
03/25/2024 19:35:07 - INFO - __main__ - Mean variance for stsb_569: 0.061666134744882584
03/25/2024 19:35:07 - INFO - __main__ - Mean std for for stsb_569: 0.21340437233448029
03/25/2024 19:35:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:35:07 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:35:07 - INFO - __main__ - ID text: stsb_928
03/25/2024 19:36:04 - INFO - __main__ - Mean variance for stsb_928: 0.031704504042863846
03/25/2024 19:36:04 - INFO - __main__ - Mean std for for stsb_928: 0.1284160614013672
03/25/2024 19:36:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:36:04 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:36:04 - INFO - __main__ - ID text: stsb_1301
03/25/2024 19:37:00 - INFO - __main__ - Mean variance for stsb_1301: 0.04501122236251831
03/25/2024 19:37:00 - INFO - __main__ - Mean std for for stsb_1301: 0.17624038457870483
03/25/2024 19:37:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:37:00 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:37:00 - INFO - __main__ - ID text: stsb_747
03/25/2024 19:37:57 - INFO - __main__ - Mean variance for stsb_747: 0.04570471867918968
03/25/2024 19:37:57 - INFO - __main__ - Mean std for for stsb_747: 0.17063212394714355
03/25/2024 19:37:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:37:57 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:37:57 - INFO - __main__ - ID text: stsb_333
03/25/2024 19:38:53 - INFO - __main__ - Mean variance for stsb_333: 0.05914364755153656
03/25/2024 19:38:53 - INFO - __main__ - Mean std for for stsb_333: 0.20246978104114532
03/25/2024 19:38:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:38:53 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:38:53 - INFO - __main__ - ID text: stsb_758
03/25/2024 19:39:49 - INFO - __main__ - Mean variance for stsb_758: 0.04427076503634453
03/25/2024 19:39:49 - INFO - __main__ - Mean std for for stsb_758: 0.16969867050647736
03/25/2024 19:39:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:39:49 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:39:49 - INFO - __main__ - ID text: stsb_727
03/25/2024 19:40:46 - INFO - __main__ - Mean variance for stsb_727: 0.04796329140663147
03/25/2024 19:40:46 - INFO - __main__ - Mean std for for stsb_727: 0.18575818836688995
03/25/2024 19:40:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:40:46 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:40:46 - INFO - __main__ - ID text: stsb_429
03/25/2024 19:41:42 - INFO - __main__ - Mean variance for stsb_429: 0.03270801901817322
03/25/2024 19:41:42 - INFO - __main__ - Mean std for for stsb_429: 0.15401215851306915
03/25/2024 19:41:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:41:42 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:41:42 - INFO - __main__ - ID text: stsb_1372
03/25/2024 19:42:39 - INFO - __main__ - Mean variance for stsb_1372: 0.028467342257499695
03/25/2024 19:42:39 - INFO - __main__ - Mean std for for stsb_1372: 0.13978803157806396
03/25/2024 19:42:39 - INFO - __main__ - 
######## Language: wnli ######## 

03/25/2024 19:42:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:42:39 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:42:39 - INFO - __main__ - ID text: wnli_68
03/25/2024 19:43:35 - INFO - __main__ - Mean variance for wnli_68: 0.040371451526880264
03/25/2024 19:43:35 - INFO - __main__ - Mean std for for wnli_68: 0.15381158888339996
03/25/2024 19:43:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:43:35 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:43:35 - INFO - __main__ - ID text: wnli_18
03/25/2024 19:44:32 - INFO - __main__ - Mean variance for wnli_18: 0.034659821540117264
03/25/2024 19:44:32 - INFO - __main__ - Mean std for for wnli_18: 0.13466472923755646
03/25/2024 19:44:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:44:32 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:44:32 - INFO - __main__ - ID text: wnli_43
03/25/2024 19:45:28 - INFO - __main__ - Mean variance for wnli_43: 0.04220379516482353
03/25/2024 19:45:28 - INFO - __main__ - Mean std for for wnli_43: 0.1555335521697998
03/25/2024 19:45:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:45:28 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:45:28 - INFO - __main__ - ID text: wnli_136
03/25/2024 19:46:24 - INFO - __main__ - Mean variance for wnli_136: 0.04281283915042877
03/25/2024 19:46:24 - INFO - __main__ - Mean std for for wnli_136: 0.1552446186542511
03/25/2024 19:46:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:46:24 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:46:24 - INFO - __main__ - ID text: wnli_62
03/25/2024 19:47:21 - INFO - __main__ - Mean variance for wnli_62: 0.04975641891360283
03/25/2024 19:47:21 - INFO - __main__ - Mean std for for wnli_62: 0.17160797119140625
03/25/2024 19:47:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:47:22 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:47:22 - INFO - __main__ - ID text: wnli_41
03/25/2024 19:48:18 - INFO - __main__ - Mean variance for wnli_41: 0.04644372686743736
03/25/2024 19:48:18 - INFO - __main__ - Mean std for for wnli_41: 0.16476932168006897
03/25/2024 19:48:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:48:18 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:48:18 - INFO - __main__ - ID text: wnli_118
03/25/2024 19:49:14 - INFO - __main__ - Mean variance for wnli_118: 0.0428990013897419
03/25/2024 19:49:14 - INFO - __main__ - Mean std for for wnli_118: 0.16299112141132355
03/25/2024 19:49:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:49:14 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:49:14 - INFO - __main__ - ID text: wnli_97
03/25/2024 19:50:11 - INFO - __main__ - Mean variance for wnli_97: 0.030368292704224586
03/25/2024 19:50:11 - INFO - __main__ - Mean std for for wnli_97: 0.12938587367534637
03/25/2024 19:50:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:50:11 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:50:11 - INFO - __main__ - ID text: wnli_69
03/25/2024 19:51:07 - INFO - __main__ - Mean variance for wnli_69: 0.038483697921037674
03/25/2024 19:51:07 - INFO - __main__ - Mean std for for wnli_69: 0.1597982794046402
03/25/2024 19:51:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:51:07 - INFO - __main__ - Masked count: 103, ratio = 0.4023
03/25/2024 19:51:07 - INFO - __main__ - ID text: wnli_142
03/25/2024 19:52:03 - INFO - __main__ - Mean variance for wnli_142: 0.030972862616181374
03/25/2024 19:52:03 - INFO - __main__ - Mean std for for wnli_142: 0.1308327168226242
03/25/2024 19:52:03 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.13991056382656097, 'amh_1': 0.1304222047328949, 'amh_2': 0.08716949820518494, 'amh_3': 0.1355457752943039, 'amh_4': 0.14410316944122314, 'amh_5': 0.13845549523830414, 'amh_6': 0.13269969820976257, 'amh_7': 0.14162090420722961, 'amh_8': 0.13670116662979126, 'amh_9': 0.1384475827217102}, 'conll_2003_en': {'conll_2003_en_0': 0.16249333322048187, 'conll_2003_en_1': 0.04513018950819969, 'conll_2003_en_2': 0.03132238611578941, 'conll_2003_en_3': 0.03955047205090523, 'conll_2003_en_4': 0.042685654014348984, 'conll_2003_en_5': 0.14356723427772522, 'conll_2003_en_6': 0.1404622197151184, 'conll_2003_en_7': 0.16074737906455994, 'conll_2003_en_8': 0.15352830290794373, 'conll_2003_en_9': 0.0366845540702343}, 'hau': {'hau_0': 0.025123706087470055, 'hau_1': 0.03906060755252838, 'hau_2': 0.15200349688529968, 'hau_3': 0.015704452991485596, 'hau_4': 0.025027954950928688, 'hau_5': 0.022718369960784912, 'hau_6': 0.034765250980854034, 'hau_7': 0.026213062927126884, 'hau_8': 0.022221580147743225, 'hau_9': 0.03303602710366249}, 'ibo': {'ibo_0': 0.032943304628133774, 'ibo_1': 0.036596205085515976, 'ibo_2': 0.029548728838562965, 'ibo_3': 0.04008102789521217, 'ibo_4': 0.0363379530608654, 'ibo_5': 0.03578534349799156, 'ibo_6': 0.03062276542186737, 'ibo_7': 0.030605526641011238, 'ibo_8': 0.03251507505774498, 'ibo_9': 0.0291821900755167}, 'kin': {'kin_0': 0.03221097216010094, 'kin_1': 0.030982444062829018, 'kin_2': 0.03908838704228401, 'kin_3': 0.029142310842871666, 'kin_4': 0.02898239530622959, 'kin_5': 0.02877686358988285, 'kin_6': 0.022456778213381767, 'kin_7': 0.023296058177947998, 'kin_8': 0.024694466963410378, 'kin_9': 0.026915952563285828}, 'lug': {'lug_0': 0.022922048345208168, 'lug_1': 0.028375566005706787, 'lug_2': 0.018248258158564568, 'lug_3': 0.021489910781383514, 'lug_4': 0.034381166100502014, 'lug_5': 0.03313746675848961, 'lug_6': 0.028136441484093666, 'lug_7': 0.03070901893079281, 'lug_8': 0.03632200136780739, 'lug_9': 0.033407073467969894}, 'luo': {'luo_0': 0.02358543872833252, 'luo_1': 0.0342240035533905, 'luo_2': 0.03250114992260933, 'luo_3': 0.019837673753499985, 'luo_4': 0.030891479924321175, 'luo_5': 0.02619250863790512, 'luo_6': 0.03005809523165226, 'luo_7': 0.04364561662077904, 'luo_8': 0.032852653414011, 'luo_9': 0.046553224325180054}, 'pcm': {'pcm_0': 0.032178886234760284, 'pcm_1': 0.04377994313836098, 'pcm_2': 0.030093541368842125, 'pcm_3': 0.029885491356253624, 'pcm_4': 0.034861404448747635, 'pcm_5': 0.04639551416039467, 'pcm_6': 0.03266752138733864, 'pcm_7': 0.03295143321156502, 'pcm_8': 0.027922211214900017, 'pcm_9': 0.03450460359454155}, 'swa': {'swa_0': 0.02961074374616146, 'swa_1': 0.034047383815050125, 'swa_2': 0.03275046870112419, 'swa_3': 0.031797751784324646, 'swa_4': 0.019130123779177666, 'swa_5': 0.021603921428322792, 'swa_6': 0.02456548996269703, 'swa_7': 0.0455155186355114, 'swa_8': 0.03391294181346893, 'swa_9': 0.029716739431023598}, 'wol': {'wol_0': 0.028932221233844757, 'wol_1': 0.03692101314663887, 'wol_2': 0.035262223333120346, 'wol_3': 0.05996175482869148, 'wol_4': 0.03132763132452965, 'wol_5': 0.030599521473050117, 'wol_6': 0.1387772560119629, 'wol_7': 0.034390490502119064, 'wol_8': 0.0422639399766922, 'wol_9': 0.030226200819015503}, 'yor': {'yor_0': 0.12889181077480316, 'yor_1': 0.12666864693164825, 'yor_2': 0.03654323145747185, 'yor_3': 0.025658493861556053, 'yor_4': 0.11892161518335342, 'yor_5': 0.08686476200819016, 'yor_6': 0.028920307755470276, 'yor_7': 0.11996806412935257, 'yor_8': 0.029100773856043816, 'yor_9': 0.11338469386100769}, 'zh': {'zh_0': 0.14305688440799713, 'zh_1': 0.09738585352897644, 'zh_2': 0.12132909893989563, 'zh_3': 0.14694161713123322, 'zh_4': 0.13890396058559418, 'zh_5': 0.1036636233329773, 'zh_6': 0.1078798696398735, 'zh_7': 0.12803223729133606, 'zh_8': 0.12369831651449203, 'zh_9': 0.11837705224752426}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.04577866569161415, 'arabic--3340323169760881569-0': 0.03570421040058136, 'arabic-4544770624843559444-1': 0.035150930285453796, 'arabic-891952409566422966-0': 0.03638255596160889, 'arabic-3659291834714572527-0': 0.10321372747421265, 'arabic-9215226117011890166-0': 0.037358444184064865, 'arabic-6300896128538259469-0': 0.035979896783828735, 'arabic-2382507508588518905-0': 0.038170043379068375, 'arabic-1871632801094859741-1': 0.031309571117162704, 'arabic--7365809756232083807-0': 0.03217505291104317}, 'russian': {'russian-3457655197371763238-61': 0.01890055648982525, 'russian--1914807805318993335-49': 0.03180288150906563, 'russian--3307989180606173904-1': 0.01784195564687252, 'russian--2219512001175315660-0': 0.02261742390692234, 'russian--7076080992904718941-0': 0.01958289183676243, 'russian--6565862953558739013-1': 0.022236300632357597, 'russian--5098374684590548031-42': 0.03438938036561012, 'russian-3573734219967447693-1': 0.021117711439728737, 'russian--4521001374120505750-6': 0.037594858556985855, 'russian--1308382244018658424-9': 0.021916301921010017}, 'bengali': {'bengali--1199493965132146131-3': 0.07941381633281708, 'bengali-1807801556888134437-2': 0.07763556391000748, 'bengali-2113189855114052041-2': 0.08467862755060196, 'bengali--2527914488250041207-0': 0.08411697298288345, 'bengali--8260793280894408063-14': 0.0968523696064949, 'bengali-8313009204852557186-4': 0.0820005014538765, 'bengali--415964033364840061-0': 0.0817914679646492, 'bengali--4696865548928858824-5': 0.08161170035600662, 'bengali-6505224142472931712-1': 0.07912704348564148, 'bengali-599666913917674019-13': 0.10668343305587769}, 'telugu': {'telugu--3977923017846260053-0': 0.06000295653939247, 'telugu-2254198842560317781-0': 0.03463289514183998, 'telugu-5435080895440121384-0': 0.03543538972735405, 'telugu--1182505954974481191-2': 0.035957518965005875, 'telugu-119276511844068401-0': 0.028976192697882652, 'telugu--4111208545071789922-0': 0.03189719095826149, 'telugu--5922002196428211484-132': 0.08863252401351929, 'telugu--1817004721681155192-3': 0.031087622046470642, 'telugu-1602214480303968359-1': 0.03393526375293732, 'telugu--6495674712575945374-0': 0.02872077375650406}, 'finnish': {'finnish-6987763079741579998-0': 0.029408885166049004, 'finnish--8516625414052383903-0': 0.0322154238820076, 'finnish-4168898766124519517-0': 0.04987639561295509, 'finnish-783166898848672321-4': 0.03947475925087929, 'finnish-2208556840820233322-0': 0.03321803733706474, 'finnish--1981034637152391615-58': 0.0127062126994133, 'finnish-8689148941295949475-9': 0.013166877441108227, 'finnish-6900867945323517614-2': 0.04998057708144188, 'finnish-8023130170017405987-1': 0.02123635821044445, 'finnish-5001457972111781248-0': 0.0149071728810668}, 'swahili': {'swahili-7146838206539641546-10': 0.030726661905646324, 'swahili-7655634199707176439-0': 0.01756385900080204, 'swahili--4427180714267750534-1': 0.027506379410624504, 'swahili-4141779435061573138-0': 0.018361425027251244, 'swahili--5424518593960879661-0': 0.014537922106683254, 'swahili-4281845253405461584-0': 0.032691363245248795, 'swahili-4899164839984299762-2': 0.030227089300751686, 'swahili-1288750786498500530-0': 0.030995937064290047, 'swahili--2671134792844015228-3': 0.01875297911465168, 'swahili-4873225622490039485-2': 0.019413715228438377}, 'korean': {'korean--2869472392602314906-0': 0.0768982395529747, 'korean-4375199563921600155-0': 0.03026164509356022, 'korean--1715118423211755607-13': 0.026170486584305763, 'korean--8028977936696142934-9': 0.0300274845212698, 'korean-2807245034690443837-5': 0.09436199814081192, 'korean-3862451817164408576-0': 0.02908671833574772, 'korean-148115504649351135-0': 0.03584090247750282, 'korean--2885837157239647036-2': 0.08736208081245422, 'korean--1743220297777040002-22': 0.09842536598443985, 'korean-3268522368206106332-0': 0.16369663178920746}, 'indonesian': {'indonesian-9141868818310916091-0': 0.016586802899837494, 'indonesian-4609394337632433932-1': 0.049600452184677124, 'indonesian-2763468883290577923-0': 0.016225412487983704, 'indonesian-5633590583948933406-0': 0.02169177494943142, 'indonesian--5961409780035435015-0': 0.013160289265215397, 'indonesian-6274547934693326697-0': 0.01821546070277691, 'indonesian--2516321763567853082-0': 0.011988922953605652, 'indonesian-2048796427556239759-4': 0.031528908759355545, 'indonesian-6246592469157278547-2': 0.021212110295891762, 'indonesian--3724318458930736973-1': 0.013211138546466827}, 'english': {'english-2852412434797041176-6': 0.09072688221931458, 'english--1463732605740571606-0': 0.019262589514255524, 'english-5441411281255470421-0': 0.01954805850982666, 'english-7294054492486093447-1': 0.01887424848973751, 'english-8820750127045023244-0': 0.034215882420539856, 'english--506693546683012611-2': 0.04306824132800102, 'english-745411798111651115-0': 0.02171166241168976, 'english-7740772185887912651-0': 0.01853545755147934, 'english-383873188776267137-19': 0.01741778664290905, 'english--8277537578703156284-0': 0.01891453005373478}}, 'glue': {'cola': {'cola_228': 0.0566057525575161, 'cola_51': 0.039723265916109085, 'cola_563': 0.13878458738327026, 'cola_501': 0.04768158122897148, 'cola_457': 0.048442285507917404, 'cola_285': 0.04731467366218567, 'cola_209': 0.04336516186594963, 'cola_178': 0.04561183229088783, 'cola_864': 0.04889679327607155, 'cola_65': 0.040979232639074326}, 'mnli': {'mnli_488': 0.04527351260185242, 'mnli_1535': 0.043973714113235474, 'mnli_3582': 0.0485299788415432, 'mnli_3811': 0.05090966820716858, 'mnli_8279': 0.03418196365237236, 'mnli_434': 0.03515086695551872, 'mnli_9195': 0.044333551079034805, 'mnli_3257': 0.045676689594984055, 'mnli_8928': 0.046418774873018265, 'mnli_6873': 0.039402373135089874}, 'mrpc': {'mrpc_451': 0.043856143951416016, 'mrpc_919': 0.04214799776673317, 'mrpc_1206': 0.04303092136979103, 'mrpc_569': 0.043107837438583374, 'mrpc_1657': 0.03547656908631325, 'mrpc_13': 0.049538325518369675, 'mrpc_1554': 0.03419344872236252, 'mrpc_1650': 0.12379353493452072, 'mrpc_326': 0.05397341772913933, 'mrpc_1429': 0.04366238787770271}, 'qnli': {'qnli_3462': 0.047693442553281784, 'qnli_2787': 0.0357600636780262, 'qnli_2276': 0.04179993271827698, 'qnli_1273': 0.041181836277246475, 'qnli_1763': 0.045580748468637466, 'qnli_2757': 0.03694462403655052, 'qnli_837': 0.034460246562957764, 'qnli_759': 0.01953481137752533, 'qnli_3112': 0.04977463185787201, 'qnli_792': 0.04229860380291939}, 'qqp': {'qqp_188208': 0.054290663450956345, 'qqp_180331': 0.039743196219205856, 'qqp_316526': 0.045730460435152054, 'qqp_138685': 0.03507734462618828, 'qqp_22780': 0.03757219389081001, 'qqp_382589': 0.040243662893772125, 'qqp_240870': 0.05281868577003479, 'qqp_281137': 0.03938274458050728, 'qqp_65444': 0.03821348026394844, 'qqp_198461': 0.03398795798420906}, 'rte': {'rte_322': 0.04367080330848694, 'rte_2261': 0.04724803566932678, 'rte_1200': 0.030982596799731255, 'rte_2574': 0.017279578372836113, 'rte_2533': 0.019482774659991264, 'rte_1481': 0.043424706906080246, 'rte_2364': 0.03725813329219818, 'rte_787': 0.04988889768719673, 'rte_2885': 0.01854538731276989, 'rte_284': 0.0364183709025383}, 'sst2': {'sst2_93': 0.04247325286269188, 'sst2_1354': 0.04531528055667877, 'sst2_466': 0.03613978251814842, 'sst2_1583': 0.03129895403981209, 'sst2_592': 0.03863605484366417, 'sst2_163': 0.06984131783246994, 'sst2_1751': 0.045267269015312195, 'sst2_476': 0.035640183836221695, 'sst2_1774': 0.03398073837161064, 'sst2_206': 0.04378281161189079}, 'stsb': {'stsb_778': 0.056471820920705795, 'stsb_569': 0.061666134744882584, 'stsb_928': 0.031704504042863846, 'stsb_1301': 0.04501122236251831, 'stsb_747': 0.04570471867918968, 'stsb_333': 0.05914364755153656, 'stsb_758': 0.04427076503634453, 'stsb_727': 0.04796329140663147, 'stsb_429': 0.03270801901817322, 'stsb_1372': 0.028467342257499695}, 'wnli': {'wnli_68': 0.040371451526880264, 'wnli_18': 0.034659821540117264, 'wnli_43': 0.04220379516482353, 'wnli_136': 0.04281283915042877, 'wnli_62': 0.04975641891360283, 'wnli_41': 0.04644372686743736, 'wnli_118': 0.0428990013897419, 'wnli_97': 0.030368292704224586, 'wnli_69': 0.038483697921037674, 'wnli_142': 0.030972862616181374}}}
03/25/2024 19:52:03 - INFO - __main__ - Saving data in SD_per_task_mask_0.4.json
03/25/2024 19:52:03 - INFO - __main__ - Saving data in var_per_task_mask_0.4.json
03/25/2024 19:52:03 - INFO - __main__ - 
UNCERTAINTY (SD)

03/25/2024 19:52:03 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.13250760734081268, 'conll_2003_en': 0.09561717510223389, 'hau': 0.03958744928240776, 'ibo': 0.03342181071639061, 'kin': 0.028654661029577255, 'lug': 0.028712894767522812, 'luo': 0.03203418105840683, 'pcm': 0.03452405333518982, 'swa': 0.03026510775089264, 'wol': 0.04686622694134712, 'yor': 0.08149223029613495, 'zh': 0.12292684614658356}, 'tydiqa': {'arabic': 0.0431223101913929, 'russian': 0.024800028651952744, 'bengali': 0.08539114892482758, 'telugu': 0.04092783480882645, 'finnish': 0.029619071632623672, 'swahili': 0.024077732115983963, 'korean': 0.06721315532922745, 'indonesian': 0.02134212665259838, 'english': 0.030227532610297203}, 'glue': {'cola': 0.055740516632795334, 'mnli': 0.043385107070207596, 'mrpc': 0.05127805471420288, 'qnli': 0.03950289636850357, 'qqp': 0.04170604050159454, 'rte': 0.03441993147134781, 'sst2': 0.04223756119608879, 'stsb': 0.04531114548444748, 'wnli': 0.039897192269563675}}

###############################################################################
Hábrók Cluster
Job 7725912 for user s3919609
Finished at: Mon Mar 25 19:52:21 CET 2024

Job details:
============

Job ID              : 7725912
Name                : std_monte_carlo_mask_0.4
User                : s3919609
Partition           : regularmedium
Nodes               : node85
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-25T15:10:11
Start               : 2024-03-25T15:10:12
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 04:42:10
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 20G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
