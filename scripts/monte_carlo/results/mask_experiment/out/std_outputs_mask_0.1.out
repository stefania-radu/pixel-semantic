The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/25/2024 16:54:42 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/25/2024 16:54:42 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 16:54:42 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 16:54:42 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/25/2024 16:54:44 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/25/2024 16:54:44 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/25/2024 16:54:44 - INFO - __main__ - Running MONTE CARLO experiment: mask_ratio
03/25/2024 16:54:44 - INFO - __main__ - Loading data from loss_per_task_mask_0.1.json
03/25/2024 16:54:44 - INFO - __main__ - 
LOSS

03/25/2024 16:54:44 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8323231935501099, 'conll_2003_en': 0.6510127186775208, 'hau': 0.5963783860206604, 'ibo': 0.5832201242446899, 'kin': 0.5271235108375549, 'lug': 0.5674223303794861, 'luo': 0.6421133279800415, 'pcm': 0.6015704274177551, 'swa': 0.6396375894546509, 'wol': 0.6162004470825195, 'yor': 0.6370466947555542, 'zh': 0.8284982442855835}, 'tydiqa': {'arabic': 0.8682754635810852, 'russian': 0.5994457006454468, 'bengali': 0.7087224721908569, 'telugu': 0.7706297636032104, 'finnish': 0.5110263228416443, 'swahili': 0.452894389629364, 'korean': 0.8598934412002563, 'indonesian': 0.46937599778175354, 'english': 0.2633221745491028}, 'glue': {'cola': 0.43946725130081177, 'mnli': 0.230688214302063, 'mrpc': 0.1462661325931549, 'qnli': 0.2277635782957077, 'qqp': 0.2559434473514557, 'rte': 0.20520801842212677, 'sst2': 0.53315669298172, 'stsb': 0.11594586074352264, 'wnli': 0.17328467965126038}}
03/25/2024 16:54:44 - INFO - __main__ - Lowest losses:
03/25/2024 16:54:44 - INFO - __main__ - ID: qnli_2787, Loss: 0.002525095595046878
03/25/2024 16:54:44 - INFO - __main__ - ID: qnli_2757, Loss: 0.0028024271596223116
03/25/2024 16:54:44 - INFO - __main__ - ID: qnli_3462, Loss: 0.003925637807697058
03/25/2024 16:54:44 - INFO - __main__ - ID: mnli_1535, Loss: 0.003979125991463661
03/25/2024 16:54:44 - INFO - __main__ - ID: mrpc_326, Loss: 0.00436829449608922
03/25/2024 16:54:44 - INFO - __main__ - Highest losses:
03/25/2024 16:54:44 - INFO - __main__ - ID: korean--1743220297777040002-22, Loss: 0.9056860208511353
03/25/2024 16:54:44 - INFO - __main__ - ID: arabic-3659291834714572527-0, Loss: 0.9076979160308838
03/25/2024 16:54:44 - INFO - __main__ - ID: zh_0, Loss: 0.9224099516868591
03/25/2024 16:54:44 - INFO - __main__ - ID: conll_2003_en_6, Loss: 0.9474928379058838
03/25/2024 16:54:44 - INFO - __main__ - ID: arabic-4449832350126320768-0, Loss: 0.9753764867782593
03/25/2024 16:54:44 - INFO - __main__ - Monte Carlo samples: 100
03/25/2024 16:54:44 - INFO - __main__ - Training mode: True
03/25/2024 16:54:44 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/25/2024 16:54:44 - INFO - __main__ - 
######## Language: amh ######## 

03/25/2024 16:54:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:54:44 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 16:54:44 - INFO - __main__ - ID text: amh_0
03/25/2024 16:56:02 - INFO - __main__ - Mean variance for amh_0: 0.16254977881908417
03/25/2024 16:56:02 - INFO - __main__ - Mean std for for amh_0: 0.355273962020874
03/25/2024 16:56:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:56:03 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 16:56:03 - INFO - __main__ - ID text: amh_1
03/25/2024 16:57:17 - INFO - __main__ - Mean variance for amh_1: 0.14082686603069305
03/25/2024 16:57:17 - INFO - __main__ - Mean std for for amh_1: 0.32860246300697327
03/25/2024 16:57:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:57:17 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 16:57:17 - INFO - __main__ - ID text: amh_2
03/25/2024 16:58:34 - INFO - __main__ - Mean variance for amh_2: 0.15886490046977997
03/25/2024 16:58:34 - INFO - __main__ - Mean std for for amh_2: 0.3497699499130249
03/25/2024 16:58:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:58:34 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 16:58:34 - INFO - __main__ - ID text: amh_3
03/25/2024 16:59:51 - INFO - __main__ - Mean variance for amh_3: 0.15204650163650513
03/25/2024 16:59:51 - INFO - __main__ - Mean std for for amh_3: 0.34145548939704895
03/25/2024 16:59:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:59:51 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 16:59:51 - INFO - __main__ - ID text: amh_4
03/25/2024 17:01:08 - INFO - __main__ - Mean variance for amh_4: 0.16134865581989288
03/25/2024 17:01:08 - INFO - __main__ - Mean std for for amh_4: 0.35251906514167786
03/25/2024 17:01:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:01:08 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:01:08 - INFO - __main__ - ID text: amh_5
03/25/2024 17:02:24 - INFO - __main__ - Mean variance for amh_5: 0.17929743230342865
03/25/2024 17:02:24 - INFO - __main__ - Mean std for for amh_5: 0.3752812445163727
03/25/2024 17:02:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:02:24 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:02:24 - INFO - __main__ - ID text: amh_6
03/25/2024 17:03:41 - INFO - __main__ - Mean variance for amh_6: 0.14951853454113007
03/25/2024 17:03:41 - INFO - __main__ - Mean std for for amh_6: 0.33838972449302673
03/25/2024 17:03:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:03:41 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:03:41 - INFO - __main__ - ID text: amh_7
03/25/2024 17:04:58 - INFO - __main__ - Mean variance for amh_7: 0.1681535243988037
03/25/2024 17:04:58 - INFO - __main__ - Mean std for for amh_7: 0.36079490184783936
03/25/2024 17:04:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:04:58 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:04:58 - INFO - __main__ - ID text: amh_8
03/25/2024 17:06:14 - INFO - __main__ - Mean variance for amh_8: 0.16192825138568878
03/25/2024 17:06:14 - INFO - __main__ - Mean std for for amh_8: 0.35263779759407043
03/25/2024 17:06:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:06:14 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:06:14 - INFO - __main__ - ID text: amh_9
03/25/2024 17:07:31 - INFO - __main__ - Mean variance for amh_9: 0.1593482345342636
03/25/2024 17:07:31 - INFO - __main__ - Mean std for for amh_9: 0.3503474295139313
03/25/2024 17:07:31 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/25/2024 17:07:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:07:31 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:07:31 - INFO - __main__ - ID text: conll_2003_en_0
03/25/2024 17:08:47 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.15618357062339783
03/25/2024 17:08:47 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.35025355219841003
03/25/2024 17:08:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:08:47 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:08:47 - INFO - __main__ - ID text: conll_2003_en_1
03/25/2024 17:10:03 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.04775857552886009
03/25/2024 17:10:03 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.19227178394794464
03/25/2024 17:10:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:10:03 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:10:03 - INFO - __main__ - ID text: conll_2003_en_2
03/25/2024 17:11:19 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.04609702527523041
03/25/2024 17:11:19 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.17006154358386993
03/25/2024 17:11:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:11:19 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:11:19 - INFO - __main__ - ID text: conll_2003_en_3
03/25/2024 17:12:35 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.04665127769112587
03/25/2024 17:12:35 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.18122746050357819
03/25/2024 17:12:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:12:35 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:12:35 - INFO - __main__ - ID text: conll_2003_en_4
03/25/2024 17:13:50 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.06321700662374496
03/25/2024 17:13:50 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.22371572256088257
03/25/2024 17:13:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:13:50 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:13:50 - INFO - __main__ - ID text: conll_2003_en_5
03/25/2024 17:15:06 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.1606784164905548
03/25/2024 17:15:06 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.35698267817497253
03/25/2024 17:15:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:15:06 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:15:06 - INFO - __main__ - ID text: conll_2003_en_6
03/25/2024 17:16:21 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.12908922135829926
03/25/2024 17:16:21 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.3247637450695038
03/25/2024 17:16:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:16:24 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:16:24 - INFO - __main__ - ID text: conll_2003_en_7
03/25/2024 17:17:40 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.1703179031610489
03/25/2024 17:17:40 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.3727990686893463
03/25/2024 17:17:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:17:40 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:17:40 - INFO - __main__ - ID text: conll_2003_en_8
03/25/2024 17:18:55 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.1752316951751709
03/25/2024 17:18:55 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.37742698192596436
03/25/2024 17:18:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:18:55 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:18:55 - INFO - __main__ - ID text: conll_2003_en_9
03/25/2024 17:20:10 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.04129466414451599
03/25/2024 17:20:10 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.16721807420253754
03/25/2024 17:20:10 - INFO - __main__ - 
######## Language: hau ######## 

03/25/2024 17:20:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:20:10 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:20:10 - INFO - __main__ - ID text: hau_0
03/25/2024 17:21:25 - INFO - __main__ - Mean variance for hau_0: 0.03720424696803093
03/25/2024 17:21:25 - INFO - __main__ - Mean std for for hau_0: 0.15139415860176086
03/25/2024 17:21:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:21:25 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:21:25 - INFO - __main__ - ID text: hau_1
03/25/2024 17:22:40 - INFO - __main__ - Mean variance for hau_1: 0.0399930365383625
03/25/2024 17:22:40 - INFO - __main__ - Mean std for for hau_1: 0.17080694437026978
03/25/2024 17:22:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:22:40 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:22:40 - INFO - __main__ - ID text: hau_2
03/25/2024 17:23:55 - INFO - __main__ - Mean variance for hau_2: 0.1678178757429123
03/25/2024 17:23:55 - INFO - __main__ - Mean std for for hau_2: 0.3668600618839264
03/25/2024 17:23:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:23:55 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:23:55 - INFO - __main__ - ID text: hau_3
03/25/2024 17:25:09 - INFO - __main__ - Mean variance for hau_3: 0.01974044181406498
03/25/2024 17:25:09 - INFO - __main__ - Mean std for for hau_3: 0.1123800203204155
03/25/2024 17:25:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:25:09 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:25:09 - INFO - __main__ - ID text: hau_4
03/25/2024 17:26:24 - INFO - __main__ - Mean variance for hau_4: 0.04281749203801155
03/25/2024 17:26:24 - INFO - __main__ - Mean std for for hau_4: 0.1645900458097458
03/25/2024 17:26:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:26:24 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:26:24 - INFO - __main__ - ID text: hau_5
03/25/2024 17:27:38 - INFO - __main__ - Mean variance for hau_5: 0.036328110843896866
03/25/2024 17:27:39 - INFO - __main__ - Mean std for for hau_5: 0.14964143931865692
03/25/2024 17:27:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:27:39 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:27:39 - INFO - __main__ - ID text: hau_6
03/25/2024 17:28:53 - INFO - __main__ - Mean variance for hau_6: 0.05267524719238281
03/25/2024 17:28:53 - INFO - __main__ - Mean std for for hau_6: 0.1850888878107071
03/25/2024 17:28:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:28:53 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:28:53 - INFO - __main__ - ID text: hau_7
03/25/2024 17:30:07 - INFO - __main__ - Mean variance for hau_7: 0.042533114552497864
03/25/2024 17:30:07 - INFO - __main__ - Mean std for for hau_7: 0.16198158264160156
03/25/2024 17:30:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:30:07 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:30:07 - INFO - __main__ - ID text: hau_8
03/25/2024 17:31:22 - INFO - __main__ - Mean variance for hau_8: 0.03172915056347847
03/25/2024 17:31:22 - INFO - __main__ - Mean std for for hau_8: 0.14056231081485748
03/25/2024 17:31:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:31:22 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:31:22 - INFO - __main__ - ID text: hau_9
03/25/2024 17:32:36 - INFO - __main__ - Mean variance for hau_9: 0.053156014531850815
03/25/2024 17:32:36 - INFO - __main__ - Mean std for for hau_9: 0.1851205825805664
03/25/2024 17:32:36 - INFO - __main__ - 
######## Language: ibo ######## 

03/25/2024 17:32:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:32:36 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:32:36 - INFO - __main__ - ID text: ibo_0
03/25/2024 17:33:51 - INFO - __main__ - Mean variance for ibo_0: 0.049688417464494705
03/25/2024 17:33:51 - INFO - __main__ - Mean std for for ibo_0: 0.18315081298351288
03/25/2024 17:33:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:33:51 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:33:51 - INFO - __main__ - ID text: ibo_1
03/25/2024 17:35:05 - INFO - __main__ - Mean variance for ibo_1: 0.04703294858336449
03/25/2024 17:35:05 - INFO - __main__ - Mean std for for ibo_1: 0.17523330450057983
03/25/2024 17:35:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:35:05 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:35:05 - INFO - __main__ - ID text: ibo_2
03/25/2024 17:36:20 - INFO - __main__ - Mean variance for ibo_2: 0.04146488383412361
03/25/2024 17:36:20 - INFO - __main__ - Mean std for for ibo_2: 0.1622161567211151
03/25/2024 17:36:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:36:20 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:36:20 - INFO - __main__ - ID text: ibo_3
03/25/2024 17:37:34 - INFO - __main__ - Mean variance for ibo_3: 0.05017593875527382
03/25/2024 17:37:34 - INFO - __main__ - Mean std for for ibo_3: 0.19664299488067627
03/25/2024 17:37:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:37:34 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:37:34 - INFO - __main__ - ID text: ibo_4
03/25/2024 17:38:49 - INFO - __main__ - Mean variance for ibo_4: 0.05246217921376228
03/25/2024 17:38:49 - INFO - __main__ - Mean std for for ibo_4: 0.18725381791591644
03/25/2024 17:38:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:38:49 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:38:49 - INFO - __main__ - ID text: ibo_5
03/25/2024 17:40:04 - INFO - __main__ - Mean variance for ibo_5: 0.04442783072590828
03/25/2024 17:40:04 - INFO - __main__ - Mean std for for ibo_5: 0.1768622249364853
03/25/2024 17:40:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:40:04 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:40:04 - INFO - __main__ - ID text: ibo_6
03/25/2024 17:41:19 - INFO - __main__ - Mean variance for ibo_6: 0.052052583545446396
03/25/2024 17:41:19 - INFO - __main__ - Mean std for for ibo_6: 0.1873357743024826
03/25/2024 17:41:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:41:19 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:41:19 - INFO - __main__ - ID text: ibo_7
03/25/2024 17:42:44 - INFO - __main__ - Mean variance for ibo_7: 0.042672887444496155
03/25/2024 17:42:44 - INFO - __main__ - Mean std for for ibo_7: 0.16450616717338562
03/25/2024 17:42:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:42:44 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:42:44 - INFO - __main__ - ID text: ibo_8
03/25/2024 17:44:11 - INFO - __main__ - Mean variance for ibo_8: 0.043320972472429276
03/25/2024 17:44:11 - INFO - __main__ - Mean std for for ibo_8: 0.17970949411392212
03/25/2024 17:44:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:44:11 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:44:11 - INFO - __main__ - ID text: ibo_9
03/25/2024 17:45:38 - INFO - __main__ - Mean variance for ibo_9: 0.05029270425438881
03/25/2024 17:45:38 - INFO - __main__ - Mean std for for ibo_9: 0.18180209398269653
03/25/2024 17:45:38 - INFO - __main__ - 
######## Language: kin ######## 

03/25/2024 17:45:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:45:38 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:45:38 - INFO - __main__ - ID text: kin_0
03/25/2024 17:47:06 - INFO - __main__ - Mean variance for kin_0: 0.04781493917107582
03/25/2024 17:47:06 - INFO - __main__ - Mean std for for kin_0: 0.17397594451904297
03/25/2024 17:47:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:47:06 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:47:06 - INFO - __main__ - ID text: kin_1
03/25/2024 17:48:35 - INFO - __main__ - Mean variance for kin_1: 0.055662889033555984
03/25/2024 17:48:35 - INFO - __main__ - Mean std for for kin_1: 0.19148433208465576
03/25/2024 17:48:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:48:35 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:48:35 - INFO - __main__ - ID text: kin_2
03/25/2024 17:50:01 - INFO - __main__ - Mean variance for kin_2: 0.036931026726961136
03/25/2024 17:50:01 - INFO - __main__ - Mean std for for kin_2: 0.170949324965477
03/25/2024 17:50:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:50:01 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:50:01 - INFO - __main__ - ID text: kin_3
03/25/2024 17:51:29 - INFO - __main__ - Mean variance for kin_3: 0.05178403854370117
03/25/2024 17:51:29 - INFO - __main__ - Mean std for for kin_3: 0.1809362918138504
03/25/2024 17:51:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:51:29 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:51:29 - INFO - __main__ - ID text: kin_4
03/25/2024 17:52:56 - INFO - __main__ - Mean variance for kin_4: 0.048631321638822556
03/25/2024 17:52:56 - INFO - __main__ - Mean std for for kin_4: 0.17274993658065796
03/25/2024 17:52:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:52:56 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:52:56 - INFO - __main__ - ID text: kin_5
03/25/2024 17:54:23 - INFO - __main__ - Mean variance for kin_5: 0.044194936752319336
03/25/2024 17:54:23 - INFO - __main__ - Mean std for for kin_5: 0.18107479810714722
03/25/2024 17:54:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:54:23 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:54:23 - INFO - __main__ - ID text: kin_6
03/25/2024 17:55:50 - INFO - __main__ - Mean variance for kin_6: 0.030561847612261772
03/25/2024 17:55:50 - INFO - __main__ - Mean std for for kin_6: 0.13928037881851196
03/25/2024 17:55:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:55:50 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:55:50 - INFO - __main__ - ID text: kin_7
03/25/2024 17:57:16 - INFO - __main__ - Mean variance for kin_7: 0.046046480536460876
03/25/2024 17:57:16 - INFO - __main__ - Mean std for for kin_7: 0.1725839376449585
03/25/2024 17:57:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:57:16 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:57:16 - INFO - __main__ - ID text: kin_8
03/25/2024 17:58:44 - INFO - __main__ - Mean variance for kin_8: 0.04940427467226982
03/25/2024 17:58:44 - INFO - __main__ - Mean std for for kin_8: 0.1892814040184021
03/25/2024 17:58:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:58:44 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 17:58:44 - INFO - __main__ - ID text: kin_9
03/25/2024 18:00:12 - INFO - __main__ - Mean variance for kin_9: 0.04394061863422394
03/25/2024 18:00:12 - INFO - __main__ - Mean std for for kin_9: 0.17490261793136597
03/25/2024 18:00:12 - INFO - __main__ - 
######## Language: lug ######## 

03/25/2024 18:00:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:00:12 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:00:12 - INFO - __main__ - ID text: lug_0
03/25/2024 18:01:39 - INFO - __main__ - Mean variance for lug_0: 0.04080014303326607
03/25/2024 18:01:39 - INFO - __main__ - Mean std for for lug_0: 0.15855655074119568
03/25/2024 18:01:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:01:39 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:01:39 - INFO - __main__ - ID text: lug_1
03/25/2024 18:03:07 - INFO - __main__ - Mean variance for lug_1: 0.04966356232762337
03/25/2024 18:03:07 - INFO - __main__ - Mean std for for lug_1: 0.1771904081106186
03/25/2024 18:03:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:03:07 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:03:07 - INFO - __main__ - ID text: lug_2
03/25/2024 18:04:34 - INFO - __main__ - Mean variance for lug_2: 0.018500952050089836
03/25/2024 18:04:34 - INFO - __main__ - Mean std for for lug_2: 0.11151542514562607
03/25/2024 18:04:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:04:34 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:04:34 - INFO - __main__ - ID text: lug_3
03/25/2024 18:06:02 - INFO - __main__ - Mean variance for lug_3: 0.03423507139086723
03/25/2024 18:06:02 - INFO - __main__ - Mean std for for lug_3: 0.14650332927703857
03/25/2024 18:06:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:06:02 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:06:02 - INFO - __main__ - ID text: lug_4
03/25/2024 18:07:30 - INFO - __main__ - Mean variance for lug_4: 0.03470730409026146
03/25/2024 18:07:30 - INFO - __main__ - Mean std for for lug_4: 0.1522044688463211
03/25/2024 18:07:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:07:30 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:07:30 - INFO - __main__ - ID text: lug_5
03/25/2024 18:08:57 - INFO - __main__ - Mean variance for lug_5: 0.045328471809625626
03/25/2024 18:08:57 - INFO - __main__ - Mean std for for lug_5: 0.16622859239578247
03/25/2024 18:08:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:08:57 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:08:57 - INFO - __main__ - ID text: lug_6
03/25/2024 18:10:25 - INFO - __main__ - Mean variance for lug_6: 0.0449911393225193
03/25/2024 18:10:25 - INFO - __main__ - Mean std for for lug_6: 0.16932517290115356
03/25/2024 18:10:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:10:25 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:10:25 - INFO - __main__ - ID text: lug_7
03/25/2024 18:11:53 - INFO - __main__ - Mean variance for lug_7: 0.05363984778523445
03/25/2024 18:11:53 - INFO - __main__ - Mean std for for lug_7: 0.18583083152770996
03/25/2024 18:11:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:11:53 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:11:53 - INFO - __main__ - ID text: lug_8
03/25/2024 18:13:20 - INFO - __main__ - Mean variance for lug_8: 0.06608549505472183
03/25/2024 18:13:20 - INFO - __main__ - Mean std for for lug_8: 0.20537720620632172
03/25/2024 18:13:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:13:20 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:13:20 - INFO - __main__ - ID text: lug_9
03/25/2024 18:14:48 - INFO - __main__ - Mean variance for lug_9: 0.04815930500626564
03/25/2024 18:14:48 - INFO - __main__ - Mean std for for lug_9: 0.17448747158050537
03/25/2024 18:14:48 - INFO - __main__ - 
######## Language: luo ######## 

03/25/2024 18:14:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:14:48 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:14:48 - INFO - __main__ - ID text: luo_0
03/25/2024 18:16:15 - INFO - __main__ - Mean variance for luo_0: 0.02967127226293087
03/25/2024 18:16:15 - INFO - __main__ - Mean std for for luo_0: 0.13648851215839386
03/25/2024 18:16:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:16:15 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:16:15 - INFO - __main__ - ID text: luo_1
03/25/2024 18:17:42 - INFO - __main__ - Mean variance for luo_1: 0.041164331138134
03/25/2024 18:17:42 - INFO - __main__ - Mean std for for luo_1: 0.1693582683801651
03/25/2024 18:17:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:17:42 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:17:42 - INFO - __main__ - ID text: luo_2
03/25/2024 18:19:10 - INFO - __main__ - Mean variance for luo_2: 0.04585351049900055
03/25/2024 18:19:10 - INFO - __main__ - Mean std for for luo_2: 0.17042946815490723
03/25/2024 18:19:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:19:10 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:19:10 - INFO - __main__ - ID text: luo_3
03/25/2024 18:20:37 - INFO - __main__ - Mean variance for luo_3: 0.03118150122463703
03/25/2024 18:20:37 - INFO - __main__ - Mean std for for luo_3: 0.14065207540988922
03/25/2024 18:20:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:20:37 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:20:37 - INFO - __main__ - ID text: luo_4
03/25/2024 18:22:05 - INFO - __main__ - Mean variance for luo_4: 0.04369072988629341
03/25/2024 18:22:05 - INFO - __main__ - Mean std for for luo_4: 0.1728147715330124
03/25/2024 18:22:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:22:05 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:22:05 - INFO - __main__ - ID text: luo_5
03/25/2024 18:23:32 - INFO - __main__ - Mean variance for luo_5: 0.04927356168627739
03/25/2024 18:23:32 - INFO - __main__ - Mean std for for luo_5: 0.1827724725008011
03/25/2024 18:23:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:23:32 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:23:32 - INFO - __main__ - ID text: luo_6
03/25/2024 18:25:00 - INFO - __main__ - Mean variance for luo_6: 0.04611317440867424
03/25/2024 18:25:00 - INFO - __main__ - Mean std for for luo_6: 0.16878663003444672
03/25/2024 18:25:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:25:00 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:25:00 - INFO - __main__ - ID text: luo_7
03/25/2024 18:26:27 - INFO - __main__ - Mean variance for luo_7: 0.048138100653886795
03/25/2024 18:26:27 - INFO - __main__ - Mean std for for luo_7: 0.18774177134037018
03/25/2024 18:26:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:26:27 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:26:27 - INFO - __main__ - ID text: luo_8
03/25/2024 18:27:55 - INFO - __main__ - Mean variance for luo_8: 0.04855726286768913
03/25/2024 18:27:55 - INFO - __main__ - Mean std for for luo_8: 0.1783057302236557
03/25/2024 18:27:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:27:55 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:27:55 - INFO - __main__ - ID text: luo_9
03/25/2024 18:29:22 - INFO - __main__ - Mean variance for luo_9: 0.04492040351033211
03/25/2024 18:29:22 - INFO - __main__ - Mean std for for luo_9: 0.18773216009140015
03/25/2024 18:29:22 - INFO - __main__ - 
######## Language: pcm ######## 

03/25/2024 18:29:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:29:22 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:29:22 - INFO - __main__ - ID text: pcm_0
03/25/2024 18:30:50 - INFO - __main__ - Mean variance for pcm_0: 0.04037003591656685
03/25/2024 18:30:50 - INFO - __main__ - Mean std for for pcm_0: 0.1628836989402771
03/25/2024 18:30:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:30:50 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:30:50 - INFO - __main__ - ID text: pcm_1
03/25/2024 18:32:18 - INFO - __main__ - Mean variance for pcm_1: 0.040484022349119186
03/25/2024 18:32:18 - INFO - __main__ - Mean std for for pcm_1: 0.17487655580043793
03/25/2024 18:32:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:32:18 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:32:18 - INFO - __main__ - ID text: pcm_2
03/25/2024 18:33:45 - INFO - __main__ - Mean variance for pcm_2: 0.05046268180012703
03/25/2024 18:33:45 - INFO - __main__ - Mean std for for pcm_2: 0.1873488426208496
03/25/2024 18:33:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:33:45 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:33:45 - INFO - __main__ - ID text: pcm_3
03/25/2024 18:35:13 - INFO - __main__ - Mean variance for pcm_3: 0.04623076692223549
03/25/2024 18:35:13 - INFO - __main__ - Mean std for for pcm_3: 0.17241539061069489
03/25/2024 18:35:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:35:13 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:35:13 - INFO - __main__ - ID text: pcm_4
03/25/2024 18:36:41 - INFO - __main__ - Mean variance for pcm_4: 0.048013463616371155
03/25/2024 18:36:41 - INFO - __main__ - Mean std for for pcm_4: 0.17356014251708984
03/25/2024 18:36:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:36:41 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:36:41 - INFO - __main__ - ID text: pcm_5
03/25/2024 18:38:09 - INFO - __main__ - Mean variance for pcm_5: 0.035707756876945496
03/25/2024 18:38:09 - INFO - __main__ - Mean std for for pcm_5: 0.16621066629886627
03/25/2024 18:38:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:38:09 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:38:09 - INFO - __main__ - ID text: pcm_6
03/25/2024 18:39:37 - INFO - __main__ - Mean variance for pcm_6: 0.04342344403266907
03/25/2024 18:39:37 - INFO - __main__ - Mean std for for pcm_6: 0.16778962314128876
03/25/2024 18:39:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:39:37 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:39:37 - INFO - __main__ - ID text: pcm_7
03/25/2024 18:41:04 - INFO - __main__ - Mean variance for pcm_7: 0.04537798464298248
03/25/2024 18:41:04 - INFO - __main__ - Mean std for for pcm_7: 0.1720910519361496
03/25/2024 18:41:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:41:04 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:41:04 - INFO - __main__ - ID text: pcm_8
03/25/2024 18:42:32 - INFO - __main__ - Mean variance for pcm_8: 0.04204452037811279
03/25/2024 18:42:32 - INFO - __main__ - Mean std for for pcm_8: 0.16709931194782257
03/25/2024 18:42:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:42:32 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:42:32 - INFO - __main__ - ID text: pcm_9
03/25/2024 18:43:59 - INFO - __main__ - Mean variance for pcm_9: 0.04030827805399895
03/25/2024 18:43:59 - INFO - __main__ - Mean std for for pcm_9: 0.1701781302690506
03/25/2024 18:43:59 - INFO - __main__ - 
######## Language: swa ######## 

03/25/2024 18:43:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:43:59 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:43:59 - INFO - __main__ - ID text: swa_0
03/25/2024 18:45:27 - INFO - __main__ - Mean variance for swa_0: 0.04790448769927025
03/25/2024 18:45:27 - INFO - __main__ - Mean std for for swa_0: 0.17181025445461273
03/25/2024 18:45:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:45:27 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:45:27 - INFO - __main__ - ID text: swa_1
03/25/2024 18:46:55 - INFO - __main__ - Mean variance for swa_1: 0.04778386652469635
03/25/2024 18:46:55 - INFO - __main__ - Mean std for for swa_1: 0.17618604004383087
03/25/2024 18:46:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:46:55 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:46:55 - INFO - __main__ - ID text: swa_2
03/25/2024 18:48:22 - INFO - __main__ - Mean variance for swa_2: 0.04483959078788757
03/25/2024 18:48:22 - INFO - __main__ - Mean std for for swa_2: 0.16891439259052277
03/25/2024 18:48:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:48:22 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:48:22 - INFO - __main__ - ID text: swa_3
03/25/2024 18:49:50 - INFO - __main__ - Mean variance for swa_3: 0.05107763037085533
03/25/2024 18:49:50 - INFO - __main__ - Mean std for for swa_3: 0.18818633258342743
03/25/2024 18:49:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:49:50 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:49:50 - INFO - __main__ - ID text: swa_4
03/25/2024 18:51:17 - INFO - __main__ - Mean variance for swa_4: 0.033551931381225586
03/25/2024 18:51:17 - INFO - __main__ - Mean std for for swa_4: 0.14402328431606293
03/25/2024 18:51:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:51:17 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:51:17 - INFO - __main__ - ID text: swa_5
03/25/2024 18:52:45 - INFO - __main__ - Mean variance for swa_5: 0.035035885870456696
03/25/2024 18:52:45 - INFO - __main__ - Mean std for for swa_5: 0.14592474699020386
03/25/2024 18:52:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:52:45 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:52:45 - INFO - __main__ - ID text: swa_6
03/25/2024 18:54:12 - INFO - __main__ - Mean variance for swa_6: 0.03478009253740311
03/25/2024 18:54:12 - INFO - __main__ - Mean std for for swa_6: 0.14669005572795868
03/25/2024 18:54:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:54:12 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:54:12 - INFO - __main__ - ID text: swa_7
03/25/2024 18:55:40 - INFO - __main__ - Mean variance for swa_7: 0.055833667516708374
03/25/2024 18:55:40 - INFO - __main__ - Mean std for for swa_7: 0.21057528257369995
03/25/2024 18:55:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:55:41 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:55:41 - INFO - __main__ - ID text: swa_8
03/25/2024 18:57:08 - INFO - __main__ - Mean variance for swa_8: 0.038903553038835526
03/25/2024 18:57:08 - INFO - __main__ - Mean std for for swa_8: 0.16186632215976715
03/25/2024 18:57:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:57:08 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:57:08 - INFO - __main__ - ID text: swa_9
03/25/2024 18:58:36 - INFO - __main__ - Mean variance for swa_9: 0.05324866250157356
03/25/2024 18:58:36 - INFO - __main__ - Mean std for for swa_9: 0.18891535699367523
03/25/2024 18:58:36 - INFO - __main__ - 
######## Language: wol ######## 

03/25/2024 18:58:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 18:58:36 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 18:58:36 - INFO - __main__ - ID text: wol_0
03/25/2024 19:00:03 - INFO - __main__ - Mean variance for wol_0: 0.04356104135513306
03/25/2024 19:00:03 - INFO - __main__ - Mean std for for wol_0: 0.1649368852376938
03/25/2024 19:00:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:00:03 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:00:03 - INFO - __main__ - ID text: wol_1
03/25/2024 19:01:31 - INFO - __main__ - Mean variance for wol_1: 0.04864092543721199
03/25/2024 19:01:31 - INFO - __main__ - Mean std for for wol_1: 0.1793079376220703
03/25/2024 19:01:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:01:31 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:01:31 - INFO - __main__ - ID text: wol_2
03/25/2024 19:02:59 - INFO - __main__ - Mean variance for wol_2: 0.04588590934872627
03/25/2024 19:02:59 - INFO - __main__ - Mean std for for wol_2: 0.17548762261867523
03/25/2024 19:02:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:02:59 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:02:59 - INFO - __main__ - ID text: wol_3
03/25/2024 19:04:26 - INFO - __main__ - Mean variance for wol_3: 0.07609837502241135
03/25/2024 19:04:26 - INFO - __main__ - Mean std for for wol_3: 0.2496144324541092
03/25/2024 19:04:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:04:26 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:04:26 - INFO - __main__ - ID text: wol_4
03/25/2024 19:05:56 - INFO - __main__ - Mean variance for wol_4: 0.05312485620379448
03/25/2024 19:05:56 - INFO - __main__ - Mean std for for wol_4: 0.2022579461336136
03/25/2024 19:05:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:05:56 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:05:56 - INFO - __main__ - ID text: wol_5
03/25/2024 19:07:23 - INFO - __main__ - Mean variance for wol_5: 0.04980701580643654
03/25/2024 19:07:23 - INFO - __main__ - Mean std for for wol_5: 0.1842067390680313
03/25/2024 19:07:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:07:23 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:07:23 - INFO - __main__ - ID text: wol_6
03/25/2024 19:08:50 - INFO - __main__ - Mean variance for wol_6: 0.15645234286785126
03/25/2024 19:08:50 - INFO - __main__ - Mean std for for wol_6: 0.34909141063690186
03/25/2024 19:08:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:08:50 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:08:50 - INFO - __main__ - ID text: wol_7
03/25/2024 19:10:17 - INFO - __main__ - Mean variance for wol_7: 0.038785774260759354
03/25/2024 19:10:17 - INFO - __main__ - Mean std for for wol_7: 0.16188420355319977
03/25/2024 19:10:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:10:17 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:10:17 - INFO - __main__ - ID text: wol_8
03/25/2024 19:11:44 - INFO - __main__ - Mean variance for wol_8: 0.0317130945622921
03/25/2024 19:11:44 - INFO - __main__ - Mean std for for wol_8: 0.15468357503414154
03/25/2024 19:11:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:11:44 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:11:44 - INFO - __main__ - ID text: wol_9
03/25/2024 19:13:10 - INFO - __main__ - Mean variance for wol_9: 0.04655562713742256
03/25/2024 19:13:10 - INFO - __main__ - Mean std for for wol_9: 0.1842513531446457
03/25/2024 19:13:10 - INFO - __main__ - 
######## Language: yor ######## 

03/25/2024 19:13:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:13:10 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:13:10 - INFO - __main__ - ID text: yor_0
03/25/2024 19:14:38 - INFO - __main__ - Mean variance for yor_0: 0.14453426003456116
03/25/2024 19:14:38 - INFO - __main__ - Mean std for for yor_0: 0.33383414149284363
03/25/2024 19:14:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:14:38 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:14:38 - INFO - __main__ - ID text: yor_1
03/25/2024 19:16:05 - INFO - __main__ - Mean variance for yor_1: 0.140716552734375
03/25/2024 19:16:05 - INFO - __main__ - Mean std for for yor_1: 0.3236294686794281
03/25/2024 19:16:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:16:05 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:16:05 - INFO - __main__ - ID text: yor_2
03/25/2024 19:17:31 - INFO - __main__ - Mean variance for yor_2: 0.058651477098464966
03/25/2024 19:17:31 - INFO - __main__ - Mean std for for yor_2: 0.19576086103916168
03/25/2024 19:17:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:17:31 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:17:31 - INFO - __main__ - ID text: yor_3
03/25/2024 19:18:58 - INFO - __main__ - Mean variance for yor_3: 0.041371554136276245
03/25/2024 19:18:58 - INFO - __main__ - Mean std for for yor_3: 0.16023866832256317
03/25/2024 19:18:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:18:58 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:18:58 - INFO - __main__ - ID text: yor_4
03/25/2024 19:20:24 - INFO - __main__ - Mean variance for yor_4: 0.1502864807844162
03/25/2024 19:20:24 - INFO - __main__ - Mean std for for yor_4: 0.34056392312049866
03/25/2024 19:20:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:20:24 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:20:24 - INFO - __main__ - ID text: yor_5
03/25/2024 19:21:51 - INFO - __main__ - Mean variance for yor_5: 0.10965654999017715
03/25/2024 19:21:51 - INFO - __main__ - Mean std for for yor_5: 0.2828632891178131
03/25/2024 19:21:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:21:51 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:21:51 - INFO - __main__ - ID text: yor_6
03/25/2024 19:23:19 - INFO - __main__ - Mean variance for yor_6: 0.04272416606545448
03/25/2024 19:23:19 - INFO - __main__ - Mean std for for yor_6: 0.17141146957874298
03/25/2024 19:23:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:23:19 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:23:19 - INFO - __main__ - ID text: yor_7
03/25/2024 19:24:46 - INFO - __main__ - Mean variance for yor_7: 0.13553546369075775
03/25/2024 19:24:46 - INFO - __main__ - Mean std for for yor_7: 0.3170619606971741
03/25/2024 19:24:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:24:46 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:24:46 - INFO - __main__ - ID text: yor_8
03/25/2024 19:26:14 - INFO - __main__ - Mean variance for yor_8: 0.0464799739420414
03/25/2024 19:26:14 - INFO - __main__ - Mean std for for yor_8: 0.16944684088230133
03/25/2024 19:26:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:26:14 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:26:14 - INFO - __main__ - ID text: yor_9
03/25/2024 19:27:41 - INFO - __main__ - Mean variance for yor_9: 0.14008007943630219
03/25/2024 19:27:41 - INFO - __main__ - Mean std for for yor_9: 0.32297053933143616
03/25/2024 19:27:41 - INFO - __main__ - 
######## Language: zh ######## 

03/25/2024 19:27:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:27:41 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:27:41 - INFO - __main__ - ID text: zh_0
03/25/2024 19:29:08 - INFO - __main__ - Mean variance for zh_0: 0.1679769903421402
03/25/2024 19:29:08 - INFO - __main__ - Mean std for for zh_0: 0.3696688115596771
03/25/2024 19:29:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:29:09 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:29:09 - INFO - __main__ - ID text: zh_1
03/25/2024 19:30:37 - INFO - __main__ - Mean variance for zh_1: 0.13060502707958221
03/25/2024 19:30:37 - INFO - __main__ - Mean std for for zh_1: 0.3100058436393738
03/25/2024 19:30:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:30:37 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:30:37 - INFO - __main__ - ID text: zh_2
03/25/2024 19:32:05 - INFO - __main__ - Mean variance for zh_2: 0.14000679552555084
03/25/2024 19:32:05 - INFO - __main__ - Mean std for for zh_2: 0.32342612743377686
03/25/2024 19:32:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:32:06 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:32:06 - INFO - __main__ - ID text: zh_3
03/25/2024 19:33:33 - INFO - __main__ - Mean variance for zh_3: 0.16156835854053497
03/25/2024 19:33:33 - INFO - __main__ - Mean std for for zh_3: 0.35638824105262756
03/25/2024 19:33:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:33:33 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:33:33 - INFO - __main__ - ID text: zh_4
03/25/2024 19:35:01 - INFO - __main__ - Mean variance for zh_4: 0.17609524726867676
03/25/2024 19:35:01 - INFO - __main__ - Mean std for for zh_4: 0.3775726854801178
03/25/2024 19:35:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:35:01 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:35:01 - INFO - __main__ - ID text: zh_5
03/25/2024 19:36:29 - INFO - __main__ - Mean variance for zh_5: 0.17165546119213104
03/25/2024 19:36:29 - INFO - __main__ - Mean std for for zh_5: 0.3733426332473755
03/25/2024 19:36:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:36:29 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:36:29 - INFO - __main__ - ID text: zh_6
03/25/2024 19:37:57 - INFO - __main__ - Mean variance for zh_6: 0.14094270765781403
03/25/2024 19:37:57 - INFO - __main__ - Mean std for for zh_6: 0.32512733340263367
03/25/2024 19:37:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:37:57 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:37:57 - INFO - __main__ - ID text: zh_7
03/25/2024 19:39:25 - INFO - __main__ - Mean variance for zh_7: 0.1401243358850479
03/25/2024 19:39:25 - INFO - __main__ - Mean std for for zh_7: 0.3283890187740326
03/25/2024 19:39:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:39:25 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:39:25 - INFO - __main__ - ID text: zh_8
03/25/2024 19:40:53 - INFO - __main__ - Mean variance for zh_8: 0.1563318967819214
03/25/2024 19:40:53 - INFO - __main__ - Mean std for for zh_8: 0.34316572546958923
03/25/2024 19:40:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:40:53 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:40:53 - INFO - __main__ - ID text: zh_9
03/25/2024 19:42:21 - INFO - __main__ - Mean variance for zh_9: 0.15322110056877136
03/25/2024 19:42:21 - INFO - __main__ - Mean std for for zh_9: 0.339413046836853
03/25/2024 19:42:21 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/25/2024 19:42:21 - INFO - __main__ - 
######## Language: arabic ######## 

03/25/2024 19:42:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:42:21 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:42:21 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/25/2024 19:43:49 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.10474175214767456
03/25/2024 19:43:49 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.2780359089374542
03/25/2024 19:43:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:43:50 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:43:50 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/25/2024 19:45:17 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.04744299128651619
03/25/2024 19:45:17 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.17424792051315308
03/25/2024 19:45:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:45:17 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:45:17 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/25/2024 19:46:44 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.04360020533204079
03/25/2024 19:46:44 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.1731065958738327
03/25/2024 19:46:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:46:44 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:46:44 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/25/2024 19:48:11 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.04211513325572014
03/25/2024 19:48:11 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.1717292070388794
03/25/2024 19:48:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:48:11 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:48:11 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/25/2024 19:49:38 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.13034097850322723
03/25/2024 19:49:38 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.31421589851379395
03/25/2024 19:49:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:49:39 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:49:39 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/25/2024 19:51:06 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.04327106475830078
03/25/2024 19:51:06 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.1724962592124939
03/25/2024 19:51:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:51:06 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:51:06 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/25/2024 19:52:34 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.055261850357055664
03/25/2024 19:52:34 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.19519640505313873
03/25/2024 19:52:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:52:34 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:52:34 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/25/2024 19:54:01 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.040790241211652756
03/25/2024 19:54:01 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.16637612879276276
03/25/2024 19:54:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:54:01 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:54:01 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/25/2024 19:55:28 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.03794746845960617
03/25/2024 19:55:28 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.16125836968421936
03/25/2024 19:55:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:55:28 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:55:28 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/25/2024 19:56:56 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.04007291421294212
03/25/2024 19:56:56 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.16614122688770294
03/25/2024 19:56:56 - INFO - __main__ - 
######## Language: russian ######## 

03/25/2024 19:56:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:56:56 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:56:56 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/25/2024 19:58:23 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.020543618127703667
03/25/2024 19:58:23 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.11698494106531143
03/25/2024 19:58:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:58:23 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:58:23 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/25/2024 19:59:51 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.05050867423415184
03/25/2024 19:59:51 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.17808805406093597
03/25/2024 19:59:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 19:59:51 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 19:59:51 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/25/2024 20:01:19 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.019977761432528496
03/25/2024 20:01:19 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.11615685373544693
03/25/2024 20:01:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:01:20 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:01:20 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/25/2024 20:02:47 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.020609401166439056
03/25/2024 20:02:47 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.11818766593933105
03/25/2024 20:02:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:02:47 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:02:47 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/25/2024 20:04:15 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.02084929682314396
03/25/2024 20:04:15 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.11927594989538193
03/25/2024 20:04:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:04:15 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:04:15 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/25/2024 20:05:42 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.02145068347454071
03/25/2024 20:05:42 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.12055718153715134
03/25/2024 20:05:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:05:42 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:05:42 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/25/2024 20:07:09 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.052004482597112656
03/25/2024 20:07:09 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.19114424288272858
03/25/2024 20:07:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:07:09 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:07:09 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/25/2024 20:08:37 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.021751901134848595
03/25/2024 20:08:37 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.12137734144926071
03/25/2024 20:08:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:08:37 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:08:37 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/25/2024 20:10:04 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.05386878922581673
03/25/2024 20:10:04 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.1868705004453659
03/25/2024 20:10:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:10:05 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:10:05 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/25/2024 20:11:33 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.022377008572220802
03/25/2024 20:11:33 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.1227894127368927
03/25/2024 20:11:33 - INFO - __main__ - 
######## Language: bengali ######## 

03/25/2024 20:11:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:11:34 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:11:34 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/25/2024 20:13:02 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.09258376806974411
03/25/2024 20:13:02 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.26152071356773376
03/25/2024 20:13:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:13:02 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:13:02 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/25/2024 20:14:29 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.08783897757530212
03/25/2024 20:14:29 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.25438061356544495
03/25/2024 20:14:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:14:29 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:14:29 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/25/2024 20:15:56 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.09402614086866379
03/25/2024 20:15:56 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.26345109939575195
03/25/2024 20:15:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:15:56 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:15:56 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/25/2024 20:17:24 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.09404060244560242
03/25/2024 20:17:24 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.2632611095905304
03/25/2024 20:17:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:17:24 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:17:24 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/25/2024 20:18:51 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.10135804861783981
03/25/2024 20:18:51 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.2734798192977905
03/25/2024 20:18:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:18:51 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:18:51 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/25/2024 20:20:18 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.09547365456819534
03/25/2024 20:20:18 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.26498910784721375
03/25/2024 20:20:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:20:18 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:20:18 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/25/2024 20:21:46 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.08795566111803055
03/25/2024 20:21:46 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.254745215177536
03/25/2024 20:21:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:21:46 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:21:46 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/25/2024 20:23:14 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.09402430802583694
03/25/2024 20:23:14 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.2631429135799408
03/25/2024 20:23:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:23:14 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:23:14 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/25/2024 20:24:41 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.09443216770887375
03/25/2024 20:24:41 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.2646435797214508
03/25/2024 20:24:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:24:41 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:24:41 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/25/2024 20:26:09 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.13506945967674255
03/25/2024 20:26:09 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.31986770033836365
03/25/2024 20:26:09 - INFO - __main__ - 
######## Language: telugu ######## 

03/25/2024 20:26:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:26:09 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:26:09 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/25/2024 20:27:36 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.048506930470466614
03/25/2024 20:27:36 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.18165241181850433
03/25/2024 20:27:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:27:36 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:27:36 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/25/2024 20:29:04 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.03751249983906746
03/25/2024 20:29:04 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.15749302506446838
03/25/2024 20:29:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:29:04 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:29:04 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/25/2024 20:30:31 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.034773752093315125
03/25/2024 20:30:31 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.15158160030841827
03/25/2024 20:30:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:30:31 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:30:31 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/25/2024 20:31:59 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.05859845504164696
03/25/2024 20:31:59 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.20057596266269684
03/25/2024 20:31:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:31:59 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:31:59 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/25/2024 20:33:27 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.040821779519319534
03/25/2024 20:33:27 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.16596390306949615
03/25/2024 20:33:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:33:27 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:33:27 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/25/2024 20:34:55 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.03536830097436905
03/25/2024 20:34:55 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.15378797054290771
03/25/2024 20:34:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:34:55 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:34:55 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/25/2024 20:36:22 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.12715460360050201
03/25/2024 20:36:22 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.30693140625953674
03/25/2024 20:36:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:36:23 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:36:23 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/25/2024 20:37:50 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.03389472886919975
03/25/2024 20:37:50 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.14876176416873932
03/25/2024 20:37:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:37:50 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:37:50 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/25/2024 20:39:18 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.04852786287665367
03/25/2024 20:39:18 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.18340478837490082
03/25/2024 20:39:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:39:18 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:39:18 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/25/2024 20:40:46 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.03751460835337639
03/25/2024 20:40:46 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.15646903216838837
03/25/2024 20:40:46 - INFO - __main__ - 
######## Language: finnish ######## 

03/25/2024 20:40:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:40:46 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:40:46 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/25/2024 20:42:14 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.046648476272821426
03/25/2024 20:42:14 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.1698555201292038
03/25/2024 20:42:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:42:14 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:42:14 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/25/2024 20:43:42 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.051260605454444885
03/25/2024 20:43:42 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.17604100704193115
03/25/2024 20:43:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:43:42 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:43:42 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/25/2024 20:45:10 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.0654965415596962
03/25/2024 20:45:10 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.22201943397521973
03/25/2024 20:45:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:45:10 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:45:10 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/25/2024 20:46:38 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.05972479283809662
03/25/2024 20:46:38 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.18976740539073944
03/25/2024 20:46:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:46:38 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:46:38 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/25/2024 20:48:05 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.047942865639925
03/25/2024 20:48:05 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.17204749584197998
03/25/2024 20:48:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:48:05 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:48:05 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/25/2024 20:49:33 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.0178416408598423
03/25/2024 20:49:33 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.1103912815451622
03/25/2024 20:49:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:49:33 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:49:33 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/25/2024 20:51:01 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.014209914021193981
03/25/2024 20:51:01 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.1006864532828331
03/25/2024 20:51:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:51:01 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:51:01 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/25/2024 20:52:29 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.06502825766801834
03/25/2024 20:52:29 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.2225935459136963
03/25/2024 20:52:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:52:29 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:52:29 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/25/2024 20:53:55 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.03683779761195183
03/25/2024 20:53:55 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.15032605826854706
03/25/2024 20:53:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:53:56 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:53:56 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/25/2024 20:55:23 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.014812816865742207
03/25/2024 20:55:23 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.10418438911437988
03/25/2024 20:55:23 - INFO - __main__ - 
######## Language: swahili ######## 

03/25/2024 20:55:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:55:23 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:55:23 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/25/2024 20:56:50 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.058288440108299255
03/25/2024 20:56:50 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.19242917001247406
03/25/2024 20:56:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:56:50 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:56:50 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/25/2024 20:58:17 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.016448691487312317
03/25/2024 20:58:17 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.10901374369859695
03/25/2024 20:58:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:58:17 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:58:17 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/25/2024 20:59:44 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.0436459481716156
03/25/2024 20:59:44 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.16396941244602203
03/25/2024 20:59:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 20:59:45 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 20:59:45 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/25/2024 21:01:12 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.016300015151500702
03/25/2024 21:01:12 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.10746780782938004
03/25/2024 21:01:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:01:12 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:01:12 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/25/2024 21:02:39 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.019404323771595955
03/25/2024 21:02:39 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.1133253201842308
03/25/2024 21:02:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:02:40 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:02:40 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/25/2024 21:04:06 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.057356785982847214
03/25/2024 21:04:06 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.19152873754501343
03/25/2024 21:04:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:04:06 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:04:06 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/25/2024 21:05:34 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.046072255820035934
03/25/2024 21:05:34 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.16844181716442108
03/25/2024 21:05:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:05:34 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:05:34 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/25/2024 21:07:01 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.052473247051239014
03/25/2024 21:07:01 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.18046309053897858
03/25/2024 21:07:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:07:01 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:07:01 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/25/2024 21:08:30 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.02874007262289524
03/25/2024 21:08:30 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.13294845819473267
03/25/2024 21:08:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:08:30 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:08:30 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/25/2024 21:09:58 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.02244112826883793
03/25/2024 21:09:58 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.12007095664739609
03/25/2024 21:09:58 - INFO - __main__ - 
######## Language: korean ######## 

03/25/2024 21:09:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:09:58 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:09:58 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/25/2024 21:11:26 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.09723362326622009
03/25/2024 21:11:26 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.26778969168663025
03/25/2024 21:11:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:11:26 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:11:26 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/25/2024 21:12:53 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.03748977556824684
03/25/2024 21:12:53 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.16044215857982635
03/25/2024 21:12:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:12:53 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:12:53 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/25/2024 21:14:21 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.026404470205307007
03/25/2024 21:14:21 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.13255195319652557
03/25/2024 21:14:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:14:21 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:14:21 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/25/2024 21:15:49 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.04555879905819893
03/25/2024 21:15:49 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.1756662279367447
03/25/2024 21:15:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:15:49 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:15:49 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/25/2024 21:17:17 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.13271470367908478
03/25/2024 21:17:17 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.31295356154441833
03/25/2024 21:17:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:17:17 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:17:17 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/25/2024 21:18:44 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.041645027697086334
03/25/2024 21:18:44 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.16320867836475372
03/25/2024 21:18:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:18:44 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:18:44 - INFO - __main__ - ID text: korean-148115504649351135-0
03/25/2024 21:20:12 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.07973968982696533
03/25/2024 21:20:12 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.2356840968132019
03/25/2024 21:20:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:20:12 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:20:12 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/25/2024 21:21:39 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.1303229182958603
03/25/2024 21:21:39 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.3109489977359772
03/25/2024 21:21:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:21:39 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:21:39 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/25/2024 21:23:07 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.14001911878585815
03/25/2024 21:23:07 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.3214337229728699
03/25/2024 21:23:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:23:09 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:23:09 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/25/2024 21:24:37 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.15084664523601532
03/25/2024 21:24:37 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.3423648178577423
03/25/2024 21:24:37 - INFO - __main__ - 
######## Language: indonesian ######## 

03/25/2024 21:24:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:24:37 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:24:37 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/25/2024 21:26:04 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.015040560625493526
03/25/2024 21:26:04 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.10496842861175537
03/25/2024 21:26:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:26:04 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:26:04 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/25/2024 21:27:32 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.0626559928059578
03/25/2024 21:27:32 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.218375563621521
03/25/2024 21:27:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:27:32 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:27:32 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/25/2024 21:28:59 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.019409343600273132
03/25/2024 21:28:59 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.11382165551185608
03/25/2024 21:28:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:28:59 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:28:59 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/25/2024 21:30:27 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.034747060388326645
03/25/2024 21:30:27 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.14645807445049286
03/25/2024 21:30:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:30:27 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:30:27 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/25/2024 21:31:54 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.015358511358499527
03/25/2024 21:31:54 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.1057477667927742
03/25/2024 21:31:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:31:54 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:31:54 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/25/2024 21:33:22 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.023131927475333214
03/25/2024 21:33:22 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.12087274342775345
03/25/2024 21:33:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:33:22 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:33:22 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/25/2024 21:34:50 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.014617785811424255
03/25/2024 21:34:50 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.10336308926343918
03/25/2024 21:34:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:34:50 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:34:50 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/25/2024 21:36:18 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.05309038236737251
03/25/2024 21:36:18 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.17854146659374237
03/25/2024 21:36:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:36:18 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:36:18 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/25/2024 21:37:46 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.0313972644507885
03/25/2024 21:37:46 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.13684777915477753
03/25/2024 21:37:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:37:46 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:37:46 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/25/2024 21:39:13 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.015004524029791355
03/25/2024 21:39:13 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.10367075353860855
03/25/2024 21:39:13 - INFO - __main__ - 
######## Language: english ######## 

03/25/2024 21:39:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:39:13 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:39:13 - INFO - __main__ - ID text: english-2852412434797041176-6
03/25/2024 21:40:41 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.06856947392225266
03/25/2024 21:40:41 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.22802339494228363
03/25/2024 21:40:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:40:41 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:40:41 - INFO - __main__ - ID text: english--1463732605740571606-0
03/25/2024 21:42:09 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.018480198457837105
03/25/2024 21:42:09 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.11297718435525894
03/25/2024 21:42:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:42:09 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:42:09 - INFO - __main__ - ID text: english-5441411281255470421-0
03/25/2024 21:43:37 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.016126392409205437
03/25/2024 21:43:37 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.10743442922830582
03/25/2024 21:43:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:43:37 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:43:37 - INFO - __main__ - ID text: english-7294054492486093447-1
03/25/2024 21:45:04 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.0169887226074934
03/25/2024 21:45:04 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.10898343473672867
03/25/2024 21:45:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:45:04 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:45:04 - INFO - __main__ - ID text: english-8820750127045023244-0
03/25/2024 21:46:32 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.0453261137008667
03/25/2024 21:46:32 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.16663271188735962
03/25/2024 21:46:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:46:32 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:46:32 - INFO - __main__ - ID text: english--506693546683012611-2
03/25/2024 21:48:01 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.060393285006284714
03/25/2024 21:48:01 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.19339050352573395
03/25/2024 21:48:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:48:01 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:48:01 - INFO - __main__ - ID text: english-745411798111651115-0
03/25/2024 21:49:29 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.015454134903848171
03/25/2024 21:49:29 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.10571524500846863
03/25/2024 21:49:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:49:29 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:49:29 - INFO - __main__ - ID text: english-7740772185887912651-0
03/25/2024 21:50:57 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.016087228432297707
03/25/2024 21:50:57 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.10735347121953964
03/25/2024 21:50:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:50:57 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:50:57 - INFO - __main__ - ID text: english-383873188776267137-19
03/25/2024 21:52:25 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.017621269449591637
03/25/2024 21:52:25 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.10960298031568527
03/25/2024 21:52:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:52:25 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:52:25 - INFO - __main__ - ID text: english--8277537578703156284-0
03/25/2024 21:53:53 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.01645037904381752
03/25/2024 21:53:53 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.1066063866019249
03/25/2024 21:53:53 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/25/2024 21:53:53 - INFO - __main__ - 
######## Language: cola ######## 

03/25/2024 21:53:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:53:53 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:53:53 - INFO - __main__ - ID text: cola_228
03/25/2024 21:55:20 - INFO - __main__ - Mean variance for cola_228: 0.050390537828207016
03/25/2024 21:55:20 - INFO - __main__ - Mean std for for cola_228: 0.19293636083602905
03/25/2024 21:55:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:55:20 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:55:20 - INFO - __main__ - ID text: cola_51
03/25/2024 21:56:48 - INFO - __main__ - Mean variance for cola_51: 0.04747730866074562
03/25/2024 21:56:48 - INFO - __main__ - Mean std for for cola_51: 0.18959689140319824
03/25/2024 21:56:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:56:48 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:56:48 - INFO - __main__ - ID text: cola_563
03/25/2024 21:58:16 - INFO - __main__ - Mean variance for cola_563: 0.142342209815979
03/25/2024 21:58:16 - INFO - __main__ - Mean std for for cola_563: 0.33953288197517395
03/25/2024 21:58:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:58:16 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:58:16 - INFO - __main__ - ID text: cola_501
03/25/2024 21:59:43 - INFO - __main__ - Mean variance for cola_501: 0.040568236261606216
03/25/2024 21:59:43 - INFO - __main__ - Mean std for for cola_501: 0.173301100730896
03/25/2024 21:59:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 21:59:43 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 21:59:43 - INFO - __main__ - ID text: cola_457
03/25/2024 22:01:11 - INFO - __main__ - Mean variance for cola_457: 0.07533726841211319
03/25/2024 22:01:11 - INFO - __main__ - Mean std for for cola_457: 0.24196195602416992
03/25/2024 22:01:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:01:11 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:01:11 - INFO - __main__ - ID text: cola_285
03/25/2024 22:02:39 - INFO - __main__ - Mean variance for cola_285: 0.07557765394449234
03/25/2024 22:02:39 - INFO - __main__ - Mean std for for cola_285: 0.24207977950572968
03/25/2024 22:02:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:02:39 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:02:39 - INFO - __main__ - ID text: cola_209
03/25/2024 22:04:08 - INFO - __main__ - Mean variance for cola_209: 0.04891815409064293
03/25/2024 22:04:08 - INFO - __main__ - Mean std for for cola_209: 0.1927403211593628
03/25/2024 22:04:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:04:08 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:04:08 - INFO - __main__ - ID text: cola_178
03/25/2024 22:05:36 - INFO - __main__ - Mean variance for cola_178: 0.04286619648337364
03/25/2024 22:05:36 - INFO - __main__ - Mean std for for cola_178: 0.1827794462442398
03/25/2024 22:05:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:05:36 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:05:36 - INFO - __main__ - ID text: cola_864
03/25/2024 22:07:04 - INFO - __main__ - Mean variance for cola_864: 0.046142980456352234
03/25/2024 22:07:04 - INFO - __main__ - Mean std for for cola_864: 0.1916838139295578
03/25/2024 22:07:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:07:04 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:07:04 - INFO - __main__ - ID text: cola_65
03/25/2024 22:08:32 - INFO - __main__ - Mean variance for cola_65: 0.04078361392021179
03/25/2024 22:08:32 - INFO - __main__ - Mean std for for cola_65: 0.17069965600967407
03/25/2024 22:08:32 - INFO - __main__ - 
######## Language: mnli ######## 

03/25/2024 22:08:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:08:32 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:08:32 - INFO - __main__ - ID text: mnli_488
03/25/2024 22:10:00 - INFO - __main__ - Mean variance for mnli_488: 0.06387864053249359
03/25/2024 22:10:00 - INFO - __main__ - Mean std for for mnli_488: 0.19814373552799225
03/25/2024 22:10:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:10:00 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:10:00 - INFO - __main__ - ID text: mnli_1535
03/25/2024 22:11:27 - INFO - __main__ - Mean variance for mnli_1535: 0.07002080231904984
03/25/2024 22:11:27 - INFO - __main__ - Mean std for for mnli_1535: 0.20766909420490265
03/25/2024 22:11:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:11:29 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:11:29 - INFO - __main__ - ID text: mnli_3582
03/25/2024 22:12:58 - INFO - __main__ - Mean variance for mnli_3582: 0.04989590868353844
03/25/2024 22:12:58 - INFO - __main__ - Mean std for for mnli_3582: 0.18374986946582794
03/25/2024 22:12:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:12:59 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:12:59 - INFO - __main__ - ID text: mnli_3811
03/25/2024 22:14:30 - INFO - __main__ - Mean variance for mnli_3811: 0.05265452340245247
03/25/2024 22:14:30 - INFO - __main__ - Mean std for for mnli_3811: 0.186834916472435
03/25/2024 22:14:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:14:30 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:14:30 - INFO - __main__ - ID text: mnli_8279
03/25/2024 22:15:59 - INFO - __main__ - Mean variance for mnli_8279: 0.05619749426841736
03/25/2024 22:15:59 - INFO - __main__ - Mean std for for mnli_8279: 0.19969843327999115
03/25/2024 22:15:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:15:59 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:15:59 - INFO - __main__ - ID text: mnli_434
03/25/2024 22:17:27 - INFO - __main__ - Mean variance for mnli_434: 0.04001118242740631
03/25/2024 22:17:27 - INFO - __main__ - Mean std for for mnli_434: 0.15694428980350494
03/25/2024 22:17:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:17:27 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:17:27 - INFO - __main__ - ID text: mnli_9195
03/25/2024 22:18:56 - INFO - __main__ - Mean variance for mnli_9195: 0.06107664108276367
03/25/2024 22:18:56 - INFO - __main__ - Mean std for for mnli_9195: 0.21905456483364105
03/25/2024 22:18:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:18:56 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:18:56 - INFO - __main__ - ID text: mnli_3257
03/25/2024 22:20:23 - INFO - __main__ - Mean variance for mnli_3257: 0.04504377022385597
03/25/2024 22:20:23 - INFO - __main__ - Mean std for for mnli_3257: 0.17339833080768585
03/25/2024 22:20:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:20:23 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:20:23 - INFO - __main__ - ID text: mnli_8928
03/25/2024 22:21:51 - INFO - __main__ - Mean variance for mnli_8928: 0.058226313441991806
03/25/2024 22:21:51 - INFO - __main__ - Mean std for for mnli_8928: 0.189119353890419
03/25/2024 22:21:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:21:52 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:21:52 - INFO - __main__ - ID text: mnli_6873
03/25/2024 22:23:20 - INFO - __main__ - Mean variance for mnli_6873: 0.06006708741188049
03/25/2024 22:23:20 - INFO - __main__ - Mean std for for mnli_6873: 0.19022493064403534
03/25/2024 22:23:20 - INFO - __main__ - 
######## Language: mrpc ######## 

03/25/2024 22:23:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:23:20 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:23:20 - INFO - __main__ - ID text: mrpc_451
03/25/2024 22:24:48 - INFO - __main__ - Mean variance for mrpc_451: 0.06622772663831711
03/25/2024 22:24:48 - INFO - __main__ - Mean std for for mrpc_451: 0.2015538215637207
03/25/2024 22:24:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:24:48 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:24:48 - INFO - __main__ - ID text: mrpc_919
03/25/2024 22:26:16 - INFO - __main__ - Mean variance for mrpc_919: 0.06390997022390366
03/25/2024 22:26:16 - INFO - __main__ - Mean std for for mrpc_919: 0.19979886710643768
03/25/2024 22:26:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:26:16 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:26:16 - INFO - __main__ - ID text: mrpc_1206
03/25/2024 22:27:45 - INFO - __main__ - Mean variance for mrpc_1206: 0.06781131774187088
03/25/2024 22:27:45 - INFO - __main__ - Mean std for for mrpc_1206: 0.2107025533914566
03/25/2024 22:27:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:27:45 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:27:45 - INFO - __main__ - ID text: mrpc_569
03/25/2024 22:29:13 - INFO - __main__ - Mean variance for mrpc_569: 0.06632676720619202
03/25/2024 22:29:13 - INFO - __main__ - Mean std for for mrpc_569: 0.20537857711315155
03/25/2024 22:29:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:29:13 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:29:13 - INFO - __main__ - ID text: mrpc_1657
03/25/2024 22:30:41 - INFO - __main__ - Mean variance for mrpc_1657: 0.05185520648956299
03/25/2024 22:30:41 - INFO - __main__ - Mean std for for mrpc_1657: 0.17866025865077972
03/25/2024 22:30:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:30:41 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:30:41 - INFO - __main__ - ID text: mrpc_13
03/25/2024 22:32:09 - INFO - __main__ - Mean variance for mrpc_13: 0.07195769995450974
03/25/2024 22:32:09 - INFO - __main__ - Mean std for for mrpc_13: 0.21562351286411285
03/25/2024 22:32:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:32:09 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:32:09 - INFO - __main__ - ID text: mrpc_1554
03/25/2024 22:33:38 - INFO - __main__ - Mean variance for mrpc_1554: 0.0468188039958477
03/25/2024 22:33:38 - INFO - __main__ - Mean std for for mrpc_1554: 0.16909591853618622
03/25/2024 22:33:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:33:38 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:33:38 - INFO - __main__ - ID text: mrpc_1650
03/25/2024 22:35:05 - INFO - __main__ - Mean variance for mrpc_1650: 0.1315772980451584
03/25/2024 22:35:05 - INFO - __main__ - Mean std for for mrpc_1650: 0.31373706459999084
03/25/2024 22:35:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:35:05 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:35:05 - INFO - __main__ - ID text: mrpc_326
03/25/2024 22:36:34 - INFO - __main__ - Mean variance for mrpc_326: 0.06908782571554184
03/25/2024 22:36:34 - INFO - __main__ - Mean std for for mrpc_326: 0.20916591584682465
03/25/2024 22:36:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:36:36 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:36:36 - INFO - __main__ - ID text: mrpc_1429
03/25/2024 22:38:04 - INFO - __main__ - Mean variance for mrpc_1429: 0.06193731352686882
03/25/2024 22:38:04 - INFO - __main__ - Mean std for for mrpc_1429: 0.19852495193481445
03/25/2024 22:38:04 - INFO - __main__ - 
######## Language: qnli ######## 

03/25/2024 22:38:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:38:04 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:38:04 - INFO - __main__ - ID text: qnli_3462
03/25/2024 22:39:32 - INFO - __main__ - Mean variance for qnli_3462: 0.07147582620382309
03/25/2024 22:39:32 - INFO - __main__ - Mean std for for qnli_3462: 0.21143411099910736
03/25/2024 22:39:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:39:36 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:39:36 - INFO - __main__ - ID text: qnli_2787
03/25/2024 22:41:05 - INFO - __main__ - Mean variance for qnli_2787: 0.05433056131005287
03/25/2024 22:41:05 - INFO - __main__ - Mean std for for qnli_2787: 0.18036140501499176
03/25/2024 22:41:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:41:06 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:41:06 - INFO - __main__ - ID text: qnli_2276
03/25/2024 22:42:34 - INFO - __main__ - Mean variance for qnli_2276: 0.05253523588180542
03/25/2024 22:42:34 - INFO - __main__ - Mean std for for qnli_2276: 0.17847412824630737
03/25/2024 22:42:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:42:34 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:42:34 - INFO - __main__ - ID text: qnli_1273
03/25/2024 22:44:03 - INFO - __main__ - Mean variance for qnli_1273: 0.06335940212011337
03/25/2024 22:44:03 - INFO - __main__ - Mean std for for qnli_1273: 0.1958693116903305
03/25/2024 22:44:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:44:03 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:44:03 - INFO - __main__ - ID text: qnli_1763
03/25/2024 22:45:31 - INFO - __main__ - Mean variance for qnli_1763: 0.06113038957118988
03/25/2024 22:45:31 - INFO - __main__ - Mean std for for qnli_1763: 0.19497419893741608
03/25/2024 22:45:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:45:31 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:45:31 - INFO - __main__ - ID text: qnli_2757
03/25/2024 22:46:59 - INFO - __main__ - Mean variance for qnli_2757: 0.06416426599025726
03/25/2024 22:46:59 - INFO - __main__ - Mean std for for qnli_2757: 0.1994238644838333
03/25/2024 22:47:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:47:00 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:47:00 - INFO - __main__ - ID text: qnli_837
03/25/2024 22:48:27 - INFO - __main__ - Mean variance for qnli_837: 0.05727565661072731
03/25/2024 22:48:27 - INFO - __main__ - Mean std for for qnli_837: 0.1902022361755371
03/25/2024 22:48:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:48:27 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:48:27 - INFO - __main__ - ID text: qnli_759
03/25/2024 22:49:56 - INFO - __main__ - Mean variance for qnli_759: 0.01756838895380497
03/25/2024 22:49:56 - INFO - __main__ - Mean std for for qnli_759: 0.11008390039205551
03/25/2024 22:49:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:49:56 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:49:56 - INFO - __main__ - ID text: qnli_3112
03/25/2024 22:51:24 - INFO - __main__ - Mean variance for qnli_3112: 0.06285374611616135
03/25/2024 22:51:24 - INFO - __main__ - Mean std for for qnli_3112: 0.19997525215148926
03/25/2024 22:51:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:51:24 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:51:24 - INFO - __main__ - ID text: qnli_792
03/25/2024 22:52:52 - INFO - __main__ - Mean variance for qnli_792: 0.056442465633153915
03/25/2024 22:52:52 - INFO - __main__ - Mean std for for qnli_792: 0.18312792479991913
03/25/2024 22:52:52 - INFO - __main__ - 
######## Language: qqp ######## 

03/25/2024 22:52:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:52:52 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:52:52 - INFO - __main__ - ID text: qqp_188208
03/25/2024 22:54:20 - INFO - __main__ - Mean variance for qqp_188208: 0.05470168963074684
03/25/2024 22:54:20 - INFO - __main__ - Mean std for for qqp_188208: 0.19507522881031036
03/25/2024 22:54:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:54:20 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:54:20 - INFO - __main__ - ID text: qqp_180331
03/25/2024 22:55:49 - INFO - __main__ - Mean variance for qqp_180331: 0.04869646951556206
03/25/2024 22:55:49 - INFO - __main__ - Mean std for for qqp_180331: 0.18029038608074188
03/25/2024 22:55:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:55:49 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:55:49 - INFO - __main__ - ID text: qqp_316526
03/25/2024 22:57:18 - INFO - __main__ - Mean variance for qqp_316526: 0.056956883519887924
03/25/2024 22:57:18 - INFO - __main__ - Mean std for for qqp_316526: 0.19346022605895996
03/25/2024 22:57:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:57:18 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:57:18 - INFO - __main__ - ID text: qqp_138685
03/25/2024 22:58:48 - INFO - __main__ - Mean variance for qqp_138685: 0.04187125340104103
03/25/2024 22:58:48 - INFO - __main__ - Mean std for for qqp_138685: 0.15932101011276245
03/25/2024 22:58:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 22:58:48 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 22:58:48 - INFO - __main__ - ID text: qqp_22780
03/25/2024 23:00:16 - INFO - __main__ - Mean variance for qqp_22780: 0.05778809264302254
03/25/2024 23:00:16 - INFO - __main__ - Mean std for for qqp_22780: 0.20360803604125977
03/25/2024 23:00:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:00:16 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:00:16 - INFO - __main__ - ID text: qqp_382589
03/25/2024 23:01:45 - INFO - __main__ - Mean variance for qqp_382589: 0.06049720570445061
03/25/2024 23:01:45 - INFO - __main__ - Mean std for for qqp_382589: 0.19782346487045288
03/25/2024 23:01:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:01:45 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:01:45 - INFO - __main__ - ID text: qqp_240870
03/25/2024 23:03:14 - INFO - __main__ - Mean variance for qqp_240870: 0.05520922318100929
03/25/2024 23:03:14 - INFO - __main__ - Mean std for for qqp_240870: 0.1946878284215927
03/25/2024 23:03:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:03:14 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:03:14 - INFO - __main__ - ID text: qqp_281137
03/25/2024 23:04:44 - INFO - __main__ - Mean variance for qqp_281137: 0.05676833167672157
03/25/2024 23:04:44 - INFO - __main__ - Mean std for for qqp_281137: 0.1919565349817276
03/25/2024 23:04:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:04:44 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:04:44 - INFO - __main__ - ID text: qqp_65444
03/25/2024 23:06:13 - INFO - __main__ - Mean variance for qqp_65444: 0.05824446305632591
03/25/2024 23:06:13 - INFO - __main__ - Mean std for for qqp_65444: 0.20272523164749146
03/25/2024 23:06:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:06:13 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:06:13 - INFO - __main__ - ID text: qqp_198461
03/25/2024 23:07:40 - INFO - __main__ - Mean variance for qqp_198461: 0.05657598748803139
03/25/2024 23:07:40 - INFO - __main__ - Mean std for for qqp_198461: 0.19260358810424805
03/25/2024 23:07:41 - INFO - __main__ - 
######## Language: rte ######## 

03/25/2024 23:07:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:07:41 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:07:41 - INFO - __main__ - ID text: rte_322
03/25/2024 23:09:08 - INFO - __main__ - Mean variance for rte_322: 0.05912819504737854
03/25/2024 23:09:08 - INFO - __main__ - Mean std for for rte_322: 0.1945621520280838
03/25/2024 23:09:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:09:08 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:09:08 - INFO - __main__ - ID text: rte_2261
03/25/2024 23:10:37 - INFO - __main__ - Mean variance for rte_2261: 0.0441499762237072
03/25/2024 23:10:37 - INFO - __main__ - Mean std for for rte_2261: 0.1766253262758255
03/25/2024 23:10:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:10:37 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:10:37 - INFO - __main__ - ID text: rte_1200
03/25/2024 23:12:06 - INFO - __main__ - Mean variance for rte_1200: 0.040875423699617386
03/25/2024 23:12:06 - INFO - __main__ - Mean std for for rte_1200: 0.15674203634262085
03/25/2024 23:12:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:12:06 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:12:06 - INFO - __main__ - ID text: rte_2574
03/25/2024 23:13:33 - INFO - __main__ - Mean variance for rte_2574: 0.014367546886205673
03/25/2024 23:13:33 - INFO - __main__ - Mean std for for rte_2574: 0.10333526134490967
03/25/2024 23:13:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:13:33 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:13:33 - INFO - __main__ - ID text: rte_2533
03/25/2024 23:15:01 - INFO - __main__ - Mean variance for rte_2533: 0.01782418042421341
03/25/2024 23:15:01 - INFO - __main__ - Mean std for for rte_2533: 0.11084335297346115
03/25/2024 23:15:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:15:01 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:15:01 - INFO - __main__ - ID text: rte_1481
03/25/2024 23:16:29 - INFO - __main__ - Mean variance for rte_1481: 0.05731634795665741
03/25/2024 23:16:29 - INFO - __main__ - Mean std for for rte_1481: 0.18683302402496338
03/25/2024 23:16:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:16:29 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:16:29 - INFO - __main__ - ID text: rte_2364
03/25/2024 23:17:58 - INFO - __main__ - Mean variance for rte_2364: 0.057310327887535095
03/25/2024 23:17:58 - INFO - __main__ - Mean std for for rte_2364: 0.1856391429901123
03/25/2024 23:17:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:17:58 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:17:58 - INFO - __main__ - ID text: rte_787
03/25/2024 23:19:25 - INFO - __main__ - Mean variance for rte_787: 0.056239787489175797
03/25/2024 23:19:25 - INFO - __main__ - Mean std for for rte_787: 0.1830376833677292
03/25/2024 23:19:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:19:26 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:19:26 - INFO - __main__ - ID text: rte_2885
03/25/2024 23:20:53 - INFO - __main__ - Mean variance for rte_2885: 0.018376735970377922
03/25/2024 23:20:53 - INFO - __main__ - Mean std for for rte_2885: 0.11259317398071289
03/25/2024 23:20:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:20:53 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:20:53 - INFO - __main__ - ID text: rte_284
03/25/2024 23:22:20 - INFO - __main__ - Mean variance for rte_284: 0.051381874829530716
03/25/2024 23:22:20 - INFO - __main__ - Mean std for for rte_284: 0.18305081129074097
03/25/2024 23:22:20 - INFO - __main__ - 
######## Language: sst2 ######## 

03/25/2024 23:22:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:22:20 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:22:20 - INFO - __main__ - ID text: sst2_93
03/25/2024 23:23:48 - INFO - __main__ - Mean variance for sst2_93: 0.04711015522480011
03/25/2024 23:23:48 - INFO - __main__ - Mean std for for sst2_93: 0.17595408856868744
03/25/2024 23:23:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:23:48 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:23:48 - INFO - __main__ - ID text: sst2_1354
03/25/2024 23:25:15 - INFO - __main__ - Mean variance for sst2_1354: 0.034145474433898926
03/25/2024 23:25:15 - INFO - __main__ - Mean std for for sst2_1354: 0.16176028549671173
03/25/2024 23:25:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:25:15 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:25:15 - INFO - __main__ - ID text: sst2_466
03/25/2024 23:26:43 - INFO - __main__ - Mean variance for sst2_466: 0.05404207110404968
03/25/2024 23:26:43 - INFO - __main__ - Mean std for for sst2_466: 0.20416636765003204
03/25/2024 23:26:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:26:43 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:26:43 - INFO - __main__ - ID text: sst2_1583
03/25/2024 23:28:10 - INFO - __main__ - Mean variance for sst2_1583: 0.05685221031308174
03/25/2024 23:28:10 - INFO - __main__ - Mean std for for sst2_1583: 0.19047115743160248
03/25/2024 23:28:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:28:11 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:28:11 - INFO - __main__ - ID text: sst2_592
03/25/2024 23:29:39 - INFO - __main__ - Mean variance for sst2_592: 0.05775890126824379
03/25/2024 23:29:39 - INFO - __main__ - Mean std for for sst2_592: 0.18894053995609283
03/25/2024 23:29:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:29:39 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:29:39 - INFO - __main__ - ID text: sst2_163
03/25/2024 23:31:06 - INFO - __main__ - Mean variance for sst2_163: 0.07779338210821152
03/25/2024 23:31:06 - INFO - __main__ - Mean std for for sst2_163: 0.2497635930776596
03/25/2024 23:31:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:31:07 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:31:07 - INFO - __main__ - ID text: sst2_1751
03/25/2024 23:32:35 - INFO - __main__ - Mean variance for sst2_1751: 0.03621314838528633
03/25/2024 23:32:35 - INFO - __main__ - Mean std for for sst2_1751: 0.16536085307598114
03/25/2024 23:32:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:32:35 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:32:35 - INFO - __main__ - ID text: sst2_476
03/25/2024 23:34:03 - INFO - __main__ - Mean variance for sst2_476: 0.042596738785505295
03/25/2024 23:34:03 - INFO - __main__ - Mean std for for sst2_476: 0.16691391170024872
03/25/2024 23:34:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:34:03 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:34:03 - INFO - __main__ - ID text: sst2_1774
03/25/2024 23:35:31 - INFO - __main__ - Mean variance for sst2_1774: 0.05140171945095062
03/25/2024 23:35:31 - INFO - __main__ - Mean std for for sst2_1774: 0.183892622590065
03/25/2024 23:35:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:35:31 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:35:31 - INFO - __main__ - ID text: sst2_206
03/25/2024 23:36:59 - INFO - __main__ - Mean variance for sst2_206: 0.043652039021253586
03/25/2024 23:36:59 - INFO - __main__ - Mean std for for sst2_206: 0.17261244356632233
03/25/2024 23:36:59 - INFO - __main__ - 
######## Language: stsb ######## 

03/25/2024 23:36:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:36:59 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:36:59 - INFO - __main__ - ID text: stsb_778
03/25/2024 23:38:26 - INFO - __main__ - Mean variance for stsb_778: 0.04934108629822731
03/25/2024 23:38:26 - INFO - __main__ - Mean std for for stsb_778: 0.18490386009216309
03/25/2024 23:38:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:38:26 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:38:26 - INFO - __main__ - ID text: stsb_569
03/25/2024 23:39:54 - INFO - __main__ - Mean variance for stsb_569: 0.05062316730618477
03/25/2024 23:39:54 - INFO - __main__ - Mean std for for stsb_569: 0.19193153083324432
03/25/2024 23:39:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:39:54 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:39:54 - INFO - __main__ - ID text: stsb_928
03/25/2024 23:41:22 - INFO - __main__ - Mean variance for stsb_928: 0.04077062010765076
03/25/2024 23:41:22 - INFO - __main__ - Mean std for for stsb_928: 0.15727369487285614
03/25/2024 23:41:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:41:22 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:41:22 - INFO - __main__ - ID text: stsb_1301
03/25/2024 23:42:49 - INFO - __main__ - Mean variance for stsb_1301: 0.051738206297159195
03/25/2024 23:42:49 - INFO - __main__ - Mean std for for stsb_1301: 0.18747089803218842
03/25/2024 23:42:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:42:49 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:42:49 - INFO - __main__ - ID text: stsb_747
03/25/2024 23:44:17 - INFO - __main__ - Mean variance for stsb_747: 0.07081101089715958
03/25/2024 23:44:17 - INFO - __main__ - Mean std for for stsb_747: 0.21600019931793213
03/25/2024 23:44:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:44:17 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:44:17 - INFO - __main__ - ID text: stsb_333
03/25/2024 23:45:45 - INFO - __main__ - Mean variance for stsb_333: 0.05044831708073616
03/25/2024 23:45:45 - INFO - __main__ - Mean std for for stsb_333: 0.18426847457885742
03/25/2024 23:45:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:45:45 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:45:45 - INFO - __main__ - ID text: stsb_758
03/25/2024 23:47:12 - INFO - __main__ - Mean variance for stsb_758: 0.06396300345659256
03/25/2024 23:47:12 - INFO - __main__ - Mean std for for stsb_758: 0.20217783749103546
03/25/2024 23:47:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:47:13 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:47:13 - INFO - __main__ - ID text: stsb_727
03/25/2024 23:48:40 - INFO - __main__ - Mean variance for stsb_727: 0.05699228122830391
03/25/2024 23:48:40 - INFO - __main__ - Mean std for for stsb_727: 0.20351040363311768
03/25/2024 23:48:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:48:40 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:48:40 - INFO - __main__ - ID text: stsb_429
03/25/2024 23:50:10 - INFO - __main__ - Mean variance for stsb_429: 0.05307973548769951
03/25/2024 23:50:10 - INFO - __main__ - Mean std for for stsb_429: 0.19454169273376465
03/25/2024 23:50:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:50:11 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:50:11 - INFO - __main__ - ID text: stsb_1372
03/25/2024 23:51:38 - INFO - __main__ - Mean variance for stsb_1372: 0.0482199527323246
03/25/2024 23:51:38 - INFO - __main__ - Mean std for for stsb_1372: 0.18040581047534943
03/25/2024 23:51:38 - INFO - __main__ - 
######## Language: wnli ######## 

03/25/2024 23:51:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:51:38 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:51:38 - INFO - __main__ - ID text: wnli_68
03/25/2024 23:53:04 - INFO - __main__ - Mean variance for wnli_68: 0.05945306643843651
03/25/2024 23:53:04 - INFO - __main__ - Mean std for for wnli_68: 0.19163323938846588
03/25/2024 23:53:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:53:04 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:53:04 - INFO - __main__ - ID text: wnli_18
03/25/2024 23:54:30 - INFO - __main__ - Mean variance for wnli_18: 0.04321831464767456
03/25/2024 23:54:30 - INFO - __main__ - Mean std for for wnli_18: 0.16019660234451294
03/25/2024 23:54:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:54:30 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:54:30 - INFO - __main__ - ID text: wnli_43
03/25/2024 23:55:56 - INFO - __main__ - Mean variance for wnli_43: 0.06734310835599899
03/25/2024 23:55:56 - INFO - __main__ - Mean std for for wnli_43: 0.20358049869537354
03/25/2024 23:55:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:55:56 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:55:56 - INFO - __main__ - ID text: wnli_136
03/25/2024 23:57:22 - INFO - __main__ - Mean variance for wnli_136: 0.060203853994607925
03/25/2024 23:57:22 - INFO - __main__ - Mean std for for wnli_136: 0.19223397970199585
03/25/2024 23:57:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:57:22 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:57:22 - INFO - __main__ - ID text: wnli_62
03/25/2024 23:58:48 - INFO - __main__ - Mean variance for wnli_62: 0.06385613977909088
03/25/2024 23:58:48 - INFO - __main__ - Mean std for for wnli_62: 0.20080481469631195
03/25/2024 23:58:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 23:58:48 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/25/2024 23:58:48 - INFO - __main__ - ID text: wnli_41
03/26/2024 00:00:14 - INFO - __main__ - Mean variance for wnli_41: 0.06134191155433655
03/26/2024 00:00:14 - INFO - __main__ - Mean std for for wnli_41: 0.19478730857372284
03/26/2024 00:00:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 00:00:14 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/26/2024 00:00:14 - INFO - __main__ - ID text: wnli_118
03/26/2024 00:01:40 - INFO - __main__ - Mean variance for wnli_118: 0.06447528302669525
03/26/2024 00:01:40 - INFO - __main__ - Mean std for for wnli_118: 0.20498961210250854
03/26/2024 00:01:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 00:01:40 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/26/2024 00:01:40 - INFO - __main__ - ID text: wnli_97
03/26/2024 00:03:05 - INFO - __main__ - Mean variance for wnli_97: 0.037683095782995224
03/26/2024 00:03:05 - INFO - __main__ - Mean std for for wnli_97: 0.15173029899597168
03/26/2024 00:03:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 00:03:05 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/26/2024 00:03:05 - INFO - __main__ - ID text: wnli_69
03/26/2024 00:04:31 - INFO - __main__ - Mean variance for wnli_69: 0.046799302101135254
03/26/2024 00:04:31 - INFO - __main__ - Mean std for for wnli_69: 0.17628931999206543
03/26/2024 00:04:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 00:04:31 - INFO - __main__ - Masked count: 26, ratio = 0.1016
03/26/2024 00:04:31 - INFO - __main__ - ID text: wnli_142
03/26/2024 00:05:57 - INFO - __main__ - Mean variance for wnli_142: 0.043207455426454544
03/26/2024 00:05:57 - INFO - __main__ - Mean std for for wnli_142: 0.16201645135879517
03/26/2024 00:05:57 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.16254977881908417, 'amh_1': 0.14082686603069305, 'amh_2': 0.15886490046977997, 'amh_3': 0.15204650163650513, 'amh_4': 0.16134865581989288, 'amh_5': 0.17929743230342865, 'amh_6': 0.14951853454113007, 'amh_7': 0.1681535243988037, 'amh_8': 0.16192825138568878, 'amh_9': 0.1593482345342636}, 'conll_2003_en': {'conll_2003_en_0': 0.15618357062339783, 'conll_2003_en_1': 0.04775857552886009, 'conll_2003_en_2': 0.04609702527523041, 'conll_2003_en_3': 0.04665127769112587, 'conll_2003_en_4': 0.06321700662374496, 'conll_2003_en_5': 0.1606784164905548, 'conll_2003_en_6': 0.12908922135829926, 'conll_2003_en_7': 0.1703179031610489, 'conll_2003_en_8': 0.1752316951751709, 'conll_2003_en_9': 0.04129466414451599}, 'hau': {'hau_0': 0.03720424696803093, 'hau_1': 0.0399930365383625, 'hau_2': 0.1678178757429123, 'hau_3': 0.01974044181406498, 'hau_4': 0.04281749203801155, 'hau_5': 0.036328110843896866, 'hau_6': 0.05267524719238281, 'hau_7': 0.042533114552497864, 'hau_8': 0.03172915056347847, 'hau_9': 0.053156014531850815}, 'ibo': {'ibo_0': 0.049688417464494705, 'ibo_1': 0.04703294858336449, 'ibo_2': 0.04146488383412361, 'ibo_3': 0.05017593875527382, 'ibo_4': 0.05246217921376228, 'ibo_5': 0.04442783072590828, 'ibo_6': 0.052052583545446396, 'ibo_7': 0.042672887444496155, 'ibo_8': 0.043320972472429276, 'ibo_9': 0.05029270425438881}, 'kin': {'kin_0': 0.04781493917107582, 'kin_1': 0.055662889033555984, 'kin_2': 0.036931026726961136, 'kin_3': 0.05178403854370117, 'kin_4': 0.048631321638822556, 'kin_5': 0.044194936752319336, 'kin_6': 0.030561847612261772, 'kin_7': 0.046046480536460876, 'kin_8': 0.04940427467226982, 'kin_9': 0.04394061863422394}, 'lug': {'lug_0': 0.04080014303326607, 'lug_1': 0.04966356232762337, 'lug_2': 0.018500952050089836, 'lug_3': 0.03423507139086723, 'lug_4': 0.03470730409026146, 'lug_5': 0.045328471809625626, 'lug_6': 0.0449911393225193, 'lug_7': 0.05363984778523445, 'lug_8': 0.06608549505472183, 'lug_9': 0.04815930500626564}, 'luo': {'luo_0': 0.02967127226293087, 'luo_1': 0.041164331138134, 'luo_2': 0.04585351049900055, 'luo_3': 0.03118150122463703, 'luo_4': 0.04369072988629341, 'luo_5': 0.04927356168627739, 'luo_6': 0.04611317440867424, 'luo_7': 0.048138100653886795, 'luo_8': 0.04855726286768913, 'luo_9': 0.04492040351033211}, 'pcm': {'pcm_0': 0.04037003591656685, 'pcm_1': 0.040484022349119186, 'pcm_2': 0.05046268180012703, 'pcm_3': 0.04623076692223549, 'pcm_4': 0.048013463616371155, 'pcm_5': 0.035707756876945496, 'pcm_6': 0.04342344403266907, 'pcm_7': 0.04537798464298248, 'pcm_8': 0.04204452037811279, 'pcm_9': 0.04030827805399895}, 'swa': {'swa_0': 0.04790448769927025, 'swa_1': 0.04778386652469635, 'swa_2': 0.04483959078788757, 'swa_3': 0.05107763037085533, 'swa_4': 0.033551931381225586, 'swa_5': 0.035035885870456696, 'swa_6': 0.03478009253740311, 'swa_7': 0.055833667516708374, 'swa_8': 0.038903553038835526, 'swa_9': 0.05324866250157356}, 'wol': {'wol_0': 0.04356104135513306, 'wol_1': 0.04864092543721199, 'wol_2': 0.04588590934872627, 'wol_3': 0.07609837502241135, 'wol_4': 0.05312485620379448, 'wol_5': 0.04980701580643654, 'wol_6': 0.15645234286785126, 'wol_7': 0.038785774260759354, 'wol_8': 0.0317130945622921, 'wol_9': 0.04655562713742256}, 'yor': {'yor_0': 0.14453426003456116, 'yor_1': 0.140716552734375, 'yor_2': 0.058651477098464966, 'yor_3': 0.041371554136276245, 'yor_4': 0.1502864807844162, 'yor_5': 0.10965654999017715, 'yor_6': 0.04272416606545448, 'yor_7': 0.13553546369075775, 'yor_8': 0.0464799739420414, 'yor_9': 0.14008007943630219}, 'zh': {'zh_0': 0.1679769903421402, 'zh_1': 0.13060502707958221, 'zh_2': 0.14000679552555084, 'zh_3': 0.16156835854053497, 'zh_4': 0.17609524726867676, 'zh_5': 0.17165546119213104, 'zh_6': 0.14094270765781403, 'zh_7': 0.1401243358850479, 'zh_8': 0.1563318967819214, 'zh_9': 0.15322110056877136}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.10474175214767456, 'arabic--3340323169760881569-0': 0.04744299128651619, 'arabic-4544770624843559444-1': 0.04360020533204079, 'arabic-891952409566422966-0': 0.04211513325572014, 'arabic-3659291834714572527-0': 0.13034097850322723, 'arabic-9215226117011890166-0': 0.04327106475830078, 'arabic-6300896128538259469-0': 0.055261850357055664, 'arabic-2382507508588518905-0': 0.040790241211652756, 'arabic-1871632801094859741-1': 0.03794746845960617, 'arabic--7365809756232083807-0': 0.04007291421294212}, 'russian': {'russian-3457655197371763238-61': 0.020543618127703667, 'russian--1914807805318993335-49': 0.05050867423415184, 'russian--3307989180606173904-1': 0.019977761432528496, 'russian--2219512001175315660-0': 0.020609401166439056, 'russian--7076080992904718941-0': 0.02084929682314396, 'russian--6565862953558739013-1': 0.02145068347454071, 'russian--5098374684590548031-42': 0.052004482597112656, 'russian-3573734219967447693-1': 0.021751901134848595, 'russian--4521001374120505750-6': 0.05386878922581673, 'russian--1308382244018658424-9': 0.022377008572220802}, 'bengali': {'bengali--1199493965132146131-3': 0.09258376806974411, 'bengali-1807801556888134437-2': 0.08783897757530212, 'bengali-2113189855114052041-2': 0.09402614086866379, 'bengali--2527914488250041207-0': 0.09404060244560242, 'bengali--8260793280894408063-14': 0.10135804861783981, 'bengali-8313009204852557186-4': 0.09547365456819534, 'bengali--415964033364840061-0': 0.08795566111803055, 'bengali--4696865548928858824-5': 0.09402430802583694, 'bengali-6505224142472931712-1': 0.09443216770887375, 'bengali-599666913917674019-13': 0.13506945967674255}, 'telugu': {'telugu--3977923017846260053-0': 0.048506930470466614, 'telugu-2254198842560317781-0': 0.03751249983906746, 'telugu-5435080895440121384-0': 0.034773752093315125, 'telugu--1182505954974481191-2': 0.05859845504164696, 'telugu-119276511844068401-0': 0.040821779519319534, 'telugu--4111208545071789922-0': 0.03536830097436905, 'telugu--5922002196428211484-132': 0.12715460360050201, 'telugu--1817004721681155192-3': 0.03389472886919975, 'telugu-1602214480303968359-1': 0.04852786287665367, 'telugu--6495674712575945374-0': 0.03751460835337639}, 'finnish': {'finnish-6987763079741579998-0': 0.046648476272821426, 'finnish--8516625414052383903-0': 0.051260605454444885, 'finnish-4168898766124519517-0': 0.0654965415596962, 'finnish-783166898848672321-4': 0.05972479283809662, 'finnish-2208556840820233322-0': 0.047942865639925, 'finnish--1981034637152391615-58': 0.0178416408598423, 'finnish-8689148941295949475-9': 0.014209914021193981, 'finnish-6900867945323517614-2': 0.06502825766801834, 'finnish-8023130170017405987-1': 0.03683779761195183, 'finnish-5001457972111781248-0': 0.014812816865742207}, 'swahili': {'swahili-7146838206539641546-10': 0.058288440108299255, 'swahili-7655634199707176439-0': 0.016448691487312317, 'swahili--4427180714267750534-1': 0.0436459481716156, 'swahili-4141779435061573138-0': 0.016300015151500702, 'swahili--5424518593960879661-0': 0.019404323771595955, 'swahili-4281845253405461584-0': 0.057356785982847214, 'swahili-4899164839984299762-2': 0.046072255820035934, 'swahili-1288750786498500530-0': 0.052473247051239014, 'swahili--2671134792844015228-3': 0.02874007262289524, 'swahili-4873225622490039485-2': 0.02244112826883793}, 'korean': {'korean--2869472392602314906-0': 0.09723362326622009, 'korean-4375199563921600155-0': 0.03748977556824684, 'korean--1715118423211755607-13': 0.026404470205307007, 'korean--8028977936696142934-9': 0.04555879905819893, 'korean-2807245034690443837-5': 0.13271470367908478, 'korean-3862451817164408576-0': 0.041645027697086334, 'korean-148115504649351135-0': 0.07973968982696533, 'korean--2885837157239647036-2': 0.1303229182958603, 'korean--1743220297777040002-22': 0.14001911878585815, 'korean-3268522368206106332-0': 0.15084664523601532}, 'indonesian': {'indonesian-9141868818310916091-0': 0.015040560625493526, 'indonesian-4609394337632433932-1': 0.0626559928059578, 'indonesian-2763468883290577923-0': 0.019409343600273132, 'indonesian-5633590583948933406-0': 0.034747060388326645, 'indonesian--5961409780035435015-0': 0.015358511358499527, 'indonesian-6274547934693326697-0': 0.023131927475333214, 'indonesian--2516321763567853082-0': 0.014617785811424255, 'indonesian-2048796427556239759-4': 0.05309038236737251, 'indonesian-6246592469157278547-2': 0.0313972644507885, 'indonesian--3724318458930736973-1': 0.015004524029791355}, 'english': {'english-2852412434797041176-6': 0.06856947392225266, 'english--1463732605740571606-0': 0.018480198457837105, 'english-5441411281255470421-0': 0.016126392409205437, 'english-7294054492486093447-1': 0.0169887226074934, 'english-8820750127045023244-0': 0.0453261137008667, 'english--506693546683012611-2': 0.060393285006284714, 'english-745411798111651115-0': 0.015454134903848171, 'english-7740772185887912651-0': 0.016087228432297707, 'english-383873188776267137-19': 0.017621269449591637, 'english--8277537578703156284-0': 0.01645037904381752}}, 'glue': {'cola': {'cola_228': 0.050390537828207016, 'cola_51': 0.04747730866074562, 'cola_563': 0.142342209815979, 'cola_501': 0.040568236261606216, 'cola_457': 0.07533726841211319, 'cola_285': 0.07557765394449234, 'cola_209': 0.04891815409064293, 'cola_178': 0.04286619648337364, 'cola_864': 0.046142980456352234, 'cola_65': 0.04078361392021179}, 'mnli': {'mnli_488': 0.06387864053249359, 'mnli_1535': 0.07002080231904984, 'mnli_3582': 0.04989590868353844, 'mnli_3811': 0.05265452340245247, 'mnli_8279': 0.05619749426841736, 'mnli_434': 0.04001118242740631, 'mnli_9195': 0.06107664108276367, 'mnli_3257': 0.04504377022385597, 'mnli_8928': 0.058226313441991806, 'mnli_6873': 0.06006708741188049}, 'mrpc': {'mrpc_451': 0.06622772663831711, 'mrpc_919': 0.06390997022390366, 'mrpc_1206': 0.06781131774187088, 'mrpc_569': 0.06632676720619202, 'mrpc_1657': 0.05185520648956299, 'mrpc_13': 0.07195769995450974, 'mrpc_1554': 0.0468188039958477, 'mrpc_1650': 0.1315772980451584, 'mrpc_326': 0.06908782571554184, 'mrpc_1429': 0.06193731352686882}, 'qnli': {'qnli_3462': 0.07147582620382309, 'qnli_2787': 0.05433056131005287, 'qnli_2276': 0.05253523588180542, 'qnli_1273': 0.06335940212011337, 'qnli_1763': 0.06113038957118988, 'qnli_2757': 0.06416426599025726, 'qnli_837': 0.05727565661072731, 'qnli_759': 0.01756838895380497, 'qnli_3112': 0.06285374611616135, 'qnli_792': 0.056442465633153915}, 'qqp': {'qqp_188208': 0.05470168963074684, 'qqp_180331': 0.04869646951556206, 'qqp_316526': 0.056956883519887924, 'qqp_138685': 0.04187125340104103, 'qqp_22780': 0.05778809264302254, 'qqp_382589': 0.06049720570445061, 'qqp_240870': 0.05520922318100929, 'qqp_281137': 0.05676833167672157, 'qqp_65444': 0.05824446305632591, 'qqp_198461': 0.05657598748803139}, 'rte': {'rte_322': 0.05912819504737854, 'rte_2261': 0.0441499762237072, 'rte_1200': 0.040875423699617386, 'rte_2574': 0.014367546886205673, 'rte_2533': 0.01782418042421341, 'rte_1481': 0.05731634795665741, 'rte_2364': 0.057310327887535095, 'rte_787': 0.056239787489175797, 'rte_2885': 0.018376735970377922, 'rte_284': 0.051381874829530716}, 'sst2': {'sst2_93': 0.04711015522480011, 'sst2_1354': 0.034145474433898926, 'sst2_466': 0.05404207110404968, 'sst2_1583': 0.05685221031308174, 'sst2_592': 0.05775890126824379, 'sst2_163': 0.07779338210821152, 'sst2_1751': 0.03621314838528633, 'sst2_476': 0.042596738785505295, 'sst2_1774': 0.05140171945095062, 'sst2_206': 0.043652039021253586}, 'stsb': {'stsb_778': 0.04934108629822731, 'stsb_569': 0.05062316730618477, 'stsb_928': 0.04077062010765076, 'stsb_1301': 0.051738206297159195, 'stsb_747': 0.07081101089715958, 'stsb_333': 0.05044831708073616, 'stsb_758': 0.06396300345659256, 'stsb_727': 0.05699228122830391, 'stsb_429': 0.05307973548769951, 'stsb_1372': 0.0482199527323246}, 'wnli': {'wnli_68': 0.05945306643843651, 'wnli_18': 0.04321831464767456, 'wnli_43': 0.06734310835599899, 'wnli_136': 0.060203853994607925, 'wnli_62': 0.06385613977909088, 'wnli_41': 0.06134191155433655, 'wnli_118': 0.06447528302669525, 'wnli_97': 0.037683095782995224, 'wnli_69': 0.046799302101135254, 'wnli_142': 0.043207455426454544}}}
03/26/2024 00:05:57 - INFO - __main__ - Saving data in SD_per_task_mask_0.1.json
03/26/2024 00:05:57 - INFO - __main__ - Saving data in var_per_task_mask_0.1.json
03/26/2024 00:05:57 - INFO - __main__ - 
UNCERTAINTY (SD)

03/26/2024 00:05:57 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.15938827395439148, 'conll_2003_en': 0.10365194082260132, 'hau': 0.05239947512745857, 'ibo': 0.04735913872718811, 'kin': 0.04549723118543625, 'lug': 0.043611131608486176, 'luo': 0.04285638406872749, 'pcm': 0.04324229806661606, 'swa': 0.04429593309760094, 'wol': 0.05906249210238457, 'yor': 0.10100366920232773, 'zh': 0.15385279059410095}, 'tydiqa': {'arabic': 0.05855845659971237, 'russian': 0.030394162982702255, 'bengali': 0.09768027812242508, 'telugu': 0.05026734992861748, 'finnish': 0.04198037460446358, 'swahili': 0.03611708804965019, 'korean': 0.0881974846124649, 'indonesian': 0.02844533696770668, 'english': 0.029149720445275307}, 'glue': {'cola': 0.06104040890932083, 'mnli': 0.055707238614559174, 'mrpc': 0.06975099444389343, 'qnli': 0.0561135932803154, 'qqp': 0.05473095923662186, 'rte': 0.04169704392552376, 'sst2': 0.05015658587217331, 'stsb': 0.053598739206790924, 'wnli': 0.05475815013051033}}

###############################################################################
Hábrók Cluster
Job 7735830 for user s3919609
Finished at: Tue Mar 26 00:06:25 CET 2024

Job details:
============

Job ID              : 7735830
Name                : std_monte_carlo_mask_0.1
User                : s3919609
Partition           : regularmedium
Nodes               : node60
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-25T16:53:26
Start               : 2024-03-25T16:53:27
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 07:12:59
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 20G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
