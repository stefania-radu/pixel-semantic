The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/25/2024 14:26:17 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/25/2024 14:26:17 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 14:26:17 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 14:26:17 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/25/2024 14:26:19 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/25/2024 14:26:19 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/25/2024 14:26:19 - INFO - __main__ - Running MONTE CARLO experiment: mask_ratio
03/25/2024 14:26:19 - INFO - __main__ - Loading data from loss_per_task_mask_0.7.json
03/25/2024 14:26:19 - INFO - __main__ - 
LOSS

03/25/2024 14:26:19 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8411256670951843, 'conll_2003_en': 0.7866459488868713, 'hau': 0.674391508102417, 'ibo': 0.6749521493911743, 'kin': 0.6686186790466309, 'lug': 0.649715781211853, 'luo': 0.6690119504928589, 'pcm': 0.6788561344146729, 'swa': 0.6858309507369995, 'wol': 0.7186233997344971, 'yor': 0.7877508401870728, 'zh': 0.8691732287406921}, 'tydiqa': {'arabic': 0.8530383110046387, 'russian': 0.6752068996429443, 'bengali': 0.7679668664932251, 'telugu': 0.7896928191184998, 'finnish': 0.6469820737838745, 'swahili': 0.6410249471664429, 'korean': 0.8633003234863281, 'indonesian': 0.6500242948532104, 'english': 0.5235130786895752}, 'glue': {'cola': 0.6588590145111084, 'mnli': 0.533138632774353, 'mrpc': 0.5448020696640015, 'qnli': 0.4965220093727112, 'qqp': 0.5659830570220947, 'rte': 0.5537274479866028, 'sst2': 0.6218587756156921, 'stsb': 0.5217363238334656, 'wnli': 0.5505371689796448}}
03/25/2024 14:26:19 - INFO - __main__ - Lowest losses:
03/25/2024 14:26:19 - INFO - __main__ - ID: wnli_18, Loss: 0.354424387216568
03/25/2024 14:26:19 - INFO - __main__ - ID: stsb_569, Loss: 0.3602953255176544
03/25/2024 14:26:19 - INFO - __main__ - ID: mnli_3582, Loss: 0.37814846634864807
03/25/2024 14:26:19 - INFO - __main__ - ID: qnli_759, Loss: 0.41104012727737427
03/25/2024 14:26:19 - INFO - __main__ - ID: english-7740772185887912651-0, Loss: 0.41380804777145386
03/25/2024 14:26:19 - INFO - __main__ - Highest losses:
03/25/2024 14:26:19 - INFO - __main__ - ID: zh_6, Loss: 0.8935890197753906
03/25/2024 14:26:19 - INFO - __main__ - ID: yor_4, Loss: 0.9113336801528931
03/25/2024 14:26:19 - INFO - __main__ - ID: conll_2003_en_0, Loss: 0.9209128618240356
03/25/2024 14:26:19 - INFO - __main__ - ID: zh_4, Loss: 0.9320163130760193
03/25/2024 14:26:19 - INFO - __main__ - ID: conll_2003_en_6, Loss: 1.0871294736862183
03/25/2024 14:26:19 - INFO - __main__ - Monte Carlo samples: 100
03/25/2024 14:26:19 - INFO - __main__ - Training mode: True
03/25/2024 14:26:19 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/25/2024 14:26:19 - INFO - __main__ - 
######## Language: amh ######## 

03/25/2024 14:26:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:26:19 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:26:19 - INFO - __main__ - ID text: amh_0
03/25/2024 14:26:59 - INFO - __main__ - Mean variance for amh_0: 0.09148601442575455
03/25/2024 14:26:59 - INFO - __main__ - Mean std for for amh_0: 0.27070191502571106
03/25/2024 14:26:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:26:59 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:26:59 - INFO - __main__ - ID text: amh_1
03/25/2024 14:27:39 - INFO - __main__ - Mean variance for amh_1: 0.09604841470718384
03/25/2024 14:27:39 - INFO - __main__ - Mean std for for amh_1: 0.275293231010437
03/25/2024 14:27:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:27:39 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:27:39 - INFO - __main__ - ID text: amh_2
03/25/2024 14:28:19 - INFO - __main__ - Mean variance for amh_2: 0.09750201553106308
03/25/2024 14:28:19 - INFO - __main__ - Mean std for for amh_2: 0.2759362757205963
03/25/2024 14:28:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:28:19 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:28:19 - INFO - __main__ - ID text: amh_3
03/25/2024 14:29:05 - INFO - __main__ - Mean variance for amh_3: 0.11348538845777512
03/25/2024 14:29:05 - INFO - __main__ - Mean std for for amh_3: 0.2935905158519745
03/25/2024 14:29:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:29:05 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:29:05 - INFO - __main__ - ID text: amh_4
03/25/2024 14:29:46 - INFO - __main__ - Mean variance for amh_4: 0.11158373206853867
03/25/2024 14:29:46 - INFO - __main__ - Mean std for for amh_4: 0.2917639911174774
03/25/2024 14:29:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:29:46 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:29:46 - INFO - __main__ - ID text: amh_5
03/25/2024 14:30:28 - INFO - __main__ - Mean variance for amh_5: 0.08346069604158401
03/25/2024 14:30:28 - INFO - __main__ - Mean std for for amh_5: 0.2587447464466095
03/25/2024 14:30:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:30:28 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:30:28 - INFO - __main__ - ID text: amh_6
03/25/2024 14:31:12 - INFO - __main__ - Mean variance for amh_6: 0.10060443729162216
03/25/2024 14:31:12 - INFO - __main__ - Mean std for for amh_6: 0.28035968542099
03/25/2024 14:31:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:31:12 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:31:12 - INFO - __main__ - ID text: amh_7
03/25/2024 14:31:52 - INFO - __main__ - Mean variance for amh_7: 0.10089844465255737
03/25/2024 14:31:52 - INFO - __main__ - Mean std for for amh_7: 0.28165140748023987
03/25/2024 14:31:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:31:52 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:31:52 - INFO - __main__ - ID text: amh_8
03/25/2024 14:32:36 - INFO - __main__ - Mean variance for amh_8: 0.06514768302440643
03/25/2024 14:32:36 - INFO - __main__ - Mean std for for amh_8: 0.22847692668437958
03/25/2024 14:32:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:32:36 - INFO - __main__ - Masked count: 122, ratio = 0.4766
03/25/2024 14:32:36 - INFO - __main__ - ID text: amh_9
03/25/2024 14:33:17 - INFO - __main__ - Mean variance for amh_9: 0.11495539546012878
03/25/2024 14:33:17 - INFO - __main__ - Mean std for for amh_9: 0.2989599108695984
03/25/2024 14:33:17 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/25/2024 14:33:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:33:17 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:33:17 - INFO - __main__ - ID text: conll_2003_en_0
03/25/2024 14:33:58 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.1486692875623703
03/25/2024 14:33:58 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.34524282813072205
03/25/2024 14:33:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:33:59 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:33:59 - INFO - __main__ - ID text: conll_2003_en_1
03/25/2024 14:34:43 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.03392266854643822
03/25/2024 14:34:43 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.1671198457479477
03/25/2024 14:34:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:34:43 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:34:43 - INFO - __main__ - ID text: conll_2003_en_2
03/25/2024 14:35:24 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.04824279248714447
03/25/2024 14:35:24 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.18199902772903442
03/25/2024 14:35:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:35:24 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 14:35:24 - INFO - __main__ - ID text: conll_2003_en_3
03/25/2024 14:36:05 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.051916707307100296
03/25/2024 14:36:05 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.20169754326343536
03/25/2024 14:36:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:36:05 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 14:36:05 - INFO - __main__ - ID text: conll_2003_en_4
03/25/2024 14:36:49 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.04546302184462547
03/25/2024 14:36:49 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.19467435777187347
03/25/2024 14:36:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:36:49 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:36:49 - INFO - __main__ - ID text: conll_2003_en_5
03/25/2024 14:37:30 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.13307563960552216
03/25/2024 14:37:30 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.330260306596756
03/25/2024 14:37:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:37:30 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 14:37:30 - INFO - __main__ - ID text: conll_2003_en_6
03/25/2024 14:38:13 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.08805666118860245
03/25/2024 14:38:13 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.26716434955596924
03/25/2024 14:38:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:38:14 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 14:38:14 - INFO - __main__ - ID text: conll_2003_en_7
03/25/2024 14:38:58 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.09760769456624985
03/25/2024 14:38:58 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.2832658886909485
03/25/2024 14:38:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:38:58 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:38:58 - INFO - __main__ - ID text: conll_2003_en_8
03/25/2024 14:39:39 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.12441184371709824
03/25/2024 14:39:39 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.3180811107158661
03/25/2024 14:39:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:39:39 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:39:39 - INFO - __main__ - ID text: conll_2003_en_9
03/25/2024 14:40:20 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.04368382319808006
03/25/2024 14:40:20 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.18364129960536957
03/25/2024 14:40:20 - INFO - __main__ - 
######## Language: hau ######## 

03/25/2024 14:40:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:40:20 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:40:20 - INFO - __main__ - ID text: hau_0
03/25/2024 14:41:04 - INFO - __main__ - Mean variance for hau_0: 0.041908275336027145
03/25/2024 14:41:04 - INFO - __main__ - Mean std for for hau_0: 0.16445493698120117
03/25/2024 14:41:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:41:04 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 14:41:04 - INFO - __main__ - ID text: hau_1
03/25/2024 14:41:45 - INFO - __main__ - Mean variance for hau_1: 0.04831526055932045
03/25/2024 14:41:45 - INFO - __main__ - Mean std for for hau_1: 0.19713659584522247
03/25/2024 14:41:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:41:45 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:41:45 - INFO - __main__ - ID text: hau_2
03/25/2024 14:42:26 - INFO - __main__ - Mean variance for hau_2: 0.09338220208883286
03/25/2024 14:42:26 - INFO - __main__ - Mean std for for hau_2: 0.27380797266960144
03/25/2024 14:42:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:42:26 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 14:42:26 - INFO - __main__ - ID text: hau_3
03/25/2024 14:43:10 - INFO - __main__ - Mean variance for hau_3: 0.050323519855737686
03/25/2024 14:43:10 - INFO - __main__ - Mean std for for hau_3: 0.16011309623718262
03/25/2024 14:43:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:43:10 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:43:10 - INFO - __main__ - ID text: hau_4
03/25/2024 14:43:52 - INFO - __main__ - Mean variance for hau_4: 0.044857244938611984
03/25/2024 14:43:52 - INFO - __main__ - Mean std for for hau_4: 0.1679285764694214
03/25/2024 14:43:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:43:52 - INFO - __main__ - Masked count: 149, ratio = 0.5820
03/25/2024 14:43:52 - INFO - __main__ - ID text: hau_5
03/25/2024 14:44:33 - INFO - __main__ - Mean variance for hau_5: 0.04267621412873268
03/25/2024 14:44:33 - INFO - __main__ - Mean std for for hau_5: 0.16051283478736877
03/25/2024 14:44:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:44:33 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:44:33 - INFO - __main__ - ID text: hau_6
03/25/2024 14:45:17 - INFO - __main__ - Mean variance for hau_6: 0.050156548619270325
03/25/2024 14:45:17 - INFO - __main__ - Mean std for for hau_6: 0.1886596530675888
03/25/2024 14:45:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:45:17 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:45:17 - INFO - __main__ - ID text: hau_7
03/25/2024 14:45:58 - INFO - __main__ - Mean variance for hau_7: 0.041951101273298264
03/25/2024 14:45:58 - INFO - __main__ - Mean std for for hau_7: 0.16624648869037628
03/25/2024 14:45:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:45:58 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:45:58 - INFO - __main__ - ID text: hau_8
03/25/2024 14:46:39 - INFO - __main__ - Mean variance for hau_8: 0.048487793654203415
03/25/2024 14:46:39 - INFO - __main__ - Mean std for for hau_8: 0.16888469457626343
03/25/2024 14:46:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:46:39 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:46:39 - INFO - __main__ - ID text: hau_9
03/25/2024 14:47:23 - INFO - __main__ - Mean variance for hau_9: 0.04815952852368355
03/25/2024 14:47:23 - INFO - __main__ - Mean std for for hau_9: 0.1857239454984665
03/25/2024 14:47:23 - INFO - __main__ - 
######## Language: ibo ######## 

03/25/2024 14:47:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:47:23 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:47:23 - INFO - __main__ - ID text: ibo_0
03/25/2024 14:48:05 - INFO - __main__ - Mean variance for ibo_0: 0.0447203703224659
03/25/2024 14:48:05 - INFO - __main__ - Mean std for for ibo_0: 0.1819055825471878
03/25/2024 14:48:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:48:05 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:48:05 - INFO - __main__ - ID text: ibo_1
03/25/2024 14:48:46 - INFO - __main__ - Mean variance for ibo_1: 0.04480667784810066
03/25/2024 14:48:46 - INFO - __main__ - Mean std for for ibo_1: 0.17764951288700104
03/25/2024 14:48:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:48:46 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:48:46 - INFO - __main__ - ID text: ibo_2
03/25/2024 14:49:30 - INFO - __main__ - Mean variance for ibo_2: 0.05065445601940155
03/25/2024 14:49:30 - INFO - __main__ - Mean std for for ibo_2: 0.18599075078964233
03/25/2024 14:49:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:49:30 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:49:30 - INFO - __main__ - ID text: ibo_3
03/25/2024 14:50:12 - INFO - __main__ - Mean variance for ibo_3: 0.03797761723399162
03/25/2024 14:50:12 - INFO - __main__ - Mean std for for ibo_3: 0.1772107481956482
03/25/2024 14:50:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:50:12 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 14:50:12 - INFO - __main__ - ID text: ibo_4
03/25/2024 14:50:53 - INFO - __main__ - Mean variance for ibo_4: 0.049858611077070236
03/25/2024 14:50:53 - INFO - __main__ - Mean std for for ibo_4: 0.1908884197473526
03/25/2024 14:50:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:50:53 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 14:50:53 - INFO - __main__ - ID text: ibo_5
03/25/2024 14:51:37 - INFO - __main__ - Mean variance for ibo_5: 0.04164643585681915
03/25/2024 14:51:37 - INFO - __main__ - Mean std for for ibo_5: 0.18261784315109253
03/25/2024 14:51:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:51:37 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 14:51:37 - INFO - __main__ - ID text: ibo_6
03/25/2024 14:52:21 - INFO - __main__ - Mean variance for ibo_6: 0.04322552680969238
03/25/2024 14:52:21 - INFO - __main__ - Mean std for for ibo_6: 0.18076568841934204
03/25/2024 14:52:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:52:21 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:52:21 - INFO - __main__ - ID text: ibo_7
03/25/2024 14:53:02 - INFO - __main__ - Mean variance for ibo_7: 0.04636000469326973
03/25/2024 14:53:02 - INFO - __main__ - Mean std for for ibo_7: 0.1730266809463501
03/25/2024 14:53:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:53:02 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 14:53:02 - INFO - __main__ - ID text: ibo_8
03/25/2024 14:53:44 - INFO - __main__ - Mean variance for ibo_8: 0.05341922864317894
03/25/2024 14:53:44 - INFO - __main__ - Mean std for for ibo_8: 0.20804081857204437
03/25/2024 14:53:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:53:44 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:53:44 - INFO - __main__ - ID text: ibo_9
03/25/2024 14:54:27 - INFO - __main__ - Mean variance for ibo_9: 0.047039974480867386
03/25/2024 14:54:27 - INFO - __main__ - Mean std for for ibo_9: 0.18427468836307526
03/25/2024 14:54:27 - INFO - __main__ - 
######## Language: kin ######## 

03/25/2024 14:54:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:54:27 - INFO - __main__ - Masked count: 114, ratio = 0.4453
03/25/2024 14:54:27 - INFO - __main__ - ID text: kin_0
03/25/2024 14:55:09 - INFO - __main__ - Mean variance for kin_0: 0.05627754330635071
03/25/2024 14:55:09 - INFO - __main__ - Mean std for for kin_0: 0.2004305124282837
03/25/2024 14:55:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:55:09 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:55:09 - INFO - __main__ - ID text: kin_1
03/25/2024 14:55:50 - INFO - __main__ - Mean variance for kin_1: 0.04689594730734825
03/25/2024 14:55:50 - INFO - __main__ - Mean std for for kin_1: 0.18538051843643188
03/25/2024 14:55:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:55:50 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:55:50 - INFO - __main__ - ID text: kin_2
03/25/2024 14:56:34 - INFO - __main__ - Mean variance for kin_2: 0.047053080052137375
03/25/2024 14:56:34 - INFO - __main__ - Mean std for for kin_2: 0.19715191423892975
03/25/2024 14:56:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:56:34 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:56:34 - INFO - __main__ - ID text: kin_3
03/25/2024 14:57:15 - INFO - __main__ - Mean variance for kin_3: 0.04584595188498497
03/25/2024 14:57:15 - INFO - __main__ - Mean std for for kin_3: 0.17987984418869019
03/25/2024 14:57:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:57:15 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:57:15 - INFO - __main__ - ID text: kin_4
03/25/2024 14:57:56 - INFO - __main__ - Mean variance for kin_4: 0.044229015707969666
03/25/2024 14:57:56 - INFO - __main__ - Mean std for for kin_4: 0.17255234718322754
03/25/2024 14:57:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:57:56 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 14:57:56 - INFO - __main__ - ID text: kin_5
03/25/2024 14:58:40 - INFO - __main__ - Mean variance for kin_5: 0.03859858959913254
03/25/2024 14:58:40 - INFO - __main__ - Mean std for for kin_5: 0.177975133061409
03/25/2024 14:58:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:58:40 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 14:58:40 - INFO - __main__ - ID text: kin_6
03/25/2024 14:59:22 - INFO - __main__ - Mean variance for kin_6: 0.04773275554180145
03/25/2024 14:59:22 - INFO - __main__ - Mean std for for kin_6: 0.16870123147964478
03/25/2024 14:59:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:59:22 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:59:22 - INFO - __main__ - ID text: kin_7
03/25/2024 15:00:02 - INFO - __main__ - Mean variance for kin_7: 0.05301538482308388
03/25/2024 15:00:02 - INFO - __main__ - Mean std for for kin_7: 0.18905918300151825
03/25/2024 15:00:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:00:02 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 15:00:02 - INFO - __main__ - ID text: kin_8
03/25/2024 15:00:46 - INFO - __main__ - Mean variance for kin_8: 0.04881634935736656
03/25/2024 15:00:46 - INFO - __main__ - Mean std for for kin_8: 0.1954442858695984
03/25/2024 15:00:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:00:46 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:00:46 - INFO - __main__ - ID text: kin_9
03/25/2024 15:01:27 - INFO - __main__ - Mean variance for kin_9: 0.053674329072237015
03/25/2024 15:01:27 - INFO - __main__ - Mean std for for kin_9: 0.2052709013223648
03/25/2024 15:01:27 - INFO - __main__ - 
######## Language: lug ######## 

03/25/2024 15:01:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:01:27 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:01:27 - INFO - __main__ - ID text: lug_0
03/25/2024 15:02:08 - INFO - __main__ - Mean variance for lug_0: 0.04665384069085121
03/25/2024 15:02:08 - INFO - __main__ - Mean std for for lug_0: 0.17045791447162628
03/25/2024 15:02:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:02:08 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:02:08 - INFO - __main__ - ID text: lug_1
03/25/2024 15:02:52 - INFO - __main__ - Mean variance for lug_1: 0.04654686525464058
03/25/2024 15:02:52 - INFO - __main__ - Mean std for for lug_1: 0.17854565382003784
03/25/2024 15:02:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:02:52 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:02:52 - INFO - __main__ - ID text: lug_2
03/25/2024 15:03:33 - INFO - __main__ - Mean variance for lug_2: 0.05996868014335632
03/25/2024 15:03:33 - INFO - __main__ - Mean std for for lug_2: 0.17792721092700958
03/25/2024 15:03:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:03:34 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:03:34 - INFO - __main__ - ID text: lug_3
03/25/2024 15:04:15 - INFO - __main__ - Mean variance for lug_3: 0.04874882102012634
03/25/2024 15:04:15 - INFO - __main__ - Mean std for for lug_3: 0.17176717519760132
03/25/2024 15:04:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:04:15 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:04:15 - INFO - __main__ - ID text: lug_4
03/25/2024 15:04:58 - INFO - __main__ - Mean variance for lug_4: 0.04968187212944031
03/25/2024 15:04:58 - INFO - __main__ - Mean std for for lug_4: 0.19162534177303314
03/25/2024 15:04:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:04:58 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 15:04:58 - INFO - __main__ - ID text: lug_5
03/25/2024 15:05:41 - INFO - __main__ - Mean variance for lug_5: 0.05208874121308327
03/25/2024 15:05:41 - INFO - __main__ - Mean std for for lug_5: 0.1817375272512436
03/25/2024 15:05:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:05:41 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:05:41 - INFO - __main__ - ID text: lug_6
03/25/2024 15:06:22 - INFO - __main__ - Mean variance for lug_6: 0.0482395738363266
03/25/2024 15:06:22 - INFO - __main__ - Mean std for for lug_6: 0.1794918328523636
03/25/2024 15:06:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:06:22 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:06:22 - INFO - __main__ - ID text: lug_7
03/25/2024 15:07:05 - INFO - __main__ - Mean variance for lug_7: 0.04331256076693535
03/25/2024 15:07:05 - INFO - __main__ - Mean std for for lug_7: 0.17849570512771606
03/25/2024 15:07:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:07:05 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 15:07:05 - INFO - __main__ - ID text: lug_8
03/25/2024 15:07:49 - INFO - __main__ - Mean variance for lug_8: 0.05141055956482887
03/25/2024 15:07:49 - INFO - __main__ - Mean std for for lug_8: 0.18396703898906708
03/25/2024 15:07:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:07:49 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:07:49 - INFO - __main__ - ID text: lug_9
03/25/2024 15:08:31 - INFO - __main__ - Mean variance for lug_9: 0.04750581458210945
03/25/2024 15:08:31 - INFO - __main__ - Mean std for for lug_9: 0.18147404491901398
03/25/2024 15:08:31 - INFO - __main__ - 
######## Language: luo ######## 

03/25/2024 15:08:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:08:31 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:08:31 - INFO - __main__ - ID text: luo_0
03/25/2024 15:09:12 - INFO - __main__ - Mean variance for luo_0: 0.04431002959609032
03/25/2024 15:09:12 - INFO - __main__ - Mean std for for luo_0: 0.15765909850597382
03/25/2024 15:09:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:09:12 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:09:12 - INFO - __main__ - ID text: luo_1
03/25/2024 15:09:55 - INFO - __main__ - Mean variance for luo_1: 0.050718873739242554
03/25/2024 15:09:55 - INFO - __main__ - Mean std for for luo_1: 0.1996414065361023
03/25/2024 15:09:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:09:55 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 15:09:55 - INFO - __main__ - ID text: luo_2
03/25/2024 15:10:38 - INFO - __main__ - Mean variance for luo_2: 0.052629876881837845
03/25/2024 15:10:38 - INFO - __main__ - Mean std for for luo_2: 0.18492017686367035
03/25/2024 15:10:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:10:38 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:10:38 - INFO - __main__ - ID text: luo_3
03/25/2024 15:11:19 - INFO - __main__ - Mean variance for luo_3: 0.050578732043504715
03/25/2024 15:11:19 - INFO - __main__ - Mean std for for luo_3: 0.16850464046001434
03/25/2024 15:11:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:11:19 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:11:19 - INFO - __main__ - ID text: luo_4
03/25/2024 15:12:02 - INFO - __main__ - Mean variance for luo_4: 0.04703284427523613
03/25/2024 15:12:02 - INFO - __main__ - Mean std for for luo_4: 0.18822766840457916
03/25/2024 15:12:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:12:02 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:12:02 - INFO - __main__ - ID text: luo_5
03/25/2024 15:12:44 - INFO - __main__ - Mean variance for luo_5: 0.04781876504421234
03/25/2024 15:12:44 - INFO - __main__ - Mean std for for luo_5: 0.18647326529026031
03/25/2024 15:12:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:12:44 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 15:12:44 - INFO - __main__ - ID text: luo_6
03/25/2024 15:13:25 - INFO - __main__ - Mean variance for luo_6: 0.053192514926195145
03/25/2024 15:13:25 - INFO - __main__ - Mean std for for luo_6: 0.18372704088687897
03/25/2024 15:13:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:13:25 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:13:25 - INFO - __main__ - ID text: luo_7
03/25/2024 15:14:08 - INFO - __main__ - Mean variance for luo_7: 0.05227310582995415
03/25/2024 15:14:08 - INFO - __main__ - Mean std for for luo_7: 0.2051858752965927
03/25/2024 15:14:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:14:09 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:14:09 - INFO - __main__ - ID text: luo_8
03/25/2024 15:14:52 - INFO - __main__ - Mean variance for luo_8: 0.044474512338638306
03/25/2024 15:14:52 - INFO - __main__ - Mean std for for luo_8: 0.17661577463150024
03/25/2024 15:14:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:14:52 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 15:14:52 - INFO - __main__ - ID text: luo_9
03/25/2024 15:15:32 - INFO - __main__ - Mean variance for luo_9: 0.04301661625504494
03/25/2024 15:15:32 - INFO - __main__ - Mean std for for luo_9: 0.19024638831615448
03/25/2024 15:15:32 - INFO - __main__ - 
######## Language: pcm ######## 

03/25/2024 15:15:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:15:32 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 15:15:32 - INFO - __main__ - ID text: pcm_0
03/25/2024 15:16:15 - INFO - __main__ - Mean variance for pcm_0: 0.03903795778751373
03/25/2024 15:16:15 - INFO - __main__ - Mean std for for pcm_0: 0.1727440506219864
03/25/2024 15:16:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:16:15 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:16:15 - INFO - __main__ - ID text: pcm_1
03/25/2024 15:16:59 - INFO - __main__ - Mean variance for pcm_1: 0.05048178508877754
03/25/2024 15:16:59 - INFO - __main__ - Mean std for for pcm_1: 0.20268501341342926
03/25/2024 15:16:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:16:59 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:16:59 - INFO - __main__ - ID text: pcm_2
03/25/2024 15:17:40 - INFO - __main__ - Mean variance for pcm_2: 0.04310397431254387
03/25/2024 15:17:40 - INFO - __main__ - Mean std for for pcm_2: 0.1793047934770584
03/25/2024 15:17:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:17:40 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:17:40 - INFO - __main__ - ID text: pcm_3
03/25/2024 15:18:23 - INFO - __main__ - Mean variance for pcm_3: 0.05079035833477974
03/25/2024 15:18:23 - INFO - __main__ - Mean std for for pcm_3: 0.186883345246315
03/25/2024 15:18:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:18:23 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:18:23 - INFO - __main__ - ID text: pcm_4
03/25/2024 15:19:07 - INFO - __main__ - Mean variance for pcm_4: 0.057339731603860855
03/25/2024 15:19:07 - INFO - __main__ - Mean std for for pcm_4: 0.1960030347108841
03/25/2024 15:19:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:19:07 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:19:07 - INFO - __main__ - ID text: pcm_5
03/25/2024 15:19:49 - INFO - __main__ - Mean variance for pcm_5: 0.04453006014227867
03/25/2024 15:19:49 - INFO - __main__ - Mean std for for pcm_5: 0.19163203239440918
03/25/2024 15:19:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:19:49 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:19:49 - INFO - __main__ - ID text: pcm_6
03/25/2024 15:20:31 - INFO - __main__ - Mean variance for pcm_6: 0.04780595004558563
03/25/2024 15:20:31 - INFO - __main__ - Mean std for for pcm_6: 0.1841098517179489
03/25/2024 15:20:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:20:31 - INFO - __main__ - Masked count: 119, ratio = 0.4648
03/25/2024 15:20:31 - INFO - __main__ - ID text: pcm_7
03/25/2024 15:21:17 - INFO - __main__ - Mean variance for pcm_7: 0.05574795603752136
03/25/2024 15:21:17 - INFO - __main__ - Mean std for for pcm_7: 0.19690002501010895
03/25/2024 15:21:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:21:17 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:21:17 - INFO - __main__ - ID text: pcm_8
03/25/2024 15:22:02 - INFO - __main__ - Mean variance for pcm_8: 0.05047856643795967
03/25/2024 15:22:02 - INFO - __main__ - Mean std for for pcm_8: 0.18241667747497559
03/25/2024 15:22:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:22:02 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:22:02 - INFO - __main__ - ID text: pcm_9
03/25/2024 15:22:46 - INFO - __main__ - Mean variance for pcm_9: 0.04650059714913368
03/25/2024 15:22:46 - INFO - __main__ - Mean std for for pcm_9: 0.1919384002685547
03/25/2024 15:22:46 - INFO - __main__ - 
######## Language: swa ######## 

03/25/2024 15:22:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:22:46 - INFO - __main__ - Masked count: 146, ratio = 0.5703
03/25/2024 15:22:46 - INFO - __main__ - ID text: swa_0
03/25/2024 15:23:30 - INFO - __main__ - Mean variance for swa_0: 0.039737213402986526
03/25/2024 15:23:30 - INFO - __main__ - Mean std for for swa_0: 0.1612352579832077
03/25/2024 15:23:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:23:30 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:23:30 - INFO - __main__ - ID text: swa_1
03/25/2024 15:24:15 - INFO - __main__ - Mean variance for swa_1: 0.0480228029191494
03/25/2024 15:24:15 - INFO - __main__ - Mean std for for swa_1: 0.18830527365207672
03/25/2024 15:24:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:24:15 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:24:15 - INFO - __main__ - ID text: swa_2
03/25/2024 15:24:59 - INFO - __main__ - Mean variance for swa_2: 0.04850126430392265
03/25/2024 15:24:59 - INFO - __main__ - Mean std for for swa_2: 0.17699551582336426
03/25/2024 15:24:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:24:59 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 15:24:59 - INFO - __main__ - ID text: swa_3
03/25/2024 15:25:41 - INFO - __main__ - Mean variance for swa_3: 0.048018842935562134
03/25/2024 15:25:41 - INFO - __main__ - Mean std for for swa_3: 0.19514091312885284
03/25/2024 15:25:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:25:42 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:25:42 - INFO - __main__ - ID text: swa_4
03/25/2024 15:26:25 - INFO - __main__ - Mean variance for swa_4: 0.04505951702594757
03/25/2024 15:26:25 - INFO - __main__ - Mean std for for swa_4: 0.16660387814044952
03/25/2024 15:26:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:26:25 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 15:26:25 - INFO - __main__ - ID text: swa_5
03/25/2024 15:27:10 - INFO - __main__ - Mean variance for swa_5: 0.037353187799453735
03/25/2024 15:27:10 - INFO - __main__ - Mean std for for swa_5: 0.14747469127178192
03/25/2024 15:27:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:27:10 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 15:27:10 - INFO - __main__ - ID text: swa_6
03/25/2024 15:27:53 - INFO - __main__ - Mean variance for swa_6: 0.04544399678707123
03/25/2024 15:27:53 - INFO - __main__ - Mean std for for swa_6: 0.16328848898410797
03/25/2024 15:27:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:27:53 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 15:27:53 - INFO - __main__ - ID text: swa_7
03/25/2024 15:28:36 - INFO - __main__ - Mean variance for swa_7: 0.0441899299621582
03/25/2024 15:28:36 - INFO - __main__ - Mean std for for swa_7: 0.19187074899673462
03/25/2024 15:28:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:28:36 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:28:36 - INFO - __main__ - ID text: swa_8
03/25/2024 15:29:20 - INFO - __main__ - Mean variance for swa_8: 0.04531316086649895
03/25/2024 15:29:20 - INFO - __main__ - Mean std for for swa_8: 0.1837344914674759
03/25/2024 15:29:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:29:21 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 15:29:21 - INFO - __main__ - ID text: swa_9
03/25/2024 15:30:02 - INFO - __main__ - Mean variance for swa_9: 0.03787750378251076
03/25/2024 15:30:02 - INFO - __main__ - Mean std for for swa_9: 0.16586892306804657
03/25/2024 15:30:02 - INFO - __main__ - 
######## Language: wol ######## 

03/25/2024 15:30:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:30:02 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:30:02 - INFO - __main__ - ID text: wol_0
03/25/2024 15:30:44 - INFO - __main__ - Mean variance for wol_0: 0.04508360102772713
03/25/2024 15:30:44 - INFO - __main__ - Mean std for for wol_0: 0.1704932451248169
03/25/2024 15:30:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:30:44 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:30:44 - INFO - __main__ - ID text: wol_1
03/25/2024 15:31:28 - INFO - __main__ - Mean variance for wol_1: 0.050539348274469376
03/25/2024 15:31:28 - INFO - __main__ - Mean std for for wol_1: 0.18973888456821442
03/25/2024 15:31:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:31:28 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:31:28 - INFO - __main__ - ID text: wol_2
03/25/2024 15:32:11 - INFO - __main__ - Mean variance for wol_2: 0.04492494463920593
03/25/2024 15:32:11 - INFO - __main__ - Mean std for for wol_2: 0.18219125270843506
03/25/2024 15:32:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:32:11 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:32:11 - INFO - __main__ - ID text: wol_3
03/25/2024 15:32:54 - INFO - __main__ - Mean variance for wol_3: 0.061300504952669144
03/25/2024 15:32:54 - INFO - __main__ - Mean std for for wol_3: 0.2252575010061264
03/25/2024 15:32:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:32:54 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:32:54 - INFO - __main__ - ID text: wol_4
03/25/2024 15:33:37 - INFO - __main__ - Mean variance for wol_4: 0.04394678398966789
03/25/2024 15:33:37 - INFO - __main__ - Mean std for for wol_4: 0.19088618457317352
03/25/2024 15:33:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:33:37 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:33:37 - INFO - __main__ - ID text: wol_5
03/25/2024 15:34:21 - INFO - __main__ - Mean variance for wol_5: 0.04192502796649933
03/25/2024 15:34:21 - INFO - __main__ - Mean std for for wol_5: 0.1742337942123413
03/25/2024 15:34:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:34:21 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 15:34:21 - INFO - __main__ - ID text: wol_6
03/25/2024 15:35:02 - INFO - __main__ - Mean variance for wol_6: 0.11790379881858826
03/25/2024 15:35:02 - INFO - __main__ - Mean std for for wol_6: 0.30797043442726135
03/25/2024 15:35:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:35:02 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:35:02 - INFO - __main__ - ID text: wol_7
03/25/2024 15:35:45 - INFO - __main__ - Mean variance for wol_7: 0.050082359462976456
03/25/2024 15:35:45 - INFO - __main__ - Mean std for for wol_7: 0.19539646804332733
03/25/2024 15:35:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:35:45 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:35:45 - INFO - __main__ - ID text: wol_8
03/25/2024 15:36:28 - INFO - __main__ - Mean variance for wol_8: 0.04978664591908455
03/25/2024 15:36:28 - INFO - __main__ - Mean std for for wol_8: 0.2028752565383911
03/25/2024 15:36:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:36:28 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 15:36:28 - INFO - __main__ - ID text: wol_9
03/25/2024 15:37:09 - INFO - __main__ - Mean variance for wol_9: 0.055493492633104324
03/25/2024 15:37:09 - INFO - __main__ - Mean std for for wol_9: 0.2101319581270218
03/25/2024 15:37:09 - INFO - __main__ - 
######## Language: yor ######## 

03/25/2024 15:37:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:37:09 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:37:09 - INFO - __main__ - ID text: yor_0
03/25/2024 15:37:52 - INFO - __main__ - Mean variance for yor_0: 0.12533344328403473
03/25/2024 15:37:52 - INFO - __main__ - Mean std for for yor_0: 0.3123287856578827
03/25/2024 15:37:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:37:52 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 15:37:52 - INFO - __main__ - ID text: yor_1
03/25/2024 15:38:36 - INFO - __main__ - Mean variance for yor_1: 0.09924692660570145
03/25/2024 15:38:36 - INFO - __main__ - Mean std for for yor_1: 0.26948800683021545
03/25/2024 15:38:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:38:36 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 15:38:36 - INFO - __main__ - ID text: yor_2
03/25/2024 15:39:18 - INFO - __main__ - Mean variance for yor_2: 0.045153599232435226
03/25/2024 15:39:18 - INFO - __main__ - Mean std for for yor_2: 0.1789153814315796
03/25/2024 15:39:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:39:18 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:39:18 - INFO - __main__ - ID text: yor_3
03/25/2024 15:40:00 - INFO - __main__ - Mean variance for yor_3: 0.044247325509786606
03/25/2024 15:40:00 - INFO - __main__ - Mean std for for yor_3: 0.1683233231306076
03/25/2024 15:40:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:40:00 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:40:00 - INFO - __main__ - ID text: yor_4
03/25/2024 15:40:44 - INFO - __main__ - Mean variance for yor_4: 0.11286070197820663
03/25/2024 15:40:44 - INFO - __main__ - Mean std for for yor_4: 0.2973516881465912
03/25/2024 15:40:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:40:45 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:40:45 - INFO - __main__ - ID text: yor_5
03/25/2024 15:41:29 - INFO - __main__ - Mean variance for yor_5: 0.08303192257881165
03/25/2024 15:41:29 - INFO - __main__ - Mean std for for yor_5: 0.23758530616760254
03/25/2024 15:41:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:41:29 - INFO - __main__ - Masked count: 146, ratio = 0.5703
03/25/2024 15:41:29 - INFO - __main__ - ID text: yor_6
03/25/2024 15:42:11 - INFO - __main__ - Mean variance for yor_6: 0.040922582149505615
03/25/2024 15:42:11 - INFO - __main__ - Mean std for for yor_6: 0.17421114444732666
03/25/2024 15:42:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:42:11 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:42:11 - INFO - __main__ - ID text: yor_7
03/25/2024 15:42:54 - INFO - __main__ - Mean variance for yor_7: 0.11360815912485123
03/25/2024 15:42:54 - INFO - __main__ - Mean std for for yor_7: 0.29216268658638
03/25/2024 15:42:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:42:54 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:42:54 - INFO - __main__ - ID text: yor_8
03/25/2024 15:43:38 - INFO - __main__ - Mean variance for yor_8: 0.04865727946162224
03/25/2024 15:43:38 - INFO - __main__ - Mean std for for yor_8: 0.1782616823911667
03/25/2024 15:43:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:43:38 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:43:38 - INFO - __main__ - ID text: yor_9
03/25/2024 15:44:20 - INFO - __main__ - Mean variance for yor_9: 0.1272801160812378
03/25/2024 15:44:20 - INFO - __main__ - Mean std for for yor_9: 0.31141749024391174
03/25/2024 15:44:20 - INFO - __main__ - 
######## Language: zh ######## 

03/25/2024 15:44:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:44:20 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 15:44:20 - INFO - __main__ - ID text: zh_0
03/25/2024 15:45:03 - INFO - __main__ - Mean variance for zh_0: 0.07941823452711105
03/25/2024 15:45:03 - INFO - __main__ - Mean std for for zh_0: 0.2589809000492096
03/25/2024 15:45:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:45:03 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:45:03 - INFO - __main__ - ID text: zh_1
03/25/2024 15:45:48 - INFO - __main__ - Mean variance for zh_1: 0.06667303293943405
03/25/2024 15:45:48 - INFO - __main__ - Mean std for for zh_1: 0.21921469271183014
03/25/2024 15:45:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:45:48 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:45:48 - INFO - __main__ - ID text: zh_2
03/25/2024 15:46:30 - INFO - __main__ - Mean variance for zh_2: 0.10589905828237534
03/25/2024 15:46:30 - INFO - __main__ - Mean std for for zh_2: 0.2821144759654999
03/25/2024 15:46:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:46:30 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:46:30 - INFO - __main__ - ID text: zh_3
03/25/2024 15:47:12 - INFO - __main__ - Mean variance for zh_3: 0.1449359953403473
03/25/2024 15:47:12 - INFO - __main__ - Mean std for for zh_3: 0.34123504161834717
03/25/2024 15:47:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:47:12 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:47:12 - INFO - __main__ - ID text: zh_4
03/25/2024 15:47:57 - INFO - __main__ - Mean variance for zh_4: 0.08526179939508438
03/25/2024 15:47:57 - INFO - __main__ - Mean std for for zh_4: 0.2651688754558563
03/25/2024 15:47:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:47:58 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:47:58 - INFO - __main__ - ID text: zh_5
03/25/2024 15:48:40 - INFO - __main__ - Mean variance for zh_5: 0.11477289348840714
03/25/2024 15:48:40 - INFO - __main__ - Mean std for for zh_5: 0.30811455845832825
03/25/2024 15:48:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:48:40 - INFO - __main__ - Masked count: 151, ratio = 0.5898
03/25/2024 15:48:40 - INFO - __main__ - ID text: zh_6
03/25/2024 15:49:23 - INFO - __main__ - Mean variance for zh_6: 0.05250837281346321
03/25/2024 15:49:23 - INFO - __main__ - Mean std for for zh_6: 0.19350123405456543
03/25/2024 15:49:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:49:23 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:49:23 - INFO - __main__ - ID text: zh_7
03/25/2024 15:50:08 - INFO - __main__ - Mean variance for zh_7: 0.1220184937119484
03/25/2024 15:50:08 - INFO - __main__ - Mean std for for zh_7: 0.3050364553928375
03/25/2024 15:50:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:50:08 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:50:08 - INFO - __main__ - ID text: zh_8
03/25/2024 15:50:51 - INFO - __main__ - Mean variance for zh_8: 0.11267060041427612
03/25/2024 15:50:51 - INFO - __main__ - Mean std for for zh_8: 0.2927350699901581
03/25/2024 15:50:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:50:51 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:50:51 - INFO - __main__ - ID text: zh_9
03/25/2024 15:51:33 - INFO - __main__ - Mean variance for zh_9: 0.08065815269947052
03/25/2024 15:51:33 - INFO - __main__ - Mean std for for zh_9: 0.24319978058338165
03/25/2024 15:51:33 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/25/2024 15:51:33 - INFO - __main__ - 
######## Language: arabic ######## 

03/25/2024 15:51:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:51:33 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 15:51:33 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/25/2024 15:52:17 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.05541422963142395
03/25/2024 15:52:17 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.20205925405025482
03/25/2024 15:52:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:52:17 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:52:17 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/25/2024 15:53:01 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.04558327794075012
03/25/2024 15:53:01 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.16732968389987946
03/25/2024 15:53:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:53:01 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:53:01 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/25/2024 15:53:43 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.045615214854478836
03/25/2024 15:53:43 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.16843022406101227
03/25/2024 15:53:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:53:43 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 15:53:43 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/25/2024 15:54:26 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.04129597172141075
03/25/2024 15:54:26 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.15817396342754364
03/25/2024 15:54:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:54:26 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:54:26 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/25/2024 15:55:11 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.07978824526071548
03/25/2024 15:55:11 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.2409927099943161
03/25/2024 15:55:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:55:11 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:55:11 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/25/2024 15:55:53 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.04589162394404411
03/25/2024 15:55:53 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.1685417741537094
03/25/2024 15:55:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:55:53 - INFO - __main__ - Masked count: 144, ratio = 0.5625
03/25/2024 15:55:53 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/25/2024 15:56:36 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.04185357689857483
03/25/2024 15:56:36 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.1628715544939041
03/25/2024 15:56:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:56:36 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 15:56:36 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/25/2024 15:57:21 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.03942414000630379
03/25/2024 15:57:21 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.1562180072069168
03/25/2024 15:57:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:57:21 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:57:21 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/25/2024 15:58:03 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.03888090327382088
03/25/2024 15:58:03 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.1539858877658844
03/25/2024 15:58:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:58:03 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 15:58:03 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/25/2024 15:58:46 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.042395588010549545
03/25/2024 15:58:46 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.1597214937210083
03/25/2024 15:58:46 - INFO - __main__ - 
######## Language: russian ######## 

03/25/2024 15:58:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:58:46 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 15:58:46 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/25/2024 15:59:31 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.0478774756193161
03/25/2024 15:59:31 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.1574336737394333
03/25/2024 15:59:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:59:31 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:59:31 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/25/2024 16:00:13 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.04636014625430107
03/25/2024 16:00:13 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.17762793600559235
03/25/2024 16:00:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:00:13 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 16:00:13 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/25/2024 16:00:56 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.04098736122250557
03/25/2024 16:00:56 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.14634093642234802
03/25/2024 16:00:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:00:56 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 16:00:56 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/25/2024 16:01:40 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.03466499224305153
03/25/2024 16:01:40 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.13460524380207062
03/25/2024 16:01:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:01:40 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:01:40 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/25/2024 16:02:21 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.047783974558115005
03/25/2024 16:02:21 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.16122862696647644
03/25/2024 16:02:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:02:21 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 16:02:21 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/25/2024 16:03:05 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.04292109236121178
03/25/2024 16:03:05 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.1499062031507492
03/25/2024 16:03:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:03:05 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 16:03:05 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/25/2024 16:03:48 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.047597914934158325
03/25/2024 16:03:48 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.18861423432826996
03/25/2024 16:03:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:03:48 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 16:03:48 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/25/2024 16:04:31 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.043692246079444885
03/25/2024 16:04:31 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.15157459676265717
03/25/2024 16:04:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:04:31 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 16:04:31 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/25/2024 16:05:16 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.05213293805718422
03/25/2024 16:05:16 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.19411779940128326
03/25/2024 16:05:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:05:16 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 16:05:16 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/25/2024 16:05:57 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.04261346161365509
03/25/2024 16:05:57 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.14905063807964325
03/25/2024 16:05:57 - INFO - __main__ - 
######## Language: bengali ######## 

03/25/2024 16:05:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:05:57 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 16:05:57 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/25/2024 16:06:40 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.044884201139211655
03/25/2024 16:06:40 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.16298715770244598
03/25/2024 16:06:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:06:40 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 16:06:40 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/25/2024 16:07:25 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.05254269763827324
03/25/2024 16:07:25 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.1764380931854248
03/25/2024 16:07:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:07:25 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:07:25 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/25/2024 16:08:07 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.03706015646457672
03/25/2024 16:08:07 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.1511290818452835
03/25/2024 16:08:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:08:07 - INFO - __main__ - Masked count: 109, ratio = 0.4258
03/25/2024 16:08:07 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/25/2024 16:08:50 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.06309368461370468
03/25/2024 16:08:50 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.20373378694057465
03/25/2024 16:08:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:08:50 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 16:08:50 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/25/2024 16:09:34 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.043621208518743515
03/25/2024 16:09:34 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.16701722145080566
03/25/2024 16:09:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:09:34 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 16:09:34 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/25/2024 16:10:16 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.054771844297647476
03/25/2024 16:10:16 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.18283773958683014
03/25/2024 16:10:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:10:17 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 16:10:17 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/25/2024 16:10:59 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.03982062637805939
03/25/2024 16:10:59 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.15645386278629303
03/25/2024 16:10:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:10:59 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:10:59 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/25/2024 16:11:43 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.04809880629181862
03/25/2024 16:11:43 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.1709357649087906
03/25/2024 16:11:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:11:44 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 16:11:44 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/25/2024 16:12:26 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.04590629041194916
03/25/2024 16:12:26 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.1682794690132141
03/25/2024 16:12:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:12:26 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 16:12:26 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/25/2024 16:13:08 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.09191470593214035
03/25/2024 16:13:08 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.260053426027298
03/25/2024 16:13:08 - INFO - __main__ - 
######## Language: telugu ######## 

03/25/2024 16:13:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:13:08 - INFO - __main__ - Masked count: 118, ratio = 0.4609
03/25/2024 16:13:08 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/25/2024 16:13:53 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.03622919321060181
03/25/2024 16:13:53 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.15202169120311737
03/25/2024 16:13:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:13:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 16:13:53 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/25/2024 16:14:36 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.03611522167921066
03/25/2024 16:14:36 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.15289835631847382
03/25/2024 16:14:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:14:36 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 16:14:36 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/25/2024 16:15:18 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.03275683894753456
03/25/2024 16:15:18 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.14283785223960876
03/25/2024 16:15:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:15:18 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 16:15:18 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/25/2024 16:16:02 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.036564331501722336
03/25/2024 16:16:02 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.15707670152187347
03/25/2024 16:16:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:16:02 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 16:16:02 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/25/2024 16:16:45 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.03566436097025871
03/25/2024 16:16:45 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.14878980815410614
03/25/2024 16:16:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:16:45 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 16:16:45 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/25/2024 16:17:27 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.03437524661421776
03/25/2024 16:17:27 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.14712141454219818
03/25/2024 16:17:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:17:27 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 16:17:27 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/25/2024 16:18:10 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.05677003040909767
03/25/2024 16:18:10 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.18885765969753265
03/25/2024 16:18:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:18:10 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 16:18:10 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/25/2024 16:18:58 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.027072101831436157
03/25/2024 16:18:58 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.13218490779399872
03/25/2024 16:18:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:18:58 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 16:18:58 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/25/2024 16:19:40 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.03819100558757782
03/25/2024 16:19:40 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.156335711479187
03/25/2024 16:19:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:19:40 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 16:19:40 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/25/2024 16:20:25 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.03268546238541603
03/25/2024 16:20:25 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.14308886229991913
03/25/2024 16:20:25 - INFO - __main__ - 
######## Language: finnish ######## 

03/25/2024 16:20:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:20:25 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 16:20:25 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/25/2024 16:21:10 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.0471031554043293
03/25/2024 16:21:10 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.17752313613891602
03/25/2024 16:21:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:21:10 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 16:21:10 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/25/2024 16:21:54 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.04894151911139488
03/25/2024 16:21:54 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.17892986536026
03/25/2024 16:21:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:21:54 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 16:21:54 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/25/2024 16:22:36 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.11667553335428238
03/25/2024 16:22:36 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.26284167170524597
03/25/2024 16:22:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:22:36 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 16:22:36 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/25/2024 16:23:20 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.05912185087800026
03/25/2024 16:23:20 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.1963651180267334
03/25/2024 16:23:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:23:20 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 16:23:20 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/25/2024 16:24:04 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.05197712406516075
03/25/2024 16:24:04 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.18918991088867188
03/25/2024 16:24:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:24:04 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 16:24:04 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/25/2024 16:24:45 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.06847646087408066
03/25/2024 16:24:45 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.18860286474227905
03/25/2024 16:24:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:24:45 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 16:24:45 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/25/2024 16:25:29 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.07389932125806808
03/25/2024 16:25:29 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.19241486489772797
03/25/2024 16:25:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:25:29 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 16:25:29 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/25/2024 16:26:13 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.1116553544998169
03/25/2024 16:26:13 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.2567538022994995
03/25/2024 16:26:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:26:13 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 16:26:13 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/25/2024 16:26:55 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.05221074819564819
03/25/2024 16:26:55 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.17214573919773102
03/25/2024 16:26:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:26:56 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 16:26:56 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/25/2024 16:27:38 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.07613121718168259
03/25/2024 16:27:38 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.19744014739990234
03/25/2024 16:27:38 - INFO - __main__ - 
######## Language: swahili ######## 

03/25/2024 16:27:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:27:38 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 16:27:38 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/25/2024 16:28:22 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.06033102050423622
03/25/2024 16:28:22 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.20306694507598877
03/25/2024 16:28:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:28:22 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 16:28:22 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/25/2024 16:29:06 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.07656841725111008
03/25/2024 16:29:06 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.1994495838880539
03/25/2024 16:29:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:29:06 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 16:29:06 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/25/2024 16:29:48 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.05433690547943115
03/25/2024 16:29:48 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.1881726235151291
03/25/2024 16:29:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:29:48 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 16:29:48 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/25/2024 16:30:32 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.06819178909063339
03/25/2024 16:30:32 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.1832769513130188
03/25/2024 16:30:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:30:32 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 16:30:32 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/25/2024 16:31:16 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.05423546954989433
03/25/2024 16:31:16 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.1668630689382553
03/25/2024 16:31:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:31:16 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 16:31:16 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/25/2024 16:31:58 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.05282902345061302
03/25/2024 16:31:58 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.19130657613277435
03/25/2024 16:31:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:31:58 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 16:31:58 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/25/2024 16:32:41 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.053922440856695175
03/25/2024 16:32:41 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.18083298206329346
03/25/2024 16:32:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:32:41 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 16:32:41 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/25/2024 16:33:26 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.0577128566801548
03/25/2024 16:33:26 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.19791759550571442
03/25/2024 16:33:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:33:26 - INFO - __main__ - Masked count: 146, ratio = 0.5703
03/25/2024 16:33:26 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/25/2024 16:34:08 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.04679642617702484
03/25/2024 16:34:08 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.16122138500213623
03/25/2024 16:34:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:34:08 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 16:34:08 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/25/2024 16:34:51 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.05289389565587044
03/25/2024 16:34:51 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.1671791821718216
03/25/2024 16:34:51 - INFO - __main__ - 
######## Language: korean ######## 

03/25/2024 16:34:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:34:51 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 16:34:51 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/25/2024 16:35:35 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.044202983379364014
03/25/2024 16:35:35 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.16651202738285065
03/25/2024 16:35:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:35:35 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:35:35 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/25/2024 16:36:18 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.03222200274467468
03/25/2024 16:36:18 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.14526119828224182
03/25/2024 16:36:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:36:18 - INFO - __main__ - Masked count: 120, ratio = 0.4688
03/25/2024 16:36:18 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/25/2024 16:37:01 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.04862169921398163
03/25/2024 16:37:01 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.1733207106590271
03/25/2024 16:37:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:37:01 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 16:37:01 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/25/2024 16:37:45 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.0406302809715271
03/25/2024 16:37:45 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.16290156543254852
03/25/2024 16:37:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:37:45 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 16:37:45 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/25/2024 16:38:29 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.057553693652153015
03/25/2024 16:38:29 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.1973305344581604
03/25/2024 16:38:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:38:29 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 16:38:29 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/25/2024 16:39:11 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.04753980040550232
03/25/2024 16:39:11 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.1751665472984314
03/25/2024 16:39:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:39:11 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 16:39:11 - INFO - __main__ - ID text: korean-148115504649351135-0
03/25/2024 16:39:55 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.04201490059494972
03/25/2024 16:39:55 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.1695048213005066
03/25/2024 16:39:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:39:55 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 16:39:55 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/25/2024 16:40:40 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.043830033391714096
03/25/2024 16:40:40 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.16684091091156006
03/25/2024 16:40:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:40:40 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 16:40:40 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/25/2024 16:41:23 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.061076849699020386
03/25/2024 16:41:23 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.20709510147571564
03/25/2024 16:41:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:41:23 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:41:23 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/25/2024 16:42:06 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.113209068775177
03/25/2024 16:42:06 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.2956959307193756
03/25/2024 16:42:07 - INFO - __main__ - 
######## Language: indonesian ######## 

03/25/2024 16:42:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:42:07 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 16:42:07 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/25/2024 16:42:50 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.07428906857967377
03/25/2024 16:42:50 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.19606219232082367
03/25/2024 16:42:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:42:50 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 16:42:50 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/25/2024 16:43:35 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.13258065283298492
03/25/2024 16:43:35 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.28352054953575134
03/25/2024 16:43:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:43:35 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 16:43:35 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/25/2024 16:44:18 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.07087676227092743
03/25/2024 16:44:18 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.18845713138580322
03/25/2024 16:44:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:44:18 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 16:44:18 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/25/2024 16:45:00 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.047139186412096024
03/25/2024 16:45:00 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.16586144268512726
03/25/2024 16:45:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:45:01 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 16:45:01 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/25/2024 16:45:45 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.07270678877830505
03/25/2024 16:45:45 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.19397443532943726
03/25/2024 16:45:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:45:45 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 16:45:45 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/25/2024 16:46:29 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.06056763231754303
03/25/2024 16:46:29 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.17728497087955475
03/25/2024 16:46:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:46:29 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 16:46:29 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/25/2024 16:47:12 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.06261631846427917
03/25/2024 16:47:12 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.17508423328399658
03/25/2024 16:47:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:47:12 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:47:12 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/25/2024 16:47:56 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.05640976130962372
03/25/2024 16:47:56 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.193461611866951
03/25/2024 16:47:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:47:56 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 16:47:56 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/25/2024 16:48:40 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.06196913123130798
03/25/2024 16:48:40 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.18609721958637238
03/25/2024 16:48:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:48:40 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 16:48:40 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/25/2024 16:49:21 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.06951410323381424
03/25/2024 16:49:21 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.18580788373947144
03/25/2024 16:49:21 - INFO - __main__ - 
######## Language: english ######## 

03/25/2024 16:49:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:49:21 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 16:49:21 - INFO - __main__ - ID text: english-2852412434797041176-6
03/25/2024 16:50:01 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.11814139038324356
03/25/2024 16:50:01 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.26632657647132874
03/25/2024 16:50:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:50:01 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 16:50:01 - INFO - __main__ - ID text: english--1463732605740571606-0
03/25/2024 16:50:41 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.10741031169891357
03/25/2024 16:50:41 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.24191038310527802
03/25/2024 16:50:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:50:41 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 16:50:41 - INFO - __main__ - ID text: english-5441411281255470421-0
03/25/2024 16:51:21 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.11243397742509842
03/25/2024 16:51:21 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.2481539249420166
03/25/2024 16:51:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:51:21 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 16:51:21 - INFO - __main__ - ID text: english-7294054492486093447-1
03/25/2024 16:52:01 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.11514242738485336
03/25/2024 16:52:01 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.24979029595851898
03/25/2024 16:52:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:52:01 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 16:52:01 - INFO - __main__ - ID text: english-8820750127045023244-0
03/25/2024 16:52:41 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.07147995382547379
03/25/2024 16:52:41 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.2086012363433838
03/25/2024 16:52:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:52:41 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 16:52:41 - INFO - __main__ - ID text: english--506693546683012611-2
03/25/2024 16:53:21 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.08181469887495041
03/25/2024 16:53:21 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.23615600168704987
03/25/2024 16:53:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:53:21 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 16:53:21 - INFO - __main__ - ID text: english-745411798111651115-0
03/25/2024 16:54:02 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.11509162932634354
03/25/2024 16:54:02 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.24903152883052826
03/25/2024 16:54:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:54:02 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 16:54:02 - INFO - __main__ - ID text: english-7740772185887912651-0
03/25/2024 16:54:42 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.12306487560272217
03/25/2024 16:54:42 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.2573226988315582
03/25/2024 16:54:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:54:43 - INFO - __main__ - Masked count: 144, ratio = 0.5625
03/25/2024 16:54:43 - INFO - __main__ - ID text: english-383873188776267137-19
03/25/2024 16:55:23 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.10122259706258774
03/25/2024 16:55:23 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.23603029549121857
03/25/2024 16:55:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:55:23 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 16:55:23 - INFO - __main__ - ID text: english--8277537578703156284-0
03/25/2024 16:56:03 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.12892545759677887
03/25/2024 16:56:03 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.2704733610153198
03/25/2024 16:56:03 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/25/2024 16:56:03 - INFO - __main__ - 
######## Language: cola ######## 

03/25/2024 16:56:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:56:03 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 16:56:03 - INFO - __main__ - ID text: cola_228
03/25/2024 16:56:43 - INFO - __main__ - Mean variance for cola_228: 0.040241409093141556
03/25/2024 16:56:43 - INFO - __main__ - Mean std for for cola_228: 0.18164615333080292
03/25/2024 16:56:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:56:43 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 16:56:43 - INFO - __main__ - ID text: cola_51
03/25/2024 16:57:24 - INFO - __main__ - Mean variance for cola_51: 0.04405969753861427
03/25/2024 16:57:24 - INFO - __main__ - Mean std for for cola_51: 0.18958832323551178
03/25/2024 16:57:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:57:24 - INFO - __main__ - Masked count: 149, ratio = 0.5820
03/25/2024 16:57:24 - INFO - __main__ - ID text: cola_563
03/25/2024 16:58:04 - INFO - __main__ - Mean variance for cola_563: 0.12716610729694366
03/25/2024 16:58:04 - INFO - __main__ - Mean std for for cola_563: 0.32274937629699707
03/25/2024 16:58:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:58:04 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 16:58:04 - INFO - __main__ - ID text: cola_501
03/25/2024 16:58:45 - INFO - __main__ - Mean variance for cola_501: 0.048066239804029465
03/25/2024 16:58:45 - INFO - __main__ - Mean std for for cola_501: 0.19733703136444092
03/25/2024 16:58:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:58:45 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 16:58:45 - INFO - __main__ - ID text: cola_457
03/25/2024 16:59:26 - INFO - __main__ - Mean variance for cola_457: 0.04377737268805504
03/25/2024 16:59:26 - INFO - __main__ - Mean std for for cola_457: 0.19045430421829224
03/25/2024 16:59:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 16:59:26 - INFO - __main__ - Masked count: 148, ratio = 0.5781
03/25/2024 16:59:26 - INFO - __main__ - ID text: cola_285
03/25/2024 17:00:07 - INFO - __main__ - Mean variance for cola_285: 0.0474347323179245
03/25/2024 17:00:07 - INFO - __main__ - Mean std for for cola_285: 0.19742709398269653
03/25/2024 17:00:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:00:07 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:00:07 - INFO - __main__ - ID text: cola_209
03/25/2024 17:00:47 - INFO - __main__ - Mean variance for cola_209: 0.04947398230433464
03/25/2024 17:00:47 - INFO - __main__ - Mean std for for cola_209: 0.19986005127429962
03/25/2024 17:00:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:00:47 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:00:47 - INFO - __main__ - ID text: cola_178
03/25/2024 17:01:27 - INFO - __main__ - Mean variance for cola_178: 0.056606411933898926
03/25/2024 17:01:27 - INFO - __main__ - Mean std for for cola_178: 0.21546970307826996
03/25/2024 17:01:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:01:28 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 17:01:28 - INFO - __main__ - ID text: cola_864
03/25/2024 17:02:08 - INFO - __main__ - Mean variance for cola_864: 0.04111962020397186
03/25/2024 17:02:08 - INFO - __main__ - Mean std for for cola_864: 0.18539167940616608
03/25/2024 17:02:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:02:08 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 17:02:08 - INFO - __main__ - ID text: cola_65
03/25/2024 17:02:48 - INFO - __main__ - Mean variance for cola_65: 0.05130897834897041
03/25/2024 17:02:48 - INFO - __main__ - Mean std for for cola_65: 0.19824357330799103
03/25/2024 17:02:48 - INFO - __main__ - 
######## Language: mnli ######## 

03/25/2024 17:02:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:02:48 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:02:48 - INFO - __main__ - ID text: mnli_488
03/25/2024 17:03:29 - INFO - __main__ - Mean variance for mnli_488: 0.06804477423429489
03/25/2024 17:03:29 - INFO - __main__ - Mean std for for mnli_488: 0.21701806783676147
03/25/2024 17:03:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:03:29 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 17:03:29 - INFO - __main__ - ID text: mnli_1535
03/25/2024 17:04:10 - INFO - __main__ - Mean variance for mnli_1535: 0.07660413533449173
03/25/2024 17:04:10 - INFO - __main__ - Mean std for for mnli_1535: 0.23020000755786896
03/25/2024 17:04:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:04:10 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 17:04:10 - INFO - __main__ - ID text: mnli_3582
03/25/2024 17:04:51 - INFO - __main__ - Mean variance for mnli_3582: 0.06262798607349396
03/25/2024 17:04:51 - INFO - __main__ - Mean std for for mnli_3582: 0.21888069808483124
03/25/2024 17:04:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:04:51 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 17:04:51 - INFO - __main__ - ID text: mnli_3811
03/25/2024 17:05:32 - INFO - __main__ - Mean variance for mnli_3811: 0.05432659015059471
03/25/2024 17:05:32 - INFO - __main__ - Mean std for for mnli_3811: 0.19849254190921783
03/25/2024 17:05:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:05:32 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 17:05:32 - INFO - __main__ - ID text: mnli_8279
03/25/2024 17:06:13 - INFO - __main__ - Mean variance for mnli_8279: 0.04949270561337471
03/25/2024 17:06:13 - INFO - __main__ - Mean std for for mnli_8279: 0.1971989870071411
03/25/2024 17:06:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:06:13 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:06:13 - INFO - __main__ - ID text: mnli_434
03/25/2024 17:06:53 - INFO - __main__ - Mean variance for mnli_434: 0.07520517706871033
03/25/2024 17:06:53 - INFO - __main__ - Mean std for for mnli_434: 0.2133609503507614
03/25/2024 17:06:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:06:53 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 17:06:53 - INFO - __main__ - ID text: mnli_9195
03/25/2024 17:07:34 - INFO - __main__ - Mean variance for mnli_9195: 0.04517659544944763
03/25/2024 17:07:34 - INFO - __main__ - Mean std for for mnli_9195: 0.19410108029842377
03/25/2024 17:07:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:07:34 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 17:07:34 - INFO - __main__ - ID text: mnli_3257
03/25/2024 17:08:14 - INFO - __main__ - Mean variance for mnli_3257: 0.05762166902422905
03/25/2024 17:08:14 - INFO - __main__ - Mean std for for mnli_3257: 0.20427019894123077
03/25/2024 17:08:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:08:14 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 17:08:14 - INFO - __main__ - ID text: mnli_8928
03/25/2024 17:08:55 - INFO - __main__ - Mean variance for mnli_8928: 0.06654655933380127
03/25/2024 17:08:55 - INFO - __main__ - Mean std for for mnli_8928: 0.21188992261886597
03/25/2024 17:08:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:08:55 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 17:08:55 - INFO - __main__ - ID text: mnli_6873
03/25/2024 17:09:35 - INFO - __main__ - Mean variance for mnli_6873: 0.07061415165662766
03/25/2024 17:09:35 - INFO - __main__ - Mean std for for mnli_6873: 0.21398884057998657
03/25/2024 17:09:35 - INFO - __main__ - 
######## Language: mrpc ######## 

03/25/2024 17:09:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:09:35 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 17:09:35 - INFO - __main__ - ID text: mrpc_451
03/25/2024 17:10:16 - INFO - __main__ - Mean variance for mrpc_451: 0.06716915220022202
03/25/2024 17:10:16 - INFO - __main__ - Mean std for for mrpc_451: 0.21438288688659668
03/25/2024 17:10:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:10:16 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 17:10:16 - INFO - __main__ - ID text: mrpc_919
03/25/2024 17:10:56 - INFO - __main__ - Mean variance for mrpc_919: 0.07448572665452957
03/25/2024 17:10:56 - INFO - __main__ - Mean std for for mrpc_919: 0.22518111765384674
03/25/2024 17:10:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:10:56 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 17:10:56 - INFO - __main__ - ID text: mrpc_1206
03/25/2024 17:11:37 - INFO - __main__ - Mean variance for mrpc_1206: 0.05950282886624336
03/25/2024 17:11:37 - INFO - __main__ - Mean std for for mrpc_1206: 0.20364458858966827
03/25/2024 17:11:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:11:37 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:11:37 - INFO - __main__ - ID text: mrpc_569
03/25/2024 17:12:17 - INFO - __main__ - Mean variance for mrpc_569: 0.06099066138267517
03/25/2024 17:12:17 - INFO - __main__ - Mean std for for mrpc_569: 0.20667888224124908
03/25/2024 17:12:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:12:17 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 17:12:17 - INFO - __main__ - ID text: mrpc_1657
03/25/2024 17:12:58 - INFO - __main__ - Mean variance for mrpc_1657: 0.06845801323652267
03/25/2024 17:12:58 - INFO - __main__ - Mean std for for mrpc_1657: 0.20630238950252533
03/25/2024 17:12:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:12:58 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 17:12:58 - INFO - __main__ - ID text: mrpc_13
03/25/2024 17:13:38 - INFO - __main__ - Mean variance for mrpc_13: 0.05939074233174324
03/25/2024 17:13:38 - INFO - __main__ - Mean std for for mrpc_13: 0.20620618760585785
03/25/2024 17:13:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:13:38 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:13:38 - INFO - __main__ - ID text: mrpc_1554
03/25/2024 17:14:19 - INFO - __main__ - Mean variance for mrpc_1554: 0.06982915103435516
03/25/2024 17:14:19 - INFO - __main__ - Mean std for for mrpc_1554: 0.2100098580121994
03/25/2024 17:14:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:14:19 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:14:19 - INFO - __main__ - ID text: mrpc_1650
03/25/2024 17:14:59 - INFO - __main__ - Mean variance for mrpc_1650: 0.1082519069314003
03/25/2024 17:14:59 - INFO - __main__ - Mean std for for mrpc_1650: 0.2812865972518921
03/25/2024 17:14:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:14:59 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 17:14:59 - INFO - __main__ - ID text: mrpc_326
03/25/2024 17:15:40 - INFO - __main__ - Mean variance for mrpc_326: 0.05958699807524681
03/25/2024 17:15:40 - INFO - __main__ - Mean std for for mrpc_326: 0.203758105635643
03/25/2024 17:15:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:15:40 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 17:15:40 - INFO - __main__ - ID text: mrpc_1429
03/25/2024 17:16:20 - INFO - __main__ - Mean variance for mrpc_1429: 0.06782595068216324
03/25/2024 17:16:20 - INFO - __main__ - Mean std for for mrpc_1429: 0.21498113870620728
03/25/2024 17:16:20 - INFO - __main__ - 
######## Language: qnli ######## 

03/25/2024 17:16:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:16:20 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:16:20 - INFO - __main__ - ID text: qnli_3462
03/25/2024 17:17:01 - INFO - __main__ - Mean variance for qnli_3462: 0.0742429867386818
03/25/2024 17:17:01 - INFO - __main__ - Mean std for for qnli_3462: 0.2241528481245041
03/25/2024 17:17:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:17:01 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:17:01 - INFO - __main__ - ID text: qnli_2787
03/25/2024 17:17:41 - INFO - __main__ - Mean variance for qnli_2787: 0.08749251812696457
03/25/2024 17:17:41 - INFO - __main__ - Mean std for for qnli_2787: 0.23532313108444214
03/25/2024 17:17:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:17:41 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 17:17:41 - INFO - __main__ - ID text: qnli_2276
03/25/2024 17:18:21 - INFO - __main__ - Mean variance for qnli_2276: 0.06217615678906441
03/25/2024 17:18:21 - INFO - __main__ - Mean std for for qnli_2276: 0.20060525834560394
03/25/2024 17:18:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:18:22 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 17:18:22 - INFO - __main__ - ID text: qnli_1273
03/25/2024 17:19:02 - INFO - __main__ - Mean variance for qnli_1273: 0.07048457115888596
03/25/2024 17:19:02 - INFO - __main__ - Mean std for for qnli_1273: 0.2153807133436203
03/25/2024 17:19:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:19:02 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:19:02 - INFO - __main__ - ID text: qnli_1763
03/25/2024 17:19:42 - INFO - __main__ - Mean variance for qnli_1763: 0.0792093575000763
03/25/2024 17:19:42 - INFO - __main__ - Mean std for for qnli_1763: 0.23343689739704132
03/25/2024 17:19:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:19:42 - INFO - __main__ - Masked count: 150, ratio = 0.5859
03/25/2024 17:19:42 - INFO - __main__ - ID text: qnli_2757
03/25/2024 17:20:23 - INFO - __main__ - Mean variance for qnli_2757: 0.06762579828500748
03/25/2024 17:20:23 - INFO - __main__ - Mean std for for qnli_2757: 0.20867250859737396
03/25/2024 17:20:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:20:23 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:20:23 - INFO - __main__ - ID text: qnli_837
03/25/2024 17:21:03 - INFO - __main__ - Mean variance for qnli_837: 0.06455133110284805
03/25/2024 17:21:03 - INFO - __main__ - Mean std for for qnli_837: 0.21390116214752197
03/25/2024 17:21:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:21:03 - INFO - __main__ - Masked count: 121, ratio = 0.4727
03/25/2024 17:21:03 - INFO - __main__ - ID text: qnli_759
03/25/2024 17:21:44 - INFO - __main__ - Mean variance for qnli_759: 0.10612689703702927
03/25/2024 17:21:44 - INFO - __main__ - Mean std for for qnli_759: 0.23999078571796417
03/25/2024 17:21:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:21:45 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 17:21:45 - INFO - __main__ - ID text: qnli_3112
03/25/2024 17:22:25 - INFO - __main__ - Mean variance for qnli_3112: 0.07372573018074036
03/25/2024 17:22:25 - INFO - __main__ - Mean std for for qnli_3112: 0.227682426571846
03/25/2024 17:22:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:22:25 - INFO - __main__ - Masked count: 120, ratio = 0.4688
03/25/2024 17:22:25 - INFO - __main__ - ID text: qnli_792
03/25/2024 17:23:06 - INFO - __main__ - Mean variance for qnli_792: 0.07171911746263504
03/25/2024 17:23:06 - INFO - __main__ - Mean std for for qnli_792: 0.2158709317445755
03/25/2024 17:23:06 - INFO - __main__ - 
######## Language: qqp ######## 

03/25/2024 17:23:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:23:06 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:23:06 - INFO - __main__ - ID text: qqp_188208
03/25/2024 17:23:46 - INFO - __main__ - Mean variance for qqp_188208: 0.058100804686546326
03/25/2024 17:23:46 - INFO - __main__ - Mean std for for qqp_188208: 0.21101762354373932
03/25/2024 17:23:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:23:46 - INFO - __main__ - Masked count: 144, ratio = 0.5625
03/25/2024 17:23:46 - INFO - __main__ - ID text: qqp_180331
03/25/2024 17:24:27 - INFO - __main__ - Mean variance for qqp_180331: 0.054836612194776535
03/25/2024 17:24:27 - INFO - __main__ - Mean std for for qqp_180331: 0.2020704299211502
03/25/2024 17:24:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:24:27 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 17:24:27 - INFO - __main__ - ID text: qqp_316526
03/25/2024 17:25:07 - INFO - __main__ - Mean variance for qqp_316526: 0.06400053948163986
03/25/2024 17:25:07 - INFO - __main__ - Mean std for for qqp_316526: 0.21104125678539276
03/25/2024 17:25:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:25:07 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 17:25:07 - INFO - __main__ - ID text: qqp_138685
03/25/2024 17:25:48 - INFO - __main__ - Mean variance for qqp_138685: 0.08177395910024643
03/25/2024 17:25:48 - INFO - __main__ - Mean std for for qqp_138685: 0.22402696311473846
03/25/2024 17:25:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:25:48 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 17:25:48 - INFO - __main__ - ID text: qqp_22780
03/25/2024 17:26:28 - INFO - __main__ - Mean variance for qqp_22780: 0.05635066702961922
03/25/2024 17:26:28 - INFO - __main__ - Mean std for for qqp_22780: 0.2117745727300644
03/25/2024 17:26:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:26:28 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 17:26:28 - INFO - __main__ - ID text: qqp_382589
03/25/2024 17:27:09 - INFO - __main__ - Mean variance for qqp_382589: 0.05037697032094002
03/25/2024 17:27:09 - INFO - __main__ - Mean std for for qqp_382589: 0.1937846541404724
03/25/2024 17:27:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:27:09 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 17:27:09 - INFO - __main__ - ID text: qqp_240870
03/25/2024 17:27:49 - INFO - __main__ - Mean variance for qqp_240870: 0.05005648359656334
03/25/2024 17:27:49 - INFO - __main__ - Mean std for for qqp_240870: 0.19620752334594727
03/25/2024 17:27:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:27:49 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 17:27:49 - INFO - __main__ - ID text: qqp_281137
03/25/2024 17:28:30 - INFO - __main__ - Mean variance for qqp_281137: 0.06116284057497978
03/25/2024 17:28:30 - INFO - __main__ - Mean std for for qqp_281137: 0.20971298217773438
03/25/2024 17:28:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:28:30 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 17:28:30 - INFO - __main__ - ID text: qqp_65444
03/25/2024 17:29:10 - INFO - __main__ - Mean variance for qqp_65444: 0.047849636524915695
03/25/2024 17:29:10 - INFO - __main__ - Mean std for for qqp_65444: 0.18906724452972412
03/25/2024 17:29:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:29:10 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:29:10 - INFO - __main__ - ID text: qqp_198461
03/25/2024 17:29:51 - INFO - __main__ - Mean variance for qqp_198461: 0.05704129859805107
03/25/2024 17:29:51 - INFO - __main__ - Mean std for for qqp_198461: 0.19970321655273438
03/25/2024 17:29:51 - INFO - __main__ - 
######## Language: rte ######## 

03/25/2024 17:29:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:29:51 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 17:29:51 - INFO - __main__ - ID text: rte_322
03/25/2024 17:30:31 - INFO - __main__ - Mean variance for rte_322: 0.057208988815546036
03/25/2024 17:30:31 - INFO - __main__ - Mean std for for rte_322: 0.2010972946882248
03/25/2024 17:30:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:30:31 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:30:31 - INFO - __main__ - ID text: rte_2261
03/25/2024 17:31:12 - INFO - __main__ - Mean variance for rte_2261: 0.06844466924667358
03/25/2024 17:31:12 - INFO - __main__ - Mean std for for rte_2261: 0.2278105616569519
03/25/2024 17:31:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:31:12 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 17:31:12 - INFO - __main__ - ID text: rte_1200
03/25/2024 17:31:52 - INFO - __main__ - Mean variance for rte_1200: 0.06383485347032547
03/25/2024 17:31:52 - INFO - __main__ - Mean std for for rte_1200: 0.19526751339435577
03/25/2024 17:31:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:31:52 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:31:52 - INFO - __main__ - ID text: rte_2574
03/25/2024 17:32:33 - INFO - __main__ - Mean variance for rte_2574: 0.11057280749082565
03/25/2024 17:32:33 - INFO - __main__ - Mean std for for rte_2574: 0.2441185563802719
03/25/2024 17:32:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:32:33 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 17:32:33 - INFO - __main__ - ID text: rte_2533
03/25/2024 17:33:13 - INFO - __main__ - Mean variance for rte_2533: 0.11641814559698105
03/25/2024 17:33:13 - INFO - __main__ - Mean std for for rte_2533: 0.25114569067955017
03/25/2024 17:33:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:33:13 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 17:33:13 - INFO - __main__ - ID text: rte_1481
03/25/2024 17:33:53 - INFO - __main__ - Mean variance for rte_1481: 0.07206680625677109
03/25/2024 17:33:53 - INFO - __main__ - Mean std for for rte_1481: 0.2166808396577835
03/25/2024 17:33:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:33:53 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:33:53 - INFO - __main__ - ID text: rte_2364
03/25/2024 17:34:34 - INFO - __main__ - Mean variance for rte_2364: 0.08737164735794067
03/25/2024 17:34:34 - INFO - __main__ - Mean std for for rte_2364: 0.23424233496189117
03/25/2024 17:34:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:34:34 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:34:34 - INFO - __main__ - ID text: rte_787
03/25/2024 17:35:14 - INFO - __main__ - Mean variance for rte_787: 0.07071570307016373
03/25/2024 17:35:14 - INFO - __main__ - Mean std for for rte_787: 0.2157384306192398
03/25/2024 17:35:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:35:14 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 17:35:14 - INFO - __main__ - ID text: rte_2885
03/25/2024 17:35:55 - INFO - __main__ - Mean variance for rte_2885: 0.10969125479459763
03/25/2024 17:35:55 - INFO - __main__ - Mean std for for rte_2885: 0.2458815574645996
03/25/2024 17:35:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:35:55 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:35:55 - INFO - __main__ - ID text: rte_284
03/25/2024 17:36:35 - INFO - __main__ - Mean variance for rte_284: 0.06448782235383987
03/25/2024 17:36:35 - INFO - __main__ - Mean std for for rte_284: 0.2113204002380371
03/25/2024 17:36:35 - INFO - __main__ - 
######## Language: sst2 ######## 

03/25/2024 17:36:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:36:35 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:36:35 - INFO - __main__ - ID text: sst2_93
03/25/2024 17:37:16 - INFO - __main__ - Mean variance for sst2_93: 0.052452847361564636
03/25/2024 17:37:16 - INFO - __main__ - Mean std for for sst2_93: 0.1951361894607544
03/25/2024 17:37:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:37:16 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 17:37:16 - INFO - __main__ - ID text: sst2_1354
03/25/2024 17:37:56 - INFO - __main__ - Mean variance for sst2_1354: 0.054890673607587814
03/25/2024 17:37:56 - INFO - __main__ - Mean std for for sst2_1354: 0.2118234634399414
03/25/2024 17:37:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:37:56 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 17:37:56 - INFO - __main__ - ID text: sst2_466
03/25/2024 17:38:37 - INFO - __main__ - Mean variance for sst2_466: 0.05271563306450844
03/25/2024 17:38:37 - INFO - __main__ - Mean std for for sst2_466: 0.20744983851909637
03/25/2024 17:38:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:38:37 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 17:38:37 - INFO - __main__ - ID text: sst2_1583
03/25/2024 17:39:17 - INFO - __main__ - Mean variance for sst2_1583: 0.06106848642230034
03/25/2024 17:39:17 - INFO - __main__ - Mean std for for sst2_1583: 0.20830203592777252
03/25/2024 17:39:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:39:17 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:39:17 - INFO - __main__ - ID text: sst2_592
03/25/2024 17:39:58 - INFO - __main__ - Mean variance for sst2_592: 0.06516434997320175
03/25/2024 17:39:58 - INFO - __main__ - Mean std for for sst2_592: 0.21289114654064178
03/25/2024 17:39:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:39:58 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 17:39:58 - INFO - __main__ - ID text: sst2_163
03/25/2024 17:40:38 - INFO - __main__ - Mean variance for sst2_163: 0.06473430246114731
03/25/2024 17:40:38 - INFO - __main__ - Mean std for for sst2_163: 0.23156845569610596
03/25/2024 17:40:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:40:38 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 17:40:38 - INFO - __main__ - ID text: sst2_1751
03/25/2024 17:41:18 - INFO - __main__ - Mean variance for sst2_1751: 0.04973362013697624
03/25/2024 17:41:18 - INFO - __main__ - Mean std for for sst2_1751: 0.20308154821395874
03/25/2024 17:41:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:41:18 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 17:41:18 - INFO - __main__ - ID text: sst2_476
03/25/2024 17:42:02 - INFO - __main__ - Mean variance for sst2_476: 0.051911577582359314
03/25/2024 17:42:02 - INFO - __main__ - Mean std for for sst2_476: 0.1916022151708603
03/25/2024 17:42:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:42:02 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 17:42:02 - INFO - __main__ - ID text: sst2_1774
03/25/2024 17:42:51 - INFO - __main__ - Mean variance for sst2_1774: 0.05126271769404411
03/25/2024 17:42:51 - INFO - __main__ - Mean std for for sst2_1774: 0.1935340166091919
03/25/2024 17:42:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:42:51 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 17:42:51 - INFO - __main__ - ID text: sst2_206
03/25/2024 17:43:39 - INFO - __main__ - Mean variance for sst2_206: 0.05273059010505676
03/25/2024 17:43:39 - INFO - __main__ - Mean std for for sst2_206: 0.20336520671844482
03/25/2024 17:43:39 - INFO - __main__ - 
######## Language: stsb ######## 

03/25/2024 17:43:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:43:39 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 17:43:39 - INFO - __main__ - ID text: stsb_778
03/25/2024 17:44:27 - INFO - __main__ - Mean variance for stsb_778: 0.06080792471766472
03/25/2024 17:44:27 - INFO - __main__ - Mean std for for stsb_778: 0.2128688097000122
03/25/2024 17:44:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:44:27 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 17:44:27 - INFO - __main__ - ID text: stsb_569
03/25/2024 17:45:14 - INFO - __main__ - Mean variance for stsb_569: 0.061273206025362015
03/25/2024 17:45:14 - INFO - __main__ - Mean std for for stsb_569: 0.21862547099590302
03/25/2024 17:45:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:45:15 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 17:45:15 - INFO - __main__ - ID text: stsb_928
03/25/2024 17:46:01 - INFO - __main__ - Mean variance for stsb_928: 0.06728770583868027
03/25/2024 17:46:01 - INFO - __main__ - Mean std for for stsb_928: 0.20668427646160126
03/25/2024 17:46:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:46:01 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 17:46:01 - INFO - __main__ - ID text: stsb_1301
03/25/2024 17:46:50 - INFO - __main__ - Mean variance for stsb_1301: 0.06479144841432571
03/25/2024 17:46:50 - INFO - __main__ - Mean std for for stsb_1301: 0.21843938529491425
03/25/2024 17:46:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:46:50 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 17:46:50 - INFO - __main__ - ID text: stsb_747
03/25/2024 17:47:38 - INFO - __main__ - Mean variance for stsb_747: 0.06256159394979477
03/25/2024 17:47:38 - INFO - __main__ - Mean std for for stsb_747: 0.21198879182338715
03/25/2024 17:47:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:47:38 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 17:47:38 - INFO - __main__ - ID text: stsb_333
03/25/2024 17:48:26 - INFO - __main__ - Mean variance for stsb_333: 0.060595858842134476
03/25/2024 17:48:26 - INFO - __main__ - Mean std for for stsb_333: 0.20969106256961823
03/25/2024 17:48:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:48:26 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 17:48:26 - INFO - __main__ - ID text: stsb_758
03/25/2024 17:49:14 - INFO - __main__ - Mean variance for stsb_758: 0.07728934288024902
03/25/2024 17:49:14 - INFO - __main__ - Mean std for for stsb_758: 0.2308737188577652
03/25/2024 17:49:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:49:14 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 17:49:14 - INFO - __main__ - ID text: stsb_727
03/25/2024 17:50:01 - INFO - __main__ - Mean variance for stsb_727: 0.06643971800804138
03/25/2024 17:50:01 - INFO - __main__ - Mean std for for stsb_727: 0.22630254924297333
03/25/2024 17:50:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:50:01 - INFO - __main__ - Masked count: 148, ratio = 0.5781
03/25/2024 17:50:01 - INFO - __main__ - ID text: stsb_429
03/25/2024 17:50:49 - INFO - __main__ - Mean variance for stsb_429: 0.05180712416768074
03/25/2024 17:50:49 - INFO - __main__ - Mean std for for stsb_429: 0.19951142370700836
03/25/2024 17:50:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:50:49 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 17:50:49 - INFO - __main__ - ID text: stsb_1372
03/25/2024 17:51:36 - INFO - __main__ - Mean variance for stsb_1372: 0.05473684147000313
03/25/2024 17:51:36 - INFO - __main__ - Mean std for for stsb_1372: 0.20341326296329498
03/25/2024 17:51:36 - INFO - __main__ - 
######## Language: wnli ######## 

03/25/2024 17:51:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:51:36 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 17:51:36 - INFO - __main__ - ID text: wnli_68
03/25/2024 17:52:23 - INFO - __main__ - Mean variance for wnli_68: 0.07560186833143234
03/25/2024 17:52:23 - INFO - __main__ - Mean std for for wnli_68: 0.2257857769727707
03/25/2024 17:52:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:52:23 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 17:52:23 - INFO - __main__ - ID text: wnli_18
03/25/2024 17:53:14 - INFO - __main__ - Mean variance for wnli_18: 0.07495755702257156
03/25/2024 17:53:14 - INFO - __main__ - Mean std for for wnli_18: 0.21542610228061676
03/25/2024 17:53:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:53:15 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 17:53:15 - INFO - __main__ - ID text: wnli_43
03/25/2024 17:54:02 - INFO - __main__ - Mean variance for wnli_43: 0.07551196962594986
03/25/2024 17:54:02 - INFO - __main__ - Mean std for for wnli_43: 0.22465409338474274
03/25/2024 17:54:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:54:02 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 17:54:02 - INFO - __main__ - ID text: wnli_136
03/25/2024 17:54:50 - INFO - __main__ - Mean variance for wnli_136: 0.0780470073223114
03/25/2024 17:54:50 - INFO - __main__ - Mean std for for wnli_136: 0.2247256636619568
03/25/2024 17:54:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:54:50 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:54:50 - INFO - __main__ - ID text: wnli_62
03/25/2024 17:55:37 - INFO - __main__ - Mean variance for wnli_62: 0.06883443892002106
03/25/2024 17:55:37 - INFO - __main__ - Mean std for for wnli_62: 0.22096383571624756
03/25/2024 17:55:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:55:37 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 17:55:37 - INFO - __main__ - ID text: wnli_41
03/25/2024 17:56:24 - INFO - __main__ - Mean variance for wnli_41: 0.07154178619384766
03/25/2024 17:56:24 - INFO - __main__ - Mean std for for wnli_41: 0.21686850488185883
03/25/2024 17:56:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:56:24 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 17:56:24 - INFO - __main__ - ID text: wnli_118
03/25/2024 17:57:11 - INFO - __main__ - Mean variance for wnli_118: 0.054883550852537155
03/25/2024 17:57:11 - INFO - __main__ - Mean std for for wnli_118: 0.19783298671245575
03/25/2024 17:57:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:57:11 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 17:57:11 - INFO - __main__ - ID text: wnli_97
03/25/2024 17:57:59 - INFO - __main__ - Mean variance for wnli_97: 0.0752965435385704
03/25/2024 17:57:59 - INFO - __main__ - Mean std for for wnli_97: 0.21323774755001068
03/25/2024 17:57:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:57:59 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 17:57:59 - INFO - __main__ - ID text: wnli_69
03/25/2024 17:58:46 - INFO - __main__ - Mean variance for wnli_69: 0.05427345260977745
03/25/2024 17:58:46 - INFO - __main__ - Mean std for for wnli_69: 0.19556574523448944
03/25/2024 17:58:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 17:58:46 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 17:58:46 - INFO - __main__ - ID text: wnli_142
03/25/2024 17:59:34 - INFO - __main__ - Mean variance for wnli_142: 0.06648316234350204
03/25/2024 17:59:34 - INFO - __main__ - Mean std for for wnli_142: 0.2060762494802475
03/25/2024 17:59:34 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.09148601442575455, 'amh_1': 0.09604841470718384, 'amh_2': 0.09750201553106308, 'amh_3': 0.11348538845777512, 'amh_4': 0.11158373206853867, 'amh_5': 0.08346069604158401, 'amh_6': 0.10060443729162216, 'amh_7': 0.10089844465255737, 'amh_8': 0.06514768302440643, 'amh_9': 0.11495539546012878}, 'conll_2003_en': {'conll_2003_en_0': 0.1486692875623703, 'conll_2003_en_1': 0.03392266854643822, 'conll_2003_en_2': 0.04824279248714447, 'conll_2003_en_3': 0.051916707307100296, 'conll_2003_en_4': 0.04546302184462547, 'conll_2003_en_5': 0.13307563960552216, 'conll_2003_en_6': 0.08805666118860245, 'conll_2003_en_7': 0.09760769456624985, 'conll_2003_en_8': 0.12441184371709824, 'conll_2003_en_9': 0.04368382319808006}, 'hau': {'hau_0': 0.041908275336027145, 'hau_1': 0.04831526055932045, 'hau_2': 0.09338220208883286, 'hau_3': 0.050323519855737686, 'hau_4': 0.044857244938611984, 'hau_5': 0.04267621412873268, 'hau_6': 0.050156548619270325, 'hau_7': 0.041951101273298264, 'hau_8': 0.048487793654203415, 'hau_9': 0.04815952852368355}, 'ibo': {'ibo_0': 0.0447203703224659, 'ibo_1': 0.04480667784810066, 'ibo_2': 0.05065445601940155, 'ibo_3': 0.03797761723399162, 'ibo_4': 0.049858611077070236, 'ibo_5': 0.04164643585681915, 'ibo_6': 0.04322552680969238, 'ibo_7': 0.04636000469326973, 'ibo_8': 0.05341922864317894, 'ibo_9': 0.047039974480867386}, 'kin': {'kin_0': 0.05627754330635071, 'kin_1': 0.04689594730734825, 'kin_2': 0.047053080052137375, 'kin_3': 0.04584595188498497, 'kin_4': 0.044229015707969666, 'kin_5': 0.03859858959913254, 'kin_6': 0.04773275554180145, 'kin_7': 0.05301538482308388, 'kin_8': 0.04881634935736656, 'kin_9': 0.053674329072237015}, 'lug': {'lug_0': 0.04665384069085121, 'lug_1': 0.04654686525464058, 'lug_2': 0.05996868014335632, 'lug_3': 0.04874882102012634, 'lug_4': 0.04968187212944031, 'lug_5': 0.05208874121308327, 'lug_6': 0.0482395738363266, 'lug_7': 0.04331256076693535, 'lug_8': 0.05141055956482887, 'lug_9': 0.04750581458210945}, 'luo': {'luo_0': 0.04431002959609032, 'luo_1': 0.050718873739242554, 'luo_2': 0.052629876881837845, 'luo_3': 0.050578732043504715, 'luo_4': 0.04703284427523613, 'luo_5': 0.04781876504421234, 'luo_6': 0.053192514926195145, 'luo_7': 0.05227310582995415, 'luo_8': 0.044474512338638306, 'luo_9': 0.04301661625504494}, 'pcm': {'pcm_0': 0.03903795778751373, 'pcm_1': 0.05048178508877754, 'pcm_2': 0.04310397431254387, 'pcm_3': 0.05079035833477974, 'pcm_4': 0.057339731603860855, 'pcm_5': 0.04453006014227867, 'pcm_6': 0.04780595004558563, 'pcm_7': 0.05574795603752136, 'pcm_8': 0.05047856643795967, 'pcm_9': 0.04650059714913368}, 'swa': {'swa_0': 0.039737213402986526, 'swa_1': 0.0480228029191494, 'swa_2': 0.04850126430392265, 'swa_3': 0.048018842935562134, 'swa_4': 0.04505951702594757, 'swa_5': 0.037353187799453735, 'swa_6': 0.04544399678707123, 'swa_7': 0.0441899299621582, 'swa_8': 0.04531316086649895, 'swa_9': 0.03787750378251076}, 'wol': {'wol_0': 0.04508360102772713, 'wol_1': 0.050539348274469376, 'wol_2': 0.04492494463920593, 'wol_3': 0.061300504952669144, 'wol_4': 0.04394678398966789, 'wol_5': 0.04192502796649933, 'wol_6': 0.11790379881858826, 'wol_7': 0.050082359462976456, 'wol_8': 0.04978664591908455, 'wol_9': 0.055493492633104324}, 'yor': {'yor_0': 0.12533344328403473, 'yor_1': 0.09924692660570145, 'yor_2': 0.045153599232435226, 'yor_3': 0.044247325509786606, 'yor_4': 0.11286070197820663, 'yor_5': 0.08303192257881165, 'yor_6': 0.040922582149505615, 'yor_7': 0.11360815912485123, 'yor_8': 0.04865727946162224, 'yor_9': 0.1272801160812378}, 'zh': {'zh_0': 0.07941823452711105, 'zh_1': 0.06667303293943405, 'zh_2': 0.10589905828237534, 'zh_3': 0.1449359953403473, 'zh_4': 0.08526179939508438, 'zh_5': 0.11477289348840714, 'zh_6': 0.05250837281346321, 'zh_7': 0.1220184937119484, 'zh_8': 0.11267060041427612, 'zh_9': 0.08065815269947052}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.05541422963142395, 'arabic--3340323169760881569-0': 0.04558327794075012, 'arabic-4544770624843559444-1': 0.045615214854478836, 'arabic-891952409566422966-0': 0.04129597172141075, 'arabic-3659291834714572527-0': 0.07978824526071548, 'arabic-9215226117011890166-0': 0.04589162394404411, 'arabic-6300896128538259469-0': 0.04185357689857483, 'arabic-2382507508588518905-0': 0.03942414000630379, 'arabic-1871632801094859741-1': 0.03888090327382088, 'arabic--7365809756232083807-0': 0.042395588010549545}, 'russian': {'russian-3457655197371763238-61': 0.0478774756193161, 'russian--1914807805318993335-49': 0.04636014625430107, 'russian--3307989180606173904-1': 0.04098736122250557, 'russian--2219512001175315660-0': 0.03466499224305153, 'russian--7076080992904718941-0': 0.047783974558115005, 'russian--6565862953558739013-1': 0.04292109236121178, 'russian--5098374684590548031-42': 0.047597914934158325, 'russian-3573734219967447693-1': 0.043692246079444885, 'russian--4521001374120505750-6': 0.05213293805718422, 'russian--1308382244018658424-9': 0.04261346161365509}, 'bengali': {'bengali--1199493965132146131-3': 0.044884201139211655, 'bengali-1807801556888134437-2': 0.05254269763827324, 'bengali-2113189855114052041-2': 0.03706015646457672, 'bengali--2527914488250041207-0': 0.06309368461370468, 'bengali--8260793280894408063-14': 0.043621208518743515, 'bengali-8313009204852557186-4': 0.054771844297647476, 'bengali--415964033364840061-0': 0.03982062637805939, 'bengali--4696865548928858824-5': 0.04809880629181862, 'bengali-6505224142472931712-1': 0.04590629041194916, 'bengali-599666913917674019-13': 0.09191470593214035}, 'telugu': {'telugu--3977923017846260053-0': 0.03622919321060181, 'telugu-2254198842560317781-0': 0.03611522167921066, 'telugu-5435080895440121384-0': 0.03275683894753456, 'telugu--1182505954974481191-2': 0.036564331501722336, 'telugu-119276511844068401-0': 0.03566436097025871, 'telugu--4111208545071789922-0': 0.03437524661421776, 'telugu--5922002196428211484-132': 0.05677003040909767, 'telugu--1817004721681155192-3': 0.027072101831436157, 'telugu-1602214480303968359-1': 0.03819100558757782, 'telugu--6495674712575945374-0': 0.03268546238541603}, 'finnish': {'finnish-6987763079741579998-0': 0.0471031554043293, 'finnish--8516625414052383903-0': 0.04894151911139488, 'finnish-4168898766124519517-0': 0.11667553335428238, 'finnish-783166898848672321-4': 0.05912185087800026, 'finnish-2208556840820233322-0': 0.05197712406516075, 'finnish--1981034637152391615-58': 0.06847646087408066, 'finnish-8689148941295949475-9': 0.07389932125806808, 'finnish-6900867945323517614-2': 0.1116553544998169, 'finnish-8023130170017405987-1': 0.05221074819564819, 'finnish-5001457972111781248-0': 0.07613121718168259}, 'swahili': {'swahili-7146838206539641546-10': 0.06033102050423622, 'swahili-7655634199707176439-0': 0.07656841725111008, 'swahili--4427180714267750534-1': 0.05433690547943115, 'swahili-4141779435061573138-0': 0.06819178909063339, 'swahili--5424518593960879661-0': 0.05423546954989433, 'swahili-4281845253405461584-0': 0.05282902345061302, 'swahili-4899164839984299762-2': 0.053922440856695175, 'swahili-1288750786498500530-0': 0.0577128566801548, 'swahili--2671134792844015228-3': 0.04679642617702484, 'swahili-4873225622490039485-2': 0.05289389565587044}, 'korean': {'korean--2869472392602314906-0': 0.044202983379364014, 'korean-4375199563921600155-0': 0.03222200274467468, 'korean--1715118423211755607-13': 0.04862169921398163, 'korean--8028977936696142934-9': 0.0406302809715271, 'korean-2807245034690443837-5': 0.057553693652153015, 'korean-3862451817164408576-0': 0.04753980040550232, 'korean-148115504649351135-0': 0.04201490059494972, 'korean--2885837157239647036-2': 0.043830033391714096, 'korean--1743220297777040002-22': 0.061076849699020386, 'korean-3268522368206106332-0': 0.113209068775177}, 'indonesian': {'indonesian-9141868818310916091-0': 0.07428906857967377, 'indonesian-4609394337632433932-1': 0.13258065283298492, 'indonesian-2763468883290577923-0': 0.07087676227092743, 'indonesian-5633590583948933406-0': 0.047139186412096024, 'indonesian--5961409780035435015-0': 0.07270678877830505, 'indonesian-6274547934693326697-0': 0.06056763231754303, 'indonesian--2516321763567853082-0': 0.06261631846427917, 'indonesian-2048796427556239759-4': 0.05640976130962372, 'indonesian-6246592469157278547-2': 0.06196913123130798, 'indonesian--3724318458930736973-1': 0.06951410323381424}, 'english': {'english-2852412434797041176-6': 0.11814139038324356, 'english--1463732605740571606-0': 0.10741031169891357, 'english-5441411281255470421-0': 0.11243397742509842, 'english-7294054492486093447-1': 0.11514242738485336, 'english-8820750127045023244-0': 0.07147995382547379, 'english--506693546683012611-2': 0.08181469887495041, 'english-745411798111651115-0': 0.11509162932634354, 'english-7740772185887912651-0': 0.12306487560272217, 'english-383873188776267137-19': 0.10122259706258774, 'english--8277537578703156284-0': 0.12892545759677887}}, 'glue': {'cola': {'cola_228': 0.040241409093141556, 'cola_51': 0.04405969753861427, 'cola_563': 0.12716610729694366, 'cola_501': 0.048066239804029465, 'cola_457': 0.04377737268805504, 'cola_285': 0.0474347323179245, 'cola_209': 0.04947398230433464, 'cola_178': 0.056606411933898926, 'cola_864': 0.04111962020397186, 'cola_65': 0.05130897834897041}, 'mnli': {'mnli_488': 0.06804477423429489, 'mnli_1535': 0.07660413533449173, 'mnli_3582': 0.06262798607349396, 'mnli_3811': 0.05432659015059471, 'mnli_8279': 0.04949270561337471, 'mnli_434': 0.07520517706871033, 'mnli_9195': 0.04517659544944763, 'mnli_3257': 0.05762166902422905, 'mnli_8928': 0.06654655933380127, 'mnli_6873': 0.07061415165662766}, 'mrpc': {'mrpc_451': 0.06716915220022202, 'mrpc_919': 0.07448572665452957, 'mrpc_1206': 0.05950282886624336, 'mrpc_569': 0.06099066138267517, 'mrpc_1657': 0.06845801323652267, 'mrpc_13': 0.05939074233174324, 'mrpc_1554': 0.06982915103435516, 'mrpc_1650': 0.1082519069314003, 'mrpc_326': 0.05958699807524681, 'mrpc_1429': 0.06782595068216324}, 'qnli': {'qnli_3462': 0.0742429867386818, 'qnli_2787': 0.08749251812696457, 'qnli_2276': 0.06217615678906441, 'qnli_1273': 0.07048457115888596, 'qnli_1763': 0.0792093575000763, 'qnli_2757': 0.06762579828500748, 'qnli_837': 0.06455133110284805, 'qnli_759': 0.10612689703702927, 'qnli_3112': 0.07372573018074036, 'qnli_792': 0.07171911746263504}, 'qqp': {'qqp_188208': 0.058100804686546326, 'qqp_180331': 0.054836612194776535, 'qqp_316526': 0.06400053948163986, 'qqp_138685': 0.08177395910024643, 'qqp_22780': 0.05635066702961922, 'qqp_382589': 0.05037697032094002, 'qqp_240870': 0.05005648359656334, 'qqp_281137': 0.06116284057497978, 'qqp_65444': 0.047849636524915695, 'qqp_198461': 0.05704129859805107}, 'rte': {'rte_322': 0.057208988815546036, 'rte_2261': 0.06844466924667358, 'rte_1200': 0.06383485347032547, 'rte_2574': 0.11057280749082565, 'rte_2533': 0.11641814559698105, 'rte_1481': 0.07206680625677109, 'rte_2364': 0.08737164735794067, 'rte_787': 0.07071570307016373, 'rte_2885': 0.10969125479459763, 'rte_284': 0.06448782235383987}, 'sst2': {'sst2_93': 0.052452847361564636, 'sst2_1354': 0.054890673607587814, 'sst2_466': 0.05271563306450844, 'sst2_1583': 0.06106848642230034, 'sst2_592': 0.06516434997320175, 'sst2_163': 0.06473430246114731, 'sst2_1751': 0.04973362013697624, 'sst2_476': 0.051911577582359314, 'sst2_1774': 0.05126271769404411, 'sst2_206': 0.05273059010505676}, 'stsb': {'stsb_778': 0.06080792471766472, 'stsb_569': 0.061273206025362015, 'stsb_928': 0.06728770583868027, 'stsb_1301': 0.06479144841432571, 'stsb_747': 0.06256159394979477, 'stsb_333': 0.060595858842134476, 'stsb_758': 0.07728934288024902, 'stsb_727': 0.06643971800804138, 'stsb_429': 0.05180712416768074, 'stsb_1372': 0.05473684147000313}, 'wnli': {'wnli_68': 0.07560186833143234, 'wnli_18': 0.07495755702257156, 'wnli_43': 0.07551196962594986, 'wnli_136': 0.0780470073223114, 'wnli_62': 0.06883443892002106, 'wnli_41': 0.07154178619384766, 'wnli_118': 0.054883550852537155, 'wnli_97': 0.0752965435385704, 'wnli_69': 0.05427345260977745, 'wnli_142': 0.06648316234350204}}}
03/25/2024 17:59:34 - INFO - __main__ - Saving data in SD_per_task_mask_0.7.json
03/25/2024 17:59:34 - INFO - __main__ - Saving data in var_per_task_mask_0.7.json
03/25/2024 17:59:34 - INFO - __main__ - 
UNCERTAINTY (SD)

03/25/2024 17:59:34 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.0975172147154808, 'conll_2003_en': 0.08150501549243927, 'hau': 0.0510217659175396, 'ibo': 0.04597088694572449, 'kin': 0.0482138954102993, 'lug': 0.04941572993993759, 'luo': 0.048604585230350494, 'pcm': 0.048581693321466446, 'swa': 0.04395173862576485, 'wol': 0.056098658591508865, 'yor': 0.08403420448303223, 'zh': 0.09648166596889496}, 'tydiqa': {'arabic': 0.04761427640914917, 'russian': 0.04466316103935242, 'bengali': 0.05217142030596733, 'telugu': 0.03664238005876541, 'finnish': 0.07061923295259476, 'swahili': 0.057781822979450226, 'korean': 0.053090132772922516, 'indonesian': 0.07086693495512009, 'english': 0.1074727326631546}, 'glue': {'cola': 0.054925452917814255, 'mnli': 0.06262603402137756, 'mrpc': 0.06954912096261978, 'qnli': 0.07573545724153519, 'qqp': 0.05815498158335686, 'rte': 0.08208127319812775, 'sst2': 0.055666483938694, 'stsb': 0.06275907903909683, 'wnli': 0.06954313069581985}}

###############################################################################
Hábrók Cluster
Job 7722764 for user s3919609
Finished at: Mon Mar 25 17:59:56 CET 2024

Job details:
============

Job ID              : 7722764
Name                : std_monte_carlo_mask_0.7
User                : s3919609
Partition           : regularmedium
Nodes               : node60
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : COMPLETED
Submit              : 2024-03-25T14:25:52
Start               : 2024-03-25T14:25:54
End                 : 2024-03-25T17:59:56
Reserved walltime   : 10:00:00
Used walltime       : 03:34:02
Used CPU time       : 03:31:45 (efficiency: 98.93%)
% User (Computation): 99.65%
% System (I/O)      :  0.35%
Mem reserved        : 20G
Max Mem (Node/step) : 1.90G (node60, per node)
Full Max Mem usage  : 1.90G
Total Disk Read     : 1.01G
Total Disk Write    : 2.53M

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
