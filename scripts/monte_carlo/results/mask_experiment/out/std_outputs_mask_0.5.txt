Running MONTE CARLO experiment: mask_ratio
Monte Carlo samples: 100
Training mode: True

######## Computing Loss for task: ner ########

######## Language: amh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_0
mean loss: 0.8484153151512146
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_1
mean loss: 0.8106431365013123
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_2
mean loss: 0.8321678638458252
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_3
mean loss: 0.8635076880455017
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_4
mean loss: 0.8164534568786621
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_5
mean loss: 0.7772364020347595
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_6
mean loss: 0.8302693963050842
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_7
mean loss: 0.8808590769767761
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_8
mean loss: 0.8761839866638184
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: amh_9
mean loss: 0.8076586127281189

######## Language: conll_2003_en ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_0
mean loss: 0.8001042008399963
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_1
mean loss: 0.7376861572265625
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_2
mean loss: 0.6044729351997375
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_3
mean loss: 0.6208539605140686
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_4
mean loss: 0.517718493938446
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_5
mean loss: 0.7552361488342285
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_6
mean loss: 0.9105647206306458
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_7
mean loss: 0.7816717028617859
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_8
mean loss: 0.43445026874542236
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: conll_2003_en_9
mean loss: 0.6743406653404236

######## Language: hau ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_0
mean loss: 0.662464439868927
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_1
mean loss: 0.6768419742584229
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_2
mean loss: 0.6352723836898804
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_3
mean loss: 0.5757333636283875
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_4
mean loss: 0.5869518518447876
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_5
mean loss: 0.6667346358299255
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_6
mean loss: 0.622862696647644
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_7
mean loss: 0.6740190386772156
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_8
mean loss: 0.5943819284439087
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: hau_9
mean loss: 0.5854353308677673

######## Language: ibo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_0
mean loss: 0.6121611595153809
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_1
mean loss: 0.611436665058136
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_2
mean loss: 0.5809124708175659
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_3
mean loss: 0.655128538608551
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_4
mean loss: 0.6795746088027954
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_5
mean loss: 0.6636826395988464
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_6
mean loss: 0.6509973406791687
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_7
mean loss: 0.6611354947090149
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_8
mean loss: 0.7425717115402222
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: ibo_9
mean loss: 0.5888310074806213

######## Language: kin ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_0
mean loss: 0.6630733609199524
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_1
mean loss: 0.6213058233261108
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_2
mean loss: 0.7055374383926392
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_3
mean loss: 0.6187750101089478
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_4
mean loss: 0.6424826979637146
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_5
mean loss: 0.6915122270584106
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_6
mean loss: 0.6724528670310974
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_7
mean loss: 0.6591271758079529
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_8
mean loss: 0.6517480611801147
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: kin_9
mean loss: 0.6101551651954651

######## Language: lug ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_0
mean loss: 0.5783689618110657
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_1
mean loss: 0.574474036693573
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_2
mean loss: 0.644443154335022
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_3
mean loss: 0.617597222328186
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_4
mean loss: 0.5980893969535828
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_5
mean loss: 0.6499392986297607
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_6
mean loss: 0.6265985369682312
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_7
mean loss: 0.6655777096748352
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_8
mean loss: 0.616809070110321
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: lug_9
mean loss: 0.7059043645858765

######## Language: luo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_0
mean loss: 0.6101469397544861
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_1
mean loss: 0.542879581451416
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_2
mean loss: 0.6082305312156677
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_3
mean loss: 0.6045971512794495
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_4
mean loss: 0.6690129041671753
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_5
mean loss: 0.7142276167869568
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_6
mean loss: 0.6370725631713867
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_7
mean loss: 0.6952844262123108
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_8
mean loss: 0.6023193597793579
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: luo_9
mean loss: 0.6904955506324768

######## Language: pcm ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_0
mean loss: 0.6012430787086487
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_1
mean loss: 0.7270330190658569
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_2
mean loss: 0.6796891093254089
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_3
mean loss: 0.6036255359649658
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_4
mean loss: 0.527732253074646
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_5
mean loss: 0.617097795009613
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_6
mean loss: 0.6656690239906311
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_7
mean loss: 0.5026563405990601
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_8
mean loss: 0.6104699969291687
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: pcm_9
mean loss: 0.6492785811424255

######## Language: swa ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_0
mean loss: 0.6485645771026611
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_1
mean loss: 0.6707756519317627
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_2
mean loss: 0.6502295732498169
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_3
mean loss: 0.6307121515274048
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_4
mean loss: 0.6321210265159607
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_5
mean loss: 0.6424506902694702
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_6
mean loss: 0.6576640605926514
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_7
mean loss: 0.5998339653015137
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_8
mean loss: 0.6153925061225891
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swa_9
mean loss: 0.6404092311859131

######## Language: wol ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_0
mean loss: 0.6501608490943909
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_1
mean loss: 0.7490394711494446
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_2
mean loss: 0.6960868835449219
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_3
mean loss: 0.6927351951599121
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_4
mean loss: 0.7324779033660889
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_5
mean loss: 0.713509202003479
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_6
mean loss: 0.7903474569320679
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_7
mean loss: 0.7121829986572266
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_8
mean loss: 0.718381404876709
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wol_9
mean loss: 0.5409994721412659

######## Language: yor ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_0
mean loss: 0.805936872959137
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_1
mean loss: 0.7162078022956848
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_2
mean loss: 0.6966803073883057
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_3
mean loss: 0.6399416327476501
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_4
mean loss: 0.672067403793335
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_5
mean loss: 0.73810875415802
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_6
mean loss: 0.7119484543800354
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_7
mean loss: 0.7610951066017151
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_8
mean loss: 0.6643560528755188
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: yor_9
mean loss: 0.7610222697257996

######## Language: zh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_0
mean loss: 0.8314998745918274
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_1
mean loss: 0.856902003288269
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_2
mean loss: 0.8368954658508301
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_3
mean loss: 0.8735684156417847
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_4
mean loss: 0.8350187540054321
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_5
mean loss: 0.7766578793525696
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_6
mean loss: 0.8549494743347168
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_7
mean loss: 0.8517143726348877
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_8
mean loss: 0.868043065071106
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: zh_9
mean loss: 0.8263200521469116

######## Computing Loss for task: tydiqa ########

######## Language: arabic ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic-4449832350126320768-0
mean loss: 0.8264899253845215
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic--3340323169760881569-0
mean loss: 0.8381606936454773
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic-4544770624843559444-1
mean loss: 0.8283541798591614
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic-891952409566422966-0
mean loss: 0.8289002776145935
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic-3659291834714572527-0
mean loss: 0.9035933613777161
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic-9215226117011890166-0
mean loss: 0.8278599381446838
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic-6300896128538259469-0
mean loss: 0.8326795697212219
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic-2382507508588518905-0
mean loss: 0.8431022763252258
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic-1871632801094859741-1
mean loss: 0.8396890163421631
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: arabic--7365809756232083807-0
mean loss: 0.829592764377594

######## Language: russian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian-3457655197371763238-61
mean loss: 0.6165081262588501
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian--1914807805318993335-49
mean loss: 0.6447284817695618
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian--3307989180606173904-1
mean loss: 0.6715832352638245
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian--2219512001175315660-0
mean loss: 0.6353697776794434
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian--7076080992904718941-0
mean loss: 0.6603835225105286
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian--6565862953558739013-1
mean loss: 0.6702572107315063
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian--5098374684590548031-42
mean loss: 0.6629571318626404
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian-3573734219967447693-1
mean loss: 0.6280927062034607
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian--4521001374120505750-6
mean loss: 0.666230320930481
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: russian--1308382244018658424-9
mean loss: 0.6444634199142456

######## Language: bengali ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali--1199493965132146131-3
mean loss: 0.7129688858985901
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali-1807801556888134437-2
mean loss: 0.7119171619415283
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali-2113189855114052041-2
mean loss: 0.7126365900039673
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali--2527914488250041207-0
mean loss: 0.7191822528839111
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali--8260793280894408063-14
mean loss: 0.7208167910575867
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali-8313009204852557186-4
mean loss: 0.6987032890319824
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali--415964033364840061-0
mean loss: 0.7219218611717224
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali--4696865548928858824-5
mean loss: 0.7068489193916321
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali-6505224142472931712-1
mean loss: 0.7195432186126709
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: bengali-599666913917674019-13
mean loss: 0.6720247864723206

######## Language: telugu ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu--3977923017846260053-0
mean loss: 0.7857816219329834
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu-2254198842560317781-0
mean loss: 0.7552361488342285
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu-5435080895440121384-0
mean loss: 0.7772935628890991
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu--1182505954974481191-2
mean loss: 0.7464244365692139
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu-119276511844068401-0
mean loss: 0.7676632404327393
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu--4111208545071789922-0
mean loss: 0.7872350811958313
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu--5922002196428211484-132
mean loss: 0.7900682091712952
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu--1817004721681155192-3
mean loss: 0.7799432873725891
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu-1602214480303968359-1
mean loss: 0.7616912722587585
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: telugu--6495674712575945374-0
mean loss: 0.7670143842697144

######## Language: finnish ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish-6987763079741579998-0
mean loss: 0.6513164639472961
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish--8516625414052383903-0
mean loss: 0.5895617604255676
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish-4168898766124519517-0
mean loss: 0.6685826182365417
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish-783166898848672321-4
mean loss: 0.5326898097991943
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish-2208556840820233322-0
mean loss: 0.5720884203910828
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish--1981034637152391615-58
mean loss: 0.6187636852264404
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish-8689148941295949475-9
mean loss: 0.5801259875297546
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish-6900867945323517614-2
mean loss: 0.6003790497779846
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish-8023130170017405987-1
mean loss: 0.5952756404876709
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: finnish-5001457972111781248-0
mean loss: 0.6117982864379883

######## Language: swahili ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili-7146838206539641546-10
mean loss: 0.5799983739852905
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili-7655634199707176439-0
mean loss: 0.5917154550552368
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili--4427180714267750534-1
mean loss: 0.6634523868560791
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili-4141779435061573138-0
mean loss: 0.6054584980010986
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili--5424518593960879661-0
mean loss: 0.6162972450256348
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili-4281845253405461584-0
mean loss: 0.5596248507499695
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili-4899164839984299762-2
mean loss: 0.5872939229011536
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili-1288750786498500530-0
mean loss: 0.6079905033111572
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili--2671134792844015228-3
mean loss: 0.592404305934906
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: swahili-4873225622490039485-2
mean loss: 0.6380893588066101

######## Language: korean ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean--2869472392602314906-0
mean loss: 0.8867107629776001
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean-4375199563921600155-0
mean loss: 0.8504659533500671
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean--1715118423211755607-13
mean loss: 0.8377445340156555
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean--8028977936696142934-9
mean loss: 0.8426941633224487
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean-2807245034690443837-5
mean loss: 0.8662812113761902
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean-3862451817164408576-0
mean loss: 0.7735254764556885
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean-148115504649351135-0
mean loss: 0.8173417448997498
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean--2885837157239647036-2
mean loss: 0.8797479867935181
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean--1743220297777040002-22
mean loss: 0.870303750038147
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: korean-3268522368206106332-0
mean loss: 0.8719470500946045

######## Language: indonesian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian-9141868818310916091-0
mean loss: 0.5507252216339111
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian-4609394337632433932-1
mean loss: 0.5674439668655396
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian-2763468883290577923-0
mean loss: 0.48469921946525574
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian-5633590583948933406-0
mean loss: 0.5387215614318848
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian--5961409780035435015-0
mean loss: 0.5875834822654724
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian-6274547934693326697-0
mean loss: 0.5440635681152344
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian--2516321763567853082-0
mean loss: 0.5611342191696167
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian-2048796427556239759-4
mean loss: 0.5818941593170166
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian-6246592469157278547-2
mean loss: 0.5724779963493347
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: indonesian--3724318458930736973-1
mean loss: 0.5968284010887146

######## Language: english ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english-2852412434797041176-6
mean loss: 0.684165358543396
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english--1463732605740571606-0
mean loss: 0.25479283928871155
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english-5441411281255470421-0
mean loss: 0.2338991016149521
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english-7294054492486093447-1
mean loss: 0.29085829854011536
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english-8820750127045023244-0
mean loss: 0.3946957290172577
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english--506693546683012611-2
mean loss: 0.35407206416130066
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english-745411798111651115-0
mean loss: 0.423788845539093
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english-7740772185887912651-0
mean loss: 0.29647842049598694
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english-383873188776267137-19
mean loss: 0.2767787575721741
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: english--8277537578703156284-0
mean loss: 0.2900349795818329

######## Computing Loss for task: glue ########

######## Language: cola ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_228
mean loss: 0.7340101003646851
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_51
mean loss: 0.6333770155906677
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_563
mean loss: 0.7125424146652222
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_501
mean loss: 0.6348624229431152
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_457
mean loss: 0.6226423382759094
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_285
mean loss: 0.5166319012641907
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_209
mean loss: 0.6375976800918579
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_178
mean loss: 0.3871265649795532
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_864
mean loss: 0.5234830975532532
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: cola_65
mean loss: 0.453169047832489

######## Language: mnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_488
mean loss: 0.253698468208313
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_1535
mean loss: 0.264653742313385
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_3582
mean loss: 0.49784907698631287
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_3811
mean loss: 0.5504393577575684
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_8279
mean loss: 0.47519251704216003
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_434
mean loss: 0.43304893374443054
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_9195
mean loss: 0.6410375833511353
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_3257
mean loss: 0.276416540145874
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_8928
mean loss: 0.4079586863517761
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mnli_6873
mean loss: 0.39219093322753906

######## Language: mrpc ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_451
mean loss: 0.3437953591346741
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_919
mean loss: 0.3622914254665375
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_1206
mean loss: 0.20558848977088928
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_569
mean loss: 0.4883958101272583
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_1657
mean loss: 0.4521358907222748
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_13
mean loss: 0.31549355387687683
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_1554
mean loss: 0.4364491403102875
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_1650
mean loss: 0.5626671314239502
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_326
mean loss: 0.3256770670413971
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: mrpc_1429
mean loss: 0.3618946969509125

######## Language: qnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_3462
mean loss: 0.36484992504119873
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_2787
mean loss: 0.2762911915779114
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_2276
mean loss: 0.3919188678264618
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_1273
mean loss: 0.3666030466556549
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_1763
mean loss: 0.3962576985359192
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_2757
mean loss: 0.27015063166618347
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_837
mean loss: 0.3191727101802826
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_759
mean loss: 0.35368582606315613
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_3112
mean loss: 0.22330985963344574
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qnli_792
mean loss: 0.4077812135219574

######## Language: qqp ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_188208
mean loss: 0.3871692419052124
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_180331
mean loss: 0.45830222964286804
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_316526
mean loss: 0.3809435963630676
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_138685
mean loss: 0.32354217767715454
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_22780
mean loss: 0.49619513750076294
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_382589
mean loss: 0.40860649943351746
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_240870
mean loss: 0.2165175825357437
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_281137
mean loss: 0.5003312230110168
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_65444
mean loss: 0.4977586269378662
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: qqp_198461
mean loss: 0.4974060356616974

######## Language: rte ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_322
mean loss: 0.543296217918396
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_2261
mean loss: 0.28231605887413025
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_1200
mean loss: 0.41276776790618896
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_2574
mean loss: 0.37870675325393677
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_2533
mean loss: 0.39058876037597656
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_1481
mean loss: 0.3091863691806793
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_2364
mean loss: 0.43305328488349915
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_787
mean loss: 0.26995375752449036
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_2885
mean loss: 0.45976465940475464
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: rte_284
mean loss: 0.5778741836547852

######## Language: sst2 ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_93
mean loss: 0.5391260385513306
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_1354
mean loss: 0.34430965781211853
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_466
mean loss: 0.5831577777862549
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_1583
mean loss: 0.40872374176979065
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_592
mean loss: 0.43674615025520325
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_163
mean loss: 0.7393162250518799
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_1751
mean loss: 0.621387243270874
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_476
mean loss: 0.5076583623886108
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_1774
mean loss: 0.3205922245979309
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: sst2_206
mean loss: 0.5477024912834167

######## Language: stsb ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_778
mean loss: 0.46133071184158325
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_569
mean loss: 0.3894655108451843
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_928
mean loss: 0.38283494114875793
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_1301
mean loss: 0.3038484454154968
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_747
mean loss: 0.4072817265987396
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_333
mean loss: 0.32970839738845825
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_758
mean loss: 0.40267127752304077
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_727
mean loss: 0.22725127637386322
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_429
mean loss: 0.561316967010498
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: stsb_1372
mean loss: 0.5677449107170105

######## Language: wnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_68
mean loss: 0.3926578760147095
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_18
mean loss: 0.24959054589271545
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_43
mean loss: 0.39947959780693054
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_136
mean loss: 0.25498950481414795
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_62
mean loss: 0.5565760135650635
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_41
mean loss: 0.4600743055343628
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_118
mean loss: 0.29463085532188416
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_97
mean loss: 0.40758922696113586
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_69
mean loss: 0.5007379651069641
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = 1"
Masked count: 128, ratio = 0.5000

ID text: wnli_142
mean loss: 0.3759171962738037
Losses per task: {'ner': {'amh': {'amh_0': 0.8484153151512146, 'amh_1': 0.8106431365013123, 'amh_2': 0.8321678638458252, 'amh_3': 0.8635076880455017, 'amh_4': 0.8164534568786621, 'amh_5': 0.7772364020347595, 'amh_6': 0.8302693963050842, 'amh_7': 0.8808590769767761, 'amh_8': 0.8761839866638184, 'amh_9': 0.8076586127281189}, 'conll_2003_en': {'conll_2003_en_0': 0.8001042008399963, 'conll_2003_en_1': 0.7376861572265625, 'conll_2003_en_2': 0.6044729351997375, 'conll_2003_en_3': 0.6208539605140686, 'conll_2003_en_4': 0.517718493938446, 'conll_2003_en_5': 0.7552361488342285, 'conll_2003_en_6': 0.9105647206306458, 'conll_2003_en_7': 0.7816717028617859, 'conll_2003_en_8': 0.43445026874542236, 'conll_2003_en_9': 0.6743406653404236}, 'hau': {'hau_0': 0.662464439868927, 'hau_1': 0.6768419742584229, 'hau_2': 0.6352723836898804, 'hau_3': 0.5757333636283875, 'hau_4': 0.5869518518447876, 'hau_5': 0.6667346358299255, 'hau_6': 0.622862696647644, 'hau_7': 0.6740190386772156, 'hau_8': 0.5943819284439087, 'hau_9': 0.5854353308677673}, 'ibo': {'ibo_0': 0.6121611595153809, 'ibo_1': 0.611436665058136, 'ibo_2': 0.5809124708175659, 'ibo_3': 0.655128538608551, 'ibo_4': 0.6795746088027954, 'ibo_5': 0.6636826395988464, 'ibo_6': 0.6509973406791687, 'ibo_7': 0.6611354947090149, 'ibo_8': 0.7425717115402222, 'ibo_9': 0.5888310074806213}, 'kin': {'kin_0': 0.6630733609199524, 'kin_1': 0.6213058233261108, 'kin_2': 0.7055374383926392, 'kin_3': 0.6187750101089478, 'kin_4': 0.6424826979637146, 'kin_5': 0.6915122270584106, 'kin_6': 0.6724528670310974, 'kin_7': 0.6591271758079529, 'kin_8': 0.6517480611801147, 'kin_9': 0.6101551651954651}, 'lug': {'lug_0': 0.5783689618110657, 'lug_1': 0.574474036693573, 'lug_2': 0.644443154335022, 'lug_3': 0.617597222328186, 'lug_4': 0.5980893969535828, 'lug_5': 0.6499392986297607, 'lug_6': 0.6265985369682312, 'lug_7': 0.6655777096748352, 'lug_8': 0.616809070110321, 'lug_9': 0.7059043645858765}, 'luo': {'luo_0': 0.6101469397544861, 'luo_1': 0.542879581451416, 'luo_2': 0.6082305312156677, 'luo_3': 0.6045971512794495, 'luo_4': 0.6690129041671753, 'luo_5': 0.7142276167869568, 'luo_6': 0.6370725631713867, 'luo_7': 0.6952844262123108, 'luo_8': 0.6023193597793579, 'luo_9': 0.6904955506324768}, 'pcm': {'pcm_0': 0.6012430787086487, 'pcm_1': 0.7270330190658569, 'pcm_2': 0.6796891093254089, 'pcm_3': 0.6036255359649658, 'pcm_4': 0.527732253074646, 'pcm_5': 0.617097795009613, 'pcm_6': 0.6656690239906311, 'pcm_7': 0.5026563405990601, 'pcm_8': 0.6104699969291687, 'pcm_9': 0.6492785811424255}, 'swa': {'swa_0': 0.6485645771026611, 'swa_1': 0.6707756519317627, 'swa_2': 0.6502295732498169, 'swa_3': 0.6307121515274048, 'swa_4': 0.6321210265159607, 'swa_5': 0.6424506902694702, 'swa_6': 0.6576640605926514, 'swa_7': 0.5998339653015137, 'swa_8': 0.6153925061225891, 'swa_9': 0.6404092311859131}, 'wol': {'wol_0': 0.6501608490943909, 'wol_1': 0.7490394711494446, 'wol_2': 0.6960868835449219, 'wol_3': 0.6927351951599121, 'wol_4': 0.7324779033660889, 'wol_5': 0.713509202003479, 'wol_6': 0.7903474569320679, 'wol_7': 0.7121829986572266, 'wol_8': 0.718381404876709, 'wol_9': 0.5409994721412659}, 'yor': {'yor_0': 0.805936872959137, 'yor_1': 0.7162078022956848, 'yor_2': 0.6966803073883057, 'yor_3': 0.6399416327476501, 'yor_4': 0.672067403793335, 'yor_5': 0.73810875415802, 'yor_6': 0.7119484543800354, 'yor_7': 0.7610951066017151, 'yor_8': 0.6643560528755188, 'yor_9': 0.7610222697257996}, 'zh': {'zh_0': 0.8314998745918274, 'zh_1': 0.856902003288269, 'zh_2': 0.8368954658508301, 'zh_3': 0.8735684156417847, 'zh_4': 0.8350187540054321, 'zh_5': 0.7766578793525696, 'zh_6': 0.8549494743347168, 'zh_7': 0.8517143726348877, 'zh_8': 0.868043065071106, 'zh_9': 0.8263200521469116}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.8264899253845215, 'arabic--3340323169760881569-0': 0.8381606936454773, 'arabic-4544770624843559444-1': 0.8283541798591614, 'arabic-891952409566422966-0': 0.8289002776145935, 'arabic-3659291834714572527-0': 0.9035933613777161, 'arabic-9215226117011890166-0': 0.8278599381446838, 'arabic-6300896128538259469-0': 0.8326795697212219, 'arabic-2382507508588518905-0': 0.8431022763252258, 'arabic-1871632801094859741-1': 0.8396890163421631, 'arabic--7365809756232083807-0': 0.829592764377594}, 'russian': {'russian-3457655197371763238-61': 0.6165081262588501, 'russian--1914807805318993335-49': 0.6447284817695618, 'russian--3307989180606173904-1': 0.6715832352638245, 'russian--2219512001175315660-0': 0.6353697776794434, 'russian--7076080992904718941-0': 0.6603835225105286, 'russian--6565862953558739013-1': 0.6702572107315063, 'russian--5098374684590548031-42': 0.6629571318626404, 'russian-3573734219967447693-1': 0.6280927062034607, 'russian--4521001374120505750-6': 0.666230320930481, 'russian--1308382244018658424-9': 0.6444634199142456}, 'bengali': {'bengali--1199493965132146131-3': 0.7129688858985901, 'bengali-1807801556888134437-2': 0.7119171619415283, 'bengali-2113189855114052041-2': 0.7126365900039673, 'bengali--2527914488250041207-0': 0.7191822528839111, 'bengali--8260793280894408063-14': 0.7208167910575867, 'bengali-8313009204852557186-4': 0.6987032890319824, 'bengali--415964033364840061-0': 0.7219218611717224, 'bengali--4696865548928858824-5': 0.7068489193916321, 'bengali-6505224142472931712-1': 0.7195432186126709, 'bengali-599666913917674019-13': 0.6720247864723206}, 'telugu': {'telugu--3977923017846260053-0': 0.7857816219329834, 'telugu-2254198842560317781-0': 0.7552361488342285, 'telugu-5435080895440121384-0': 0.7772935628890991, 'telugu--1182505954974481191-2': 0.7464244365692139, 'telugu-119276511844068401-0': 0.7676632404327393, 'telugu--4111208545071789922-0': 0.7872350811958313, 'telugu--5922002196428211484-132': 0.7900682091712952, 'telugu--1817004721681155192-3': 0.7799432873725891, 'telugu-1602214480303968359-1': 0.7616912722587585, 'telugu--6495674712575945374-0': 0.7670143842697144}, 'finnish': {'finnish-6987763079741579998-0': 0.6513164639472961, 'finnish--8516625414052383903-0': 0.5895617604255676, 'finnish-4168898766124519517-0': 0.6685826182365417, 'finnish-783166898848672321-4': 0.5326898097991943, 'finnish-2208556840820233322-0': 0.5720884203910828, 'finnish--1981034637152391615-58': 0.6187636852264404, 'finnish-8689148941295949475-9': 0.5801259875297546, 'finnish-6900867945323517614-2': 0.6003790497779846, 'finnish-8023130170017405987-1': 0.5952756404876709, 'finnish-5001457972111781248-0': 0.6117982864379883}, 'swahili': {'swahili-7146838206539641546-10': 0.5799983739852905, 'swahili-7655634199707176439-0': 0.5917154550552368, 'swahili--4427180714267750534-1': 0.6634523868560791, 'swahili-4141779435061573138-0': 0.6054584980010986, 'swahili--5424518593960879661-0': 0.6162972450256348, 'swahili-4281845253405461584-0': 0.5596248507499695, 'swahili-4899164839984299762-2': 0.5872939229011536, 'swahili-1288750786498500530-0': 0.6079905033111572, 'swahili--2671134792844015228-3': 0.592404305934906, 'swahili-4873225622490039485-2': 0.6380893588066101}, 'korean': {'korean--2869472392602314906-0': 0.8867107629776001, 'korean-4375199563921600155-0': 0.8504659533500671, 'korean--1715118423211755607-13': 0.8377445340156555, 'korean--8028977936696142934-9': 0.8426941633224487, 'korean-2807245034690443837-5': 0.8662812113761902, 'korean-3862451817164408576-0': 0.7735254764556885, 'korean-148115504649351135-0': 0.8173417448997498, 'korean--2885837157239647036-2': 0.8797479867935181, 'korean--1743220297777040002-22': 0.870303750038147, 'korean-3268522368206106332-0': 0.8719470500946045}, 'indonesian': {'indonesian-9141868818310916091-0': 0.5507252216339111, 'indonesian-4609394337632433932-1': 0.5674439668655396, 'indonesian-2763468883290577923-0': 0.48469921946525574, 'indonesian-5633590583948933406-0': 0.5387215614318848, 'indonesian--5961409780035435015-0': 0.5875834822654724, 'indonesian-6274547934693326697-0': 0.5440635681152344, 'indonesian--2516321763567853082-0': 0.5611342191696167, 'indonesian-2048796427556239759-4': 0.5818941593170166, 'indonesian-6246592469157278547-2': 0.5724779963493347, 'indonesian--3724318458930736973-1': 0.5968284010887146}, 'english': {'english-2852412434797041176-6': 0.684165358543396, 'english--1463732605740571606-0': 0.25479283928871155, 'english-5441411281255470421-0': 0.2338991016149521, 'english-7294054492486093447-1': 0.29085829854011536, 'english-8820750127045023244-0': 0.3946957290172577, 'english--506693546683012611-2': 0.35407206416130066, 'english-745411798111651115-0': 0.423788845539093, 'english-7740772185887912651-0': 0.29647842049598694, 'english-383873188776267137-19': 0.2767787575721741, 'english--8277537578703156284-0': 0.2900349795818329}}, 'glue': {'cola': {'cola_228': 0.7340101003646851, 'cola_51': 0.6333770155906677, 'cola_563': 0.7125424146652222, 'cola_501': 0.6348624229431152, 'cola_457': 0.6226423382759094, 'cola_285': 0.5166319012641907, 'cola_209': 0.6375976800918579, 'cola_178': 0.3871265649795532, 'cola_864': 0.5234830975532532, 'cola_65': 0.453169047832489}, 'mnli': {'mnli_488': 0.253698468208313, 'mnli_1535': 0.264653742313385, 'mnli_3582': 0.49784907698631287, 'mnli_3811': 0.5504393577575684, 'mnli_8279': 0.47519251704216003, 'mnli_434': 0.43304893374443054, 'mnli_9195': 0.6410375833511353, 'mnli_3257': 0.276416540145874, 'mnli_8928': 0.4079586863517761, 'mnli_6873': 0.39219093322753906}, 'mrpc': {'mrpc_451': 0.3437953591346741, 'mrpc_919': 0.3622914254665375, 'mrpc_1206': 0.20558848977088928, 'mrpc_569': 0.4883958101272583, 'mrpc_1657': 0.4521358907222748, 'mrpc_13': 0.31549355387687683, 'mrpc_1554': 0.4364491403102875, 'mrpc_1650': 0.5626671314239502, 'mrpc_326': 0.3256770670413971, 'mrpc_1429': 0.3618946969509125}, 'qnli': {'qnli_3462': 0.36484992504119873, 'qnli_2787': 0.2762911915779114, 'qnli_2276': 0.3919188678264618, 'qnli_1273': 0.3666030466556549, 'qnli_1763': 0.3962576985359192, 'qnli_2757': 0.27015063166618347, 'qnli_837': 0.3191727101802826, 'qnli_759': 0.35368582606315613, 'qnli_3112': 0.22330985963344574, 'qnli_792': 0.4077812135219574}, 'qqp': {'qqp_188208': 0.3871692419052124, 'qqp_180331': 0.45830222964286804, 'qqp_316526': 0.3809435963630676, 'qqp_138685': 0.32354217767715454, 'qqp_22780': 0.49619513750076294, 'qqp_382589': 0.40860649943351746, 'qqp_240870': 0.2165175825357437, 'qqp_281137': 0.5003312230110168, 'qqp_65444': 0.4977586269378662, 'qqp_198461': 0.4974060356616974}, 'rte': {'rte_322': 0.543296217918396, 'rte_2261': 0.28231605887413025, 'rte_1200': 0.41276776790618896, 'rte_2574': 0.37870675325393677, 'rte_2533': 0.39058876037597656, 'rte_1481': 0.3091863691806793, 'rte_2364': 0.43305328488349915, 'rte_787': 0.26995375752449036, 'rte_2885': 0.45976465940475464, 'rte_284': 0.5778741836547852}, 'sst2': {'sst2_93': 0.5391260385513306, 'sst2_1354': 0.34430965781211853, 'sst2_466': 0.5831577777862549, 'sst2_1583': 0.40872374176979065, 'sst2_592': 0.43674615025520325, 'sst2_163': 0.7393162250518799, 'sst2_1751': 0.621387243270874, 'sst2_476': 0.5076583623886108, 'sst2_1774': 0.3205922245979309, 'sst2_206': 0.5477024912834167}, 'stsb': {'stsb_778': 0.46133071184158325, 'stsb_569': 0.3894655108451843, 'stsb_928': 0.38283494114875793, 'stsb_1301': 0.3038484454154968, 'stsb_747': 0.4072817265987396, 'stsb_333': 0.32970839738845825, 'stsb_758': 0.40267127752304077, 'stsb_727': 0.22725127637386322, 'stsb_429': 0.561316967010498, 'stsb_1372': 0.5677449107170105}, 'wnli': {'wnli_68': 0.3926578760147095, 'wnli_18': 0.24959054589271545, 'wnli_43': 0.39947959780693054, 'wnli_136': 0.25498950481414795, 'wnli_62': 0.5565760135650635, 'wnli_41': 0.4600743055343628, 'wnli_118': 0.29463085532188416, 'wnli_97': 0.40758922696113586, 'wnli_69': 0.5007379651069641, 'wnli_142': 0.3759171962738037}}}
Saving data in loss_per_task_mask_0.5.json

LOSS

Mean loss per task: {'ner': {'amh': 0.8343394994735718, 'conll_2003_en': 0.6837099194526672, 'hau': 0.6280697584152222, 'ibo': 0.6446431279182434, 'kin': 0.6536169648170471, 'lug': 0.6277801394462585, 'luo': 0.6374266743659973, 'pcm': 0.6184495091438293, 'swa': 0.6388153433799744, 'wol': 0.699592113494873, 'yor': 0.7167364358901978, 'zh': 0.8411569595336914}, 'tydiqa': {'arabic': 0.8398422002792358, 'russian': 0.6500574350357056, 'bengali': 0.7096563577651978, 'telugu': 0.7718350887298584, 'finnish': 0.6020581126213074, 'swahili': 0.6042324900627136, 'korean': 0.8496763110160828, 'indonesian': 0.5585572123527527, 'english': 0.3499564528465271}, 'glue': {'cola': 0.585544228553772, 'mnli': 0.4192485809326172, 'mrpc': 0.38543882966041565, 'qnli': 0.33700209856033325, 'qqp': 0.41667723655700684, 'rte': 0.4057508111000061, 'sst2': 0.5048719644546509, 'stsb': 0.40334540605545044, 'wnli': 0.3892242908477783}}
Lowest losses:
ID: mrpc_1206, Loss: 0.20558848977088928
ID: qqp_240870, Loss: 0.2165175825357437
ID: qnli_3112, Loss: 0.22330985963344574
ID: stsb_727, Loss: 0.22725127637386322
ID: english-5441411281255470421-0, Loss: 0.2338991016149521
Highest losses:
ID: korean--2885837157239647036-2, Loss: 0.8797479867935181
ID: amh_7, Loss: 0.8808590769767761
ID: korean--2869472392602314906-0, Loss: 0.8867107629776001
ID: arabic-3659291834714572527-0, Loss: 0.9035933613777161
ID: conll_2003_en_6, Loss: 0.9105647206306458
Monte Carlo samples: 100
Training mode: True

######## Computing SDs for task: ner ########


######## Language: amh ######## 

Running MONTE CARLO experiment: mask_ratio
Loading data from loss_per_task_mask_0.5.json

LOSS

Mean loss per task: {'ner': {'amh': 0.8343394994735718, 'conll_2003_en': 0.6837099194526672, 'hau': 0.6280697584152222, 'ibo': 0.6446431279182434, 'kin': 0.6536169648170471, 'lug': 0.6277801394462585, 'luo': 0.6374266743659973, 'pcm': 0.6184495091438293, 'swa': 0.6388153433799744, 'wol': 0.699592113494873, 'yor': 0.7167364358901978, 'zh': 0.8411569595336914}, 'tydiqa': {'arabic': 0.8398422002792358, 'russian': 0.6500574350357056, 'bengali': 0.7096563577651978, 'telugu': 0.7718350887298584, 'finnish': 0.6020581126213074, 'swahili': 0.6042324900627136, 'korean': 0.8496763110160828, 'indonesian': 0.5585572123527527, 'english': 0.3499564528465271}, 'glue': {'cola': 0.585544228553772, 'mnli': 0.4192485809326172, 'mrpc': 0.38543882966041565, 'qnli': 0.33700209856033325, 'qqp': 0.41667723655700684, 'rte': 0.4057508111000061, 'sst2': 0.5048719644546509, 'stsb': 0.40334540605545044, 'wnli': 0.3892242908477783}}
Lowest losses:
ID: mrpc_1206, Loss: 0.20558848977088928
ID: qqp_240870, Loss: 0.2165175825357437
ID: qnli_3112, Loss: 0.22330985963344574
ID: stsb_727, Loss: 0.22725127637386322
ID: english-5441411281255470421-0, Loss: 0.2338991016149521
Highest losses:
ID: korean--2885837157239647036-2, Loss: 0.8797479867935181
ID: amh_7, Loss: 0.8808590769767761
ID: korean--2869472392602314906-0, Loss: 0.8867107629776001
ID: arabic-3659291834714572527-0, Loss: 0.9035933613777161
ID: conll_2003_en_6, Loss: 0.9105647206306458
Monte Carlo samples: 100
Training mode: True

######## Computing SDs for task: ner ########


######## Language: amh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_0
Mean variance for amh_0: 0.0799119621515274
Mean std for for amh_0: 0.24287904798984528
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_1
Mean variance for amh_1: 0.10796644538640976
Mean std for for amh_1: 0.2773679792881012
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_2
Mean variance for amh_2: 0.12122237682342529
Mean std for for amh_2: 0.29239776730537415
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_3
Mean variance for amh_3: 0.12599457800388336
Mean std for for amh_3: 0.3023698031902313
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_4
Mean variance for amh_4: 0.11884377151727676
Mean std for for amh_4: 0.2916847765445709
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_5
Mean variance for amh_5: 0.13510353863239288
Mean std for for amh_5: 0.3172420561313629
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_6
Mean variance for amh_6: 0.1318458765745163
Mean std for for amh_6: 0.31403473019599915
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_7
Mean variance for amh_7: 0.12966839969158173
Mean std for for amh_7: 0.3074595630168915
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_8
Mean variance for amh_8: 0.11138450354337692
Mean std for for amh_8: 0.2801229953765869
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: amh_9
Mean variance for amh_9: 0.11378861218690872
Mean std for for amh_9: 0.28362080454826355

######## Language: conll_2003_en ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_0
Mean variance for conll_2003_en_0: 0.14300893247127533
Mean std for for conll_2003_en_0: 0.33287349343299866
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_1
Mean variance for conll_2003_en_1: 0.06377743929624557
Mean std for for conll_2003_en_1: 0.22505033016204834
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_2
Mean variance for conll_2003_en_2: 0.027643123641610146
Mean std for for conll_2003_en_2: 0.12637166678905487
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_3
Mean variance for conll_2003_en_3: 0.038348741829395294
Mean std for for conll_2003_en_3: 0.1681966930627823
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 119, ratio = 0.4648
ID text: conll_2003_en_4
Mean variance for conll_2003_en_4: 0.05375673249363899
Mean std for for conll_2003_en_4: 0.20769411325454712
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_5
Mean variance for conll_2003_en_5: 0.13601313531398773
Mean std for for conll_2003_en_5: 0.32857438921928406
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_6
Mean variance for conll_2003_en_6: 0.122132308781147
Mean std for for conll_2003_en_6: 0.3166435658931732
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_7
Mean variance for conll_2003_en_7: 0.14160756766796112
Mean std for for conll_2003_en_7: 0.33443713188171387
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_8
Mean variance for conll_2003_en_8: 0.13374707102775574
Mean std for for conll_2003_en_8: 0.3288712799549103
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: conll_2003_en_9
Mean variance for conll_2003_en_9: 0.03315339237451553
Mean std for for conll_2003_en_9: 0.14957229793071747

######## Language: hau ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_0
Mean variance for hau_0: 0.021873846650123596
Mean std for for hau_0: 0.1095673143863678
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_1
Mean variance for hau_1: 0.04037005826830864
Mean std for for hau_1: 0.17490588128566742
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_2
Mean variance for hau_2: 0.14414571225643158
Mean std for for hau_2: 0.3386620581150055
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: hau_3
Mean variance for hau_3: 0.023096740245819092
Mean std for for hau_3: 0.11343500018119812
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_4
Mean variance for hau_4: 0.023155445232987404
Mean std for for hau_4: 0.11457709223031998
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_5
Mean variance for hau_5: 0.02219722978770733
Mean std for for hau_5: 0.1097184419631958
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_6
Mean variance for hau_6: 0.03236513212323189
Mean std for for hau_6: 0.1360311657190323
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_7
Mean variance for hau_7: 0.023617245256900787
Mean std for for hau_7: 0.11562008410692215
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_8
Mean variance for hau_8: 0.021544577553868294
Mean std for for hau_8: 0.10776820778846741
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: hau_9
Mean variance for hau_9: 0.031039884313941002
Mean std for for hau_9: 0.1373281627893448

######## Language: ibo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: ibo_0
Mean variance for ibo_0: 0.03282955661416054
Mean std for for ibo_0: 0.149064302444458
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 111, ratio = 0.4336
ID text: ibo_1
Mean variance for ibo_1: 0.051568806171417236
Mean std for for ibo_1: 0.18750722706317902
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: ibo_2
Mean variance for ibo_2: 0.031911592930555344
Mean std for for ibo_2: 0.13557155430316925
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: ibo_3
Mean variance for ibo_3: 0.039556834846735
Mean std for for ibo_3: 0.17566777765750885
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: ibo_4
Mean variance for ibo_4: 0.03304843604564667
Mean std for for ibo_4: 0.14924123883247375
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: ibo_5
Mean variance for ibo_5: 0.02675618790090084
Mean std for for ibo_5: 0.13907544314861298
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: ibo_6
Mean variance for ibo_6: 0.028813710436224937
Mean std for for ibo_6: 0.14266888797283173
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: ibo_7
Mean variance for ibo_7: 0.025863289833068848
Mean std for for ibo_7: 0.11988190561532974
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: ibo_8
Mean variance for ibo_8: 0.03683732450008392
Mean std for for ibo_8: 0.16834358870983124
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: ibo_9
Mean variance for ibo_9: 0.025479277595877647
Mean std for for ibo_9: 0.12711496651172638

######## Language: kin ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: kin_0
Mean variance for kin_0: 0.024949118494987488
Mean std for for kin_0: 0.12466608732938766
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: kin_1
Mean variance for kin_1: 0.0333612821996212
Mean std for for kin_1: 0.14763392508029938
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: kin_2
Mean variance for kin_2: 0.03638177737593651
Mean std for for kin_2: 0.16993187367916107
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: kin_3
Mean variance for kin_3: 0.02655993215739727
Mean std for for kin_3: 0.12558798491954803
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: kin_4
Mean variance for kin_4: 0.02669629454612732
Mean std for for kin_4: 0.1264084279537201
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: kin_5
Mean variance for kin_5: 0.03721396625041962
Mean std for for kin_5: 0.16953949630260468
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: kin_6
Mean variance for kin_6: 0.019751179963350296
Mean std for for kin_6: 0.10277996212244034
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: kin_7
Mean variance for kin_7: 0.026762589812278748
Mean std for for kin_7: 0.12764383852481842
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: kin_8
Mean variance for kin_8: 0.028092950582504272
Mean std for for kin_8: 0.1430235356092453
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: kin_9
Mean variance for kin_9: 0.022681646049022675
Mean std for for kin_9: 0.13110582530498505

######## Language: lug ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: lug_0
Mean variance for lug_0: 0.02484641782939434
Mean std for for lug_0: 0.1187615618109703
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: lug_1
Mean variance for lug_1: 0.02866673283278942
Mean std for for lug_1: 0.13183192908763885
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: lug_2
Mean variance for lug_2: 0.01724058948457241
Mean std for for lug_2: 0.09833381325006485
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: lug_3
Mean variance for lug_3: 0.019789090380072594
Mean std for for lug_3: 0.10508468747138977
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: lug_4
Mean variance for lug_4: 0.03169019892811775
Mean std for for lug_4: 0.14750920236110687
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: lug_5
Mean variance for lug_5: 0.024116287007927895
Mean std for for lug_5: 0.11563964933156967
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: lug_6
Mean variance for lug_6: 0.022425903007388115
Mean std for for lug_6: 0.11308091878890991
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: lug_7
Mean variance for lug_7: 0.02575686387717724
Mean std for for lug_7: 0.13451221585273743
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: lug_8
Mean variance for lug_8: 0.03681711107492447
Mean std for for lug_8: 0.1494119018316269
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: lug_9
Mean variance for lug_9: 0.02876836620271206
Mean std for for lug_9: 0.1343933492898941

######## Language: luo ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: luo_0
Mean variance for luo_0: 0.020432600751519203
Mean std for for luo_0: 0.10251275449991226
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: luo_1
Mean variance for luo_1: 0.031761545687913895
Mean std for for luo_1: 0.1547268182039261
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: luo_2
Mean variance for luo_2: 0.027631105855107307
Mean std for for luo_2: 0.12874773144721985
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: luo_3
Mean variance for luo_3: 0.01795073039829731
Mean std for for luo_3: 0.10235171765089035
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: luo_4
Mean variance for luo_4: 0.030418552458286285
Mean std for for luo_4: 0.14539016783237457
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: luo_5
Mean variance for luo_5: 0.026558637619018555
Mean std for for luo_5: 0.13255642354488373
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: luo_6
Mean variance for luo_6: 0.021356739103794098
Mean std for for luo_6: 0.11094243079423904
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: luo_7
Mean variance for luo_7: 0.04589661583304405
Mean std for for luo_7: 0.18729300796985626
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: luo_8
Mean variance for luo_8: 0.03756233677268028
Mean std for for luo_8: 0.15196043252944946
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 120, ratio = 0.4688
ID text: luo_9
Mean variance for luo_9: 0.047013938426971436
Mean std for for luo_9: 0.19560138881206512

######## Language: pcm ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: pcm_0
Mean variance for pcm_0: 0.03012041188776493
Mean std for for pcm_0: 0.1414797455072403
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: pcm_1
Mean variance for pcm_1: 0.03239775076508522
Mean std for for pcm_1: 0.15537916123867035
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: pcm_2
Mean variance for pcm_2: 0.0278239194303751
Mean std for for pcm_2: 0.13777928054332733
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: pcm_3
Mean variance for pcm_3: 0.02707619220018387
Mean std for for pcm_3: 0.12737639248371124
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: pcm_4
Mean variance for pcm_4: 0.02873772569000721
Mean std for for pcm_4: 0.1287594735622406
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: pcm_5
Mean variance for pcm_5: 0.04562986269593239
Mean std for for pcm_5: 0.18821530044078827
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: pcm_6
Mean variance for pcm_6: 0.029905932024121284
Mean std for for pcm_6: 0.13835090398788452
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: pcm_7
Mean variance for pcm_7: 0.028790300711989403
Mean std for for pcm_7: 0.13595452904701233
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: pcm_8
Mean variance for pcm_8: 0.030348151922225952
Mean std for for pcm_8: 0.1353687047958374
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: pcm_9
Mean variance for pcm_9: 0.03215539827942848
Mean std for for pcm_9: 0.15341636538505554

######## Language: swa ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swa_0
Mean variance for swa_0: 0.025247326120734215
Mean std for for swa_0: 0.11618342995643616
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 113, ratio = 0.4414
ID text: swa_1
Mean variance for swa_1: 0.035273369401693344
Mean std for for swa_1: 0.15724970400333405
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swa_2
Mean variance for swa_2: 0.02689284086227417
Mean std for for swa_2: 0.12425249069929123
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swa_3
Mean variance for swa_3: 0.0341678149998188
Mean std for for swa_3: 0.15779779851436615
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swa_4
Mean variance for swa_4: 0.01908901147544384
Mean std for for swa_4: 0.10564988851547241
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swa_5
Mean variance for swa_5: 0.017945220693945885
Mean std for for swa_5: 0.1010553240776062
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: swa_6
Mean variance for swa_6: 0.02362828515470028
Mean std for for swa_6: 0.11585361510515213
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swa_7
Mean variance for swa_7: 0.0390375480055809
Mean std for for swa_7: 0.17809689044952393
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swa_8
Mean variance for swa_8: 0.02332216687500477
Mean std for for swa_8: 0.12597042322158813
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swa_9
Mean variance for swa_9: 0.03995630145072937
Mean std for for swa_9: 0.16453610360622406

######## Language: wol ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wol_0
Mean variance for wol_0: 0.025968125090003014
Mean std for for wol_0: 0.11799558252096176
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wol_1
Mean variance for wol_1: 0.02812768518924713
Mean std for for wol_1: 0.13262377679347992
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wol_2
Mean variance for wol_2: 0.029500829055905342
Mean std for for wol_2: 0.13952402770519257
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wol_3
Mean variance for wol_3: 0.05404342710971832
Mean std for for wol_3: 0.20915961265563965
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wol_4
Mean variance for wol_4: 0.030166367068886757
Mean std for for wol_4: 0.15470413863658905
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wol_5
Mean variance for wol_5: 0.03182664141058922
Mean std for for wol_5: 0.13934226334095
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: wol_6
Mean variance for wol_6: 0.12184125185012817
Mean std for for wol_6: 0.3051760792732239
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wol_7
Mean variance for wol_7: 0.028505362570285797
Mean std for for wol_7: 0.14109432697296143
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: wol_8
Mean variance for wol_8: 0.040420930832624435
Mean std for for wol_8: 0.17680245637893677
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wol_9
Mean variance for wol_9: 0.04213322699069977
Mean std for for wol_9: 0.17915721237659454

######## Language: yor ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: yor_0
Mean variance for yor_0: 0.1148691400885582
Mean std for for yor_0: 0.2841787040233612
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: yor_1
Mean variance for yor_1: 0.11786264181137085
Mean std for for yor_1: 0.2799534201622009
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: yor_2
Mean variance for yor_2: 0.031127428635954857
Mean std for for yor_2: 0.1404609978199005
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: yor_3
Mean variance for yor_3: 0.024241164326667786
Mean std for for yor_3: 0.1209435686469078
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: yor_4
Mean variance for yor_4: 0.12558306753635406
Mean std for for yor_4: 0.300950825214386
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: yor_5
Mean variance for yor_5: 0.07732990384101868
Mean std for for yor_5: 0.21554642915725708
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: yor_6
Mean variance for yor_6: 0.02776460535824299
Mean std for for yor_6: 0.13741739094257355
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: yor_7
Mean variance for yor_7: 0.11933455616235733
Mean std for for yor_7: 0.2846422791481018
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: yor_8
Mean variance for yor_8: 0.024205615743994713
Mean std for for yor_8: 0.12279313057661057
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: yor_9
Mean variance for yor_9: 0.12705114483833313
Mean std for for yor_9: 0.29775893688201904

######## Language: zh ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 115, ratio = 0.4492
ID text: zh_0
Mean variance for zh_0: 0.09765227884054184
Mean std for for zh_0: 0.28160491585731506
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: zh_1
Mean variance for zh_1: 0.08889772742986679
Mean std for for zh_1: 0.23684604465961456
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: zh_2
Mean variance for zh_2: 0.11478129029273987
Mean std for for zh_2: 0.28212249279022217
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: zh_3
Mean variance for zh_3: 0.14907191693782806
Mean std for for zh_3: 0.33797964453697205
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: zh_4
Mean variance for zh_4: 0.09769292920827866
Mean std for for zh_4: 0.2761095464229584
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: zh_5
Mean variance for zh_5: 0.15693213045597076
Mean std for for zh_5: 0.35606256127357483
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: zh_6
Mean variance for zh_6: 0.08904007077217102
Mean std for for zh_6: 0.2410215139389038
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: zh_7
Mean variance for zh_7: 0.12846264243125916
Mean std for for zh_7: 0.30217981338500977
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: zh_8
Mean variance for zh_8: 0.11467784643173218
Mean std for for zh_8: 0.2844376564025879
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: zh_9
Mean variance for zh_9: 0.09625036269426346
Mean std for for zh_9: 0.252847820520401

######## Computing SDs for task: tydiqa ########


######## Language: arabic ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: arabic-4449832350126320768-0
Mean variance for arabic-4449832350126320768-0: 0.043340567499399185
Mean std for for arabic-4449832350126320768-0: 0.1707819700241089
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: arabic--3340323169760881569-0
Mean variance for arabic--3340323169760881569-0: 0.031887754797935486
Mean std for for arabic--3340323169760881569-0: 0.13550011813640594
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: arabic-4544770624843559444-1
Mean variance for arabic-4544770624843559444-1: 0.030321739614009857
Mean std for for arabic-4544770624843559444-1: 0.13290810585021973
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: arabic-891952409566422966-0
Mean variance for arabic-891952409566422966-0: 0.038613155484199524
Mean std for for arabic-891952409566422966-0: 0.15340332686901093
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: arabic-3659291834714572527-0
Mean variance for arabic-3659291834714572527-0: 0.055217891931533813
Mean std for for arabic-3659291834714572527-0: 0.19534583389759064
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: arabic-9215226117011890166-0
Mean variance for arabic-9215226117011890166-0: 0.028775518760085106
Mean std for for arabic-9215226117011890166-0: 0.12971417605876923
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: arabic-6300896128538259469-0
Mean variance for arabic-6300896128538259469-0: 0.043701767921447754
Mean std for for arabic-6300896128538259469-0: 0.16324171423912048
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: arabic-2382507508588518905-0
Mean variance for arabic-2382507508588518905-0: 0.03310457244515419
Mean std for for arabic-2382507508588518905-0: 0.1417972594499588
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: arabic-1871632801094859741-1
Mean variance for arabic-1871632801094859741-1: 0.030274705961346626
Mean std for for arabic-1871632801094859741-1: 0.13420940935611725
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: arabic--7365809756232083807-0
Mean variance for arabic--7365809756232083807-0: 0.03445979580283165
Mean std for for arabic--7365809756232083807-0: 0.14245808124542236

######## Language: russian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: russian-3457655197371763238-61
Mean variance for russian-3457655197371763238-61: 0.023470714688301086
Mean std for for russian-3457655197371763238-61: 0.11453501135110855
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: russian--1914807805318993335-49
Mean variance for russian--1914807805318993335-49: 0.032015178352594376
Mean std for for russian--1914807805318993335-49: 0.1393938809633255
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: russian--3307989180606173904-1
Mean variance for russian--3307989180606173904-1: 0.018474692478775978
Mean std for for russian--3307989180606173904-1: 0.10185229033231735
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: russian--2219512001175315660-0
Mean variance for russian--2219512001175315660-0: 0.021100357174873352
Mean std for for russian--2219512001175315660-0: 0.1098889410495758
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: russian--7076080992904718941-0
Mean variance for russian--7076080992904718941-0: 0.021079614758491516
Mean std for for russian--7076080992904718941-0: 0.10955795645713806
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: russian--6565862953558739013-1
Mean variance for russian--6565862953558739013-1: 0.020617125555872917
Mean std for for russian--6565862953558739013-1: 0.10940279811620712
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: russian--5098374684590548031-42
Mean variance for russian--5098374684590548031-42: 0.04028933122754097
Mean std for for russian--5098374684590548031-42: 0.17055851221084595
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: russian-3573734219967447693-1
Mean variance for russian-3573734219967447693-1: 0.02860863506793976
Mean std for for russian-3573734219967447693-1: 0.1289464682340622
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: russian--4521001374120505750-6
Mean variance for russian--4521001374120505750-6: 0.029870837926864624
Mean std for for russian--4521001374120505750-6: 0.13303841650485992
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: russian--1308382244018658424-9
Mean variance for russian--1308382244018658424-9: 0.02190352976322174
Mean std for for russian--1308382244018658424-9: 0.11196013540029526

######## Language: bengali ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 119, ratio = 0.4648
ID text: bengali--1199493965132146131-3
Mean variance for bengali--1199493965132146131-3: 0.06969815492630005
Mean std for for bengali--1199493965132146131-3: 0.20604480803012848
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: bengali-1807801556888134437-2
Mean variance for bengali-1807801556888134437-2: 0.06681550294160843
Mean std for for bengali-1807801556888134437-2: 0.20280994474887848
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: bengali-2113189855114052041-2
Mean variance for bengali-2113189855114052041-2: 0.055254653096199036
Mean std for for bengali-2113189855114052041-2: 0.18030868470668793
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: bengali--2527914488250041207-0
Mean variance for bengali--2527914488250041207-0: 0.07289310544729233
Mean std for for bengali--2527914488250041207-0: 0.20615918934345245
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: bengali--8260793280894408063-14
Mean variance for bengali--8260793280894408063-14: 0.04096752777695656
Mean std for for bengali--8260793280894408063-14: 0.15843962132930756
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: bengali-8313009204852557186-4
Mean variance for bengali-8313009204852557186-4: 0.06868350505828857
Mean std for for bengali-8313009204852557186-4: 0.20347052812576294
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 112, ratio = 0.4375
ID text: bengali--415964033364840061-0
Mean variance for bengali--415964033364840061-0: 0.07809760421514511
Mean std for for bengali--415964033364840061-0: 0.2209675908088684
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: bengali--4696865548928858824-5
Mean variance for bengali--4696865548928858824-5: 0.0644037202000618
Mean std for for bengali--4696865548928858824-5: 0.19550199806690216
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: bengali-6505224142472931712-1
Mean variance for bengali-6505224142472931712-1: 0.06488301604986191
Mean std for for bengali-6505224142472931712-1: 0.19925729930400848
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: bengali-599666913917674019-13
Mean variance for bengali-599666913917674019-13: 0.09684144705533981
Mean std for for bengali-599666913917674019-13: 0.2536929249763489

######## Language: telugu ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu--3977923017846260053-0
Mean variance for telugu--3977923017846260053-0: 0.027404332533478737
Mean std for for telugu--3977923017846260053-0: 0.12720154225826263
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu-2254198842560317781-0
Mean variance for telugu-2254198842560317781-0: 0.02761744149029255
Mean std for for telugu-2254198842560317781-0: 0.12578222155570984
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu-5435080895440121384-0
Mean variance for telugu-5435080895440121384-0: 0.022181041538715363
Mean std for for telugu-5435080895440121384-0: 0.11590149253606796
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu--1182505954974481191-2
Mean variance for telugu--1182505954974481191-2: 0.030901657417416573
Mean std for for telugu--1182505954974481191-2: 0.1411714106798172
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu-119276511844068401-0
Mean variance for telugu-119276511844068401-0: 0.02508961223065853
Mean std for for telugu-119276511844068401-0: 0.12169406563043594
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu--4111208545071789922-0
Mean variance for telugu--4111208545071789922-0: 0.02546744979918003
Mean std for for telugu--4111208545071789922-0: 0.12283173203468323
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: telugu--5922002196428211484-132
Mean variance for telugu--5922002196428211484-132: 0.06798010319471359
Mean std for for telugu--5922002196428211484-132: 0.20456059277057648
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu--1817004721681155192-3
Mean variance for telugu--1817004721681155192-3: 0.029800700023770332
Mean std for for telugu--1817004721681155192-3: 0.1336863487958908
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu-1602214480303968359-1
Mean variance for telugu-1602214480303968359-1: 0.024081170558929443
Mean std for for telugu-1602214480303968359-1: 0.1244281753897667
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: telugu--6495674712575945374-0
Mean variance for telugu--6495674712575945374-0: 0.02472439408302307
Mean std for for telugu--6495674712575945374-0: 0.12065567821264267

######## Language: finnish ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: finnish-6987763079741579998-0
Mean variance for finnish-6987763079741579998-0: 0.025699837133288383
Mean std for for finnish-6987763079741579998-0: 0.11808183789253235
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: finnish--8516625414052383903-0
Mean variance for finnish--8516625414052383903-0: 0.02679884433746338
Mean std for for finnish--8516625414052383903-0: 0.1273026466369629
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: finnish-4168898766124519517-0
Mean variance for finnish-4168898766124519517-0: 0.06599753350019455
Mean std for for finnish-4168898766124519517-0: 0.2055455893278122
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: finnish-783166898848672321-4
Mean variance for finnish-783166898848672321-4: 0.03204496577382088
Mean std for for finnish-783166898848672321-4: 0.13770993053913116
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: finnish-2208556840820233322-0
Mean variance for finnish-2208556840820233322-0: 0.03185046836733818
Mean std for for finnish-2208556840820233322-0: 0.13687346875667572
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: finnish--1981034637152391615-58
Mean variance for finnish--1981034637152391615-58: 0.014923438429832458
Mean std for for finnish--1981034637152391615-58: 0.08973488956689835
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: finnish-8689148941295949475-9
Mean variance for finnish-8689148941295949475-9: 0.014043844304978848
Mean std for for finnish-8689148941295949475-9: 0.08895715326070786
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: finnish-6900867945323517614-2
Mean variance for finnish-6900867945323517614-2: 0.11876428127288818
Mean std for for finnish-6900867945323517614-2: 0.2555360496044159
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: finnish-8023130170017405987-1
Mean variance for finnish-8023130170017405987-1: 0.01985877938568592
Mean std for for finnish-8023130170017405987-1: 0.09997238963842392
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: finnish-5001457972111781248-0
Mean variance for finnish-5001457972111781248-0: 0.016524724662303925
Mean std for for finnish-5001457972111781248-0: 0.09565331786870956

######## Language: swahili ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swahili-7146838206539641546-10
Mean variance for swahili-7146838206539641546-10: 0.023854216560721397
Mean std for for swahili-7146838206539641546-10: 0.12218720465898514
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swahili-7655634199707176439-0
Mean variance for swahili-7655634199707176439-0: 0.0177354346960783
Mean std for for swahili-7655634199707176439-0: 0.0998280942440033
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swahili--4427180714267750534-1
Mean variance for swahili--4427180714267750534-1: 0.027673913165926933
Mean std for for swahili--4427180714267750534-1: 0.12838391959667206
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swahili-4141779435061573138-0
Mean variance for swahili-4141779435061573138-0: 0.017730193212628365
Mean std for for swahili-4141779435061573138-0: 0.09932618588209152
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: swahili--5424518593960879661-0
Mean variance for swahili--5424518593960879661-0: 0.016048787161707878
Mean std for for swahili--5424518593960879661-0: 0.09552514553070068
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swahili-4281845253405461584-0
Mean variance for swahili-4281845253405461584-0: 0.03403432294726372
Mean std for for swahili-4281845253405461584-0: 0.14558720588684082
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swahili-4899164839984299762-2
Mean variance for swahili-4899164839984299762-2: 0.021622374653816223
Mean std for for swahili-4899164839984299762-2: 0.11383213847875595
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swahili-1288750786498500530-0
Mean variance for swahili-1288750786498500530-0: 0.025972971692681313
Mean std for for swahili-1288750786498500530-0: 0.12245938181877136
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swahili--2671134792844015228-3
Mean variance for swahili--2671134792844015228-3: 0.017012467607855797
Mean std for for swahili--2671134792844015228-3: 0.09422138333320618
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: swahili-4873225622490039485-2
Mean variance for swahili-4873225622490039485-2: 0.015749020501971245
Mean std for for swahili-4873225622490039485-2: 0.09438208490610123

######## Language: korean ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: korean--2869472392602314906-0
Mean variance for korean--2869472392602314906-0: 0.07261204719543457
Mean std for for korean--2869472392602314906-0: 0.206479012966156
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: korean-4375199563921600155-0
Mean variance for korean-4375199563921600155-0: 0.026568902656435966
Mean std for for korean-4375199563921600155-0: 0.13075272738933563
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: korean--1715118423211755607-13
Mean variance for korean--1715118423211755607-13: 0.026378462091088295
Mean std for for korean--1715118423211755607-13: 0.12798257172107697
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: korean--8028977936696142934-9
Mean variance for korean--8028977936696142934-9: 0.0284044798463583
Mean std for for korean--8028977936696142934-9: 0.13435399532318115
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: korean-2807245034690443837-5
Mean variance for korean-2807245034690443837-5: 0.05764131247997284
Mean std for for korean-2807245034690443837-5: 0.1858171671628952
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: korean-3862451817164408576-0
Mean variance for korean-3862451817164408576-0: 0.029522007331252098
Mean std for for korean-3862451817164408576-0: 0.13251830637454987
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: korean-148115504649351135-0
Mean variance for korean-148115504649351135-0: 0.029694335535168648
Mean std for for korean-148115504649351135-0: 0.13970373570919037
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: korean--2885837157239647036-2
Mean variance for korean--2885837157239647036-2: 0.07040636241436005
Mean std for for korean--2885837157239647036-2: 0.20346485078334808
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: korean--1743220297777040002-22
Mean variance for korean--1743220297777040002-22: 0.0865633487701416
Mean std for for korean--1743220297777040002-22: 0.2293190211057663
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: korean-3268522368206106332-0
Mean variance for korean-3268522368206106332-0: 0.10715734213590622
Mean std for for korean-3268522368206106332-0: 0.2737232446670532

######## Language: indonesian ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: indonesian-9141868818310916091-0
Mean variance for indonesian-9141868818310916091-0: 0.02243315614759922
Mean std for for indonesian-9141868818310916091-0: 0.11274266242980957
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: indonesian-4609394337632433932-1
Mean variance for indonesian-4609394337632433932-1: 0.06667258590459824
Mean std for for indonesian-4609394337632433932-1: 0.20449180901050568
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: indonesian-2763468883290577923-0
Mean variance for indonesian-2763468883290577923-0: 0.017337357625365257
Mean std for for indonesian-2763468883290577923-0: 0.09582199901342392
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: indonesian-5633590583948933406-0
Mean variance for indonesian-5633590583948933406-0: 0.0153892757371068
Mean std for for indonesian-5633590583948933406-0: 0.09234655648469925
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: indonesian--5961409780035435015-0
Mean variance for indonesian--5961409780035435015-0: 0.016424326226115227
Mean std for for indonesian--5961409780035435015-0: 0.09272386878728867
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: indonesian-6274547934693326697-0
Mean variance for indonesian-6274547934693326697-0: 0.017169246450066566
Mean std for for indonesian-6274547934693326697-0: 0.09548678249120712
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: indonesian--2516321763567853082-0
Mean variance for indonesian--2516321763567853082-0: 0.015120097436010838
Mean std for for indonesian--2516321763567853082-0: 0.09110478311777115
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: indonesian-2048796427556239759-4
Mean variance for indonesian-2048796427556239759-4: 0.02606021799147129
Mean std for for indonesian-2048796427556239759-4: 0.11950886994600296
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: indonesian-6246592469157278547-2
Mean variance for indonesian-6246592469157278547-2: 0.019168416038155556
Mean std for for indonesian-6246592469157278547-2: 0.10310658067464828
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: indonesian--3724318458930736973-1
Mean variance for indonesian--3724318458930736973-1: 0.013920593075454235
Mean std for for indonesian--3724318458930736973-1: 0.08856013417243958

######## Language: english ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: english-2852412434797041176-6
Mean variance for english-2852412434797041176-6: 0.09050559997558594
Mean std for for english-2852412434797041176-6: 0.24362891912460327
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: english--1463732605740571606-0
Mean variance for english--1463732605740571606-0: 0.023687414824962616
Mean std for for english--1463732605740571606-0: 0.1075272336602211
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: english-5441411281255470421-0
Mean variance for english-5441411281255470421-0: 0.019003551453351974
Mean std for for english-5441411281255470421-0: 0.10006088763475418
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 118, ratio = 0.4609
ID text: english-7294054492486093447-1
Mean variance for english-7294054492486093447-1: 0.059573400765657425
Mean std for for english-7294054492486093447-1: 0.1771281212568283
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: english-8820750127045023244-0
Mean variance for english-8820750127045023244-0: 0.035084228962659836
Mean std for for english-8820750127045023244-0: 0.1374586820602417
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: english--506693546683012611-2
Mean variance for english--506693546683012611-2: 0.043303027749061584
Mean std for for english--506693546683012611-2: 0.16092664003372192
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: english-745411798111651115-0
Mean variance for english-745411798111651115-0: 0.020727595314383507
Mean std for for english-745411798111651115-0: 0.1050182580947876
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: english-7740772185887912651-0
Mean variance for english-7740772185887912651-0: 0.02386864274740219
Mean std for for english-7740772185887912651-0: 0.10686945915222168
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: english-383873188776267137-19
Mean variance for english-383873188776267137-19: 0.018581904470920563
Mean std for for english-383873188776267137-19: 0.09885291010141373
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: english--8277537578703156284-0
Mean variance for english--8277537578703156284-0: 0.022032814100384712
Mean std for for english--8277537578703156284-0: 0.10895218700170517

######## Computing SDs for task: glue ########


######## Language: cola ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: cola_228
Mean variance for cola_228: 0.04992879554629326
Mean std for for cola_228: 0.19659177958965302
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: cola_51
Mean variance for cola_51: 0.04301561415195465
Mean std for for cola_51: 0.18503303825855255
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: cola_563
Mean variance for cola_563: 0.09564555436372757
Mean std for for cola_563: 0.27570173144340515
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 122, ratio = 0.4766
ID text: cola_501
Mean variance for cola_501: 0.05185839161276817
Mean std for for cola_501: 0.20277468860149384
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: cola_457
Mean variance for cola_457: 0.06284093111753464
Mean std for for cola_457: 0.22032874822616577
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: cola_285
Mean variance for cola_285: 0.04831526800990105
Mean std for for cola_285: 0.1965707540512085
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: cola_209
Mean variance for cola_209: 0.04482614994049072
Mean std for for cola_209: 0.18642087280750275
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: cola_178
Mean variance for cola_178: 0.052808549255132675
Mean std for for cola_178: 0.20622949302196503
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: cola_864
Mean variance for cola_864: 0.04508553445339203
Mean std for for cola_864: 0.19056914746761322
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: cola_65
Mean variance for cola_65: 0.05316856503486633
Mean std for for cola_65: 0.19827179610729218

######## Language: mnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_488
Mean variance for mnli_488: 0.03618110716342926
Mean std for for mnli_488: 0.1546185463666916
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_1535
Mean variance for mnli_1535: 0.03914691507816315
Mean std for for mnli_1535: 0.15452782809734344
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_3582
Mean variance for mnli_3582: 0.052558258175849915
Mean std for for mnli_3582: 0.1891258805990219
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_3811
Mean variance for mnli_3811: 0.04025661572813988
Mean std for for mnli_3811: 0.16649921238422394
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: mnli_8279
Mean variance for mnli_8279: 0.048124536871910095
Mean std for for mnli_8279: 0.18819010257720947
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_434
Mean variance for mnli_434: 0.030488574877381325
Mean std for for mnli_434: 0.1274781972169876
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_9195
Mean variance for mnli_9195: 0.04363768920302391
Mean std for for mnli_9195: 0.18802951276302338
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_3257
Mean variance for mnli_3257: 0.0359288714826107
Mean std for for mnli_3257: 0.15883149206638336
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_8928
Mean variance for mnli_8928: 0.03687796741724014
Mean std for for mnli_8928: 0.15213936567306519
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mnli_6873
Mean variance for mnli_6873: 0.03865105286240578
Mean std for for mnli_6873: 0.14763495326042175

######## Language: mrpc ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 122, ratio = 0.4766
ID text: mrpc_451
Mean variance for mrpc_451: 0.0561436228454113
Mean std for for mrpc_451: 0.18375355005264282
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mrpc_919
Mean variance for mrpc_919: 0.039262086153030396
Mean std for for mrpc_919: 0.15514789521694183
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mrpc_1206
Mean variance for mrpc_1206: 0.04060004651546478
Mean std for for mrpc_1206: 0.16766683757305145
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mrpc_569
Mean variance for mrpc_569: 0.042907897382974625
Mean std for for mrpc_569: 0.1617606282234192
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mrpc_1657
Mean variance for mrpc_1657: 0.03221619874238968
Mean std for for mrpc_1657: 0.1303555816411972
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mrpc_13
Mean variance for mrpc_13: 0.03894030675292015
Mean std for for mrpc_13: 0.15457873046398163
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mrpc_1554
Mean variance for mrpc_1554: 0.02862793393433094
Mean std for for mrpc_1554: 0.1221562996506691
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mrpc_1650
Mean variance for mrpc_1650: 0.13169769942760468
Mean std for for mrpc_1650: 0.2924629747867584
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mrpc_326
Mean variance for mrpc_326: 0.035917993634939194
Mean std for for mrpc_326: 0.15189296007156372
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: mrpc_1429
Mean variance for mrpc_1429: 0.040589045733213425
Mean std for for mrpc_1429: 0.1551990956068039

######## Language: qnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qnli_3462
Mean variance for qnli_3462: 0.04565689340233803
Mean std for for qnli_3462: 0.1680925339460373
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qnli_2787
Mean variance for qnli_2787: 0.029413143172860146
Mean std for for qnli_2787: 0.12675966322422028
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qnli_2276
Mean variance for qnli_2276: 0.03098568134009838
Mean std for for qnli_2276: 0.13440124690532684
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qnli_1273
Mean variance for qnli_1273: 0.0301008690148592
Mean std for for qnli_1273: 0.138279989361763
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: qnli_1763
Mean variance for qnli_1763: 0.03920212760567665
Mean std for for qnli_1763: 0.15730057656764984
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 123, ratio = 0.4805
ID text: qnli_2757
Mean variance for qnli_2757: 0.050292983651161194
Mean std for for qnli_2757: 0.17257671058177948
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qnli_837
Mean variance for qnli_837: 0.037532735615968704
Mean std for for qnli_837: 0.15167511999607086
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qnli_759
Mean variance for qnli_759: 0.02182314358651638
Mean std for for qnli_759: 0.10600411891937256
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qnli_3112
Mean variance for qnli_3112: 0.04366515576839447
Mean std for for qnli_3112: 0.16353224217891693
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: qnli_792
Mean variance for qnli_792: 0.04745960235595703
Mean std for for qnli_792: 0.16808807849884033

######## Language: qqp ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qqp_188208
Mean variance for qqp_188208: 0.04695754870772362
Mean std for for qqp_188208: 0.18633557856082916
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 125, ratio = 0.4883
ID text: qqp_180331
Mean variance for qqp_180331: 0.04140757396817207
Mean std for for qqp_180331: 0.17219625413417816
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qqp_316526
Mean variance for qqp_316526: 0.0390196293592453
Mean std for for qqp_316526: 0.15636681020259857
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qqp_138685
Mean variance for qqp_138685: 0.030381061136722565
Mean std for for qqp_138685: 0.1281728893518448
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qqp_22780
Mean variance for qqp_22780: 0.04539896547794342
Mean std for for qqp_22780: 0.1835065633058548
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qqp_382589
Mean variance for qqp_382589: 0.03442284092307091
Mean std for for qqp_382589: 0.1500023454427719
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qqp_240870
Mean variance for qqp_240870: 0.04927600920200348
Mean std for for qqp_240870: 0.1856093555688858
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: qqp_281137
Mean variance for qqp_281137: 0.04402506723999977
Mean std for for qqp_281137: 0.16896186769008636
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 117, ratio = 0.4570
ID text: qqp_65444
Mean variance for qqp_65444: 0.04749344289302826
Mean std for for qqp_65444: 0.18496595323085785
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: qqp_198461
Mean variance for qqp_198461: 0.03345261886715889
Mean std for for qqp_198461: 0.1506057232618332

######## Language: rte ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_322
Mean variance for rte_322: 0.0410846509039402
Mean std for for rte_322: 0.16275091469287872
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_2261
Mean variance for rte_2261: 0.035859424620866776
Mean std for for rte_2261: 0.16159574687480927
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_1200
Mean variance for rte_1200: 0.02829333394765854
Mean std for for rte_1200: 0.12231231480836868
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_2574
Mean variance for rte_2574: 0.023549063131213188
Mean std for for rte_2574: 0.1088014543056488
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_2533
Mean variance for rte_2533: 0.021391699090600014
Mean std for for rte_2533: 0.10411950945854187
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_1481
Mean variance for rte_1481: 0.03482687100768089
Mean std for for rte_1481: 0.14349311590194702
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_2364
Mean variance for rte_2364: 0.036833297461271286
Mean std for for rte_2364: 0.13983115553855896
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_787
Mean variance for rte_787: 0.03439997509121895
Mean std for for rte_787: 0.1421494334936142
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 124, ratio = 0.4844
ID text: rte_2885
Mean variance for rte_2885: 0.038286417722702026
Mean std for for rte_2885: 0.14225070178508759
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: rte_284
Mean variance for rte_284: 0.04380420967936516
Mean std for for rte_284: 0.16741210222244263

######## Language: sst2 ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: sst2_93
Mean variance for sst2_93: 0.036479342728853226
Mean std for for sst2_93: 0.15888144075870514
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: sst2_1354
Mean variance for sst2_1354: 0.05034582316875458
Mean std for for sst2_1354: 0.19827014207839966
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: sst2_466
Mean variance for sst2_466: 0.05112285539507866
Mean std for for sst2_466: 0.2010130137205124
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: sst2_1583
Mean variance for sst2_1583: 0.03441702574491501
Mean std for for sst2_1583: 0.14738275110721588
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: sst2_592
Mean variance for sst2_592: 0.03495875746011734
Mean std for for sst2_592: 0.14957498013973236
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: sst2_163
Mean variance for sst2_163: 0.061540525406599045
Mean std for for sst2_163: 0.22274149954319
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: sst2_1751
Mean variance for sst2_1751: 0.0331868976354599
Mean std for for sst2_1751: 0.16237245500087738
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: sst2_476
Mean variance for sst2_476: 0.030740531161427498
Mean std for for sst2_476: 0.14564253389835358
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 122, ratio = 0.4766
ID text: sst2_1774
Mean variance for sst2_1774: 0.047269999980926514
Mean std for for sst2_1774: 0.18360990285873413
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: sst2_206
Mean variance for sst2_206: 0.040413226932287216
Mean std for for sst2_206: 0.172144815325737

######## Language: stsb ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 127, ratio = 0.4961
ID text: stsb_778
Mean variance for stsb_778: 0.04802371561527252
Mean std for for stsb_778: 0.18717992305755615
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: stsb_569
Mean variance for stsb_569: 0.05551685765385628
Mean std for for stsb_569: 0.2067774385213852
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: stsb_928
Mean variance for stsb_928: 0.03136454150080681
Mean std for for stsb_928: 0.13012276589870453
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: stsb_1301
Mean variance for stsb_1301: 0.039793435484170914
Mean std for for stsb_1301: 0.16386890411376953
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: stsb_747
Mean variance for stsb_747: 0.04349703714251518
Mean std for for stsb_747: 0.16466893255710602
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: stsb_333
Mean variance for stsb_333: 0.0352168083190918
Mean std for for stsb_333: 0.15540198981761932
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: stsb_758
Mean variance for stsb_758: 0.04712933301925659
Mean std for for stsb_758: 0.1735319346189499
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: stsb_727
Mean variance for stsb_727: 0.03908897563815117
Mean std for for stsb_727: 0.17180873453617096
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 122, ratio = 0.4766
ID text: stsb_429
Mean variance for stsb_429: 0.04847651347517967
Mean std for for stsb_429: 0.19031257927417755
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: stsb_1372
Mean variance for stsb_1372: 0.03195180743932724
Mean std for for stsb_1372: 0.1503848284482956

######## Language: wnli ######## 

Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_68
Mean variance for wnli_68: 0.0361492820084095
Mean std for for wnli_68: 0.14307056367397308
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_18
Mean variance for wnli_18: 0.03268149867653847
Mean std for for wnli_18: 0.13067114353179932
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_43
Mean variance for wnli_43: 0.035804376006126404
Mean std for for wnli_43: 0.14397470653057098
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_136
Mean variance for wnli_136: 0.036656275391578674
Mean std for for wnli_136: 0.1450866013765335
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 126, ratio = 0.4922
ID text: wnli_62
Mean variance for wnli_62: 0.039822790771722794
Mean std for for wnli_62: 0.15859664976596832
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_41
Mean variance for wnli_41: 0.04405524209141731
Mean std for for wnli_41: 0.15920798480510712
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_118
Mean variance for wnli_118: 0.037457164376974106
Mean std for for wnli_118: 0.15290164947509766
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_97
Mean variance for wnli_97: 0.02795357257127762
Mean std for for wnli_97: 0.12747140228748322
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_69
Mean variance for wnli_69: 0.034840840846300125
Mean std for for wnli_69: 0.15440808236598969
Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
Masked count: 128, ratio = 0.5000
ID text: wnli_142
Mean variance for wnli_142: 0.030487025156617165
Mean std for for wnli_142: 0.13062141835689545
SD per task: {'ner': {'amh': {'amh_0': 0.0799119621515274, 'amh_1': 0.10796644538640976, 'amh_2': 0.12122237682342529, 'amh_3': 0.12599457800388336, 'amh_4': 0.11884377151727676, 'amh_5': 0.13510353863239288, 'amh_6': 0.1318458765745163, 'amh_7': 0.12966839969158173, 'amh_8': 0.11138450354337692, 'amh_9': 0.11378861218690872}, 'conll_2003_en': {'conll_2003_en_0': 0.14300893247127533, 'conll_2003_en_1': 0.06377743929624557, 'conll_2003_en_2': 0.027643123641610146, 'conll_2003_en_3': 0.038348741829395294, 'conll_2003_en_4': 0.05375673249363899, 'conll_2003_en_5': 0.13601313531398773, 'conll_2003_en_6': 0.122132308781147, 'conll_2003_en_7': 0.14160756766796112, 'conll_2003_en_8': 0.13374707102775574, 'conll_2003_en_9': 0.03315339237451553}, 'hau': {'hau_0': 0.021873846650123596, 'hau_1': 0.04037005826830864, 'hau_2': 0.14414571225643158, 'hau_3': 0.023096740245819092, 'hau_4': 0.023155445232987404, 'hau_5': 0.02219722978770733, 'hau_6': 0.03236513212323189, 'hau_7': 0.023617245256900787, 'hau_8': 0.021544577553868294, 'hau_9': 0.031039884313941002}, 'ibo': {'ibo_0': 0.03282955661416054, 'ibo_1': 0.051568806171417236, 'ibo_2': 0.031911592930555344, 'ibo_3': 0.039556834846735, 'ibo_4': 0.03304843604564667, 'ibo_5': 0.02675618790090084, 'ibo_6': 0.028813710436224937, 'ibo_7': 0.025863289833068848, 'ibo_8': 0.03683732450008392, 'ibo_9': 0.025479277595877647}, 'kin': {'kin_0': 0.024949118494987488, 'kin_1': 0.0333612821996212, 'kin_2': 0.03638177737593651, 'kin_3': 0.02655993215739727, 'kin_4': 0.02669629454612732, 'kin_5': 0.03721396625041962, 'kin_6': 0.019751179963350296, 'kin_7': 0.026762589812278748, 'kin_8': 0.028092950582504272, 'kin_9': 0.022681646049022675}, 'lug': {'lug_0': 0.02484641782939434, 'lug_1': 0.02866673283278942, 'lug_2': 0.01724058948457241, 'lug_3': 0.019789090380072594, 'lug_4': 0.03169019892811775, 'lug_5': 0.024116287007927895, 'lug_6': 0.022425903007388115, 'lug_7': 0.02575686387717724, 'lug_8': 0.03681711107492447, 'lug_9': 0.02876836620271206}, 'luo': {'luo_0': 0.020432600751519203, 'luo_1': 0.031761545687913895, 'luo_2': 0.027631105855107307, 'luo_3': 0.01795073039829731, 'luo_4': 0.030418552458286285, 'luo_5': 0.026558637619018555, 'luo_6': 0.021356739103794098, 'luo_7': 0.04589661583304405, 'luo_8': 0.03756233677268028, 'luo_9': 0.047013938426971436}, 'pcm': {'pcm_0': 0.03012041188776493, 'pcm_1': 0.03239775076508522, 'pcm_2': 0.0278239194303751, 'pcm_3': 0.02707619220018387, 'pcm_4': 0.02873772569000721, 'pcm_5': 0.04562986269593239, 'pcm_6': 0.029905932024121284, 'pcm_7': 0.028790300711989403, 'pcm_8': 0.030348151922225952, 'pcm_9': 0.03215539827942848}, 'swa': {'swa_0': 0.025247326120734215, 'swa_1': 0.035273369401693344, 'swa_2': 0.02689284086227417, 'swa_3': 0.0341678149998188, 'swa_4': 0.01908901147544384, 'swa_5': 0.017945220693945885, 'swa_6': 0.02362828515470028, 'swa_7': 0.0390375480055809, 'swa_8': 0.02332216687500477, 'swa_9': 0.03995630145072937}, 'wol': {'wol_0': 0.025968125090003014, 'wol_1': 0.02812768518924713, 'wol_2': 0.029500829055905342, 'wol_3': 0.05404342710971832, 'wol_4': 0.030166367068886757, 'wol_5': 0.03182664141058922, 'wol_6': 0.12184125185012817, 'wol_7': 0.028505362570285797, 'wol_8': 0.040420930832624435, 'wol_9': 0.04213322699069977}, 'yor': {'yor_0': 0.1148691400885582, 'yor_1': 0.11786264181137085, 'yor_2': 0.031127428635954857, 'yor_3': 0.024241164326667786, 'yor_4': 0.12558306753635406, 'yor_5': 0.07732990384101868, 'yor_6': 0.02776460535824299, 'yor_7': 0.11933455616235733, 'yor_8': 0.024205615743994713, 'yor_9': 0.12705114483833313}, 'zh': {'zh_0': 0.09765227884054184, 'zh_1': 0.08889772742986679, 'zh_2': 0.11478129029273987, 'zh_3': 0.14907191693782806, 'zh_4': 0.09769292920827866, 'zh_5': 0.15693213045597076, 'zh_6': 0.08904007077217102, 'zh_7': 0.12846264243125916, 'zh_8': 0.11467784643173218, 'zh_9': 0.09625036269426346}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.043340567499399185, 'arabic--3340323169760881569-0': 0.031887754797935486, 'arabic-4544770624843559444-1': 0.030321739614009857, 'arabic-891952409566422966-0': 0.038613155484199524, 'arabic-3659291834714572527-0': 0.055217891931533813, 'arabic-9215226117011890166-0': 0.028775518760085106, 'arabic-6300896128538259469-0': 0.043701767921447754, 'arabic-2382507508588518905-0': 0.03310457244515419, 'arabic-1871632801094859741-1': 0.030274705961346626, 'arabic--7365809756232083807-0': 0.03445979580283165}, 'russian': {'russian-3457655197371763238-61': 0.023470714688301086, 'russian--1914807805318993335-49': 0.032015178352594376, 'russian--3307989180606173904-1': 0.018474692478775978, 'russian--2219512001175315660-0': 0.021100357174873352, 'russian--7076080992904718941-0': 0.021079614758491516, 'russian--6565862953558739013-1': 0.020617125555872917, 'russian--5098374684590548031-42': 0.04028933122754097, 'russian-3573734219967447693-1': 0.02860863506793976, 'russian--4521001374120505750-6': 0.029870837926864624, 'russian--1308382244018658424-9': 0.02190352976322174}, 'bengali': {'bengali--1199493965132146131-3': 0.06969815492630005, 'bengali-1807801556888134437-2': 0.06681550294160843, 'bengali-2113189855114052041-2': 0.055254653096199036, 'bengali--2527914488250041207-0': 0.07289310544729233, 'bengali--8260793280894408063-14': 0.04096752777695656, 'bengali-8313009204852557186-4': 0.06868350505828857, 'bengali--415964033364840061-0': 0.07809760421514511, 'bengali--4696865548928858824-5': 0.0644037202000618, 'bengali-6505224142472931712-1': 0.06488301604986191, 'bengali-599666913917674019-13': 0.09684144705533981}, 'telugu': {'telugu--3977923017846260053-0': 0.027404332533478737, 'telugu-2254198842560317781-0': 0.02761744149029255, 'telugu-5435080895440121384-0': 0.022181041538715363, 'telugu--1182505954974481191-2': 0.030901657417416573, 'telugu-119276511844068401-0': 0.02508961223065853, 'telugu--4111208545071789922-0': 0.02546744979918003, 'telugu--5922002196428211484-132': 0.06798010319471359, 'telugu--1817004721681155192-3': 0.029800700023770332, 'telugu-1602214480303968359-1': 0.024081170558929443, 'telugu--6495674712575945374-0': 0.02472439408302307}, 'finnish': {'finnish-6987763079741579998-0': 0.025699837133288383, 'finnish--8516625414052383903-0': 0.02679884433746338, 'finnish-4168898766124519517-0': 0.06599753350019455, 'finnish-783166898848672321-4': 0.03204496577382088, 'finnish-2208556840820233322-0': 0.03185046836733818, 'finnish--1981034637152391615-58': 0.014923438429832458, 'finnish-8689148941295949475-9': 0.014043844304978848, 'finnish-6900867945323517614-2': 0.11876428127288818, 'finnish-8023130170017405987-1': 0.01985877938568592, 'finnish-5001457972111781248-0': 0.016524724662303925}, 'swahili': {'swahili-7146838206539641546-10': 0.023854216560721397, 'swahili-7655634199707176439-0': 0.0177354346960783, 'swahili--4427180714267750534-1': 0.027673913165926933, 'swahili-4141779435061573138-0': 0.017730193212628365, 'swahili--5424518593960879661-0': 0.016048787161707878, 'swahili-4281845253405461584-0': 0.03403432294726372, 'swahili-4899164839984299762-2': 0.021622374653816223, 'swahili-1288750786498500530-0': 0.025972971692681313, 'swahili--2671134792844015228-3': 0.017012467607855797, 'swahili-4873225622490039485-2': 0.015749020501971245}, 'korean': {'korean--2869472392602314906-0': 0.07261204719543457, 'korean-4375199563921600155-0': 0.026568902656435966, 'korean--1715118423211755607-13': 0.026378462091088295, 'korean--8028977936696142934-9': 0.0284044798463583, 'korean-2807245034690443837-5': 0.05764131247997284, 'korean-3862451817164408576-0': 0.029522007331252098, 'korean-148115504649351135-0': 0.029694335535168648, 'korean--2885837157239647036-2': 0.07040636241436005, 'korean--1743220297777040002-22': 0.0865633487701416, 'korean-3268522368206106332-0': 0.10715734213590622}, 'indonesian': {'indonesian-9141868818310916091-0': 0.02243315614759922, 'indonesian-4609394337632433932-1': 0.06667258590459824, 'indonesian-2763468883290577923-0': 0.017337357625365257, 'indonesian-5633590583948933406-0': 0.0153892757371068, 'indonesian--5961409780035435015-0': 0.016424326226115227, 'indonesian-6274547934693326697-0': 0.017169246450066566, 'indonesian--2516321763567853082-0': 0.015120097436010838, 'indonesian-2048796427556239759-4': 0.02606021799147129, 'indonesian-6246592469157278547-2': 0.019168416038155556, 'indonesian--3724318458930736973-1': 0.013920593075454235}, 'english': {'english-2852412434797041176-6': 0.09050559997558594, 'english--1463732605740571606-0': 0.023687414824962616, 'english-5441411281255470421-0': 0.019003551453351974, 'english-7294054492486093447-1': 0.059573400765657425, 'english-8820750127045023244-0': 0.035084228962659836, 'english--506693546683012611-2': 0.043303027749061584, 'english-745411798111651115-0': 0.020727595314383507, 'english-7740772185887912651-0': 0.02386864274740219, 'english-383873188776267137-19': 0.018581904470920563, 'english--8277537578703156284-0': 0.022032814100384712}}, 'glue': {'cola': {'cola_228': 0.04992879554629326, 'cola_51': 0.04301561415195465, 'cola_563': 0.09564555436372757, 'cola_501': 0.05185839161276817, 'cola_457': 0.06284093111753464, 'cola_285': 0.04831526800990105, 'cola_209': 0.04482614994049072, 'cola_178': 0.052808549255132675, 'cola_864': 0.04508553445339203, 'cola_65': 0.05316856503486633}, 'mnli': {'mnli_488': 0.03618110716342926, 'mnli_1535': 0.03914691507816315, 'mnli_3582': 0.052558258175849915, 'mnli_3811': 0.04025661572813988, 'mnli_8279': 0.048124536871910095, 'mnli_434': 0.030488574877381325, 'mnli_9195': 0.04363768920302391, 'mnli_3257': 0.0359288714826107, 'mnli_8928': 0.03687796741724014, 'mnli_6873': 0.03865105286240578}, 'mrpc': {'mrpc_451': 0.0561436228454113, 'mrpc_919': 0.039262086153030396, 'mrpc_1206': 0.04060004651546478, 'mrpc_569': 0.042907897382974625, 'mrpc_1657': 0.03221619874238968, 'mrpc_13': 0.03894030675292015, 'mrpc_1554': 0.02862793393433094, 'mrpc_1650': 0.13169769942760468, 'mrpc_326': 0.035917993634939194, 'mrpc_1429': 0.040589045733213425}, 'qnli': {'qnli_3462': 0.04565689340233803, 'qnli_2787': 0.029413143172860146, 'qnli_2276': 0.03098568134009838, 'qnli_1273': 0.0301008690148592, 'qnli_1763': 0.03920212760567665, 'qnli_2757': 0.050292983651161194, 'qnli_837': 0.037532735615968704, 'qnli_759': 0.02182314358651638, 'qnli_3112': 0.04366515576839447, 'qnli_792': 0.04745960235595703}, 'qqp': {'qqp_188208': 0.04695754870772362, 'qqp_180331': 0.04140757396817207, 'qqp_316526': 0.0390196293592453, 'qqp_138685': 0.030381061136722565, 'qqp_22780': 0.04539896547794342, 'qqp_382589': 0.03442284092307091, 'qqp_240870': 0.04927600920200348, 'qqp_281137': 0.04402506723999977, 'qqp_65444': 0.04749344289302826, 'qqp_198461': 0.03345261886715889}, 'rte': {'rte_322': 0.0410846509039402, 'rte_2261': 0.035859424620866776, 'rte_1200': 0.02829333394765854, 'rte_2574': 0.023549063131213188, 'rte_2533': 0.021391699090600014, 'rte_1481': 0.03482687100768089, 'rte_2364': 0.036833297461271286, 'rte_787': 0.03439997509121895, 'rte_2885': 0.038286417722702026, 'rte_284': 0.04380420967936516}, 'sst2': {'sst2_93': 0.036479342728853226, 'sst2_1354': 0.05034582316875458, 'sst2_466': 0.05112285539507866, 'sst2_1583': 0.03441702574491501, 'sst2_592': 0.03495875746011734, 'sst2_163': 0.061540525406599045, 'sst2_1751': 0.0331868976354599, 'sst2_476': 0.030740531161427498, 'sst2_1774': 0.047269999980926514, 'sst2_206': 0.040413226932287216}, 'stsb': {'stsb_778': 0.04802371561527252, 'stsb_569': 0.05551685765385628, 'stsb_928': 0.03136454150080681, 'stsb_1301': 0.039793435484170914, 'stsb_747': 0.04349703714251518, 'stsb_333': 0.0352168083190918, 'stsb_758': 0.04712933301925659, 'stsb_727': 0.03908897563815117, 'stsb_429': 0.04847651347517967, 'stsb_1372': 0.03195180743932724}, 'wnli': {'wnli_68': 0.0361492820084095, 'wnli_18': 0.03268149867653847, 'wnli_43': 0.035804376006126404, 'wnli_136': 0.036656275391578674, 'wnli_62': 0.039822790771722794, 'wnli_41': 0.04405524209141731, 'wnli_118': 0.037457164376974106, 'wnli_97': 0.02795357257127762, 'wnli_69': 0.034840840846300125, 'wnli_142': 0.030487025156617165}}}
Saving data in SD_per_task_mask_0.5.json
Saving data in var_per_task_mask_0.5.json

UNCERTAINTY (SD)

Mean loss per task: {'ner': {'amh': 0.11757300049066544, 'conll_2003_en': 0.08931884914636612, 'hau': 0.03834058716893196, 'ibo': 0.03326650708913803, 'kin': 0.028245072811841965, 'lug': 0.0260117556899786, 'luo': 0.030658280476927757, 'pcm': 0.03129856660962105, 'swa': 0.028455987572669983, 'wol': 0.04325338453054428, 'yor': 0.07893692702054977, 'zh': 0.1133459210395813}, 'tydiqa': {'arabic': 0.03696974739432335, 'russian': 0.02574300207197666, 'bengali': 0.06785382330417633, 'telugu': 0.030524790287017822, 'finnish': 0.03665066882967949, 'swahili': 0.021743370220065117, 'korean': 0.053494859486818314, 'indonesian': 0.022969529032707214, 'english': 0.035636819899082184}, 'glue': {'cola': 0.05474933236837387, 'mnli': 0.04018516093492508, 'mrpc': 0.04869028180837631, 'qnli': 0.03761323541402817, 'qqp': 0.0411834791302681, 'rte': 0.03383289650082588, 'sst2': 0.042047496885061264, 'stsb': 0.04200590029358864, 'wnli': 0.03559080511331558}}
