The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/26/2024 13:38:15 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/26/2024 13:38:15 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 13:38:15 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 13:38:15 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/26/2024 13:38:16 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/26/2024 13:38:16 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/26/2024 13:38:16 - INFO - __main__ - Running MONTE CARLO experiment: mask_ratio
03/26/2024 13:38:16 - INFO - __main__ - Loading data from loss_per_task_mask_0.2.json
03/26/2024 13:38:16 - INFO - __main__ - 
LOSS

03/26/2024 13:38:16 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8361775279045105, 'conll_2003_en': 0.6316932439804077, 'hau': 0.5832688808441162, 'ibo': 0.5964849591255188, 'kin': 0.6123660802841187, 'lug': 0.5791680812835693, 'luo': 0.603020191192627, 'pcm': 0.6135600209236145, 'swa': 0.6154003739356995, 'wol': 0.6465071439743042, 'yor': 0.6933563947677612, 'zh': 0.8660089373588562}, 'tydiqa': {'arabic': 0.8432731628417969, 'russian': 0.6197614073753357, 'bengali': 0.6985065340995789, 'telugu': 0.7573736906051636, 'finnish': 0.5133179426193237, 'swahili': 0.5124490857124329, 'korean': 0.8400276303291321, 'indonesian': 0.43717026710510254, 'english': 0.2153075635433197}, 'glue': {'cola': 0.32068338990211487, 'mnli': 0.2793184220790863, 'mrpc': 0.22547726333141327, 'qnli': 0.19769296050071716, 'qqp': 0.2389216125011444, 'rte': 0.15409693121910095, 'sst2': 0.4270961880683899, 'stsb': 0.15436623990535736, 'wnli': 0.2638247013092041}}
03/26/2024 13:38:16 - INFO - __main__ - Lowest losses:
03/26/2024 13:38:16 - INFO - __main__ - ID: qqp_198461, Loss: 0.005897085182368755
03/26/2024 13:38:16 - INFO - __main__ - ID: mnli_3582, Loss: 0.006453115958720446
03/26/2024 13:38:16 - INFO - __main__ - ID: cola_228, Loss: 0.008834891021251678
03/26/2024 13:38:16 - INFO - __main__ - ID: stsb_569, Loss: 0.009363707154989243
03/26/2024 13:38:16 - INFO - __main__ - ID: wnli_43, Loss: 0.012806476093828678
03/26/2024 13:38:16 - INFO - __main__ - Highest losses:
03/26/2024 13:38:16 - INFO - __main__ - ID: korean--2885837157239647036-2, Loss: 0.8855056762695312
03/26/2024 13:38:16 - INFO - __main__ - ID: korean--1743220297777040002-22, Loss: 0.8866325616836548
03/26/2024 13:38:16 - INFO - __main__ - ID: zh_0, Loss: 0.8891932964324951
03/26/2024 13:38:16 - INFO - __main__ - ID: arabic-3659291834714572527-0, Loss: 0.9060587286949158
03/26/2024 13:38:16 - INFO - __main__ - ID: zh_4, Loss: 0.9480858445167542
03/26/2024 13:38:16 - INFO - __main__ - Monte Carlo samples: 100
03/26/2024 13:38:16 - INFO - __main__ - Training mode: True
03/26/2024 13:38:16 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/26/2024 13:38:16 - INFO - __main__ - 
######## Language: amh ######## 

03/26/2024 13:38:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:38:16 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:38:16 - INFO - __main__ - ID text: amh_0
03/26/2024 13:39:30 - INFO - __main__ - Mean variance for amh_0: 0.16180524230003357
03/26/2024 13:39:30 - INFO - __main__ - Mean std for for amh_0: 0.3509615659713745
03/26/2024 13:39:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:39:30 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:39:30 - INFO - __main__ - ID text: amh_1
03/26/2024 13:40:44 - INFO - __main__ - Mean variance for amh_1: 0.1410500705242157
03/26/2024 13:40:44 - INFO - __main__ - Mean std for for amh_1: 0.328177273273468
03/26/2024 13:40:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:40:44 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:40:44 - INFO - __main__ - ID text: amh_2
03/26/2024 13:41:55 - INFO - __main__ - Mean variance for amh_2: 0.1703762263059616
03/26/2024 13:41:55 - INFO - __main__ - Mean std for for amh_2: 0.36040809750556946
03/26/2024 13:41:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:41:55 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:41:55 - INFO - __main__ - ID text: amh_3
03/26/2024 13:43:04 - INFO - __main__ - Mean variance for amh_3: 0.14665932953357697
03/26/2024 13:43:04 - INFO - __main__ - Mean std for for amh_3: 0.3324156701564789
03/26/2024 13:43:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:43:04 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:43:04 - INFO - __main__ - ID text: amh_4
03/26/2024 13:44:12 - INFO - __main__ - Mean variance for amh_4: 0.154590904712677
03/26/2024 13:44:12 - INFO - __main__ - Mean std for for amh_4: 0.3451569974422455
03/26/2024 13:44:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:44:12 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:44:12 - INFO - __main__ - ID text: amh_5
03/26/2024 13:45:21 - INFO - __main__ - Mean variance for amh_5: 0.18434493243694305
03/26/2024 13:45:21 - INFO - __main__ - Mean std for for amh_5: 0.3759957551956177
03/26/2024 13:45:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:45:21 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:45:21 - INFO - __main__ - ID text: amh_6
03/26/2024 13:46:29 - INFO - __main__ - Mean variance for amh_6: 0.14228637516498566
03/26/2024 13:46:29 - INFO - __main__ - Mean std for for amh_6: 0.32819870114326477
03/26/2024 13:46:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:46:29 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:46:29 - INFO - __main__ - ID text: amh_7
03/26/2024 13:47:38 - INFO - __main__ - Mean variance for amh_7: 0.16716699302196503
03/26/2024 13:47:38 - INFO - __main__ - Mean std for for amh_7: 0.35755762457847595
03/26/2024 13:47:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:47:38 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:47:38 - INFO - __main__ - ID text: amh_8
03/26/2024 13:48:46 - INFO - __main__ - Mean variance for amh_8: 0.1534067988395691
03/26/2024 13:48:46 - INFO - __main__ - Mean std for for amh_8: 0.3432089388370514
03/26/2024 13:48:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:48:46 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:48:46 - INFO - __main__ - ID text: amh_9
03/26/2024 13:49:55 - INFO - __main__ - Mean variance for amh_9: 0.14304602146148682
03/26/2024 13:49:55 - INFO - __main__ - Mean std for for amh_9: 0.32738950848579407
03/26/2024 13:49:55 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/26/2024 13:49:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:49:55 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:49:55 - INFO - __main__ - ID text: conll_2003_en_0
03/26/2024 13:51:03 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.1439027339220047
03/26/2024 13:51:03 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.3353535830974579
03/26/2024 13:51:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:51:03 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:51:03 - INFO - __main__ - ID text: conll_2003_en_1
03/26/2024 13:52:12 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.06321097165346146
03/26/2024 13:52:12 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.22398404777050018
03/26/2024 13:52:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:52:12 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:52:12 - INFO - __main__ - ID text: conll_2003_en_2
03/26/2024 13:53:20 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.039445340633392334
03/26/2024 13:53:20 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.1548200398683548
03/26/2024 13:53:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:53:20 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:53:20 - INFO - __main__ - ID text: conll_2003_en_3
03/26/2024 13:54:29 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.039505485445261
03/26/2024 13:54:29 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.16595155000686646
03/26/2024 13:54:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:54:29 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:54:29 - INFO - __main__ - ID text: conll_2003_en_4
03/26/2024 13:55:38 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.05819091200828552
03/26/2024 13:55:38 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.21174372732639313
03/26/2024 13:55:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:55:38 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:55:38 - INFO - __main__ - ID text: conll_2003_en_5
03/26/2024 13:56:46 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.15682491660118103
03/26/2024 13:56:46 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.35227489471435547
03/26/2024 13:56:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:56:46 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:56:46 - INFO - __main__ - ID text: conll_2003_en_6
03/26/2024 13:57:55 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.18735790252685547
03/26/2024 13:57:55 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.39142489433288574
03/26/2024 13:57:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:57:55 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:57:55 - INFO - __main__ - ID text: conll_2003_en_7
03/26/2024 13:59:06 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.17208820581436157
03/26/2024 13:59:06 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.3740256130695343
03/26/2024 13:59:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 13:59:06 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 13:59:06 - INFO - __main__ - ID text: conll_2003_en_8
03/26/2024 14:00:15 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.16027617454528809
03/26/2024 14:00:15 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.3605506420135498
03/26/2024 14:00:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:00:15 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:00:15 - INFO - __main__ - ID text: conll_2003_en_9
03/26/2024 14:01:24 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.031544171273708344
03/26/2024 14:01:24 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.14310865104198456
03/26/2024 14:01:24 - INFO - __main__ - 
######## Language: hau ######## 

03/26/2024 14:01:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:01:24 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:01:24 - INFO - __main__ - ID text: hau_0
03/26/2024 14:02:32 - INFO - __main__ - Mean variance for hau_0: 0.035512953996658325
03/26/2024 14:02:32 - INFO - __main__ - Mean std for for hau_0: 0.14490550756454468
03/26/2024 14:02:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:02:32 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:02:32 - INFO - __main__ - ID text: hau_1
03/26/2024 14:03:41 - INFO - __main__ - Mean variance for hau_1: 0.041155606508255005
03/26/2024 14:03:41 - INFO - __main__ - Mean std for for hau_1: 0.17287759482860565
03/26/2024 14:03:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:03:41 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:03:41 - INFO - __main__ - ID text: hau_2
03/26/2024 14:04:50 - INFO - __main__ - Mean variance for hau_2: 0.1499711126089096
03/26/2024 14:04:50 - INFO - __main__ - Mean std for for hau_2: 0.34665918350219727
03/26/2024 14:04:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:04:50 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:04:50 - INFO - __main__ - ID text: hau_3
03/26/2024 14:05:59 - INFO - __main__ - Mean variance for hau_3: 0.016631411388516426
03/26/2024 14:05:59 - INFO - __main__ - Mean std for for hau_3: 0.10331231355667114
03/26/2024 14:05:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:05:59 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:05:59 - INFO - __main__ - ID text: hau_4
03/26/2024 14:07:07 - INFO - __main__ - Mean variance for hau_4: 0.03979761525988579
03/26/2024 14:07:07 - INFO - __main__ - Mean std for for hau_4: 0.15463554859161377
03/26/2024 14:07:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:07:07 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:07:07 - INFO - __main__ - ID text: hau_5
03/26/2024 14:08:17 - INFO - __main__ - Mean variance for hau_5: 0.027923159301280975
03/26/2024 14:08:17 - INFO - __main__ - Mean std for for hau_5: 0.13154800236225128
03/26/2024 14:08:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:08:17 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:08:17 - INFO - __main__ - ID text: hau_6
03/26/2024 14:09:25 - INFO - __main__ - Mean variance for hau_6: 0.04550109803676605
03/26/2024 14:09:25 - INFO - __main__ - Mean std for for hau_6: 0.16818280518054962
03/26/2024 14:09:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:09:25 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:09:25 - INFO - __main__ - ID text: hau_7
03/26/2024 14:10:36 - INFO - __main__ - Mean variance for hau_7: 0.03888547793030739
03/26/2024 14:10:36 - INFO - __main__ - Mean std for for hau_7: 0.15385611355304718
03/26/2024 14:10:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:10:36 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:10:36 - INFO - __main__ - ID text: hau_8
03/26/2024 14:11:48 - INFO - __main__ - Mean variance for hau_8: 0.027086898684501648
03/26/2024 14:11:48 - INFO - __main__ - Mean std for for hau_8: 0.128017395734787
03/26/2024 14:11:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:11:48 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:11:48 - INFO - __main__ - ID text: hau_9
03/26/2024 14:13:00 - INFO - __main__ - Mean variance for hau_9: 0.04406127706170082
03/26/2024 14:13:00 - INFO - __main__ - Mean std for for hau_9: 0.1674089878797531
03/26/2024 14:13:00 - INFO - __main__ - 
######## Language: ibo ######## 

03/26/2024 14:13:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:13:00 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:13:00 - INFO - __main__ - ID text: ibo_0
03/26/2024 14:14:12 - INFO - __main__ - Mean variance for ibo_0: 0.040589239448308945
03/26/2024 14:14:12 - INFO - __main__ - Mean std for for ibo_0: 0.16284950077533722
03/26/2024 14:14:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:14:12 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:14:12 - INFO - __main__ - ID text: ibo_1
03/26/2024 14:15:22 - INFO - __main__ - Mean variance for ibo_1: 0.0417301319539547
03/26/2024 14:15:22 - INFO - __main__ - Mean std for for ibo_1: 0.16136007010936737
03/26/2024 14:15:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:15:22 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:15:22 - INFO - __main__ - ID text: ibo_2
03/26/2024 14:16:35 - INFO - __main__ - Mean variance for ibo_2: 0.03794707730412483
03/26/2024 14:16:35 - INFO - __main__ - Mean std for for ibo_2: 0.15146757662296295
03/26/2024 14:16:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:16:35 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:16:35 - INFO - __main__ - ID text: ibo_3
03/26/2024 14:17:50 - INFO - __main__ - Mean variance for ibo_3: 0.05561952292919159
03/26/2024 14:17:50 - INFO - __main__ - Mean std for for ibo_3: 0.20926867425441742
03/26/2024 14:17:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:17:50 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:17:50 - INFO - __main__ - ID text: ibo_4
03/26/2024 14:19:04 - INFO - __main__ - Mean variance for ibo_4: 0.042081307619810104
03/26/2024 14:19:04 - INFO - __main__ - Mean std for for ibo_4: 0.1635124385356903
03/26/2024 14:19:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:19:04 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:19:04 - INFO - __main__ - ID text: ibo_5
03/26/2024 14:20:19 - INFO - __main__ - Mean variance for ibo_5: 0.03942139446735382
03/26/2024 14:20:19 - INFO - __main__ - Mean std for for ibo_5: 0.16606594622135162
03/26/2024 14:20:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:20:19 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:20:19 - INFO - __main__ - ID text: ibo_6
03/26/2024 14:21:35 - INFO - __main__ - Mean variance for ibo_6: 0.043079327791929245
03/26/2024 14:21:35 - INFO - __main__ - Mean std for for ibo_6: 0.1692437380552292
03/26/2024 14:21:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:21:35 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:21:35 - INFO - __main__ - ID text: ibo_7
03/26/2024 14:22:49 - INFO - __main__ - Mean variance for ibo_7: 0.0413602776825428
03/26/2024 14:22:49 - INFO - __main__ - Mean std for for ibo_7: 0.15653996169567108
03/26/2024 14:22:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:22:49 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:22:49 - INFO - __main__ - ID text: ibo_8
03/26/2024 14:24:05 - INFO - __main__ - Mean variance for ibo_8: 0.03637899085879326
03/26/2024 14:24:05 - INFO - __main__ - Mean std for for ibo_8: 0.16347409784793854
03/26/2024 14:24:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:24:05 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:24:05 - INFO - __main__ - ID text: ibo_9
03/26/2024 14:25:18 - INFO - __main__ - Mean variance for ibo_9: 0.034969765692949295
03/26/2024 14:25:18 - INFO - __main__ - Mean std for for ibo_9: 0.14939270913600922
03/26/2024 14:25:18 - INFO - __main__ - 
######## Language: kin ######## 

03/26/2024 14:25:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:25:18 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:25:18 - INFO - __main__ - ID text: kin_0
03/26/2024 14:26:30 - INFO - __main__ - Mean variance for kin_0: 0.04487524554133415
03/26/2024 14:26:30 - INFO - __main__ - Mean std for for kin_0: 0.1648683100938797
03/26/2024 14:26:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:26:30 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:26:30 - INFO - __main__ - ID text: kin_1
03/26/2024 14:27:42 - INFO - __main__ - Mean variance for kin_1: 0.05525806546211243
03/26/2024 14:27:42 - INFO - __main__ - Mean std for for kin_1: 0.19028127193450928
03/26/2024 14:27:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:27:42 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:27:42 - INFO - __main__ - ID text: kin_2
03/26/2024 14:28:55 - INFO - __main__ - Mean variance for kin_2: 0.03700030967593193
03/26/2024 14:28:55 - INFO - __main__ - Mean std for for kin_2: 0.17161482572555542
03/26/2024 14:28:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:28:55 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:28:55 - INFO - __main__ - ID text: kin_3
03/26/2024 14:30:07 - INFO - __main__ - Mean variance for kin_3: 0.04119570180773735
03/26/2024 14:30:07 - INFO - __main__ - Mean std for for kin_3: 0.16018664836883545
03/26/2024 14:30:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:30:07 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:30:07 - INFO - __main__ - ID text: kin_4
03/26/2024 14:31:21 - INFO - __main__ - Mean variance for kin_4: 0.036772266030311584
03/26/2024 14:31:21 - INFO - __main__ - Mean std for for kin_4: 0.14865602552890778
03/26/2024 14:31:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:31:21 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:31:21 - INFO - __main__ - ID text: kin_5
03/26/2024 14:32:36 - INFO - __main__ - Mean variance for kin_5: 0.04410669207572937
03/26/2024 14:32:36 - INFO - __main__ - Mean std for for kin_5: 0.180986225605011
03/26/2024 14:32:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:32:36 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:32:36 - INFO - __main__ - ID text: kin_6
03/26/2024 14:33:51 - INFO - __main__ - Mean variance for kin_6: 0.029919423162937164
03/26/2024 14:33:51 - INFO - __main__ - Mean std for for kin_6: 0.13326720893383026
03/26/2024 14:33:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:33:51 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:33:51 - INFO - __main__ - ID text: kin_7
03/26/2024 14:35:07 - INFO - __main__ - Mean variance for kin_7: 0.04286262392997742
03/26/2024 14:35:07 - INFO - __main__ - Mean std for for kin_7: 0.16337378323078156
03/26/2024 14:35:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:35:07 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:35:07 - INFO - __main__ - ID text: kin_8
03/26/2024 14:36:24 - INFO - __main__ - Mean variance for kin_8: 0.03122659958899021
03/26/2024 14:36:24 - INFO - __main__ - Mean std for for kin_8: 0.14787034690380096
03/26/2024 14:36:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:36:24 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:36:24 - INFO - __main__ - ID text: kin_9
03/26/2024 14:37:41 - INFO - __main__ - Mean variance for kin_9: 0.03588177636265755
03/26/2024 14:37:41 - INFO - __main__ - Mean std for for kin_9: 0.16168425977230072
03/26/2024 14:37:41 - INFO - __main__ - 
######## Language: lug ######## 

03/26/2024 14:37:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:37:41 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:37:41 - INFO - __main__ - ID text: lug_0
03/26/2024 14:38:59 - INFO - __main__ - Mean variance for lug_0: 0.03432292118668556
03/26/2024 14:38:59 - INFO - __main__ - Mean std for for lug_0: 0.14359942078590393
03/26/2024 14:38:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:38:59 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:38:59 - INFO - __main__ - ID text: lug_1
03/26/2024 14:40:18 - INFO - __main__ - Mean variance for lug_1: 0.03903726860880852
03/26/2024 14:40:18 - INFO - __main__ - Mean std for for lug_1: 0.15684227645397186
03/26/2024 14:40:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:40:18 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:40:18 - INFO - __main__ - ID text: lug_2
03/26/2024 14:41:38 - INFO - __main__ - Mean variance for lug_2: 0.016531439498066902
03/26/2024 14:41:38 - INFO - __main__ - Mean std for for lug_2: 0.10275346040725708
03/26/2024 14:41:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:41:38 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:41:38 - INFO - __main__ - ID text: lug_3
03/26/2024 14:42:59 - INFO - __main__ - Mean variance for lug_3: 0.03012605756521225
03/26/2024 14:42:59 - INFO - __main__ - Mean std for for lug_3: 0.13309763371944427
03/26/2024 14:42:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:42:59 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:42:59 - INFO - __main__ - ID text: lug_4
03/26/2024 14:44:18 - INFO - __main__ - Mean variance for lug_4: 0.038525089621543884
03/26/2024 14:44:18 - INFO - __main__ - Mean std for for lug_4: 0.1579427719116211
03/26/2024 14:44:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:44:19 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:44:19 - INFO - __main__ - ID text: lug_5
03/26/2024 14:45:38 - INFO - __main__ - Mean variance for lug_5: 0.041917428374290466
03/26/2024 14:45:38 - INFO - __main__ - Mean std for for lug_5: 0.15628032386302948
03/26/2024 14:45:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:45:38 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:45:38 - INFO - __main__ - ID text: lug_6
03/26/2024 14:46:58 - INFO - __main__ - Mean variance for lug_6: 0.03945184126496315
03/26/2024 14:46:58 - INFO - __main__ - Mean std for for lug_6: 0.1522633582353592
03/26/2024 14:46:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:46:58 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:46:58 - INFO - __main__ - ID text: lug_7
03/26/2024 14:48:17 - INFO - __main__ - Mean variance for lug_7: 0.041767094284296036
03/26/2024 14:48:17 - INFO - __main__ - Mean std for for lug_7: 0.16668163239955902
03/26/2024 14:48:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:48:17 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:48:17 - INFO - __main__ - ID text: lug_8
03/26/2024 14:49:35 - INFO - __main__ - Mean variance for lug_8: 0.04707656428217888
03/26/2024 14:49:35 - INFO - __main__ - Mean std for for lug_8: 0.17204003036022186
03/26/2024 14:49:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:49:35 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:49:35 - INFO - __main__ - ID text: lug_9
03/26/2024 14:50:54 - INFO - __main__ - Mean variance for lug_9: 0.041352592408657074
03/26/2024 14:50:54 - INFO - __main__ - Mean std for for lug_9: 0.15986783802509308
03/26/2024 14:50:54 - INFO - __main__ - 
######## Language: luo ######## 

03/26/2024 14:50:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:50:54 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:50:54 - INFO - __main__ - ID text: luo_0
03/26/2024 14:52:12 - INFO - __main__ - Mean variance for luo_0: 0.02968471683561802
03/26/2024 14:52:12 - INFO - __main__ - Mean std for for luo_0: 0.13093556463718414
03/26/2024 14:52:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:52:12 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:52:12 - INFO - __main__ - ID text: luo_1
03/26/2024 14:53:30 - INFO - __main__ - Mean variance for luo_1: 0.04888265207409859
03/26/2024 14:53:30 - INFO - __main__ - Mean std for for luo_1: 0.18834899365901947
03/26/2024 14:53:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:53:30 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:53:30 - INFO - __main__ - ID text: luo_2
03/26/2024 14:54:48 - INFO - __main__ - Mean variance for luo_2: 0.03862658515572548
03/26/2024 14:54:48 - INFO - __main__ - Mean std for for luo_2: 0.15173494815826416
03/26/2024 14:54:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:54:48 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:54:48 - INFO - __main__ - ID text: luo_3
03/26/2024 14:56:06 - INFO - __main__ - Mean variance for luo_3: 0.030096329748630524
03/26/2024 14:56:06 - INFO - __main__ - Mean std for for luo_3: 0.13399042189121246
03/26/2024 14:56:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:56:06 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:56:06 - INFO - __main__ - ID text: luo_4
03/26/2024 14:57:23 - INFO - __main__ - Mean variance for luo_4: 0.043487995862960815
03/26/2024 14:57:23 - INFO - __main__ - Mean std for for luo_4: 0.17277012765407562
03/26/2024 14:57:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:57:23 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:57:23 - INFO - __main__ - ID text: luo_5
03/26/2024 14:58:41 - INFO - __main__ - Mean variance for luo_5: 0.03669576719403267
03/26/2024 14:58:41 - INFO - __main__ - Mean std for for luo_5: 0.15495005249977112
03/26/2024 14:58:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:58:41 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:58:41 - INFO - __main__ - ID text: luo_6
03/26/2024 14:59:58 - INFO - __main__ - Mean variance for luo_6: 0.03369392827153206
03/26/2024 14:59:58 - INFO - __main__ - Mean std for for luo_6: 0.14197124540805817
03/26/2024 14:59:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 14:59:58 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 14:59:58 - INFO - __main__ - ID text: luo_7
03/26/2024 15:01:15 - INFO - __main__ - Mean variance for luo_7: 0.04271463677287102
03/26/2024 15:01:15 - INFO - __main__ - Mean std for for luo_7: 0.17646972835063934
03/26/2024 15:01:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:01:15 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:01:15 - INFO - __main__ - ID text: luo_8
03/26/2024 15:02:32 - INFO - __main__ - Mean variance for luo_8: 0.04263859987258911
03/26/2024 15:02:32 - INFO - __main__ - Mean std for for luo_8: 0.16562588512897491
03/26/2024 15:02:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:02:32 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:02:32 - INFO - __main__ - ID text: luo_9
03/26/2024 15:03:50 - INFO - __main__ - Mean variance for luo_9: 0.06148592755198479
03/26/2024 15:03:50 - INFO - __main__ - Mean std for for luo_9: 0.22009502351284027
03/26/2024 15:03:50 - INFO - __main__ - 
######## Language: pcm ######## 

03/26/2024 15:03:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:03:50 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:03:50 - INFO - __main__ - ID text: pcm_0
03/26/2024 15:05:08 - INFO - __main__ - Mean variance for pcm_0: 0.03834012150764465
03/26/2024 15:05:08 - INFO - __main__ - Mean std for for pcm_0: 0.16029077768325806
03/26/2024 15:05:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:05:08 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:05:08 - INFO - __main__ - ID text: pcm_1
03/26/2024 15:06:25 - INFO - __main__ - Mean variance for pcm_1: 0.043749481439590454
03/26/2024 15:06:25 - INFO - __main__ - Mean std for for pcm_1: 0.17969489097595215
03/26/2024 15:06:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:06:25 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:06:25 - INFO - __main__ - ID text: pcm_2
03/26/2024 15:07:42 - INFO - __main__ - Mean variance for pcm_2: 0.04125647619366646
03/26/2024 15:07:42 - INFO - __main__ - Mean std for for pcm_2: 0.16562111675739288
03/26/2024 15:07:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:07:43 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:07:43 - INFO - __main__ - ID text: pcm_3
03/26/2024 15:09:00 - INFO - __main__ - Mean variance for pcm_3: 0.03654194995760918
03/26/2024 15:09:00 - INFO - __main__ - Mean std for for pcm_3: 0.15126067399978638
03/26/2024 15:09:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:09:00 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:09:00 - INFO - __main__ - ID text: pcm_4
03/26/2024 15:10:18 - INFO - __main__ - Mean variance for pcm_4: 0.04796731099486351
03/26/2024 15:10:18 - INFO - __main__ - Mean std for for pcm_4: 0.1734263300895691
03/26/2024 15:10:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:10:18 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:10:18 - INFO - __main__ - ID text: pcm_5
03/26/2024 15:11:37 - INFO - __main__ - Mean variance for pcm_5: 0.04854502156376839
03/26/2024 15:11:37 - INFO - __main__ - Mean std for for pcm_5: 0.19347047805786133
03/26/2024 15:11:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:11:37 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:11:37 - INFO - __main__ - ID text: pcm_6
03/26/2024 15:12:57 - INFO - __main__ - Mean variance for pcm_6: 0.0376591719686985
03/26/2024 15:12:57 - INFO - __main__ - Mean std for for pcm_6: 0.15449325740337372
03/26/2024 15:12:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:12:57 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:12:57 - INFO - __main__ - ID text: pcm_7
03/26/2024 15:14:19 - INFO - __main__ - Mean variance for pcm_7: 0.03946215659379959
03/26/2024 15:14:19 - INFO - __main__ - Mean std for for pcm_7: 0.15564318001270294
03/26/2024 15:14:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:14:19 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:14:19 - INFO - __main__ - ID text: pcm_8
03/26/2024 15:15:42 - INFO - __main__ - Mean variance for pcm_8: 0.036205559968948364
03/26/2024 15:15:42 - INFO - __main__ - Mean std for for pcm_8: 0.14899013936519623
03/26/2024 15:15:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:15:42 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:15:42 - INFO - __main__ - ID text: pcm_9
03/26/2024 15:17:06 - INFO - __main__ - Mean variance for pcm_9: 0.03833150863647461
03/26/2024 15:17:06 - INFO - __main__ - Mean std for for pcm_9: 0.16339640319347382
03/26/2024 15:17:06 - INFO - __main__ - 
######## Language: swa ######## 

03/26/2024 15:17:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:17:06 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:17:06 - INFO - __main__ - ID text: swa_0
03/26/2024 15:18:29 - INFO - __main__ - Mean variance for swa_0: 0.03290300443768501
03/26/2024 15:18:29 - INFO - __main__ - Mean std for for swa_0: 0.13880664110183716
03/26/2024 15:18:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:18:29 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:18:29 - INFO - __main__ - ID text: swa_1
03/26/2024 15:19:53 - INFO - __main__ - Mean variance for swa_1: 0.039008766412734985
03/26/2024 15:19:53 - INFO - __main__ - Mean std for for swa_1: 0.15924648940563202
03/26/2024 15:19:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:19:53 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:19:53 - INFO - __main__ - ID text: swa_2
03/26/2024 15:21:15 - INFO - __main__ - Mean variance for swa_2: 0.036276914179325104
03/26/2024 15:21:15 - INFO - __main__ - Mean std for for swa_2: 0.14844481647014618
03/26/2024 15:21:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:21:15 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:21:15 - INFO - __main__ - ID text: swa_3
03/26/2024 15:22:39 - INFO - __main__ - Mean variance for swa_3: 0.04157349839806557
03/26/2024 15:22:39 - INFO - __main__ - Mean std for for swa_3: 0.17282958328723907
03/26/2024 15:22:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:22:39 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:22:39 - INFO - __main__ - ID text: swa_4
03/26/2024 15:24:02 - INFO - __main__ - Mean variance for swa_4: 0.024155713617801666
03/26/2024 15:24:02 - INFO - __main__ - Mean std for for swa_4: 0.12056571245193481
03/26/2024 15:24:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:24:02 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:24:02 - INFO - __main__ - ID text: swa_5
03/26/2024 15:25:26 - INFO - __main__ - Mean variance for swa_5: 0.028542784973978996
03/26/2024 15:25:26 - INFO - __main__ - Mean std for for swa_5: 0.1294049769639969
03/26/2024 15:25:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:25:26 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:25:26 - INFO - __main__ - ID text: swa_6
03/26/2024 15:26:50 - INFO - __main__ - Mean variance for swa_6: 0.03551178798079491
03/26/2024 15:26:50 - INFO - __main__ - Mean std for for swa_6: 0.14444498717784882
03/26/2024 15:26:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:26:50 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:26:50 - INFO - __main__ - ID text: swa_7
03/26/2024 15:28:13 - INFO - __main__ - Mean variance for swa_7: 0.04931715503334999
03/26/2024 15:28:13 - INFO - __main__ - Mean std for for swa_7: 0.1986865997314453
03/26/2024 15:28:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:28:13 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:28:13 - INFO - __main__ - ID text: swa_8
03/26/2024 15:29:38 - INFO - __main__ - Mean variance for swa_8: 0.04207737371325493
03/26/2024 15:29:38 - INFO - __main__ - Mean std for for swa_8: 0.16829361021518707
03/26/2024 15:29:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:29:38 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:29:38 - INFO - __main__ - ID text: swa_9
03/26/2024 15:31:02 - INFO - __main__ - Mean variance for swa_9: 0.043894339352846146
03/26/2024 15:31:02 - INFO - __main__ - Mean std for for swa_9: 0.1696370244026184
03/26/2024 15:31:02 - INFO - __main__ - 
######## Language: wol ######## 

03/26/2024 15:31:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:31:02 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:31:02 - INFO - __main__ - ID text: wol_0
03/26/2024 15:32:27 - INFO - __main__ - Mean variance for wol_0: 0.03534221276640892
03/26/2024 15:32:27 - INFO - __main__ - Mean std for for wol_0: 0.14481638371944427
03/26/2024 15:32:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:32:27 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:32:27 - INFO - __main__ - ID text: wol_1
03/26/2024 15:33:52 - INFO - __main__ - Mean variance for wol_1: 0.03709131106734276
03/26/2024 15:33:52 - INFO - __main__ - Mean std for for wol_1: 0.15455777943134308
03/26/2024 15:33:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:33:52 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:33:52 - INFO - __main__ - ID text: wol_2
03/26/2024 15:35:17 - INFO - __main__ - Mean variance for wol_2: 0.04004831984639168
03/26/2024 15:35:17 - INFO - __main__ - Mean std for for wol_2: 0.16407212615013123
03/26/2024 15:35:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:35:17 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:35:17 - INFO - __main__ - ID text: wol_3
03/26/2024 15:36:41 - INFO - __main__ - Mean variance for wol_3: 0.07083936780691147
03/26/2024 15:36:41 - INFO - __main__ - Mean std for for wol_3: 0.23793822526931763
03/26/2024 15:36:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:36:41 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:36:41 - INFO - __main__ - ID text: wol_4
03/26/2024 15:38:05 - INFO - __main__ - Mean variance for wol_4: 0.03143574669957161
03/26/2024 15:38:05 - INFO - __main__ - Mean std for for wol_4: 0.1553248018026352
03/26/2024 15:38:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:38:05 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:38:05 - INFO - __main__ - ID text: wol_5
03/26/2024 15:39:29 - INFO - __main__ - Mean variance for wol_5: 0.03594570979475975
03/26/2024 15:39:29 - INFO - __main__ - Mean std for for wol_5: 0.15298721194267273
03/26/2024 15:39:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:39:29 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:39:29 - INFO - __main__ - ID text: wol_6
03/26/2024 15:40:52 - INFO - __main__ - Mean variance for wol_6: 0.16131548583507538
03/26/2024 15:40:52 - INFO - __main__ - Mean std for for wol_6: 0.3532784879207611
03/26/2024 15:40:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:40:52 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:40:52 - INFO - __main__ - ID text: wol_7
03/26/2024 15:42:18 - INFO - __main__ - Mean variance for wol_7: 0.0428151898086071
03/26/2024 15:42:18 - INFO - __main__ - Mean std for for wol_7: 0.17057238519191742
03/26/2024 15:42:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:42:18 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:42:18 - INFO - __main__ - ID text: wol_8
03/26/2024 15:43:43 - INFO - __main__ - Mean variance for wol_8: 0.04285835847258568
03/26/2024 15:43:43 - INFO - __main__ - Mean std for for wol_8: 0.18092012405395508
03/26/2024 15:43:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:43:43 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:43:43 - INFO - __main__ - ID text: wol_9
03/26/2024 15:45:09 - INFO - __main__ - Mean variance for wol_9: 0.04341663420200348
03/26/2024 15:45:09 - INFO - __main__ - Mean std for for wol_9: 0.1779990941286087
03/26/2024 15:45:09 - INFO - __main__ - 
######## Language: yor ######## 

03/26/2024 15:45:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:45:09 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:45:09 - INFO - __main__ - ID text: yor_0
03/26/2024 15:46:35 - INFO - __main__ - Mean variance for yor_0: 0.14078544080257416
03/26/2024 15:46:35 - INFO - __main__ - Mean std for for yor_0: 0.3275436460971832
03/26/2024 15:46:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:46:35 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:46:35 - INFO - __main__ - ID text: yor_1
03/26/2024 15:48:00 - INFO - __main__ - Mean variance for yor_1: 0.13051223754882812
03/26/2024 15:48:00 - INFO - __main__ - Mean std for for yor_1: 0.3030877411365509
03/26/2024 15:48:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:48:00 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:48:00 - INFO - __main__ - ID text: yor_2
03/26/2024 15:49:26 - INFO - __main__ - Mean variance for yor_2: 0.043256890028715134
03/26/2024 15:49:26 - INFO - __main__ - Mean std for for yor_2: 0.16654926538467407
03/26/2024 15:49:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:49:26 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:49:26 - INFO - __main__ - ID text: yor_3
03/26/2024 15:50:51 - INFO - __main__ - Mean variance for yor_3: 0.03236987814307213
03/26/2024 15:50:51 - INFO - __main__ - Mean std for for yor_3: 0.13786429166793823
03/26/2024 15:50:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:50:51 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:50:51 - INFO - __main__ - ID text: yor_4
03/26/2024 15:52:18 - INFO - __main__ - Mean variance for yor_4: 0.1318749338388443
03/26/2024 15:52:18 - INFO - __main__ - Mean std for for yor_4: 0.31595587730407715
03/26/2024 15:52:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:52:18 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:52:18 - INFO - __main__ - ID text: yor_5
03/26/2024 15:53:44 - INFO - __main__ - Mean variance for yor_5: 0.09289459139108658
03/26/2024 15:53:44 - INFO - __main__ - Mean std for for yor_5: 0.2535162568092346
03/26/2024 15:53:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:53:44 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:53:44 - INFO - __main__ - ID text: yor_6
03/26/2024 15:55:10 - INFO - __main__ - Mean variance for yor_6: 0.04309198632836342
03/26/2024 15:55:10 - INFO - __main__ - Mean std for for yor_6: 0.16733813285827637
03/26/2024 15:55:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:55:10 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:55:10 - INFO - __main__ - ID text: yor_7
03/26/2024 15:56:36 - INFO - __main__ - Mean variance for yor_7: 0.14151035249233246
03/26/2024 15:56:36 - INFO - __main__ - Mean std for for yor_7: 0.3242766559123993
03/26/2024 15:56:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:56:36 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:56:36 - INFO - __main__ - ID text: yor_8
03/26/2024 15:58:02 - INFO - __main__ - Mean variance for yor_8: 0.04088876023888588
03/26/2024 15:58:02 - INFO - __main__ - Mean std for for yor_8: 0.15649893879890442
03/26/2024 15:58:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:58:02 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:58:02 - INFO - __main__ - ID text: yor_9
03/26/2024 15:59:30 - INFO - __main__ - Mean variance for yor_9: 0.13939060270786285
03/26/2024 15:59:30 - INFO - __main__ - Mean std for for yor_9: 0.3203534185886383
03/26/2024 15:59:30 - INFO - __main__ - 
######## Language: zh ######## 

03/26/2024 15:59:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 15:59:30 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 15:59:30 - INFO - __main__ - ID text: zh_0
03/26/2024 16:00:58 - INFO - __main__ - Mean variance for zh_0: 0.1630820333957672
03/26/2024 16:00:58 - INFO - __main__ - Mean std for for zh_0: 0.35718151926994324
03/26/2024 16:00:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:00:59 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:00:59 - INFO - __main__ - ID text: zh_1
03/26/2024 16:02:26 - INFO - __main__ - Mean variance for zh_1: 0.1177959144115448
03/26/2024 16:02:26 - INFO - __main__ - Mean std for for zh_1: 0.286456435918808
03/26/2024 16:02:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:02:27 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:02:27 - INFO - __main__ - ID text: zh_2
03/26/2024 16:03:55 - INFO - __main__ - Mean variance for zh_2: 0.12592051923274994
03/26/2024 16:03:55 - INFO - __main__ - Mean std for for zh_2: 0.3031727969646454
03/26/2024 16:03:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:03:55 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:03:55 - INFO - __main__ - ID text: zh_3
03/26/2024 16:05:23 - INFO - __main__ - Mean variance for zh_3: 0.1580308973789215
03/26/2024 16:05:23 - INFO - __main__ - Mean std for for zh_3: 0.35198965668678284
03/26/2024 16:05:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:05:23 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:05:23 - INFO - __main__ - ID text: zh_4
03/26/2024 16:06:52 - INFO - __main__ - Mean variance for zh_4: 0.15245066583156586
03/26/2024 16:06:52 - INFO - __main__ - Mean std for for zh_4: 0.34892523288726807
03/26/2024 16:06:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:06:53 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:06:53 - INFO - __main__ - ID text: zh_5
03/26/2024 16:08:21 - INFO - __main__ - Mean variance for zh_5: 0.16925491392612457
03/26/2024 16:08:21 - INFO - __main__ - Mean std for for zh_5: 0.3696460723876953
03/26/2024 16:08:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:08:21 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:08:21 - INFO - __main__ - ID text: zh_6
03/26/2024 16:09:49 - INFO - __main__ - Mean variance for zh_6: 0.13724100589752197
03/26/2024 16:09:49 - INFO - __main__ - Mean std for for zh_6: 0.3116362690925598
03/26/2024 16:09:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:09:49 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:09:49 - INFO - __main__ - ID text: zh_7
03/26/2024 16:11:17 - INFO - __main__ - Mean variance for zh_7: 0.14284701645374298
03/26/2024 16:11:17 - INFO - __main__ - Mean std for for zh_7: 0.32928577065467834
03/26/2024 16:11:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:11:17 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:11:17 - INFO - __main__ - ID text: zh_8
03/26/2024 16:12:44 - INFO - __main__ - Mean variance for zh_8: 0.15612030029296875
03/26/2024 16:12:44 - INFO - __main__ - Mean std for for zh_8: 0.3398062288761139
03/26/2024 16:12:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:12:44 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:12:44 - INFO - __main__ - ID text: zh_9
03/26/2024 16:14:13 - INFO - __main__ - Mean variance for zh_9: 0.14131338894367218
03/26/2024 16:14:13 - INFO - __main__ - Mean std for for zh_9: 0.31555062532424927
03/26/2024 16:14:13 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/26/2024 16:14:13 - INFO - __main__ - 
######## Language: arabic ######## 

03/26/2024 16:14:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:14:13 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:14:13 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/26/2024 16:15:40 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.10253835469484329
03/26/2024 16:15:40 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.2681252658367157
03/26/2024 16:15:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:15:40 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:15:40 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/26/2024 16:17:08 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.04523349925875664
03/26/2024 16:17:08 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.16950546205043793
03/26/2024 16:17:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:17:08 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:17:08 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/26/2024 16:18:35 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.03425678238272667
03/26/2024 16:18:35 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.1498747318983078
03/26/2024 16:18:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:18:35 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:18:35 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/26/2024 16:20:02 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.04050472751259804
03/26/2024 16:20:02 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.1627398580312729
03/26/2024 16:20:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:20:02 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:20:02 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/26/2024 16:21:29 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.1290590912103653
03/26/2024 16:21:29 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.3079531192779541
03/26/2024 16:21:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:21:30 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:21:30 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/26/2024 16:22:58 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.04228116199374199
03/26/2024 16:22:58 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.16645823419094086
03/26/2024 16:22:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:22:58 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:22:58 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/26/2024 16:24:26 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.047629088163375854
03/26/2024 16:24:26 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.17455558478832245
03/26/2024 16:24:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:24:26 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:24:26 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/26/2024 16:25:53 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.0358319915831089
03/26/2024 16:25:53 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.15330687165260315
03/26/2024 16:25:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:25:53 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:25:53 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/26/2024 16:27:18 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.03710225597023964
03/26/2024 16:27:18 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.15514062345027924
03/26/2024 16:27:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:27:18 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:27:18 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/26/2024 16:28:41 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.04383206367492676
03/26/2024 16:28:41 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.16983984410762787
03/26/2024 16:28:41 - INFO - __main__ - 
######## Language: russian ######## 

03/26/2024 16:28:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:28:41 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:28:41 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/26/2024 16:30:05 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.020627230405807495
03/26/2024 16:30:05 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.1137087345123291
03/26/2024 16:30:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:30:05 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:30:05 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/26/2024 16:31:31 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.04131491854786873
03/26/2024 16:31:31 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.15802571177482605
03/26/2024 16:31:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:31:31 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:31:31 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/26/2024 16:32:54 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.018747257068753242
03/26/2024 16:32:54 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.11075592786073685
03/26/2024 16:32:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:32:54 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:32:54 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/26/2024 16:34:18 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.022110365331172943
03/26/2024 16:34:18 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.11829672008752823
03/26/2024 16:34:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:34:18 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:34:18 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/26/2024 16:35:42 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.022270062938332558
03/26/2024 16:35:42 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.12024734169244766
03/26/2024 16:35:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:35:42 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:35:42 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/26/2024 16:37:06 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.02277299016714096
03/26/2024 16:37:06 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.12094052881002426
03/26/2024 16:37:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:37:06 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:37:06 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/26/2024 16:38:31 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.03927764669060707
03/26/2024 16:38:31 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.1630311757326126
03/26/2024 16:38:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:38:31 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:38:31 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/26/2024 16:39:56 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.024958262220025063
03/26/2024 16:39:56 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.12663502991199493
03/26/2024 16:39:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:39:56 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:39:56 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/26/2024 16:41:21 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.04585465416312218
03/26/2024 16:41:21 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.16736197471618652
03/26/2024 16:41:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:41:21 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:41:21 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/26/2024 16:42:45 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.02122587151825428
03/26/2024 16:42:45 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.11721474677324295
03/26/2024 16:42:45 - INFO - __main__ - 
######## Language: bengali ######## 

03/26/2024 16:42:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:42:45 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:42:45 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/26/2024 16:44:09 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.0959489569067955
03/26/2024 16:44:09 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.2591291069984436
03/26/2024 16:44:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:44:09 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:44:09 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/26/2024 16:45:33 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.09070730209350586
03/26/2024 16:45:33 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.2528434693813324
03/26/2024 16:45:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:45:33 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:45:33 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/26/2024 16:46:58 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.09285711497068405
03/26/2024 16:46:58 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.25529226660728455
03/26/2024 16:46:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:46:58 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:46:58 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/26/2024 16:48:23 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.09954121708869934
03/26/2024 16:48:23 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.2649853527545929
03/26/2024 16:48:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:48:23 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:48:23 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/26/2024 16:49:48 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.10657110065221786
03/26/2024 16:49:48 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.2743059992790222
03/26/2024 16:49:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:49:48 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:49:48 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/26/2024 16:51:13 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.09598371386528015
03/26/2024 16:51:13 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.2592310607433319
03/26/2024 16:51:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:51:13 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:51:13 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/26/2024 16:52:39 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.09263011813163757
03/26/2024 16:52:39 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.2556638717651367
03/26/2024 16:52:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:52:39 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:52:39 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/26/2024 16:54:05 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.08973927050828934
03/26/2024 16:54:05 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.2512834668159485
03/26/2024 16:54:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:54:05 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:54:05 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/26/2024 16:55:30 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.09381286054849625
03/26/2024 16:55:30 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.2563094198703766
03/26/2024 16:55:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:55:30 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:55:30 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/26/2024 16:56:55 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.1348804086446762
03/26/2024 16:56:55 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.3144512474536896
03/26/2024 16:56:55 - INFO - __main__ - 
######## Language: telugu ######## 

03/26/2024 16:56:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:56:55 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:56:55 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/26/2024 16:58:21 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.05160371586680412
03/26/2024 16:58:21 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.18379825353622437
03/26/2024 16:58:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:58:21 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:58:21 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/26/2024 16:59:46 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.03381290286779404
03/26/2024 16:59:46 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.14562229812145233
03/26/2024 16:59:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 16:59:46 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 16:59:46 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/26/2024 17:01:12 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.03954930230975151
03/26/2024 17:01:12 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.15919573605060577
03/26/2024 17:01:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:01:12 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:01:12 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/26/2024 17:02:42 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.05632726475596428
03/26/2024 17:02:42 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.19301050901412964
03/26/2024 17:02:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:02:44 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:02:44 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/26/2024 17:04:07 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.039641186594963074
03/26/2024 17:04:07 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.15905910730361938
03/26/2024 17:04:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:04:08 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:04:08 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/26/2024 17:05:33 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.03544249013066292
03/26/2024 17:05:33 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.15006552636623383
03/26/2024 17:05:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:05:33 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:05:33 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/26/2024 17:06:58 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.11835047602653503
03/26/2024 17:06:58 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.28858211636543274
03/26/2024 17:06:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:06:59 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:06:59 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/26/2024 17:08:23 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.03519324213266373
03/26/2024 17:08:23 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.14832225441932678
03/26/2024 17:08:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:08:23 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:08:23 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/26/2024 17:09:48 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.05817341431975365
03/26/2024 17:09:48 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.19331924617290497
03/26/2024 17:09:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:09:48 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:09:48 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/26/2024 17:11:13 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.03788464516401291
03/26/2024 17:11:13 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.15602870285511017
03/26/2024 17:11:13 - INFO - __main__ - 
######## Language: finnish ######## 

03/26/2024 17:11:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:11:13 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:11:13 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/26/2024 17:12:37 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.04065763205289841
03/26/2024 17:12:37 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.15087659657001495
03/26/2024 17:12:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:12:37 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:12:37 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/26/2024 17:14:01 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.04611695930361748
03/26/2024 17:14:01 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.1654064804315567
03/26/2024 17:14:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:14:01 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:14:01 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/26/2024 17:15:26 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.055292773991823196
03/26/2024 17:15:26 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.19927991926670074
03/26/2024 17:15:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:15:26 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:15:26 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/26/2024 17:16:49 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.04802505671977997
03/26/2024 17:16:49 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.16802853345870972
03/26/2024 17:16:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:16:49 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:16:49 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/26/2024 17:18:11 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.04635113477706909
03/26/2024 17:18:11 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.1621803343296051
03/26/2024 17:18:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:18:12 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:18:12 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/26/2024 17:19:35 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.01721845380961895
03/26/2024 17:19:35 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.10603486746549606
03/26/2024 17:19:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:19:35 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:19:35 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/26/2024 17:20:57 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.014147397130727768
03/26/2024 17:20:57 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.09875457733869553
03/26/2024 17:20:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:20:57 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:20:57 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/26/2024 17:22:20 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.05667346343398094
03/26/2024 17:22:20 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.2006581425666809
03/26/2024 17:22:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:22:20 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:22:20 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/26/2024 17:23:43 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.029075823724269867
03/26/2024 17:23:43 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.12871764600276947
03/26/2024 17:23:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:23:43 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:23:43 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/26/2024 17:25:06 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.014540336094796658
03/26/2024 17:25:06 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.09881795197725296
03/26/2024 17:25:06 - INFO - __main__ - 
######## Language: swahili ######## 

03/26/2024 17:25:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:25:06 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:25:06 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/26/2024 17:26:29 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.04326930642127991
03/26/2024 17:26:29 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.16270312666893005
03/26/2024 17:26:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:26:29 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:26:29 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/26/2024 17:27:53 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.014818192459642887
03/26/2024 17:27:53 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.10110647231340408
03/26/2024 17:27:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:27:53 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:27:53 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/26/2024 17:29:16 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.04914243146777153
03/26/2024 17:29:16 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.17390067875385284
03/26/2024 17:29:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:29:16 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:29:16 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/26/2024 17:30:39 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.014638754539191723
03/26/2024 17:30:39 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.09807320684194565
03/26/2024 17:30:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:30:39 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:30:39 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/26/2024 17:32:03 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.016065284609794617
03/26/2024 17:32:03 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.10189614444971085
03/26/2024 17:32:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:32:03 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:32:03 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/26/2024 17:33:27 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.04858529940247536
03/26/2024 17:33:27 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.1757863312959671
03/26/2024 17:33:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:33:27 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:33:27 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/26/2024 17:34:50 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.04353005811572075
03/26/2024 17:34:50 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.1582159399986267
03/26/2024 17:34:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:34:50 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:34:50 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/26/2024 17:36:13 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.04819471761584282
03/26/2024 17:36:13 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.167833149433136
03/26/2024 17:36:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:36:13 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:36:13 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/26/2024 17:37:35 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.02307451330125332
03/26/2024 17:37:36 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.11902453750371933
03/26/2024 17:37:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:37:36 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:37:36 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/26/2024 17:38:59 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.021844016388058662
03/26/2024 17:38:59 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.11220935732126236
03/26/2024 17:38:59 - INFO - __main__ - 
######## Language: korean ######## 

03/26/2024 17:38:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:38:59 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:38:59 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/26/2024 17:40:22 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.09256339818239212
03/26/2024 17:40:22 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.2535700500011444
03/26/2024 17:40:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:40:22 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:40:22 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/26/2024 17:41:45 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.03872185945510864
03/26/2024 17:41:45 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.1598966121673584
03/26/2024 17:41:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:41:45 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:41:45 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/26/2024 17:43:07 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.03212571516633034
03/26/2024 17:43:07 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.14621546864509583
03/26/2024 17:43:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:43:07 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:43:07 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/26/2024 17:44:29 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.07023549824953079
03/26/2024 17:44:29 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.21388483047485352
03/26/2024 17:44:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:44:29 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:44:29 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/26/2024 17:45:48 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.12282669544219971
03/26/2024 17:45:48 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.2935371696949005
03/26/2024 17:45:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:45:48 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:45:48 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/26/2024 17:47:07 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.036942191421985626
03/26/2024 17:47:07 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.1496015340089798
03/26/2024 17:47:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:47:07 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:47:07 - INFO - __main__ - ID text: korean-148115504649351135-0
03/26/2024 17:48:27 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.05386704206466675
03/26/2024 17:48:27 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.18936167657375336
03/26/2024 17:48:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:48:27 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:48:27 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/26/2024 17:49:46 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.13579365611076355
03/26/2024 17:49:46 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.30928465723991394
03/26/2024 17:49:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:49:47 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:49:47 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/26/2024 17:51:06 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.1280273050069809
03/26/2024 17:51:06 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.30051562190055847
03/26/2024 17:51:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:51:07 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:51:07 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/26/2024 17:52:27 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.15081153810024261
03/26/2024 17:52:27 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.3385780155658722
03/26/2024 17:52:27 - INFO - __main__ - 
######## Language: indonesian ######## 

03/26/2024 17:52:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:52:27 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:52:27 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/26/2024 17:53:47 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.014094059355556965
03/26/2024 17:53:47 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.09819633513689041
03/26/2024 17:53:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:53:47 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:53:47 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/26/2024 17:55:07 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.05507465824484825
03/26/2024 17:55:07 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.19855241477489471
03/26/2024 17:55:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:55:07 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:55:07 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/26/2024 17:56:27 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.01888705976307392
03/26/2024 17:56:27 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.10964333266019821
03/26/2024 17:56:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:56:27 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:56:27 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/26/2024 17:57:47 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.03040006011724472
03/26/2024 17:57:47 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.13172270357608795
03/26/2024 17:57:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:57:47 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:57:47 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/26/2024 17:59:07 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.015004700981080532
03/26/2024 17:59:07 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.09933584183454514
03/26/2024 17:59:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 17:59:07 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 17:59:07 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/26/2024 18:00:26 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.022513726726174355
03/26/2024 18:00:26 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.11638817936182022
03/26/2024 18:00:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:00:26 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:00:26 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/26/2024 18:01:46 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.013861134648323059
03/26/2024 18:01:46 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.09539416432380676
03/26/2024 18:01:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:01:46 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:01:46 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/26/2024 18:03:06 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.046700358390808105
03/26/2024 18:03:06 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.1652015596628189
03/26/2024 18:03:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:03:06 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:03:06 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/26/2024 18:04:26 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.026267899200320244
03/26/2024 18:04:26 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.12439826875925064
03/26/2024 18:04:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:04:26 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:04:26 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/26/2024 18:05:46 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.012144055217504501
03/26/2024 18:05:46 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.09285712242126465
03/26/2024 18:05:46 - INFO - __main__ - 
######## Language: english ######## 

03/26/2024 18:05:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:05:47 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:05:47 - INFO - __main__ - ID text: english-2852412434797041176-6
03/26/2024 18:07:07 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.06661481410264969
03/26/2024 18:07:07 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.22290891408920288
03/26/2024 18:07:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:07:07 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:07:07 - INFO - __main__ - ID text: english--1463732605740571606-0
03/26/2024 18:08:24 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.016641197726130486
03/26/2024 18:08:24 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.10398707538843155
03/26/2024 18:08:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:08:24 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:08:24 - INFO - __main__ - ID text: english-5441411281255470421-0
03/26/2024 18:09:42 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.015263690613210201
03/26/2024 18:09:42 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.10128605365753174
03/26/2024 18:09:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:09:42 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:09:42 - INFO - __main__ - ID text: english-7294054492486093447-1
03/26/2024 18:10:59 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.01612134836614132
03/26/2024 18:10:59 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.10247990489006042
03/26/2024 18:10:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:10:59 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:10:59 - INFO - __main__ - ID text: english-8820750127045023244-0
03/26/2024 18:12:16 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.03950683772563934
03/26/2024 18:12:16 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.1513574719429016
03/26/2024 18:12:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:12:16 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:12:16 - INFO - __main__ - ID text: english--506693546683012611-2
03/26/2024 18:13:34 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.054820090532302856
03/26/2024 18:13:34 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.18245792388916016
03/26/2024 18:13:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:13:34 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:13:34 - INFO - __main__ - ID text: english-745411798111651115-0
03/26/2024 18:14:52 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.017513973638415337
03/26/2024 18:14:52 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.10616931319236755
03/26/2024 18:14:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:14:52 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:14:52 - INFO - __main__ - ID text: english-7740772185887912651-0
03/26/2024 18:16:10 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.014133729971945286
03/26/2024 18:16:10 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.09827158600091934
03/26/2024 18:16:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:16:10 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:16:10 - INFO - __main__ - ID text: english-383873188776267137-19
03/26/2024 18:17:27 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.015476898290216923
03/26/2024 18:17:27 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.09988749027252197
03/26/2024 18:17:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:17:27 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:17:27 - INFO - __main__ - ID text: english--8277537578703156284-0
03/26/2024 18:18:45 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.019176317378878593
03/26/2024 18:18:45 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.11008647829294205
03/26/2024 18:18:45 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/26/2024 18:18:45 - INFO - __main__ - 
######## Language: cola ######## 

03/26/2024 18:18:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:18:45 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:18:45 - INFO - __main__ - ID text: cola_228
03/26/2024 18:20:02 - INFO - __main__ - Mean variance for cola_228: 0.052398066967725754
03/26/2024 18:20:02 - INFO - __main__ - Mean std for for cola_228: 0.19666320085525513
03/26/2024 18:20:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:20:03 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:20:03 - INFO - __main__ - ID text: cola_51
03/26/2024 18:21:20 - INFO - __main__ - Mean variance for cola_51: 0.04849405214190483
03/26/2024 18:21:20 - INFO - __main__ - Mean std for for cola_51: 0.1920848935842514
03/26/2024 18:21:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:21:20 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:21:20 - INFO - __main__ - ID text: cola_563
03/26/2024 18:22:38 - INFO - __main__ - Mean variance for cola_563: 0.1522492915391922
03/26/2024 18:22:38 - INFO - __main__ - Mean std for for cola_563: 0.34975874423980713
03/26/2024 18:22:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:22:38 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:22:38 - INFO - __main__ - ID text: cola_501
03/26/2024 18:23:56 - INFO - __main__ - Mean variance for cola_501: 0.03964899107813835
03/26/2024 18:23:56 - INFO - __main__ - Mean std for for cola_501: 0.17290686070919037
03/26/2024 18:23:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:23:56 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:23:56 - INFO - __main__ - ID text: cola_457
03/26/2024 18:25:13 - INFO - __main__ - Mean variance for cola_457: 0.05290903151035309
03/26/2024 18:25:13 - INFO - __main__ - Mean std for for cola_457: 0.20034253597259521
03/26/2024 18:25:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:25:13 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:25:13 - INFO - __main__ - ID text: cola_285
03/26/2024 18:26:29 - INFO - __main__ - Mean variance for cola_285: 0.032329414039850235
03/26/2024 18:26:29 - INFO - __main__ - Mean std for for cola_285: 0.15819151699543
03/26/2024 18:26:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:26:29 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:26:29 - INFO - __main__ - ID text: cola_209
03/26/2024 18:27:46 - INFO - __main__ - Mean variance for cola_209: 0.047772374004125595
03/26/2024 18:27:46 - INFO - __main__ - Mean std for for cola_209: 0.19242870807647705
03/26/2024 18:27:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:27:46 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:27:46 - INFO - __main__ - ID text: cola_178
03/26/2024 18:29:03 - INFO - __main__ - Mean variance for cola_178: 0.06266038864850998
03/26/2024 18:29:03 - INFO - __main__ - Mean std for for cola_178: 0.22087223827838898
03/26/2024 18:29:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:29:03 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:29:03 - INFO - __main__ - ID text: cola_864
03/26/2024 18:30:19 - INFO - __main__ - Mean variance for cola_864: 0.05951258912682533
03/26/2024 18:30:19 - INFO - __main__ - Mean std for for cola_864: 0.21739454567432404
03/26/2024 18:30:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:30:19 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:30:19 - INFO - __main__ - ID text: cola_65
03/26/2024 18:31:36 - INFO - __main__ - Mean variance for cola_65: 0.04875968396663666
03/26/2024 18:31:36 - INFO - __main__ - Mean std for for cola_65: 0.18600891530513763
03/26/2024 18:31:36 - INFO - __main__ - 
######## Language: mnli ######## 

03/26/2024 18:31:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:31:36 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:31:36 - INFO - __main__ - ID text: mnli_488
03/26/2024 18:32:53 - INFO - __main__ - Mean variance for mnli_488: 0.06163747236132622
03/26/2024 18:32:53 - INFO - __main__ - Mean std for for mnli_488: 0.19150985777378082
03/26/2024 18:32:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:32:53 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:32:53 - INFO - __main__ - ID text: mnli_1535
03/26/2024 18:34:11 - INFO - __main__ - Mean variance for mnli_1535: 0.04812325909733772
03/26/2024 18:34:11 - INFO - __main__ - Mean std for for mnli_1535: 0.17177845537662506
03/26/2024 18:34:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:34:11 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:34:11 - INFO - __main__ - ID text: mnli_3582
03/26/2024 18:35:29 - INFO - __main__ - Mean variance for mnli_3582: 0.06093822792172432
03/26/2024 18:35:29 - INFO - __main__ - Mean std for for mnli_3582: 0.20285479724407196
03/26/2024 18:35:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:35:31 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:35:31 - INFO - __main__ - ID text: mnli_3811
03/26/2024 18:36:48 - INFO - __main__ - Mean variance for mnli_3811: 0.04626252129673958
03/26/2024 18:36:48 - INFO - __main__ - Mean std for for mnli_3811: 0.17684035003185272
03/26/2024 18:36:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:36:48 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:36:48 - INFO - __main__ - ID text: mnli_8279
03/26/2024 18:38:06 - INFO - __main__ - Mean variance for mnli_8279: 0.036641936749219894
03/26/2024 18:38:06 - INFO - __main__ - Mean std for for mnli_8279: 0.1623733788728714
03/26/2024 18:38:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:38:06 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:38:06 - INFO - __main__ - ID text: mnli_434
03/26/2024 18:39:23 - INFO - __main__ - Mean variance for mnli_434: 0.038188252598047256
03/26/2024 18:39:23 - INFO - __main__ - Mean std for for mnli_434: 0.147687628865242
03/26/2024 18:39:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:39:23 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:39:23 - INFO - __main__ - ID text: mnli_9195
03/26/2024 18:40:41 - INFO - __main__ - Mean variance for mnli_9195: 0.04133680835366249
03/26/2024 18:40:41 - INFO - __main__ - Mean std for for mnli_9195: 0.1813395619392395
03/26/2024 18:40:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:40:41 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:40:41 - INFO - __main__ - ID text: mnli_3257
03/26/2024 18:41:58 - INFO - __main__ - Mean variance for mnli_3257: 0.051005590707063675
03/26/2024 18:41:58 - INFO - __main__ - Mean std for for mnli_3257: 0.18600992858409882
03/26/2024 18:41:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:41:58 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:41:58 - INFO - __main__ - ID text: mnli_8928
03/26/2024 18:43:16 - INFO - __main__ - Mean variance for mnli_8928: 0.053926244378089905
03/26/2024 18:43:16 - INFO - __main__ - Mean std for for mnli_8928: 0.17715175449848175
03/26/2024 18:43:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:43:16 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:43:16 - INFO - __main__ - ID text: mnli_6873
03/26/2024 18:44:33 - INFO - __main__ - Mean variance for mnli_6873: 0.05021874979138374
03/26/2024 18:44:33 - INFO - __main__ - Mean std for for mnli_6873: 0.1677197366952896
03/26/2024 18:44:33 - INFO - __main__ - 
######## Language: mrpc ######## 

03/26/2024 18:44:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:44:33 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:44:33 - INFO - __main__ - ID text: mrpc_451
03/26/2024 18:45:50 - INFO - __main__ - Mean variance for mrpc_451: 0.061069052666425705
03/26/2024 18:45:50 - INFO - __main__ - Mean std for for mrpc_451: 0.1902385950088501
03/26/2024 18:45:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:45:50 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:45:50 - INFO - __main__ - ID text: mrpc_919
03/26/2024 18:47:08 - INFO - __main__ - Mean variance for mrpc_919: 0.058528218418359756
03/26/2024 18:47:08 - INFO - __main__ - Mean std for for mrpc_919: 0.1916695088148117
03/26/2024 18:47:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:47:08 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:47:08 - INFO - __main__ - ID text: mrpc_1206
03/26/2024 18:48:25 - INFO - __main__ - Mean variance for mrpc_1206: 0.044176992028951645
03/26/2024 18:48:25 - INFO - __main__ - Mean std for for mrpc_1206: 0.17150849103927612
03/26/2024 18:48:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:48:25 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:48:25 - INFO - __main__ - ID text: mrpc_569
03/26/2024 18:49:42 - INFO - __main__ - Mean variance for mrpc_569: 0.043375033885240555
03/26/2024 18:49:42 - INFO - __main__ - Mean std for for mrpc_569: 0.16402046382427216
03/26/2024 18:49:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:49:42 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:49:42 - INFO - __main__ - ID text: mrpc_1657
03/26/2024 18:50:59 - INFO - __main__ - Mean variance for mrpc_1657: 0.0418354831635952
03/26/2024 18:50:59 - INFO - __main__ - Mean std for for mrpc_1657: 0.15632106363773346
03/26/2024 18:50:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:50:59 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:50:59 - INFO - __main__ - ID text: mrpc_13
03/26/2024 18:52:17 - INFO - __main__ - Mean variance for mrpc_13: 0.05903415009379387
03/26/2024 18:52:17 - INFO - __main__ - Mean std for for mrpc_13: 0.19026489555835724
03/26/2024 18:52:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:52:17 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:52:17 - INFO - __main__ - ID text: mrpc_1554
03/26/2024 18:53:35 - INFO - __main__ - Mean variance for mrpc_1554: 0.04328593611717224
03/26/2024 18:53:35 - INFO - __main__ - Mean std for for mrpc_1554: 0.15725509822368622
03/26/2024 18:53:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:53:35 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:53:35 - INFO - __main__ - ID text: mrpc_1650
03/26/2024 18:54:52 - INFO - __main__ - Mean variance for mrpc_1650: 0.12116003781557083
03/26/2024 18:54:52 - INFO - __main__ - Mean std for for mrpc_1650: 0.29791080951690674
03/26/2024 18:54:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:54:53 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:54:53 - INFO - __main__ - ID text: mrpc_326
03/26/2024 18:56:11 - INFO - __main__ - Mean variance for mrpc_326: 0.059351205825805664
03/26/2024 18:56:11 - INFO - __main__ - Mean std for for mrpc_326: 0.1923418790102005
03/26/2024 18:56:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:56:11 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:56:11 - INFO - __main__ - ID text: mrpc_1429
03/26/2024 18:57:28 - INFO - __main__ - Mean variance for mrpc_1429: 0.052983421832323074
03/26/2024 18:57:28 - INFO - __main__ - Mean std for for mrpc_1429: 0.180028036236763
03/26/2024 18:57:28 - INFO - __main__ - 
######## Language: qnli ######## 

03/26/2024 18:57:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:57:28 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:57:28 - INFO - __main__ - ID text: qnli_3462
03/26/2024 18:58:46 - INFO - __main__ - Mean variance for qnli_3462: 0.05743405595421791
03/26/2024 18:58:46 - INFO - __main__ - Mean std for for qnli_3462: 0.18522031605243683
03/26/2024 18:58:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 18:58:46 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 18:58:46 - INFO - __main__ - ID text: qnli_2787
03/26/2024 19:00:04 - INFO - __main__ - Mean variance for qnli_2787: 0.050162672996520996
03/26/2024 19:00:04 - INFO - __main__ - Mean std for for qnli_2787: 0.16838569939136505
03/26/2024 19:00:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:00:04 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:00:04 - INFO - __main__ - ID text: qnli_2276
03/26/2024 19:01:22 - INFO - __main__ - Mean variance for qnli_2276: 0.04904879629611969
03/26/2024 19:01:22 - INFO - __main__ - Mean std for for qnli_2276: 0.16956733167171478
03/26/2024 19:01:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:01:22 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:01:22 - INFO - __main__ - ID text: qnli_1273
03/26/2024 19:02:40 - INFO - __main__ - Mean variance for qnli_1273: 0.04866931959986687
03/26/2024 19:02:40 - INFO - __main__ - Mean std for for qnli_1273: 0.16848993301391602
03/26/2024 19:02:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:02:40 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:02:40 - INFO - __main__ - ID text: qnli_1763
03/26/2024 19:03:58 - INFO - __main__ - Mean variance for qnli_1763: 0.054618339985609055
03/26/2024 19:03:58 - INFO - __main__ - Mean std for for qnli_1763: 0.18202854692935944
03/26/2024 19:03:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:03:58 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:03:58 - INFO - __main__ - ID text: qnli_2757
03/26/2024 19:05:16 - INFO - __main__ - Mean variance for qnli_2757: 0.05180893465876579
03/26/2024 19:05:16 - INFO - __main__ - Mean std for for qnli_2757: 0.17330479621887207
03/26/2024 19:05:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:05:16 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:05:16 - INFO - __main__ - ID text: qnli_837
03/26/2024 19:06:34 - INFO - __main__ - Mean variance for qnli_837: 0.061375830322504044
03/26/2024 19:06:34 - INFO - __main__ - Mean std for for qnli_837: 0.1925899237394333
03/26/2024 19:06:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:06:34 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:06:34 - INFO - __main__ - ID text: qnli_759
03/26/2024 19:07:52 - INFO - __main__ - Mean variance for qnli_759: 0.021403498947620392
03/26/2024 19:07:52 - INFO - __main__ - Mean std for for qnli_759: 0.11348504573106766
03/26/2024 19:07:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:07:52 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:07:52 - INFO - __main__ - ID text: qnli_3112
03/26/2024 19:09:10 - INFO - __main__ - Mean variance for qnli_3112: 0.06216363608837128
03/26/2024 19:09:10 - INFO - __main__ - Mean std for for qnli_3112: 0.19285692274570465
03/26/2024 19:09:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:09:10 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:09:10 - INFO - __main__ - ID text: qnli_792
03/26/2024 19:10:28 - INFO - __main__ - Mean variance for qnli_792: 0.05231855437159538
03/26/2024 19:10:28 - INFO - __main__ - Mean std for for qnli_792: 0.17567235231399536
03/26/2024 19:10:28 - INFO - __main__ - 
######## Language: qqp ######## 

03/26/2024 19:10:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:10:28 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:10:28 - INFO - __main__ - ID text: qqp_188208
03/26/2024 19:11:46 - INFO - __main__ - Mean variance for qqp_188208: 0.052378904074430466
03/26/2024 19:11:46 - INFO - __main__ - Mean std for for qqp_188208: 0.1911122351884842
03/26/2024 19:11:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:11:46 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:11:46 - INFO - __main__ - ID text: qqp_180331
03/26/2024 19:13:04 - INFO - __main__ - Mean variance for qqp_180331: 0.048857104033231735
03/26/2024 19:13:04 - INFO - __main__ - Mean std for for qqp_180331: 0.18026787042617798
03/26/2024 19:13:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:13:04 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:13:04 - INFO - __main__ - ID text: qqp_316526
03/26/2024 19:14:22 - INFO - __main__ - Mean variance for qqp_316526: 0.05276165530085564
03/26/2024 19:14:22 - INFO - __main__ - Mean std for for qqp_316526: 0.18174637854099274
03/26/2024 19:14:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:14:22 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:14:22 - INFO - __main__ - ID text: qqp_138685
03/26/2024 19:15:40 - INFO - __main__ - Mean variance for qqp_138685: 0.04007701948285103
03/26/2024 19:15:40 - INFO - __main__ - Mean std for for qqp_138685: 0.15202003717422485
03/26/2024 19:15:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:15:40 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:15:40 - INFO - __main__ - ID text: qqp_22780
03/26/2024 19:16:58 - INFO - __main__ - Mean variance for qqp_22780: 0.03978307172656059
03/26/2024 19:16:58 - INFO - __main__ - Mean std for for qqp_22780: 0.17101041972637177
03/26/2024 19:16:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:16:58 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:16:58 - INFO - __main__ - ID text: qqp_382589
03/26/2024 19:18:16 - INFO - __main__ - Mean variance for qqp_382589: 0.04718649014830589
03/26/2024 19:18:16 - INFO - __main__ - Mean std for for qqp_382589: 0.1733924150466919
03/26/2024 19:18:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:18:16 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:18:16 - INFO - __main__ - ID text: qqp_240870
03/26/2024 19:19:34 - INFO - __main__ - Mean variance for qqp_240870: 0.051384542137384415
03/26/2024 19:19:34 - INFO - __main__ - Mean std for for qqp_240870: 0.18580509722232819
03/26/2024 19:19:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:19:34 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:19:34 - INFO - __main__ - ID text: qqp_281137
03/26/2024 19:20:52 - INFO - __main__ - Mean variance for qqp_281137: 0.047493528574705124
03/26/2024 19:20:52 - INFO - __main__ - Mean std for for qqp_281137: 0.172374427318573
03/26/2024 19:20:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:20:52 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:20:52 - INFO - __main__ - ID text: qqp_65444
03/26/2024 19:22:10 - INFO - __main__ - Mean variance for qqp_65444: 0.050308164209127426
03/26/2024 19:22:10 - INFO - __main__ - Mean std for for qqp_65444: 0.1857292801141739
03/26/2024 19:22:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:22:10 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:22:10 - INFO - __main__ - ID text: qqp_198461
03/26/2024 19:23:30 - INFO - __main__ - Mean variance for qqp_198461: 0.05885260924696922
03/26/2024 19:23:30 - INFO - __main__ - Mean std for for qqp_198461: 0.19455397129058838
03/26/2024 19:23:31 - INFO - __main__ - 
######## Language: rte ######## 

03/26/2024 19:23:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:23:31 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:23:31 - INFO - __main__ - ID text: rte_322
03/26/2024 19:24:49 - INFO - __main__ - Mean variance for rte_322: 0.05393274128437042
03/26/2024 19:24:49 - INFO - __main__ - Mean std for for rte_322: 0.18447385728359222
03/26/2024 19:24:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:24:49 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:24:49 - INFO - __main__ - ID text: rte_2261
03/26/2024 19:26:08 - INFO - __main__ - Mean variance for rte_2261: 0.05090782046318054
03/26/2024 19:26:08 - INFO - __main__ - Mean std for for rte_2261: 0.1848774403333664
03/26/2024 19:26:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:26:08 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:26:08 - INFO - __main__ - ID text: rte_1200
03/26/2024 19:27:26 - INFO - __main__ - Mean variance for rte_1200: 0.03715513274073601
03/26/2024 19:27:26 - INFO - __main__ - Mean std for for rte_1200: 0.14554764330387115
03/26/2024 19:27:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:27:26 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:27:26 - INFO - __main__ - ID text: rte_2574
03/26/2024 19:28:44 - INFO - __main__ - Mean variance for rte_2574: 0.01610150747001171
03/26/2024 19:28:44 - INFO - __main__ - Mean std for for rte_2574: 0.10444905608892441
03/26/2024 19:28:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:28:45 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:28:45 - INFO - __main__ - ID text: rte_2533
03/26/2024 19:30:03 - INFO - __main__ - Mean variance for rte_2533: 0.018184898421168327
03/26/2024 19:30:03 - INFO - __main__ - Mean std for for rte_2533: 0.1064782366156578
03/26/2024 19:30:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:30:03 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:30:03 - INFO - __main__ - ID text: rte_1481
03/26/2024 19:31:21 - INFO - __main__ - Mean variance for rte_1481: 0.052443977445364
03/26/2024 19:31:21 - INFO - __main__ - Mean std for for rte_1481: 0.17716993391513824
03/26/2024 19:31:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:31:21 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:31:21 - INFO - __main__ - ID text: rte_2364
03/26/2024 19:32:39 - INFO - __main__ - Mean variance for rte_2364: 0.051357656717300415
03/26/2024 19:32:39 - INFO - __main__ - Mean std for for rte_2364: 0.17158223688602448
03/26/2024 19:32:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:32:40 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:32:40 - INFO - __main__ - ID text: rte_787
03/26/2024 19:33:58 - INFO - __main__ - Mean variance for rte_787: 0.0547703355550766
03/26/2024 19:33:58 - INFO - __main__ - Mean std for for rte_787: 0.17764081060886383
03/26/2024 19:33:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:33:58 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:33:58 - INFO - __main__ - ID text: rte_2885
03/26/2024 19:35:16 - INFO - __main__ - Mean variance for rte_2885: 0.017748693004250526
03/26/2024 19:35:16 - INFO - __main__ - Mean std for for rte_2885: 0.10724175721406937
03/26/2024 19:35:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:35:16 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:35:16 - INFO - __main__ - ID text: rte_284
03/26/2024 19:36:34 - INFO - __main__ - Mean variance for rte_284: 0.055037979036569595
03/26/2024 19:36:34 - INFO - __main__ - Mean std for for rte_284: 0.18724066019058228
03/26/2024 19:36:34 - INFO - __main__ - 
######## Language: sst2 ######## 

03/26/2024 19:36:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:36:34 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:36:34 - INFO - __main__ - ID text: sst2_93
03/26/2024 19:37:52 - INFO - __main__ - Mean variance for sst2_93: 0.04466048255562782
03/26/2024 19:37:52 - INFO - __main__ - Mean std for for sst2_93: 0.17139863967895508
03/26/2024 19:37:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:37:52 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:37:52 - INFO - __main__ - ID text: sst2_1354
03/26/2024 19:39:10 - INFO - __main__ - Mean variance for sst2_1354: 0.05010100081562996
03/26/2024 19:39:10 - INFO - __main__ - Mean std for for sst2_1354: 0.19734232127666473
03/26/2024 19:39:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:39:10 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:39:10 - INFO - __main__ - ID text: sst2_466
03/26/2024 19:40:27 - INFO - __main__ - Mean variance for sst2_466: 0.04496953263878822
03/26/2024 19:40:27 - INFO - __main__ - Mean std for for sst2_466: 0.1870296597480774
03/26/2024 19:40:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:40:27 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:40:27 - INFO - __main__ - ID text: sst2_1583
03/26/2024 19:41:45 - INFO - __main__ - Mean variance for sst2_1583: 0.05319781228899956
03/26/2024 19:41:45 - INFO - __main__ - Mean std for for sst2_1583: 0.1814996600151062
03/26/2024 19:41:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:41:45 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:41:45 - INFO - __main__ - ID text: sst2_592
03/26/2024 19:43:03 - INFO - __main__ - Mean variance for sst2_592: 0.055910978466272354
03/26/2024 19:43:03 - INFO - __main__ - Mean std for for sst2_592: 0.18311800062656403
03/26/2024 19:43:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:43:03 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:43:03 - INFO - __main__ - ID text: sst2_163
03/26/2024 19:44:21 - INFO - __main__ - Mean variance for sst2_163: 0.07364656776189804
03/26/2024 19:44:21 - INFO - __main__ - Mean std for for sst2_163: 0.24318431317806244
03/26/2024 19:44:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:44:21 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:44:21 - INFO - __main__ - ID text: sst2_1751
03/26/2024 19:45:39 - INFO - __main__ - Mean variance for sst2_1751: 0.042328063398599625
03/26/2024 19:45:39 - INFO - __main__ - Mean std for for sst2_1751: 0.17971062660217285
03/26/2024 19:45:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:45:39 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:45:39 - INFO - __main__ - ID text: sst2_476
03/26/2024 19:46:57 - INFO - __main__ - Mean variance for sst2_476: 0.039946362376213074
03/26/2024 19:46:57 - INFO - __main__ - Mean std for for sst2_476: 0.16237080097198486
03/26/2024 19:46:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:46:57 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:46:57 - INFO - __main__ - ID text: sst2_1774
03/26/2024 19:48:15 - INFO - __main__ - Mean variance for sst2_1774: 0.041189949959516525
03/26/2024 19:48:15 - INFO - __main__ - Mean std for for sst2_1774: 0.16483134031295776
03/26/2024 19:48:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:48:15 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:48:15 - INFO - __main__ - ID text: sst2_206
03/26/2024 19:49:33 - INFO - __main__ - Mean variance for sst2_206: 0.04893559217453003
03/26/2024 19:49:33 - INFO - __main__ - Mean std for for sst2_206: 0.18246717751026154
03/26/2024 19:49:33 - INFO - __main__ - 
######## Language: stsb ######## 

03/26/2024 19:49:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:49:33 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:49:33 - INFO - __main__ - ID text: stsb_778
03/26/2024 19:50:51 - INFO - __main__ - Mean variance for stsb_778: 0.05189426243305206
03/26/2024 19:50:51 - INFO - __main__ - Mean std for for stsb_778: 0.1879706233739853
03/26/2024 19:50:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:50:51 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:50:51 - INFO - __main__ - ID text: stsb_569
03/26/2024 19:52:09 - INFO - __main__ - Mean variance for stsb_569: 0.05144033953547478
03/26/2024 19:52:09 - INFO - __main__ - Mean std for for stsb_569: 0.193387970328331
03/26/2024 19:52:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:52:09 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:52:09 - INFO - __main__ - ID text: stsb_928
03/26/2024 19:53:28 - INFO - __main__ - Mean variance for stsb_928: 0.03635028377175331
03/26/2024 19:53:28 - INFO - __main__ - Mean std for for stsb_928: 0.14357097446918488
03/26/2024 19:53:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:53:28 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:53:28 - INFO - __main__ - ID text: stsb_1301
03/26/2024 19:54:46 - INFO - __main__ - Mean variance for stsb_1301: 0.04669317603111267
03/26/2024 19:54:46 - INFO - __main__ - Mean std for for stsb_1301: 0.1795670986175537
03/26/2024 19:54:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:54:46 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:54:46 - INFO - __main__ - ID text: stsb_747
03/26/2024 19:56:04 - INFO - __main__ - Mean variance for stsb_747: 0.0488809198141098
03/26/2024 19:56:04 - INFO - __main__ - Mean std for for stsb_747: 0.17570267617702484
03/26/2024 19:56:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:56:04 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:56:04 - INFO - __main__ - ID text: stsb_333
03/26/2024 19:57:22 - INFO - __main__ - Mean variance for stsb_333: 0.044611651450395584
03/26/2024 19:57:22 - INFO - __main__ - Mean std for for stsb_333: 0.1716507226228714
03/26/2024 19:57:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:57:22 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:57:22 - INFO - __main__ - ID text: stsb_758
03/26/2024 19:58:41 - INFO - __main__ - Mean variance for stsb_758: 0.054855916649103165
03/26/2024 19:58:41 - INFO - __main__ - Mean std for for stsb_758: 0.1858556866645813
03/26/2024 19:58:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:58:41 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:58:41 - INFO - __main__ - ID text: stsb_727
03/26/2024 19:59:59 - INFO - __main__ - Mean variance for stsb_727: 0.05693191662430763
03/26/2024 19:59:59 - INFO - __main__ - Mean std for for stsb_727: 0.1986631155014038
03/26/2024 19:59:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 19:59:59 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 19:59:59 - INFO - __main__ - ID text: stsb_429
03/26/2024 20:01:17 - INFO - __main__ - Mean variance for stsb_429: 0.041858091950416565
03/26/2024 20:01:17 - INFO - __main__ - Mean std for for stsb_429: 0.1709042340517044
03/26/2024 20:01:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:01:17 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:01:17 - INFO - __main__ - ID text: stsb_1372
03/26/2024 20:02:35 - INFO - __main__ - Mean variance for stsb_1372: 0.04451762139797211
03/26/2024 20:02:35 - INFO - __main__ - Mean std for for stsb_1372: 0.17647282779216766
03/26/2024 20:02:35 - INFO - __main__ - 
######## Language: wnli ######## 

03/26/2024 20:02:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:02:35 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:02:35 - INFO - __main__ - ID text: wnli_68
03/26/2024 20:03:53 - INFO - __main__ - Mean variance for wnli_68: 0.054126545786857605
03/26/2024 20:03:53 - INFO - __main__ - Mean std for for wnli_68: 0.1782415360212326
03/26/2024 20:03:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:03:54 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:03:54 - INFO - __main__ - ID text: wnli_18
03/26/2024 20:05:12 - INFO - __main__ - Mean variance for wnli_18: 0.03794998303055763
03/26/2024 20:05:12 - INFO - __main__ - Mean std for for wnli_18: 0.14784114062786102
03/26/2024 20:05:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:05:12 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:05:12 - INFO - __main__ - ID text: wnli_43
03/26/2024 20:06:30 - INFO - __main__ - Mean variance for wnli_43: 0.05591464415192604
03/26/2024 20:06:30 - INFO - __main__ - Mean std for for wnli_43: 0.18216164410114288
03/26/2024 20:06:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:06:31 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:06:31 - INFO - __main__ - ID text: wnli_136
03/26/2024 20:07:50 - INFO - __main__ - Mean variance for wnli_136: 0.0496487021446228
03/26/2024 20:07:50 - INFO - __main__ - Mean std for for wnli_136: 0.1726251095533371
03/26/2024 20:07:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:07:50 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:07:50 - INFO - __main__ - ID text: wnli_62
03/26/2024 20:09:09 - INFO - __main__ - Mean variance for wnli_62: 0.05629129335284233
03/26/2024 20:09:09 - INFO - __main__ - Mean std for for wnli_62: 0.18232333660125732
03/26/2024 20:09:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:09:09 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:09:09 - INFO - __main__ - ID text: wnli_41
03/26/2024 20:10:28 - INFO - __main__ - Mean variance for wnli_41: 0.048727069050073624
03/26/2024 20:10:28 - INFO - __main__ - Mean std for for wnli_41: 0.17264018952846527
03/26/2024 20:10:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:10:28 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:10:28 - INFO - __main__ - ID text: wnli_118
03/26/2024 20:11:47 - INFO - __main__ - Mean variance for wnli_118: 0.05577012896537781
03/26/2024 20:11:47 - INFO - __main__ - Mean std for for wnli_118: 0.1880793571472168
03/26/2024 20:11:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:11:47 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:11:47 - INFO - __main__ - ID text: wnli_97

###############################################################################
Hábrók Cluster
Job 7753033 for user s3919609
Finished at: Tue Mar 26 20:13:01 CET 2024

Job details:
============

Job ID              : 7753033
Name                : std_monte_carlo_mask_0.2
User                : s3919609
Partition           : regularmedium
Nodes               : node95
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-26T13:31:18
Start               : 2024-03-26T13:32:05
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 06:40:56
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 20G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
03/26/2024 20:13:06 - INFO - __main__ - Mean variance for wnli_97: 0.03509926423430443
03/26/2024 20:13:06 - INFO - __main__ - Mean std for for wnli_97: 0.1409321129322052
03/26/2024 20:13:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:13:06 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:13:06 - INFO - __main__ - ID text: wnli_69
03/26/2024 20:14:24 - INFO - __main__ - Mean variance for wnli_69: 0.0462472178041935
03/26/2024 20:14:24 - INFO - __main__ - Mean std for for wnli_69: 0.17266321182250977
03/26/2024 20:14:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/26/2024 20:14:24 - INFO - __main__ - Masked count: 52, ratio = 0.2031
03/26/2024 20:14:24 - INFO - __main__ - ID text: wnli_142
03/26/2024 20:15:43 - INFO - __main__ - Mean variance for wnli_142: 0.039712708443403244
03/26/2024 20:15:43 - INFO - __main__ - Mean std for for wnli_142: 0.15135706961154938
03/26/2024 20:15:43 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.16180524230003357, 'amh_1': 0.1410500705242157, 'amh_2': 0.1703762263059616, 'amh_3': 0.14665932953357697, 'amh_4': 0.154590904712677, 'amh_5': 0.18434493243694305, 'amh_6': 0.14228637516498566, 'amh_7': 0.16716699302196503, 'amh_8': 0.1534067988395691, 'amh_9': 0.14304602146148682}, 'conll_2003_en': {'conll_2003_en_0': 0.1439027339220047, 'conll_2003_en_1': 0.06321097165346146, 'conll_2003_en_2': 0.039445340633392334, 'conll_2003_en_3': 0.039505485445261, 'conll_2003_en_4': 0.05819091200828552, 'conll_2003_en_5': 0.15682491660118103, 'conll_2003_en_6': 0.18735790252685547, 'conll_2003_en_7': 0.17208820581436157, 'conll_2003_en_8': 0.16027617454528809, 'conll_2003_en_9': 0.031544171273708344}, 'hau': {'hau_0': 0.035512953996658325, 'hau_1': 0.041155606508255005, 'hau_2': 0.1499711126089096, 'hau_3': 0.016631411388516426, 'hau_4': 0.03979761525988579, 'hau_5': 0.027923159301280975, 'hau_6': 0.04550109803676605, 'hau_7': 0.03888547793030739, 'hau_8': 0.027086898684501648, 'hau_9': 0.04406127706170082}, 'ibo': {'ibo_0': 0.040589239448308945, 'ibo_1': 0.0417301319539547, 'ibo_2': 0.03794707730412483, 'ibo_3': 0.05561952292919159, 'ibo_4': 0.042081307619810104, 'ibo_5': 0.03942139446735382, 'ibo_6': 0.043079327791929245, 'ibo_7': 0.0413602776825428, 'ibo_8': 0.03637899085879326, 'ibo_9': 0.034969765692949295}, 'kin': {'kin_0': 0.04487524554133415, 'kin_1': 0.05525806546211243, 'kin_2': 0.03700030967593193, 'kin_3': 0.04119570180773735, 'kin_4': 0.036772266030311584, 'kin_5': 0.04410669207572937, 'kin_6': 0.029919423162937164, 'kin_7': 0.04286262392997742, 'kin_8': 0.03122659958899021, 'kin_9': 0.03588177636265755}, 'lug': {'lug_0': 0.03432292118668556, 'lug_1': 0.03903726860880852, 'lug_2': 0.016531439498066902, 'lug_3': 0.03012605756521225, 'lug_4': 0.038525089621543884, 'lug_5': 0.041917428374290466, 'lug_6': 0.03945184126496315, 'lug_7': 0.041767094284296036, 'lug_8': 0.04707656428217888, 'lug_9': 0.041352592408657074}, 'luo': {'luo_0': 0.02968471683561802, 'luo_1': 0.04888265207409859, 'luo_2': 0.03862658515572548, 'luo_3': 0.030096329748630524, 'luo_4': 0.043487995862960815, 'luo_5': 0.03669576719403267, 'luo_6': 0.03369392827153206, 'luo_7': 0.04271463677287102, 'luo_8': 0.04263859987258911, 'luo_9': 0.06148592755198479}, 'pcm': {'pcm_0': 0.03834012150764465, 'pcm_1': 0.043749481439590454, 'pcm_2': 0.04125647619366646, 'pcm_3': 0.03654194995760918, 'pcm_4': 0.04796731099486351, 'pcm_5': 0.04854502156376839, 'pcm_6': 0.0376591719686985, 'pcm_7': 0.03946215659379959, 'pcm_8': 0.036205559968948364, 'pcm_9': 0.03833150863647461}, 'swa': {'swa_0': 0.03290300443768501, 'swa_1': 0.039008766412734985, 'swa_2': 0.036276914179325104, 'swa_3': 0.04157349839806557, 'swa_4': 0.024155713617801666, 'swa_5': 0.028542784973978996, 'swa_6': 0.03551178798079491, 'swa_7': 0.04931715503334999, 'swa_8': 0.04207737371325493, 'swa_9': 0.043894339352846146}, 'wol': {'wol_0': 0.03534221276640892, 'wol_1': 0.03709131106734276, 'wol_2': 0.04004831984639168, 'wol_3': 0.07083936780691147, 'wol_4': 0.03143574669957161, 'wol_5': 0.03594570979475975, 'wol_6': 0.16131548583507538, 'wol_7': 0.0428151898086071, 'wol_8': 0.04285835847258568, 'wol_9': 0.04341663420200348}, 'yor': {'yor_0': 0.14078544080257416, 'yor_1': 0.13051223754882812, 'yor_2': 0.043256890028715134, 'yor_3': 0.03236987814307213, 'yor_4': 0.1318749338388443, 'yor_5': 0.09289459139108658, 'yor_6': 0.04309198632836342, 'yor_7': 0.14151035249233246, 'yor_8': 0.04088876023888588, 'yor_9': 0.13939060270786285}, 'zh': {'zh_0': 0.1630820333957672, 'zh_1': 0.1177959144115448, 'zh_2': 0.12592051923274994, 'zh_3': 0.1580308973789215, 'zh_4': 0.15245066583156586, 'zh_5': 0.16925491392612457, 'zh_6': 0.13724100589752197, 'zh_7': 0.14284701645374298, 'zh_8': 0.15612030029296875, 'zh_9': 0.14131338894367218}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.10253835469484329, 'arabic--3340323169760881569-0': 0.04523349925875664, 'arabic-4544770624843559444-1': 0.03425678238272667, 'arabic-891952409566422966-0': 0.04050472751259804, 'arabic-3659291834714572527-0': 0.1290590912103653, 'arabic-9215226117011890166-0': 0.04228116199374199, 'arabic-6300896128538259469-0': 0.047629088163375854, 'arabic-2382507508588518905-0': 0.0358319915831089, 'arabic-1871632801094859741-1': 0.03710225597023964, 'arabic--7365809756232083807-0': 0.04383206367492676}, 'russian': {'russian-3457655197371763238-61': 0.020627230405807495, 'russian--1914807805318993335-49': 0.04131491854786873, 'russian--3307989180606173904-1': 0.018747257068753242, 'russian--2219512001175315660-0': 0.022110365331172943, 'russian--7076080992904718941-0': 0.022270062938332558, 'russian--6565862953558739013-1': 0.02277299016714096, 'russian--5098374684590548031-42': 0.03927764669060707, 'russian-3573734219967447693-1': 0.024958262220025063, 'russian--4521001374120505750-6': 0.04585465416312218, 'russian--1308382244018658424-9': 0.02122587151825428}, 'bengali': {'bengali--1199493965132146131-3': 0.0959489569067955, 'bengali-1807801556888134437-2': 0.09070730209350586, 'bengali-2113189855114052041-2': 0.09285711497068405, 'bengali--2527914488250041207-0': 0.09954121708869934, 'bengali--8260793280894408063-14': 0.10657110065221786, 'bengali-8313009204852557186-4': 0.09598371386528015, 'bengali--415964033364840061-0': 0.09263011813163757, 'bengali--4696865548928858824-5': 0.08973927050828934, 'bengali-6505224142472931712-1': 0.09381286054849625, 'bengali-599666913917674019-13': 0.1348804086446762}, 'telugu': {'telugu--3977923017846260053-0': 0.05160371586680412, 'telugu-2254198842560317781-0': 0.03381290286779404, 'telugu-5435080895440121384-0': 0.03954930230975151, 'telugu--1182505954974481191-2': 0.05632726475596428, 'telugu-119276511844068401-0': 0.039641186594963074, 'telugu--4111208545071789922-0': 0.03544249013066292, 'telugu--5922002196428211484-132': 0.11835047602653503, 'telugu--1817004721681155192-3': 0.03519324213266373, 'telugu-1602214480303968359-1': 0.05817341431975365, 'telugu--6495674712575945374-0': 0.03788464516401291}, 'finnish': {'finnish-6987763079741579998-0': 0.04065763205289841, 'finnish--8516625414052383903-0': 0.04611695930361748, 'finnish-4168898766124519517-0': 0.055292773991823196, 'finnish-783166898848672321-4': 0.04802505671977997, 'finnish-2208556840820233322-0': 0.04635113477706909, 'finnish--1981034637152391615-58': 0.01721845380961895, 'finnish-8689148941295949475-9': 0.014147397130727768, 'finnish-6900867945323517614-2': 0.05667346343398094, 'finnish-8023130170017405987-1': 0.029075823724269867, 'finnish-5001457972111781248-0': 0.014540336094796658}, 'swahili': {'swahili-7146838206539641546-10': 0.04326930642127991, 'swahili-7655634199707176439-0': 0.014818192459642887, 'swahili--4427180714267750534-1': 0.04914243146777153, 'swahili-4141779435061573138-0': 0.014638754539191723, 'swahili--5424518593960879661-0': 0.016065284609794617, 'swahili-4281845253405461584-0': 0.04858529940247536, 'swahili-4899164839984299762-2': 0.04353005811572075, 'swahili-1288750786498500530-0': 0.04819471761584282, 'swahili--2671134792844015228-3': 0.02307451330125332, 'swahili-4873225622490039485-2': 0.021844016388058662}, 'korean': {'korean--2869472392602314906-0': 0.09256339818239212, 'korean-4375199563921600155-0': 0.03872185945510864, 'korean--1715118423211755607-13': 0.03212571516633034, 'korean--8028977936696142934-9': 0.07023549824953079, 'korean-2807245034690443837-5': 0.12282669544219971, 'korean-3862451817164408576-0': 0.036942191421985626, 'korean-148115504649351135-0': 0.05386704206466675, 'korean--2885837157239647036-2': 0.13579365611076355, 'korean--1743220297777040002-22': 0.1280273050069809, 'korean-3268522368206106332-0': 0.15081153810024261}, 'indonesian': {'indonesian-9141868818310916091-0': 0.014094059355556965, 'indonesian-4609394337632433932-1': 0.05507465824484825, 'indonesian-2763468883290577923-0': 0.01888705976307392, 'indonesian-5633590583948933406-0': 0.03040006011724472, 'indonesian--5961409780035435015-0': 0.015004700981080532, 'indonesian-6274547934693326697-0': 0.022513726726174355, 'indonesian--2516321763567853082-0': 0.013861134648323059, 'indonesian-2048796427556239759-4': 0.046700358390808105, 'indonesian-6246592469157278547-2': 0.026267899200320244, 'indonesian--3724318458930736973-1': 0.012144055217504501}, 'english': {'english-2852412434797041176-6': 0.06661481410264969, 'english--1463732605740571606-0': 0.016641197726130486, 'english-5441411281255470421-0': 0.015263690613210201, 'english-7294054492486093447-1': 0.01612134836614132, 'english-8820750127045023244-0': 0.03950683772563934, 'english--506693546683012611-2': 0.054820090532302856, 'english-745411798111651115-0': 0.017513973638415337, 'english-7740772185887912651-0': 0.014133729971945286, 'english-383873188776267137-19': 0.015476898290216923, 'english--8277537578703156284-0': 0.019176317378878593}}, 'glue': {'cola': {'cola_228': 0.052398066967725754, 'cola_51': 0.04849405214190483, 'cola_563': 0.1522492915391922, 'cola_501': 0.03964899107813835, 'cola_457': 0.05290903151035309, 'cola_285': 0.032329414039850235, 'cola_209': 0.047772374004125595, 'cola_178': 0.06266038864850998, 'cola_864': 0.05951258912682533, 'cola_65': 0.04875968396663666}, 'mnli': {'mnli_488': 0.06163747236132622, 'mnli_1535': 0.04812325909733772, 'mnli_3582': 0.06093822792172432, 'mnli_3811': 0.04626252129673958, 'mnli_8279': 0.036641936749219894, 'mnli_434': 0.038188252598047256, 'mnli_9195': 0.04133680835366249, 'mnli_3257': 0.051005590707063675, 'mnli_8928': 0.053926244378089905, 'mnli_6873': 0.05021874979138374}, 'mrpc': {'mrpc_451': 0.061069052666425705, 'mrpc_919': 0.058528218418359756, 'mrpc_1206': 0.044176992028951645, 'mrpc_569': 0.043375033885240555, 'mrpc_1657': 0.0418354831635952, 'mrpc_13': 0.05903415009379387, 'mrpc_1554': 0.04328593611717224, 'mrpc_1650': 0.12116003781557083, 'mrpc_326': 0.059351205825805664, 'mrpc_1429': 0.052983421832323074}, 'qnli': {'qnli_3462': 0.05743405595421791, 'qnli_2787': 0.050162672996520996, 'qnli_2276': 0.04904879629611969, 'qnli_1273': 0.04866931959986687, 'qnli_1763': 0.054618339985609055, 'qnli_2757': 0.05180893465876579, 'qnli_837': 0.061375830322504044, 'qnli_759': 0.021403498947620392, 'qnli_3112': 0.06216363608837128, 'qnli_792': 0.05231855437159538}, 'qqp': {'qqp_188208': 0.052378904074430466, 'qqp_180331': 0.048857104033231735, 'qqp_316526': 0.05276165530085564, 'qqp_138685': 0.04007701948285103, 'qqp_22780': 0.03978307172656059, 'qqp_382589': 0.04718649014830589, 'qqp_240870': 0.051384542137384415, 'qqp_281137': 0.047493528574705124, 'qqp_65444': 0.050308164209127426, 'qqp_198461': 0.05885260924696922}, 'rte': {'rte_322': 0.05393274128437042, 'rte_2261': 0.05090782046318054, 'rte_1200': 0.03715513274073601, 'rte_2574': 0.01610150747001171, 'rte_2533': 0.018184898421168327, 'rte_1481': 0.052443977445364, 'rte_2364': 0.051357656717300415, 'rte_787': 0.0547703355550766, 'rte_2885': 0.017748693004250526, 'rte_284': 0.055037979036569595}, 'sst2': {'sst2_93': 0.04466048255562782, 'sst2_1354': 0.05010100081562996, 'sst2_466': 0.04496953263878822, 'sst2_1583': 0.05319781228899956, 'sst2_592': 0.055910978466272354, 'sst2_163': 0.07364656776189804, 'sst2_1751': 0.042328063398599625, 'sst2_476': 0.039946362376213074, 'sst2_1774': 0.041189949959516525, 'sst2_206': 0.04893559217453003}, 'stsb': {'stsb_778': 0.05189426243305206, 'stsb_569': 0.05144033953547478, 'stsb_928': 0.03635028377175331, 'stsb_1301': 0.04669317603111267, 'stsb_747': 0.0488809198141098, 'stsb_333': 0.044611651450395584, 'stsb_758': 0.054855916649103165, 'stsb_727': 0.05693191662430763, 'stsb_429': 0.041858091950416565, 'stsb_1372': 0.04451762139797211}, 'wnli': {'wnli_68': 0.054126545786857605, 'wnli_18': 0.03794998303055763, 'wnli_43': 0.05591464415192604, 'wnli_136': 0.0496487021446228, 'wnli_62': 0.05629129335284233, 'wnli_41': 0.048727069050073624, 'wnli_118': 0.05577012896537781, 'wnli_97': 0.03509926423430443, 'wnli_69': 0.0462472178041935, 'wnli_142': 0.039712708443403244}}}
03/26/2024 20:15:43 - INFO - __main__ - Saving data in SD_per_task_mask_0.2.json
03/26/2024 20:15:43 - INFO - __main__ - Saving data in var_per_task_mask_0.2.json
03/26/2024 20:15:43 - INFO - __main__ - 
UNCERTAINTY (SD)

03/26/2024 20:15:43 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.1564732789993286, 'conll_2003_en': 0.10523469746112823, 'hau': 0.0466526634991169, 'ibo': 0.04131770506501198, 'kin': 0.03990987315773964, 'lug': 0.03701082617044449, 'luo': 0.04080071300268173, 'pcm': 0.0408058762550354, 'swa': 0.037326134741306305, 'wol': 0.05411083623766899, 'yor': 0.09365756809711456, 'zh': 0.1464056670665741}, 'tydiqa': {'arabic': 0.05582689493894577, 'russian': 0.027915924787521362, 'bengali': 0.09926721453666687, 'telugu': 0.050597868859767914, 'finnish': 0.03680989891290665, 'swahili': 0.03231625631451607, 'korean': 0.08619149029254913, 'indonesian': 0.0254947729408741, 'english': 0.027526888996362686}, 'glue': {'cola': 0.05967338755726814, 'mnli': 0.04882790893316269, 'mrpc': 0.058479953557252884, 'qnli': 0.05090035870671272, 'qqp': 0.048908308148384094, 'rte': 0.04076407477259636, 'sst2': 0.04948863387107849, 'stsb': 0.04780342057347298, 'wnli': 0.04794875532388687}}

###############################################################################
Hábrók Cluster
Job 7753281 for user s3919609
Finished at: Tue Mar 26 20:15:44 CET 2024

Job details:
============

Job ID              : 7753281
Name                : std_monte_carlo_mask_0.2
User                : s3919609
Partition           : regularmedium
Nodes               : node95
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-26T13:38:02
Start               : 2024-03-26T13:38:03
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 06:37:41
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 20G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
