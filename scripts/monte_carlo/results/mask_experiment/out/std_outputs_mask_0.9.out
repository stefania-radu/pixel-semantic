The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/25/2024 13:08:46 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/25/2024 13:08:46 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 13:08:46 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/25/2024 13:08:46 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/25/2024 13:08:49 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/25/2024 13:08:49 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/25/2024 13:08:49 - INFO - __main__ - Running MONTE CARLO experiment: mask_ratio
03/25/2024 13:08:49 - INFO - __main__ - Loading data from loss_per_task_mask_0.9.json
03/25/2024 13:08:49 - INFO - __main__ - 
LOSS

03/25/2024 13:08:49 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8840463757514954, 'conll_2003_en': 0.8407556414604187, 'hau': 0.7624298930168152, 'ibo': 0.7544361352920532, 'kin': 0.7369508147239685, 'lug': 0.727744996547699, 'luo': 0.7578216195106506, 'pcm': 0.7658091187477112, 'swa': 0.7346197366714478, 'wol': 0.8023988604545593, 'yor': 0.8723967671394348, 'zh': 0.9656286239624023}, 'tydiqa': {'arabic': 0.9588950276374817, 'russian': 0.7232910990715027, 'bengali': 0.782885730266571, 'telugu': 0.8111379742622375, 'finnish': 0.7528166770935059, 'swahili': 0.7299874424934387, 'korean': 0.922520637512207, 'indonesian': 0.7447561025619507, 'english': 0.7438634634017944}, 'glue': {'cola': 0.7251849174499512, 'mnli': 0.7121148705482483, 'mrpc': 0.7432146668434143, 'qnli': 0.7136408686637878, 'qqp': 0.736735999584198, 'rte': 0.7224333882331848, 'sst2': 0.7328578233718872, 'stsb': 0.7114793062210083, 'wnli': 0.7200168967247009}}
03/25/2024 13:08:49 - INFO - __main__ - Lowest losses:
03/25/2024 13:08:49 - INFO - __main__ - ID: sst2_466, Loss: 0.6480652689933777
03/25/2024 13:08:49 - INFO - __main__ - ID: cola_864, Loss: 0.6676780581474304
03/25/2024 13:08:49 - INFO - __main__ - ID: cola_65, Loss: 0.6731225848197937
03/25/2024 13:08:49 - INFO - __main__ - ID: stsb_727, Loss: 0.6829545497894287
03/25/2024 13:08:49 - INFO - __main__ - ID: mnli_3582, Loss: 0.6874683499336243
03/25/2024 13:08:49 - INFO - __main__ - Highest losses:
03/25/2024 13:08:49 - INFO - __main__ - ID: zh_0, Loss: 0.9690409302711487
03/25/2024 13:08:49 - INFO - __main__ - ID: arabic-2382507508588518905-0, Loss: 0.9705606698989868
03/25/2024 13:08:49 - INFO - __main__ - ID: zh_9, Loss: 0.9708642363548279
03/25/2024 13:08:49 - INFO - __main__ - ID: zh_6, Loss: 0.9756222367286682
03/25/2024 13:08:49 - INFO - __main__ - ID: zh_3, Loss: 0.988965630531311
03/25/2024 13:08:49 - INFO - __main__ - Monte Carlo samples: 100
03/25/2024 13:08:49 - INFO - __main__ - Training mode: True
03/25/2024 13:08:49 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/25/2024 13:08:49 - INFO - __main__ - 
######## Language: amh ######## 

03/25/2024 13:08:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:08:49 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 13:08:49 - INFO - __main__ - ID text: amh_0
03/25/2024 13:09:28 - INFO - __main__ - Mean variance for amh_0: 0.06416615098714828
03/25/2024 13:09:28 - INFO - __main__ - Mean std for for amh_0: 0.23014670610427856
03/25/2024 13:09:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:09:28 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 13:09:28 - INFO - __main__ - ID text: amh_1
03/25/2024 13:10:04 - INFO - __main__ - Mean variance for amh_1: 0.0573517270386219
03/25/2024 13:10:04 - INFO - __main__ - Mean std for for amh_1: 0.2174614667892456
03/25/2024 13:10:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:10:04 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 13:10:04 - INFO - __main__ - ID text: amh_2
03/25/2024 13:10:40 - INFO - __main__ - Mean variance for amh_2: 0.0589149184525013
03/25/2024 13:10:40 - INFO - __main__ - Mean std for for amh_2: 0.22225849330425262
03/25/2024 13:10:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:10:40 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 13:10:40 - INFO - __main__ - ID text: amh_3
03/25/2024 13:11:14 - INFO - __main__ - Mean variance for amh_3: 0.07494007796049118
03/25/2024 13:11:14 - INFO - __main__ - Mean std for for amh_3: 0.2443116158246994
03/25/2024 13:11:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:11:14 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 13:11:14 - INFO - __main__ - ID text: amh_4
03/25/2024 13:11:50 - INFO - __main__ - Mean variance for amh_4: 0.06184835359454155
03/25/2024 13:11:50 - INFO - __main__ - Mean std for for amh_4: 0.22671811282634735
03/25/2024 13:11:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:11:50 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 13:11:50 - INFO - __main__ - ID text: amh_5
03/25/2024 13:12:24 - INFO - __main__ - Mean variance for amh_5: 0.051554471254348755
03/25/2024 13:12:24 - INFO - __main__ - Mean std for for amh_5: 0.20925231277942657
03/25/2024 13:12:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:12:24 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 13:12:24 - INFO - __main__ - ID text: amh_6
03/25/2024 13:12:59 - INFO - __main__ - Mean variance for amh_6: 0.062489885836839676
03/25/2024 13:12:59 - INFO - __main__ - Mean std for for amh_6: 0.22925472259521484
03/25/2024 13:12:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:12:59 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 13:12:59 - INFO - __main__ - ID text: amh_7
03/25/2024 13:13:34 - INFO - __main__ - Mean variance for amh_7: 0.0559193380177021
03/25/2024 13:13:34 - INFO - __main__ - Mean std for for amh_7: 0.21639375388622284
03/25/2024 13:13:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:13:34 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 13:13:34 - INFO - __main__ - ID text: amh_8
03/25/2024 13:14:08 - INFO - __main__ - Mean variance for amh_8: 0.05907637998461723
03/25/2024 13:14:08 - INFO - __main__ - Mean std for for amh_8: 0.22214579582214355
03/25/2024 13:14:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:14:09 - INFO - __main__ - Masked count: 122, ratio = 0.4766
03/25/2024 13:14:09 - INFO - __main__ - ID text: amh_9
03/25/2024 13:14:43 - INFO - __main__ - Mean variance for amh_9: 0.06150830164551735
03/25/2024 13:14:43 - INFO - __main__ - Mean std for for amh_9: 0.22369349002838135
03/25/2024 13:14:43 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/25/2024 13:14:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:14:43 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 13:14:43 - INFO - __main__ - ID text: conll_2003_en_0
03/25/2024 13:15:18 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.09192550182342529
03/25/2024 13:15:18 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.27592864632606506
03/25/2024 13:15:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:15:18 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 13:15:18 - INFO - __main__ - ID text: conll_2003_en_1
03/25/2024 13:15:53 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.02195391058921814
03/25/2024 13:15:53 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.13350187242031097
03/25/2024 13:15:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:15:53 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 13:15:53 - INFO - __main__ - ID text: conll_2003_en_2
03/25/2024 13:16:27 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.02561260759830475
03/25/2024 13:16:27 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.1400640308856964
03/25/2024 13:16:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:16:27 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 13:16:27 - INFO - __main__ - ID text: conll_2003_en_3
03/25/2024 13:17:02 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.034585077315568924
03/25/2024 13:17:02 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.16925913095474243
03/25/2024 13:17:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:17:02 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 13:17:02 - INFO - __main__ - ID text: conll_2003_en_4
03/25/2024 13:17:37 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.028269285336136818
03/25/2024 13:17:37 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.1542186141014099
03/25/2024 13:17:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:17:37 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 13:17:37 - INFO - __main__ - ID text: conll_2003_en_5
03/25/2024 13:18:12 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.06620769202709198
03/25/2024 13:18:12 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.231348916888237
03/25/2024 13:18:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:18:12 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 13:18:12 - INFO - __main__ - ID text: conll_2003_en_6
03/25/2024 13:18:46 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.041259076446294785
03/25/2024 13:18:46 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.18330465257167816
03/25/2024 13:18:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:18:46 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 13:18:46 - INFO - __main__ - ID text: conll_2003_en_7
03/25/2024 13:19:21 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.03660806640982628
03/25/2024 13:19:21 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.17326253652572632
03/25/2024 13:19:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:19:21 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 13:19:21 - INFO - __main__ - ID text: conll_2003_en_8
03/25/2024 13:19:55 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.058890651911497116
03/25/2024 13:19:55 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.2181466817855835
03/25/2024 13:19:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:19:55 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 13:19:55 - INFO - __main__ - ID text: conll_2003_en_9
03/25/2024 13:20:30 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.027177974581718445
03/25/2024 13:20:30 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.14901204407215118
03/25/2024 13:20:30 - INFO - __main__ - 
######## Language: hau ######## 

03/25/2024 13:20:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:20:30 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 13:20:30 - INFO - __main__ - ID text: hau_0
03/25/2024 13:21:05 - INFO - __main__ - Mean variance for hau_0: 0.022172240540385246
03/25/2024 13:21:05 - INFO - __main__ - Mean std for for hau_0: 0.12891139090061188
03/25/2024 13:21:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:21:05 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 13:21:05 - INFO - __main__ - ID text: hau_1
03/25/2024 13:21:39 - INFO - __main__ - Mean variance for hau_1: 0.035925496369600296
03/25/2024 13:21:39 - INFO - __main__ - Mean std for for hau_1: 0.1737068146467209
03/25/2024 13:21:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:21:39 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 13:21:39 - INFO - __main__ - ID text: hau_2
03/25/2024 13:22:14 - INFO - __main__ - Mean variance for hau_2: 0.044119153171777725
03/25/2024 13:22:14 - INFO - __main__ - Mean std for for hau_2: 0.18855057656764984
03/25/2024 13:22:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:22:14 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 13:22:14 - INFO - __main__ - ID text: hau_3
03/25/2024 13:22:49 - INFO - __main__ - Mean variance for hau_3: 0.01981143094599247
03/25/2024 13:22:49 - INFO - __main__ - Mean std for for hau_3: 0.11284203082323074
03/25/2024 13:22:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:22:49 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 13:22:49 - INFO - __main__ - ID text: hau_4
03/25/2024 13:23:24 - INFO - __main__ - Mean variance for hau_4: 0.02387365885078907
03/25/2024 13:23:24 - INFO - __main__ - Mean std for for hau_4: 0.13387742638587952
03/25/2024 13:23:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:23:24 - INFO - __main__ - Masked count: 149, ratio = 0.5820
03/25/2024 13:23:24 - INFO - __main__ - ID text: hau_5
03/25/2024 13:23:59 - INFO - __main__ - Mean variance for hau_5: 0.022157130762934685
03/25/2024 13:23:59 - INFO - __main__ - Mean std for for hau_5: 0.12565438449382782
03/25/2024 13:23:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:23:59 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 13:23:59 - INFO - __main__ - ID text: hau_6
03/25/2024 13:24:33 - INFO - __main__ - Mean variance for hau_6: 0.027407927438616753
03/25/2024 13:24:33 - INFO - __main__ - Mean std for for hau_6: 0.14775139093399048
03/25/2024 13:24:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:24:34 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 13:24:34 - INFO - __main__ - ID text: hau_7
03/25/2024 13:25:08 - INFO - __main__ - Mean variance for hau_7: 0.02158723957836628
03/25/2024 13:25:08 - INFO - __main__ - Mean std for for hau_7: 0.1269402652978897
03/25/2024 13:25:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:25:08 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 13:25:08 - INFO - __main__ - ID text: hau_8
03/25/2024 13:25:43 - INFO - __main__ - Mean variance for hau_8: 0.02152695320546627
03/25/2024 13:25:43 - INFO - __main__ - Mean std for for hau_8: 0.12471133470535278
03/25/2024 13:25:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:25:43 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 13:25:43 - INFO - __main__ - ID text: hau_9
03/25/2024 13:26:18 - INFO - __main__ - Mean variance for hau_9: 0.028856834396719933
03/25/2024 13:26:18 - INFO - __main__ - Mean std for for hau_9: 0.15206576883792877
03/25/2024 13:26:18 - INFO - __main__ - 
######## Language: ibo ######## 

03/25/2024 13:26:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:26:18 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 13:26:18 - INFO - __main__ - ID text: ibo_0
03/25/2024 13:26:53 - INFO - __main__ - Mean variance for ibo_0: 0.03055661730468273
03/25/2024 13:26:53 - INFO - __main__ - Mean std for for ibo_0: 0.15670442581176758
03/25/2024 13:26:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:26:53 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 13:26:53 - INFO - __main__ - ID text: ibo_1
03/25/2024 13:27:26 - INFO - __main__ - Mean variance for ibo_1: 0.030085088685154915
03/25/2024 13:27:26 - INFO - __main__ - Mean std for for ibo_1: 0.15598194301128387
03/25/2024 13:27:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:27:26 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 13:27:26 - INFO - __main__ - ID text: ibo_2
03/25/2024 13:28:00 - INFO - __main__ - Mean variance for ibo_2: 0.03287490829825401
03/25/2024 13:28:00 - INFO - __main__ - Mean std for for ibo_2: 0.1613451987504959
03/25/2024 13:28:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:28:00 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 13:28:00 - INFO - __main__ - ID text: ibo_3
03/25/2024 13:28:33 - INFO - __main__ - Mean variance for ibo_3: 0.02397833578288555
03/25/2024 13:28:33 - INFO - __main__ - Mean std for for ibo_3: 0.13986815512180328
03/25/2024 13:28:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:28:33 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 13:28:33 - INFO - __main__ - ID text: ibo_4
03/25/2024 13:29:06 - INFO - __main__ - Mean variance for ibo_4: 0.03281484916806221
03/25/2024 13:29:06 - INFO - __main__ - Mean std for for ibo_4: 0.1637001484632492
03/25/2024 13:29:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:29:06 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 13:29:06 - INFO - __main__ - ID text: ibo_5
03/25/2024 13:29:38 - INFO - __main__ - Mean variance for ibo_5: 0.029400810599327087
03/25/2024 13:29:38 - INFO - __main__ - Mean std for for ibo_5: 0.15626879036426544
03/25/2024 13:29:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:29:39 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 13:29:39 - INFO - __main__ - ID text: ibo_6
03/25/2024 13:30:11 - INFO - __main__ - Mean variance for ibo_6: 0.02790786884725094
03/25/2024 13:30:11 - INFO - __main__ - Mean std for for ibo_6: 0.15089339017868042
03/25/2024 13:30:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:30:11 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 13:30:11 - INFO - __main__ - ID text: ibo_7
03/25/2024 13:30:43 - INFO - __main__ - Mean variance for ibo_7: 0.024145476520061493
03/25/2024 13:30:43 - INFO - __main__ - Mean std for for ibo_7: 0.13561013340950012
03/25/2024 13:30:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:30:43 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 13:30:43 - INFO - __main__ - ID text: ibo_8
03/25/2024 13:31:16 - INFO - __main__ - Mean variance for ibo_8: 0.03525269404053688
03/25/2024 13:31:16 - INFO - __main__ - Mean std for for ibo_8: 0.17188261449337006
03/25/2024 13:31:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:31:16 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 13:31:16 - INFO - __main__ - ID text: ibo_9
03/25/2024 13:31:48 - INFO - __main__ - Mean variance for ibo_9: 0.03007717989385128
03/25/2024 13:31:48 - INFO - __main__ - Mean std for for ibo_9: 0.15652042627334595
03/25/2024 13:31:48 - INFO - __main__ - 
######## Language: kin ######## 

03/25/2024 13:31:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:31:48 - INFO - __main__ - Masked count: 114, ratio = 0.4453
03/25/2024 13:31:48 - INFO - __main__ - ID text: kin_0
03/25/2024 13:32:20 - INFO - __main__ - Mean variance for kin_0: 0.028676055371761322
03/25/2024 13:32:20 - INFO - __main__ - Mean std for for kin_0: 0.15057088434696198
03/25/2024 13:32:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:32:20 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 13:32:20 - INFO - __main__ - ID text: kin_1
03/25/2024 13:32:52 - INFO - __main__ - Mean variance for kin_1: 0.03069637157022953
03/25/2024 13:32:52 - INFO - __main__ - Mean std for for kin_1: 0.1577700525522232
03/25/2024 13:32:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:32:53 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 13:32:53 - INFO - __main__ - ID text: kin_2
03/25/2024 13:33:25 - INFO - __main__ - Mean variance for kin_2: 0.031494345515966415
03/25/2024 13:33:25 - INFO - __main__ - Mean std for for kin_2: 0.1617584377527237
03/25/2024 13:33:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:33:25 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 13:33:25 - INFO - __main__ - ID text: kin_3
03/25/2024 13:33:57 - INFO - __main__ - Mean variance for kin_3: 0.02979861944913864
03/25/2024 13:33:57 - INFO - __main__ - Mean std for for kin_3: 0.1519673466682434
03/25/2024 13:33:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:33:57 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 13:33:57 - INFO - __main__ - ID text: kin_4
03/25/2024 13:34:32 - INFO - __main__ - Mean variance for kin_4: 0.022724905982613564
03/25/2024 13:34:32 - INFO - __main__ - Mean std for for kin_4: 0.1311948001384735
03/25/2024 13:34:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:34:32 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 13:34:32 - INFO - __main__ - ID text: kin_5
03/25/2024 13:35:07 - INFO - __main__ - Mean variance for kin_5: 0.02811291813850403
03/25/2024 13:35:07 - INFO - __main__ - Mean std for for kin_5: 0.15349417924880981
03/25/2024 13:35:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:35:07 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 13:35:07 - INFO - __main__ - ID text: kin_6
03/25/2024 13:35:41 - INFO - __main__ - Mean variance for kin_6: 0.022137528285384178
03/25/2024 13:35:41 - INFO - __main__ - Mean std for for kin_6: 0.1277412623167038
03/25/2024 13:35:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:35:41 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 13:35:41 - INFO - __main__ - ID text: kin_7
03/25/2024 13:36:16 - INFO - __main__ - Mean variance for kin_7: 0.029634902253746986
03/25/2024 13:36:16 - INFO - __main__ - Mean std for for kin_7: 0.15189407765865326
03/25/2024 13:36:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:36:16 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 13:36:16 - INFO - __main__ - ID text: kin_8
03/25/2024 13:36:50 - INFO - __main__ - Mean variance for kin_8: 0.04000021889805794
03/25/2024 13:36:50 - INFO - __main__ - Mean std for for kin_8: 0.1837485432624817
03/25/2024 13:36:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:36:50 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 13:36:50 - INFO - __main__ - ID text: kin_9
03/25/2024 13:37:25 - INFO - __main__ - Mean variance for kin_9: 0.03385130688548088
03/25/2024 13:37:25 - INFO - __main__ - Mean std for for kin_9: 0.16797541081905365
03/25/2024 13:37:25 - INFO - __main__ - 
######## Language: lug ######## 

03/25/2024 13:37:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:37:25 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 13:37:25 - INFO - __main__ - ID text: lug_0
03/25/2024 13:37:59 - INFO - __main__ - Mean variance for lug_0: 0.024461885914206505
03/25/2024 13:37:59 - INFO - __main__ - Mean std for for lug_0: 0.13533005118370056
03/25/2024 13:37:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:37:59 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 13:37:59 - INFO - __main__ - ID text: lug_1
03/25/2024 13:38:33 - INFO - __main__ - Mean variance for lug_1: 0.028036512434482574
03/25/2024 13:38:33 - INFO - __main__ - Mean std for for lug_1: 0.14880965650081635
03/25/2024 13:38:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:38:33 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 13:38:33 - INFO - __main__ - ID text: lug_2
03/25/2024 13:39:07 - INFO - __main__ - Mean variance for lug_2: 0.02078341692686081
03/25/2024 13:39:07 - INFO - __main__ - Mean std for for lug_2: 0.11549662798643112
03/25/2024 13:39:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:39:07 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 13:39:07 - INFO - __main__ - ID text: lug_3
03/25/2024 13:39:41 - INFO - __main__ - Mean variance for lug_3: 0.02138288877904415
03/25/2024 13:39:41 - INFO - __main__ - Mean std for for lug_3: 0.12448351830244064
03/25/2024 13:39:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:39:41 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 13:39:41 - INFO - __main__ - ID text: lug_4
03/25/2024 13:40:14 - INFO - __main__ - Mean variance for lug_4: 0.03249936178326607
03/25/2024 13:40:14 - INFO - __main__ - Mean std for for lug_4: 0.1636074185371399
03/25/2024 13:40:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:40:14 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 13:40:14 - INFO - __main__ - ID text: lug_5
03/25/2024 13:40:47 - INFO - __main__ - Mean variance for lug_5: 0.026691384613513947
03/25/2024 13:40:47 - INFO - __main__ - Mean std for for lug_5: 0.1420748084783554
03/25/2024 13:40:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:40:47 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 13:40:47 - INFO - __main__ - ID text: lug_6
03/25/2024 13:41:20 - INFO - __main__ - Mean variance for lug_6: 0.024164199829101562
03/25/2024 13:41:20 - INFO - __main__ - Mean std for for lug_6: 0.1344846785068512
03/25/2024 13:41:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:41:20 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 13:41:20 - INFO - __main__ - ID text: lug_7
03/25/2024 13:41:53 - INFO - __main__ - Mean variance for lug_7: 0.028059659525752068
03/25/2024 13:41:53 - INFO - __main__ - Mean std for for lug_7: 0.1496879607439041
03/25/2024 13:41:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:41:53 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 13:41:53 - INFO - __main__ - ID text: lug_8
03/25/2024 13:42:25 - INFO - __main__ - Mean variance for lug_8: 0.03241648152470589
03/25/2024 13:42:25 - INFO - __main__ - Mean std for for lug_8: 0.16073156893253326
03/25/2024 13:42:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:42:25 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 13:42:25 - INFO - __main__ - ID text: lug_9
03/25/2024 13:42:57 - INFO - __main__ - Mean variance for lug_9: 0.02755730412900448
03/25/2024 13:42:57 - INFO - __main__ - Mean std for for lug_9: 0.14670167863368988
03/25/2024 13:42:57 - INFO - __main__ - 
######## Language: luo ######## 

03/25/2024 13:42:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:42:57 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 13:42:57 - INFO - __main__ - ID text: luo_0
03/25/2024 13:43:29 - INFO - __main__ - Mean variance for luo_0: 0.021874770522117615
03/25/2024 13:43:29 - INFO - __main__ - Mean std for for luo_0: 0.12360772490501404
03/25/2024 13:43:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:43:29 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 13:43:29 - INFO - __main__ - ID text: luo_1
03/25/2024 13:44:01 - INFO - __main__ - Mean variance for luo_1: 0.03447246178984642
03/25/2024 13:44:01 - INFO - __main__ - Mean std for for luo_1: 0.1696242243051529
03/25/2024 13:44:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:44:01 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 13:44:01 - INFO - __main__ - ID text: luo_2
03/25/2024 13:44:33 - INFO - __main__ - Mean variance for luo_2: 0.030038723722100258
03/25/2024 13:44:33 - INFO - __main__ - Mean std for for luo_2: 0.1521255522966385
03/25/2024 13:44:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:44:33 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 13:44:33 - INFO - __main__ - ID text: luo_3
03/25/2024 13:45:04 - INFO - __main__ - Mean variance for luo_3: 0.022087888792157173
03/25/2024 13:45:04 - INFO - __main__ - Mean std for for luo_3: 0.12434761971235275
03/25/2024 13:45:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:45:04 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 13:45:04 - INFO - __main__ - ID text: luo_4
03/25/2024 13:45:36 - INFO - __main__ - Mean variance for luo_4: 0.03274115175008774
03/25/2024 13:45:36 - INFO - __main__ - Mean std for for luo_4: 0.16460299491882324
03/25/2024 13:45:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:45:36 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 13:45:36 - INFO - __main__ - ID text: luo_5
03/25/2024 13:46:07 - INFO - __main__ - Mean variance for luo_5: 0.031488511711359024
03/25/2024 13:46:07 - INFO - __main__ - Mean std for for luo_5: 0.1611054539680481
03/25/2024 13:46:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:46:07 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 13:46:07 - INFO - __main__ - ID text: luo_6
03/25/2024 13:46:38 - INFO - __main__ - Mean variance for luo_6: 0.024855205789208412
03/25/2024 13:46:38 - INFO - __main__ - Mean std for for luo_6: 0.13680300116539001
03/25/2024 13:46:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:46:38 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 13:46:38 - INFO - __main__ - ID text: luo_7
03/25/2024 13:47:09 - INFO - __main__ - Mean variance for luo_7: 0.035766322165727615
03/25/2024 13:47:09 - INFO - __main__ - Mean std for for luo_7: 0.1737050563097
03/25/2024 13:47:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:47:09 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 13:47:09 - INFO - __main__ - ID text: luo_8
03/25/2024 13:47:40 - INFO - __main__ - Mean variance for luo_8: 0.02602122537791729
03/25/2024 13:47:40 - INFO - __main__ - Mean std for for luo_8: 0.14210285246372223
03/25/2024 13:47:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:47:40 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 13:47:40 - INFO - __main__ - ID text: luo_9
03/25/2024 13:48:11 - INFO - __main__ - Mean variance for luo_9: 0.030862724408507347
03/25/2024 13:48:11 - INFO - __main__ - Mean std for for luo_9: 0.16076628863811493
03/25/2024 13:48:11 - INFO - __main__ - 
######## Language: pcm ######## 

03/25/2024 13:48:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:48:11 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 13:48:11 - INFO - __main__ - ID text: pcm_0
03/25/2024 13:48:42 - INFO - __main__ - Mean variance for pcm_0: 0.02832113951444626
03/25/2024 13:48:42 - INFO - __main__ - Mean std for for pcm_0: 0.15238849818706512
03/25/2024 13:48:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:48:43 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 13:48:43 - INFO - __main__ - ID text: pcm_1
03/25/2024 13:49:14 - INFO - __main__ - Mean variance for pcm_1: 0.03140443563461304
03/25/2024 13:49:14 - INFO - __main__ - Mean std for for pcm_1: 0.161568745970726
03/25/2024 13:49:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:49:14 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 13:49:14 - INFO - __main__ - ID text: pcm_2
03/25/2024 13:49:44 - INFO - __main__ - Mean variance for pcm_2: 0.029262853786349297
03/25/2024 13:49:44 - INFO - __main__ - Mean std for for pcm_2: 0.15532821416854858
03/25/2024 13:49:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:49:44 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 13:49:44 - INFO - __main__ - ID text: pcm_3
03/25/2024 13:50:15 - INFO - __main__ - Mean variance for pcm_3: 0.030106516554951668
03/25/2024 13:50:15 - INFO - __main__ - Mean std for for pcm_3: 0.1551007777452469
03/25/2024 13:50:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:50:15 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 13:50:15 - INFO - __main__ - ID text: pcm_4
03/25/2024 13:50:46 - INFO - __main__ - Mean variance for pcm_4: 0.030803173780441284
03/25/2024 13:50:46 - INFO - __main__ - Mean std for for pcm_4: 0.15579549968242645
03/25/2024 13:50:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:50:46 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 13:50:46 - INFO - __main__ - ID text: pcm_5
03/25/2024 13:51:16 - INFO - __main__ - Mean variance for pcm_5: 0.02817004732787609
03/25/2024 13:51:16 - INFO - __main__ - Mean std for for pcm_5: 0.15292130410671234
03/25/2024 13:51:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:51:16 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 13:51:16 - INFO - __main__ - ID text: pcm_6
03/25/2024 13:51:47 - INFO - __main__ - Mean variance for pcm_6: 0.03215014562010765
03/25/2024 13:51:47 - INFO - __main__ - Mean std for for pcm_6: 0.1614970862865448
03/25/2024 13:51:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:51:47 - INFO - __main__ - Masked count: 119, ratio = 0.4648
03/25/2024 13:51:47 - INFO - __main__ - ID text: pcm_7
03/25/2024 13:52:17 - INFO - __main__ - Mean variance for pcm_7: 0.03054661490023136
03/25/2024 13:52:17 - INFO - __main__ - Mean std for for pcm_7: 0.15609268844127655
03/25/2024 13:52:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:52:17 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 13:52:17 - INFO - __main__ - ID text: pcm_8
03/25/2024 13:52:47 - INFO - __main__ - Mean variance for pcm_8: 0.02856280840933323
03/25/2024 13:52:47 - INFO - __main__ - Mean std for for pcm_8: 0.14958010613918304
03/25/2024 13:52:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:52:47 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 13:52:47 - INFO - __main__ - ID text: pcm_9
03/25/2024 13:53:17 - INFO - __main__ - Mean variance for pcm_9: 0.0322018638253212
03/25/2024 13:53:17 - INFO - __main__ - Mean std for for pcm_9: 0.16426004469394684
03/25/2024 13:53:17 - INFO - __main__ - 
######## Language: swa ######## 

03/25/2024 13:53:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:53:17 - INFO - __main__ - Masked count: 146, ratio = 0.5703
03/25/2024 13:53:17 - INFO - __main__ - ID text: swa_0
03/25/2024 13:53:48 - INFO - __main__ - Mean variance for swa_0: 0.021824337542057037
03/25/2024 13:53:48 - INFO - __main__ - Mean std for for swa_0: 0.12740416824817657
03/25/2024 13:53:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:53:48 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 13:53:48 - INFO - __main__ - ID text: swa_1
03/25/2024 13:54:18 - INFO - __main__ - Mean variance for swa_1: 0.02967868000268936
03/25/2024 13:54:18 - INFO - __main__ - Mean std for for swa_1: 0.15666532516479492
03/25/2024 13:54:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:54:18 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 13:54:18 - INFO - __main__ - ID text: swa_2
03/25/2024 13:54:48 - INFO - __main__ - Mean variance for swa_2: 0.025600142776966095
03/25/2024 13:54:48 - INFO - __main__ - Mean std for for swa_2: 0.14039625227451324
03/25/2024 13:54:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:54:48 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 13:54:48 - INFO - __main__ - ID text: swa_3
03/25/2024 13:55:18 - INFO - __main__ - Mean variance for swa_3: 0.030446374788880348
03/25/2024 13:55:18 - INFO - __main__ - Mean std for for swa_3: 0.1584778130054474
03/25/2024 13:55:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:55:18 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 13:55:18 - INFO - __main__ - ID text: swa_4
03/25/2024 13:55:48 - INFO - __main__ - Mean variance for swa_4: 0.018562057986855507
03/25/2024 13:55:48 - INFO - __main__ - Mean std for for swa_4: 0.11472824215888977
03/25/2024 13:55:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:55:48 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 13:55:48 - INFO - __main__ - ID text: swa_5
03/25/2024 13:56:18 - INFO - __main__ - Mean variance for swa_5: 0.01740073226392269
03/25/2024 13:56:18 - INFO - __main__ - Mean std for for swa_5: 0.10909409075975418
03/25/2024 13:56:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:56:19 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 13:56:19 - INFO - __main__ - ID text: swa_6
03/25/2024 13:56:49 - INFO - __main__ - Mean variance for swa_6: 0.025275617837905884
03/25/2024 13:56:49 - INFO - __main__ - Mean std for for swa_6: 0.1355520337820053
03/25/2024 13:56:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:56:49 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 13:56:49 - INFO - __main__ - ID text: swa_7
03/25/2024 13:57:19 - INFO - __main__ - Mean variance for swa_7: 0.032496239989995956
03/25/2024 13:57:19 - INFO - __main__ - Mean std for for swa_7: 0.1632978767156601
03/25/2024 13:57:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:57:19 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 13:57:19 - INFO - __main__ - ID text: swa_8
03/25/2024 13:57:49 - INFO - __main__ - Mean variance for swa_8: 0.030442848801612854
03/25/2024 13:57:49 - INFO - __main__ - Mean std for for swa_8: 0.1585744321346283
03/25/2024 13:57:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:57:49 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 13:57:49 - INFO - __main__ - ID text: swa_9
03/25/2024 13:58:19 - INFO - __main__ - Mean variance for swa_9: 0.030051013454794884
03/25/2024 13:58:19 - INFO - __main__ - Mean std for for swa_9: 0.15704865753650665
03/25/2024 13:58:19 - INFO - __main__ - 
######## Language: wol ######## 

03/25/2024 13:58:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:58:19 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 13:58:19 - INFO - __main__ - ID text: wol_0
03/25/2024 13:58:49 - INFO - __main__ - Mean variance for wol_0: 0.027553336694836617
03/25/2024 13:58:49 - INFO - __main__ - Mean std for for wol_0: 0.14591242372989655
03/25/2024 13:58:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:58:49 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 13:58:49 - INFO - __main__ - ID text: wol_1
03/25/2024 13:59:19 - INFO - __main__ - Mean variance for wol_1: 0.03439444676041603
03/25/2024 13:59:19 - INFO - __main__ - Mean std for for wol_1: 0.16715769469738007
03/25/2024 13:59:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:59:19 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 13:59:19 - INFO - __main__ - ID text: wol_2
03/25/2024 13:59:49 - INFO - __main__ - Mean variance for wol_2: 0.029657604172825813
03/25/2024 13:59:49 - INFO - __main__ - Mean std for for wol_2: 0.1558401733636856
03/25/2024 13:59:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 13:59:50 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 13:59:50 - INFO - __main__ - ID text: wol_3
03/25/2024 14:00:20 - INFO - __main__ - Mean variance for wol_3: 0.036566976457834244
03/25/2024 14:00:20 - INFO - __main__ - Mean std for for wol_3: 0.17508606612682343
03/25/2024 14:00:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:00:20 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:00:20 - INFO - __main__ - ID text: wol_4
03/25/2024 14:00:50 - INFO - __main__ - Mean variance for wol_4: 0.027377286925911903
03/25/2024 14:00:50 - INFO - __main__ - Mean std for for wol_4: 0.15129674971103668
03/25/2024 14:00:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:00:50 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:00:50 - INFO - __main__ - ID text: wol_5
03/25/2024 14:01:20 - INFO - __main__ - Mean variance for wol_5: 0.029212189838290215
03/25/2024 14:01:20 - INFO - __main__ - Mean std for for wol_5: 0.1534547060728073
03/25/2024 14:01:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:01:20 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 14:01:20 - INFO - __main__ - ID text: wol_6
03/25/2024 14:01:50 - INFO - __main__ - Mean variance for wol_6: 0.05181879922747612
03/25/2024 14:01:50 - INFO - __main__ - Mean std for for wol_6: 0.20390117168426514
03/25/2024 14:01:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:01:50 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:01:50 - INFO - __main__ - ID text: wol_7
03/25/2024 14:02:20 - INFO - __main__ - Mean variance for wol_7: 0.036381594836711884
03/25/2024 14:02:20 - INFO - __main__ - Mean std for for wol_7: 0.17434632778167725
03/25/2024 14:02:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:02:20 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:02:20 - INFO - __main__ - ID text: wol_8
03/25/2024 14:02:50 - INFO - __main__ - Mean variance for wol_8: 0.0276839267462492
03/25/2024 14:02:50 - INFO - __main__ - Mean std for for wol_8: 0.15241487324237823
03/25/2024 14:02:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:02:50 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:02:50 - INFO - __main__ - ID text: wol_9
03/25/2024 14:03:20 - INFO - __main__ - Mean variance for wol_9: 0.03575542941689491
03/25/2024 14:03:20 - INFO - __main__ - Mean std for for wol_9: 0.17269758880138397
03/25/2024 14:03:20 - INFO - __main__ - 
######## Language: yor ######## 

03/25/2024 14:03:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:03:20 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:03:20 - INFO - __main__ - ID text: yor_0
03/25/2024 14:03:50 - INFO - __main__ - Mean variance for yor_0: 0.07772641628980637
03/25/2024 14:03:50 - INFO - __main__ - Mean std for for yor_0: 0.24899858236312866
03/25/2024 14:03:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:03:50 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 14:03:50 - INFO - __main__ - ID text: yor_1
03/25/2024 14:04:20 - INFO - __main__ - Mean variance for yor_1: 0.06411533802747726
03/25/2024 14:04:20 - INFO - __main__ - Mean std for for yor_1: 0.22720378637313843
03/25/2024 14:04:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:04:20 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 14:04:20 - INFO - __main__ - ID text: yor_2
03/25/2024 14:04:50 - INFO - __main__ - Mean variance for yor_2: 0.03139827772974968
03/25/2024 14:04:50 - INFO - __main__ - Mean std for for yor_2: 0.16020824015140533
03/25/2024 14:04:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:04:50 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:04:50 - INFO - __main__ - ID text: yor_3
03/25/2024 14:05:20 - INFO - __main__ - Mean variance for yor_3: 0.02025848627090454
03/25/2024 14:05:20 - INFO - __main__ - Mean std for for yor_3: 0.12315893173217773
03/25/2024 14:05:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:05:20 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 14:05:20 - INFO - __main__ - ID text: yor_4
03/25/2024 14:05:50 - INFO - __main__ - Mean variance for yor_4: 0.06884094327688217
03/25/2024 14:05:50 - INFO - __main__ - Mean std for for yor_4: 0.23389320075511932
03/25/2024 14:05:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:05:50 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:05:50 - INFO - __main__ - ID text: yor_5
03/25/2024 14:06:20 - INFO - __main__ - Mean variance for yor_5: 0.04201963543891907
03/25/2024 14:06:20 - INFO - __main__ - Mean std for for yor_5: 0.1779000610113144
03/25/2024 14:06:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:06:20 - INFO - __main__ - Masked count: 146, ratio = 0.5703
03/25/2024 14:06:20 - INFO - __main__ - ID text: yor_6
03/25/2024 14:06:50 - INFO - __main__ - Mean variance for yor_6: 0.028286121785640717
03/25/2024 14:06:50 - INFO - __main__ - Mean std for for yor_6: 0.15216483175754547
03/25/2024 14:06:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:06:50 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:06:50 - INFO - __main__ - ID text: yor_7
03/25/2024 14:07:20 - INFO - __main__ - Mean variance for yor_7: 0.06443581730127335
03/25/2024 14:07:20 - INFO - __main__ - Mean std for for yor_7: 0.22554440796375275
03/25/2024 14:07:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:07:20 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:07:20 - INFO - __main__ - ID text: yor_8
03/25/2024 14:07:50 - INFO - __main__ - Mean variance for yor_8: 0.024559788405895233
03/25/2024 14:07:50 - INFO - __main__ - Mean std for for yor_8: 0.13723832368850708
03/25/2024 14:07:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:07:50 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:07:50 - INFO - __main__ - ID text: yor_9
03/25/2024 14:08:20 - INFO - __main__ - Mean variance for yor_9: 0.07012545317411423
03/25/2024 14:08:20 - INFO - __main__ - Mean std for for yor_9: 0.2380303144454956
03/25/2024 14:08:20 - INFO - __main__ - 
######## Language: zh ######## 

03/25/2024 14:08:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:08:20 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 14:08:20 - INFO - __main__ - ID text: zh_0
03/25/2024 14:08:50 - INFO - __main__ - Mean variance for zh_0: 0.0386413149535656
03/25/2024 14:08:50 - INFO - __main__ - Mean std for for zh_0: 0.1812981516122818
03/25/2024 14:08:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:08:54 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 14:08:54 - INFO - __main__ - ID text: zh_1
03/25/2024 14:09:24 - INFO - __main__ - Mean variance for zh_1: 0.032771311700344086
03/25/2024 14:09:24 - INFO - __main__ - Mean std for for zh_1: 0.16152538359165192
03/25/2024 14:09:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:09:24 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:09:24 - INFO - __main__ - ID text: zh_2
03/25/2024 14:09:54 - INFO - __main__ - Mean variance for zh_2: 0.054951589554548264
03/25/2024 14:09:54 - INFO - __main__ - Mean std for for zh_2: 0.21305452287197113
03/25/2024 14:09:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:09:54 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:09:54 - INFO - __main__ - ID text: zh_3
03/25/2024 14:10:24 - INFO - __main__ - Mean variance for zh_3: 0.06909830123186111
03/25/2024 14:10:24 - INFO - __main__ - Mean std for for zh_3: 0.23777256906032562
03/25/2024 14:10:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:10:24 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:10:24 - INFO - __main__ - ID text: zh_4
03/25/2024 14:10:54 - INFO - __main__ - Mean variance for zh_4: 0.05010411515831947
03/25/2024 14:10:54 - INFO - __main__ - Mean std for for zh_4: 0.20318138599395752
03/25/2024 14:10:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:10:54 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:10:54 - INFO - __main__ - ID text: zh_5
03/25/2024 14:11:24 - INFO - __main__ - Mean variance for zh_5: 0.05641404911875725
03/25/2024 14:11:24 - INFO - __main__ - Mean std for for zh_5: 0.21533964574337006
03/25/2024 14:11:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:11:24 - INFO - __main__ - Masked count: 151, ratio = 0.5898
03/25/2024 14:11:24 - INFO - __main__ - ID text: zh_6
03/25/2024 14:11:54 - INFO - __main__ - Mean variance for zh_6: 0.0328381173312664
03/25/2024 14:11:54 - INFO - __main__ - Mean std for for zh_6: 0.16293257474899292
03/25/2024 14:11:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:11:55 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:11:55 - INFO - __main__ - ID text: zh_7
03/25/2024 14:12:27 - INFO - __main__ - Mean variance for zh_7: 0.059448957443237305
03/25/2024 14:12:27 - INFO - __main__ - Mean std for for zh_7: 0.2214687019586563
03/25/2024 14:12:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:12:27 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:12:27 - INFO - __main__ - ID text: zh_8
03/25/2024 14:12:59 - INFO - __main__ - Mean variance for zh_8: 0.057202283293008804
03/25/2024 14:12:59 - INFO - __main__ - Mean std for for zh_8: 0.21616186201572418
03/25/2024 14:12:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:12:59 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:12:59 - INFO - __main__ - ID text: zh_9
03/25/2024 14:13:30 - INFO - __main__ - Mean variance for zh_9: 0.04256926476955414
03/25/2024 14:13:30 - INFO - __main__ - Mean std for for zh_9: 0.18696509301662445
03/25/2024 14:13:31 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/25/2024 14:13:31 - INFO - __main__ - 
######## Language: arabic ######## 

03/25/2024 14:13:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:13:31 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 14:13:31 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/25/2024 14:14:02 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.030295630916953087
03/25/2024 14:14:02 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.15752482414245605
03/25/2024 14:14:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:14:02 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:14:02 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/25/2024 14:14:32 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.021100766956806183
03/25/2024 14:14:32 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.12439942359924316
03/25/2024 14:14:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:14:32 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:14:32 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/25/2024 14:15:02 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.017639320343732834
03/25/2024 14:15:02 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.11168306320905685
03/25/2024 14:15:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:15:02 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 14:15:02 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/25/2024 14:15:32 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.015437615104019642
03/25/2024 14:15:32 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.10244632512331009
03/25/2024 14:15:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:15:32 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:15:32 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/25/2024 14:16:01 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.04249807074666023
03/25/2024 14:16:01 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.18860943615436554
03/25/2024 14:16:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:16:01 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:16:01 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/25/2024 14:16:31 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.018044454976916313
03/25/2024 14:16:31 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.11349892616271973
03/25/2024 14:16:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:16:31 - INFO - __main__ - Masked count: 144, ratio = 0.5625
03/25/2024 14:16:31 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/25/2024 14:17:00 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.018660442903637886
03/25/2024 14:17:00 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.11651762574911118
03/25/2024 14:17:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:17:00 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 14:17:00 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/25/2024 14:17:30 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.014732723124325275
03/25/2024 14:17:30 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.10075053572654724
03/25/2024 14:17:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:17:31 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:17:31 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/25/2024 14:18:03 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.013122625648975372
03/25/2024 14:18:03 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.09560676664113998
03/25/2024 14:18:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:18:03 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:18:03 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/25/2024 14:18:37 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.018347954377532005
03/25/2024 14:18:37 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.11402646452188492
03/25/2024 14:18:37 - INFO - __main__ - 
######## Language: russian ######## 

03/25/2024 14:18:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:18:37 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 14:18:37 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/25/2024 14:19:07 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.014920388348400593
03/25/2024 14:19:07 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.09127848595380783
03/25/2024 14:19:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:19:07 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:19:07 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/25/2024 14:19:38 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.027569612488150597
03/25/2024 14:19:38 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.1453762650489807
03/25/2024 14:19:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:19:38 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:19:38 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/25/2024 14:20:12 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.013509436510503292
03/25/2024 14:20:12 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.0875014066696167
03/25/2024 14:20:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:20:12 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 14:20:12 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/25/2024 14:20:44 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.011937775649130344
03/25/2024 14:20:44 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.08246030658483505
03/25/2024 14:20:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:20:44 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:20:44 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/25/2024 14:21:14 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.01748575083911419
03/25/2024 14:21:14 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.10524515062570572
03/25/2024 14:21:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:21:14 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:21:14 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/25/2024 14:21:44 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.014745961874723434
03/25/2024 14:21:44 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.08996173739433289
03/25/2024 14:21:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:21:44 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:21:44 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/25/2024 14:22:14 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.039905767887830734
03/25/2024 14:22:14 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.18253104388713837
03/25/2024 14:22:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:22:14 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 14:22:14 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/25/2024 14:22:44 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.013901855796575546
03/25/2024 14:22:44 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.0883316695690155
03/25/2024 14:22:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:22:44 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:22:44 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/25/2024 14:23:14 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.03179038316011429
03/25/2024 14:23:14 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.1581132709980011
03/25/2024 14:23:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:23:14 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:23:14 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/25/2024 14:23:44 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.013843715190887451
03/25/2024 14:23:44 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.08897623419761658
03/25/2024 14:23:44 - INFO - __main__ - 
######## Language: bengali ######## 

03/25/2024 14:23:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:23:44 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:23:44 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/25/2024 14:24:14 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.013672571629285812
03/25/2024 14:24:14 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.093622587621212
03/25/2024 14:24:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:24:14 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 14:24:14 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/25/2024 14:24:44 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.015601417981088161
03/25/2024 14:24:44 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.10046885162591934
03/25/2024 14:24:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:24:44 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:24:44 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/25/2024 14:25:14 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.012856471352279186
03/25/2024 14:25:14 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.09110643714666367
03/25/2024 14:25:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:25:14 - INFO - __main__ - Masked count: 109, ratio = 0.4258
03/25/2024 14:25:14 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/25/2024 14:25:44 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.01865193620324135
03/25/2024 14:25:44 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.11375933140516281
03/25/2024 14:25:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:25:44 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 14:25:44 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/25/2024 14:26:14 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.013919605873525143
03/25/2024 14:26:14 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.09756941348314285
03/25/2024 14:26:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:26:14 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 14:26:14 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/25/2024 14:26:44 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.015589587390422821
03/25/2024 14:26:44 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.10109328478574753
03/25/2024 14:26:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:26:44 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:26:44 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/25/2024 14:27:13 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.011976249516010284
03/25/2024 14:27:13 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.0885586366057396
03/25/2024 14:27:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:27:13 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:27:13 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/25/2024 14:27:43 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.011264375410974026
03/25/2024 14:27:43 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.08712219446897507
03/25/2024 14:27:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:27:43 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 14:27:43 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/25/2024 14:28:13 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.013081737793982029
03/25/2024 14:28:13 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.09211212396621704
03/25/2024 14:28:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:28:13 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 14:28:13 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/25/2024 14:28:46 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.040134452283382416
03/25/2024 14:28:46 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.17913275957107544
03/25/2024 14:28:46 - INFO - __main__ - 
######## Language: telugu ######## 

03/25/2024 14:28:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:28:47 - INFO - __main__ - Masked count: 118, ratio = 0.4609
03/25/2024 14:28:47 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/25/2024 14:29:17 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.014281750656664371
03/25/2024 14:29:17 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.10028155893087387
03/25/2024 14:29:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:29:17 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 14:29:17 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/25/2024 14:29:49 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.015058517456054688
03/25/2024 14:29:49 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.10382908582687378
03/25/2024 14:29:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:29:49 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:29:49 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/25/2024 14:30:21 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.01502478588372469
03/25/2024 14:30:21 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.10290295630693436
03/25/2024 14:30:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:30:21 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 14:30:21 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/25/2024 14:30:52 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.02041170932352543
03/25/2024 14:30:52 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.12502533197402954
03/25/2024 14:30:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:30:52 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:30:52 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/25/2024 14:31:24 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.015038363635540009
03/25/2024 14:31:24 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.10330458730459213
03/25/2024 14:31:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:31:25 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:31:25 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/25/2024 14:31:55 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.014200645498931408
03/25/2024 14:31:55 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.10081497579813004
03/25/2024 14:31:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:31:55 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 14:31:55 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/25/2024 14:32:28 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.02173066884279251
03/25/2024 14:32:28 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.126400887966156
03/25/2024 14:32:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:32:28 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 14:32:28 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/25/2024 14:32:58 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.008273796178400517
03/25/2024 14:32:58 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.07669418305158615
03/25/2024 14:32:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:32:58 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:32:58 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/25/2024 14:33:31 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.018196403980255127
03/25/2024 14:33:31 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.1153925284743309
03/25/2024 14:33:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:33:31 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:33:31 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/25/2024 14:34:01 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.015613961033523083
03/25/2024 14:34:01 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.10548510402441025
03/25/2024 14:34:01 - INFO - __main__ - 
######## Language: finnish ######## 

03/25/2024 14:34:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:34:01 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:34:01 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/25/2024 14:34:34 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.024983085691928864
03/25/2024 14:34:34 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.13744120299816132
03/25/2024 14:34:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:34:34 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:34:34 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/25/2024 14:35:05 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.028006939217448235
03/25/2024 14:35:05 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.14662374556064606
03/25/2024 14:35:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:35:05 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:35:05 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/25/2024 14:35:37 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.034676503390073776
03/25/2024 14:35:37 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.1460508406162262
03/25/2024 14:35:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:35:37 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:35:37 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/25/2024 14:36:08 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.026171749457716942
03/25/2024 14:36:08 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.14246846735477448
03/25/2024 14:36:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:36:08 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:36:08 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/25/2024 14:36:41 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.027228765189647675
03/25/2024 14:36:41 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.1451040357351303
03/25/2024 14:36:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:36:41 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 14:36:41 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/25/2024 14:37:11 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.021382829174399376
03/25/2024 14:37:11 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.11468727141618729
03/25/2024 14:37:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:37:11 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 14:37:11 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/25/2024 14:37:44 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.02091183327138424
03/25/2024 14:37:44 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.10575014352798462
03/25/2024 14:37:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:37:44 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:37:44 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/25/2024 14:38:14 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.03198935464024544
03/25/2024 14:38:14 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.14333175122737885
03/25/2024 14:38:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:38:14 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:38:14 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/25/2024 14:38:47 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.022974789142608643
03/25/2024 14:38:47 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.12621335685253143
03/25/2024 14:38:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:38:47 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 14:38:47 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/25/2024 14:39:17 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.021558865904808044
03/25/2024 14:39:17 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.10838835686445236
03/25/2024 14:39:17 - INFO - __main__ - 
######## Language: swahili ######## 

03/25/2024 14:39:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:39:17 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:39:17 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/25/2024 14:39:50 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.03157101199030876
03/25/2024 14:39:50 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.15795882046222687
03/25/2024 14:39:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:39:50 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:39:50 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/25/2024 14:40:20 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.021755561232566833
03/25/2024 14:40:20 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.10856902599334717
03/25/2024 14:40:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:40:20 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:40:20 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/25/2024 14:40:53 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.02888861857354641
03/25/2024 14:40:53 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.1499098539352417
03/25/2024 14:40:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:40:53 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:40:53 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/25/2024 14:41:23 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.022037750110030174
03/25/2024 14:41:23 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.10735400766134262
03/25/2024 14:41:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:41:23 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:41:23 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/25/2024 14:41:56 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.020964570343494415
03/25/2024 14:41:56 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.11400922387838364
03/25/2024 14:41:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:41:56 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 14:41:56 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/25/2024 14:42:27 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.027731643989682198
03/25/2024 14:42:27 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.1474844366312027
03/25/2024 14:42:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:42:27 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 14:42:27 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/25/2024 14:43:00 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.028690477833151817
03/25/2024 14:43:00 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.14580246806144714
03/25/2024 14:43:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:43:00 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:43:00 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/25/2024 14:43:30 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.02809532918035984
03/25/2024 14:43:30 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.147083580493927
03/25/2024 14:43:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:43:30 - INFO - __main__ - Masked count: 146, ratio = 0.5703
03/25/2024 14:43:30 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/25/2024 14:44:03 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.02040921151638031
03/25/2024 14:44:03 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.11747563630342484
03/25/2024 14:44:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:44:03 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:44:03 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/25/2024 14:44:33 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.020531464368104935
03/25/2024 14:44:33 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.11688222736120224
03/25/2024 14:44:33 - INFO - __main__ - 
######## Language: korean ######## 

03/25/2024 14:44:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:44:33 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:44:33 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/25/2024 14:45:06 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.014626762829720974
03/25/2024 14:45:06 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.10252650827169418
03/25/2024 14:45:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:45:06 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:45:06 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/25/2024 14:45:37 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.012454818934202194
03/25/2024 14:45:37 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.0957949161529541
03/25/2024 14:45:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:45:37 - INFO - __main__ - Masked count: 120, ratio = 0.4688
03/25/2024 14:45:37 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/25/2024 14:46:10 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.01629304140806198
03/25/2024 14:46:10 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.10899534076452255
03/25/2024 14:46:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:46:10 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:46:10 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/25/2024 14:46:41 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.018265755847096443
03/25/2024 14:46:41 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.11830016225576401
03/25/2024 14:46:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:46:41 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:46:41 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/25/2024 14:47:14 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.026708999648690224
03/25/2024 14:47:14 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.14576883614063263
03/25/2024 14:47:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:47:14 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 14:47:14 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/25/2024 14:47:44 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.02045130729675293
03/25/2024 14:47:44 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.1262996792793274
03/25/2024 14:47:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:47:44 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:47:44 - INFO - __main__ - ID text: korean-148115504649351135-0
03/25/2024 14:48:18 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.019543051719665527
03/25/2024 14:48:18 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.12420299649238586
03/25/2024 14:48:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:48:18 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 14:48:18 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/25/2024 14:48:48 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.015713099390268326
03/25/2024 14:48:48 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.1067899763584137
03/25/2024 14:48:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:48:48 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 14:48:48 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/25/2024 14:49:21 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.03257480636239052
03/25/2024 14:49:21 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.16251732409000397
03/25/2024 14:49:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:49:22 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:49:22 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/25/2024 14:49:52 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.06450717896223068
03/25/2024 14:49:52 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.2282446026802063
03/25/2024 14:49:52 - INFO - __main__ - 
######## Language: indonesian ######## 

03/25/2024 14:49:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:49:52 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 14:49:52 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/25/2024 14:50:25 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.02122689038515091
03/25/2024 14:50:25 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.10738981515169144
03/25/2024 14:50:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:50:25 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:50:25 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/25/2024 14:50:56 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.03890056535601616
03/25/2024 14:50:56 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.1534360647201538
03/25/2024 14:50:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:50:56 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:50:56 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/25/2024 14:51:29 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.02401919849216938
03/25/2024 14:51:29 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.12159805744886398
03/25/2024 14:51:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:51:29 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 14:51:29 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/25/2024 14:52:00 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.020494690164923668
03/25/2024 14:52:00 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.1201154887676239
03/25/2024 14:52:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:52:00 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 14:52:00 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/25/2024 14:52:32 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.023835359141230583
03/25/2024 14:52:32 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.1162838563323021
03/25/2024 14:52:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:52:32 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 14:52:32 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/25/2024 14:53:04 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.02274952083826065
03/25/2024 14:53:04 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.12128033488988876
03/25/2024 14:53:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:53:04 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:53:04 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/25/2024 14:53:36 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.023788193240761757
03/25/2024 14:53:36 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.11818859726190567
03/25/2024 14:53:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:53:36 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:53:36 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/25/2024 14:54:08 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.025439897552132607
03/25/2024 14:54:08 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.13918916881084442
03/25/2024 14:54:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:54:08 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:54:08 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/25/2024 14:54:40 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.023446014150977135
03/25/2024 14:54:40 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.1255817711353302
03/25/2024 14:54:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:54:40 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 14:54:40 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/25/2024 14:55:12 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.022584354504942894
03/25/2024 14:55:12 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.10879800468683243
03/25/2024 14:55:12 - INFO - __main__ - 
######## Language: english ######## 

03/25/2024 14:55:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:55:12 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 14:55:12 - INFO - __main__ - ID text: english-2852412434797041176-6
03/25/2024 14:55:43 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.028175050392746925
03/25/2024 14:55:43 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.13124196231365204
03/25/2024 14:55:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:55:43 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 14:55:43 - INFO - __main__ - ID text: english--1463732605740571606-0
03/25/2024 14:56:15 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.028323328122496605
03/25/2024 14:56:15 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.12990698218345642
03/25/2024 14:56:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:56:15 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 14:56:15 - INFO - __main__ - ID text: english-5441411281255470421-0
03/25/2024 14:56:47 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.02689441479742527
03/25/2024 14:56:47 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.12001285701990128
03/25/2024 14:56:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:56:47 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:56:47 - INFO - __main__ - ID text: english-7294054492486093447-1
03/25/2024 14:57:19 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.029608195647597313
03/25/2024 14:57:19 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.12640635669231415
03/25/2024 14:57:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:57:19 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 14:57:19 - INFO - __main__ - ID text: english-8820750127045023244-0
03/25/2024 14:57:51 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.029392316937446594
03/25/2024 14:57:51 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.14760904014110565
03/25/2024 14:57:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:57:51 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 14:57:51 - INFO - __main__ - ID text: english--506693546683012611-2
03/25/2024 14:58:23 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.03286006674170494
03/25/2024 14:58:23 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.1598084419965744
03/25/2024 14:58:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:58:23 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 14:58:23 - INFO - __main__ - ID text: english-745411798111651115-0
03/25/2024 14:58:55 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.028441840782761574
03/25/2024 14:58:55 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.12332919985055923
03/25/2024 14:58:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:58:55 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 14:58:55 - INFO - __main__ - ID text: english-7740772185887912651-0
03/25/2024 14:59:28 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.030497094616293907
03/25/2024 14:59:28 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.1299450695514679
03/25/2024 14:59:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:59:28 - INFO - __main__ - Masked count: 144, ratio = 0.5625
03/25/2024 14:59:28 - INFO - __main__ - ID text: english-383873188776267137-19
03/25/2024 14:59:59 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.02985323965549469
03/25/2024 14:59:59 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.13272589445114136
03/25/2024 14:59:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 14:59:59 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 14:59:59 - INFO - __main__ - ID text: english--8277537578703156284-0
03/25/2024 15:00:31 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.02947751246392727
03/25/2024 15:00:31 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.1282624900341034
03/25/2024 15:00:31 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/25/2024 15:00:31 - INFO - __main__ - 
######## Language: cola ######## 

03/25/2024 15:00:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:00:31 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:00:31 - INFO - __main__ - ID text: cola_228
03/25/2024 15:01:02 - INFO - __main__ - Mean variance for cola_228: 0.022112935781478882
03/25/2024 15:01:02 - INFO - __main__ - Mean std for for cola_228: 0.135165274143219
03/25/2024 15:01:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:01:02 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:01:02 - INFO - __main__ - ID text: cola_51
03/25/2024 15:01:34 - INFO - __main__ - Mean variance for cola_51: 0.02649485506117344
03/25/2024 15:01:34 - INFO - __main__ - Mean std for for cola_51: 0.14863160252571106
03/25/2024 15:01:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:01:35 - INFO - __main__ - Masked count: 149, ratio = 0.5820
03/25/2024 15:01:35 - INFO - __main__ - ID text: cola_563
03/25/2024 15:02:05 - INFO - __main__ - Mean variance for cola_563: 0.05552409216761589
03/25/2024 15:02:05 - INFO - __main__ - Mean std for for cola_563: 0.21507646143436432
03/25/2024 15:02:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:02:05 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 15:02:05 - INFO - __main__ - ID text: cola_501
03/25/2024 15:02:38 - INFO - __main__ - Mean variance for cola_501: 0.02755211852490902
03/25/2024 15:02:38 - INFO - __main__ - Mean std for for cola_501: 0.15150098502635956
03/25/2024 15:02:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:02:38 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:02:38 - INFO - __main__ - ID text: cola_457
03/25/2024 15:03:08 - INFO - __main__ - Mean variance for cola_457: 0.034853577613830566
03/25/2024 15:03:08 - INFO - __main__ - Mean std for for cola_457: 0.1701434850692749
03/25/2024 15:03:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:03:08 - INFO - __main__ - Masked count: 148, ratio = 0.5781
03/25/2024 15:03:08 - INFO - __main__ - ID text: cola_285
03/25/2024 15:03:41 - INFO - __main__ - Mean variance for cola_285: 0.030001260340213776
03/25/2024 15:03:41 - INFO - __main__ - Mean std for for cola_285: 0.15819700062274933
03/25/2024 15:03:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:03:41 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:03:41 - INFO - __main__ - ID text: cola_209
03/25/2024 15:04:12 - INFO - __main__ - Mean variance for cola_209: 0.027285458520054817
03/25/2024 15:04:12 - INFO - __main__ - Mean std for for cola_209: 0.15069317817687988
03/25/2024 15:04:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:04:12 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:04:12 - INFO - __main__ - ID text: cola_178
03/25/2024 15:04:45 - INFO - __main__ - Mean variance for cola_178: 0.03204264119267464
03/25/2024 15:04:45 - INFO - __main__ - Mean std for for cola_178: 0.16347937285900116
03/25/2024 15:04:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:04:45 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:04:45 - INFO - __main__ - ID text: cola_864
03/25/2024 15:05:15 - INFO - __main__ - Mean variance for cola_864: 0.026960736140608788
03/25/2024 15:05:15 - INFO - __main__ - Mean std for for cola_864: 0.1493435651063919
03/25/2024 15:05:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:05:16 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 15:05:16 - INFO - __main__ - ID text: cola_65
03/25/2024 15:05:49 - INFO - __main__ - Mean variance for cola_65: 0.032637644559144974
03/25/2024 15:05:49 - INFO - __main__ - Mean std for for cola_65: 0.16378183662891388
03/25/2024 15:05:50 - INFO - __main__ - 
######## Language: mnli ######## 

03/25/2024 15:05:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:05:50 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:05:50 - INFO - __main__ - ID text: mnli_488
03/25/2024 15:06:21 - INFO - __main__ - Mean variance for mnli_488: 0.02783358283340931
03/25/2024 15:06:21 - INFO - __main__ - Mean std for for mnli_488: 0.1453094333410263
03/25/2024 15:06:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:06:21 - INFO - __main__ - Masked count: 125, ratio = 0.4883
03/25/2024 15:06:21 - INFO - __main__ - ID text: mnli_1535
03/25/2024 15:06:53 - INFO - __main__ - Mean variance for mnli_1535: 0.033437807112932205
03/25/2024 15:06:53 - INFO - __main__ - Mean std for for mnli_1535: 0.16085456311702728
03/25/2024 15:06:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:06:53 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 15:06:53 - INFO - __main__ - ID text: mnli_3582
03/25/2024 15:07:25 - INFO - __main__ - Mean variance for mnli_3582: 0.03215939179062843
03/25/2024 15:07:25 - INFO - __main__ - Mean std for for mnli_3582: 0.16269439458847046
03/25/2024 15:07:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:07:26 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:07:26 - INFO - __main__ - ID text: mnli_3811
03/25/2024 15:07:58 - INFO - __main__ - Mean variance for mnli_3811: 0.031586941331624985
03/25/2024 15:07:58 - INFO - __main__ - Mean std for for mnli_3811: 0.16040049493312836
03/25/2024 15:07:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:07:58 - INFO - __main__ - Masked count: 142, ratio = 0.5547
03/25/2024 15:07:58 - INFO - __main__ - ID text: mnli_8279
03/25/2024 15:08:30 - INFO - __main__ - Mean variance for mnli_8279: 0.031792767345905304
03/25/2024 15:08:30 - INFO - __main__ - Mean std for for mnli_8279: 0.1627267599105835
03/25/2024 15:08:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:08:30 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:08:30 - INFO - __main__ - ID text: mnli_434
03/25/2024 15:09:01 - INFO - __main__ - Mean variance for mnli_434: 0.0270068421959877
03/25/2024 15:09:01 - INFO - __main__ - Mean std for for mnli_434: 0.13918043673038483
03/25/2024 15:09:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:09:01 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:09:01 - INFO - __main__ - ID text: mnli_9195
03/25/2024 15:09:34 - INFO - __main__ - Mean variance for mnli_9195: 0.03300810232758522
03/25/2024 15:09:34 - INFO - __main__ - Mean std for for mnli_9195: 0.16512519121170044
03/25/2024 15:09:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:09:34 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 15:09:34 - INFO - __main__ - ID text: mnli_3257
03/25/2024 15:10:04 - INFO - __main__ - Mean variance for mnli_3257: 0.03260646387934685
03/25/2024 15:10:04 - INFO - __main__ - Mean std for for mnli_3257: 0.16321010887622833
03/25/2024 15:10:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:10:04 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:10:04 - INFO - __main__ - ID text: mnli_8928
03/25/2024 15:10:37 - INFO - __main__ - Mean variance for mnli_8928: 0.02895948477089405
03/25/2024 15:10:37 - INFO - __main__ - Mean std for for mnli_8928: 0.14868688583374023
03/25/2024 15:10:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:10:37 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:10:37 - INFO - __main__ - ID text: mnli_6873
03/25/2024 15:11:08 - INFO - __main__ - Mean variance for mnli_6873: 0.029715491458773613
03/25/2024 15:11:08 - INFO - __main__ - Mean std for for mnli_6873: 0.15047667920589447
03/25/2024 15:11:08 - INFO - __main__ - 
######## Language: mrpc ######## 

03/25/2024 15:11:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:11:08 - INFO - __main__ - Masked count: 139, ratio = 0.5430
03/25/2024 15:11:08 - INFO - __main__ - ID text: mrpc_451
03/25/2024 15:11:40 - INFO - __main__ - Mean variance for mrpc_451: 0.027003811672329903
03/25/2024 15:11:40 - INFO - __main__ - Mean std for for mrpc_451: 0.14308176934719086
03/25/2024 15:11:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:11:40 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 15:11:40 - INFO - __main__ - ID text: mrpc_919
03/25/2024 15:12:11 - INFO - __main__ - Mean variance for mrpc_919: 0.034308213740587234
03/25/2024 15:12:11 - INFO - __main__ - Mean std for for mrpc_919: 0.16323305666446686
03/25/2024 15:12:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:12:11 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:12:11 - INFO - __main__ - ID text: mrpc_1206
03/25/2024 15:12:43 - INFO - __main__ - Mean variance for mrpc_1206: 0.03486873209476471
03/25/2024 15:12:43 - INFO - __main__ - Mean std for for mrpc_1206: 0.16786175966262817
03/25/2024 15:12:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:12:44 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:12:44 - INFO - __main__ - ID text: mrpc_569
03/25/2024 15:13:14 - INFO - __main__ - Mean variance for mrpc_569: 0.029328467324376106
03/25/2024 15:13:14 - INFO - __main__ - Mean std for for mrpc_569: 0.15329024195671082
03/25/2024 15:13:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:13:14 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:13:14 - INFO - __main__ - ID text: mrpc_1657
03/25/2024 15:13:47 - INFO - __main__ - Mean variance for mrpc_1657: 0.024040281772613525
03/25/2024 15:13:47 - INFO - __main__ - Mean std for for mrpc_1657: 0.13151459395885468
03/25/2024 15:13:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:13:47 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:13:47 - INFO - __main__ - ID text: mrpc_13
03/25/2024 15:14:17 - INFO - __main__ - Mean variance for mrpc_13: 0.027411580085754395
03/25/2024 15:14:17 - INFO - __main__ - Mean std for for mrpc_13: 0.1464410126209259
03/25/2024 15:14:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:14:17 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:14:17 - INFO - __main__ - ID text: mrpc_1554
03/25/2024 15:14:50 - INFO - __main__ - Mean variance for mrpc_1554: 0.02281676046550274
03/25/2024 15:14:50 - INFO - __main__ - Mean std for for mrpc_1554: 0.1283576935529709
03/25/2024 15:14:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:14:50 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:14:50 - INFO - __main__ - ID text: mrpc_1650
03/25/2024 15:15:20 - INFO - __main__ - Mean variance for mrpc_1650: 0.06048021838068962
03/25/2024 15:15:20 - INFO - __main__ - Mean std for for mrpc_1650: 0.2195972353219986
03/25/2024 15:15:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:15:20 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:15:20 - INFO - __main__ - ID text: mrpc_326
03/25/2024 15:15:53 - INFO - __main__ - Mean variance for mrpc_326: 0.02746153064072132
03/25/2024 15:15:53 - INFO - __main__ - Mean std for for mrpc_326: 0.14618520438671112
03/25/2024 15:15:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:15:53 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:15:53 - INFO - __main__ - ID text: mrpc_1429
03/25/2024 15:16:24 - INFO - __main__ - Mean variance for mrpc_1429: 0.03131807595491409
03/25/2024 15:16:24 - INFO - __main__ - Mean std for for mrpc_1429: 0.15703295171260834
03/25/2024 15:16:24 - INFO - __main__ - 
######## Language: qnli ######## 

03/25/2024 15:16:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:16:24 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:16:24 - INFO - __main__ - ID text: qnli_3462
03/25/2024 15:16:57 - INFO - __main__ - Mean variance for qnli_3462: 0.031795382499694824
03/25/2024 15:16:57 - INFO - __main__ - Mean std for for qnli_3462: 0.15755094587802887
03/25/2024 15:16:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:16:57 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:16:57 - INFO - __main__ - ID text: qnli_2787
03/25/2024 15:17:27 - INFO - __main__ - Mean variance for qnli_2787: 0.02928123064339161
03/25/2024 15:17:27 - INFO - __main__ - Mean std for for qnli_2787: 0.14526918530464172
03/25/2024 15:17:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:17:27 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:17:27 - INFO - __main__ - ID text: qnli_2276
03/25/2024 15:18:00 - INFO - __main__ - Mean variance for qnli_2276: 0.02478932775557041
03/25/2024 15:18:00 - INFO - __main__ - Mean std for for qnli_2276: 0.13487567007541656
03/25/2024 15:18:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:18:00 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:18:00 - INFO - __main__ - ID text: qnli_1273
03/25/2024 15:18:30 - INFO - __main__ - Mean variance for qnli_1273: 0.028782876208424568
03/25/2024 15:18:30 - INFO - __main__ - Mean std for for qnli_1273: 0.14703470468521118
03/25/2024 15:18:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:18:30 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:18:30 - INFO - __main__ - ID text: qnli_1763
03/25/2024 15:19:05 - INFO - __main__ - Mean variance for qnli_1763: 0.03341814875602722
03/25/2024 15:19:05 - INFO - __main__ - Mean std for for qnli_1763: 0.16158491373062134
03/25/2024 15:19:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:19:05 - INFO - __main__ - Masked count: 150, ratio = 0.5859
03/25/2024 15:19:05 - INFO - __main__ - ID text: qnli_2757
03/25/2024 15:19:35 - INFO - __main__ - Mean variance for qnli_2757: 0.026947086676955223
03/25/2024 15:19:35 - INFO - __main__ - Mean std for for qnli_2757: 0.14329580962657928
03/25/2024 15:19:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:19:36 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:19:36 - INFO - __main__ - ID text: qnli_837
03/25/2024 15:20:09 - INFO - __main__ - Mean variance for qnli_837: 0.03120439313352108
03/25/2024 15:20:09 - INFO - __main__ - Mean std for for qnli_837: 0.15759910643100739
03/25/2024 15:20:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:20:09 - INFO - __main__ - Masked count: 121, ratio = 0.4727
03/25/2024 15:20:09 - INFO - __main__ - ID text: qnli_759
03/25/2024 15:20:40 - INFO - __main__ - Mean variance for qnli_759: 0.028629304841160774
03/25/2024 15:20:40 - INFO - __main__ - Mean std for for qnli_759: 0.1339767724275589
03/25/2024 15:20:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:20:40 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:20:40 - INFO - __main__ - ID text: qnli_3112
03/25/2024 15:21:13 - INFO - __main__ - Mean variance for qnli_3112: 0.02973243035376072
03/25/2024 15:21:13 - INFO - __main__ - Mean std for for qnli_3112: 0.15157561004161835
03/25/2024 15:21:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:21:13 - INFO - __main__ - Masked count: 120, ratio = 0.4688
03/25/2024 15:21:13 - INFO - __main__ - ID text: qnli_792
03/25/2024 15:21:45 - INFO - __main__ - Mean variance for qnli_792: 0.028315814211964607
03/25/2024 15:21:45 - INFO - __main__ - Mean std for for qnli_792: 0.14650976657867432
03/25/2024 15:21:45 - INFO - __main__ - 
######## Language: qqp ######## 

03/25/2024 15:21:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:21:45 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:21:45 - INFO - __main__ - ID text: qqp_188208
03/25/2024 15:22:17 - INFO - __main__ - Mean variance for qqp_188208: 0.033787284046411514
03/25/2024 15:22:17 - INFO - __main__ - Mean std for for qqp_188208: 0.16736817359924316
03/25/2024 15:22:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:22:17 - INFO - __main__ - Masked count: 144, ratio = 0.5625
03/25/2024 15:22:17 - INFO - __main__ - ID text: qqp_180331
03/25/2024 15:22:50 - INFO - __main__ - Mean variance for qqp_180331: 0.03186362609267235
03/25/2024 15:22:50 - INFO - __main__ - Mean std for for qqp_180331: 0.16009800136089325
03/25/2024 15:22:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:22:50 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 15:22:50 - INFO - __main__ - ID text: qqp_316526
03/25/2024 15:23:22 - INFO - __main__ - Mean variance for qqp_316526: 0.02939009666442871
03/25/2024 15:23:22 - INFO - __main__ - Mean std for for qqp_316526: 0.15267254412174225
03/25/2024 15:23:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:23:22 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 15:23:22 - INFO - __main__ - ID text: qqp_138685
03/25/2024 15:23:55 - INFO - __main__ - Mean variance for qqp_138685: 0.027673019096255302
03/25/2024 15:23:55 - INFO - __main__ - Mean std for for qqp_138685: 0.14251892268657684
03/25/2024 15:23:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:23:55 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:23:55 - INFO - __main__ - ID text: qqp_22780
03/25/2024 15:24:26 - INFO - __main__ - Mean variance for qqp_22780: 0.03521276265382767
03/25/2024 15:24:26 - INFO - __main__ - Mean std for for qqp_22780: 0.1705641746520996
03/25/2024 15:24:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:24:26 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:24:26 - INFO - __main__ - ID text: qqp_382589
03/25/2024 15:24:59 - INFO - __main__ - Mean variance for qqp_382589: 0.02617551200091839
03/25/2024 15:24:59 - INFO - __main__ - Mean std for for qqp_382589: 0.1455659419298172
03/25/2024 15:24:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:24:59 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:24:59 - INFO - __main__ - ID text: qqp_240870
03/25/2024 15:25:30 - INFO - __main__ - Mean variance for qqp_240870: 0.030580684542655945
03/25/2024 15:25:30 - INFO - __main__ - Mean std for for qqp_240870: 0.15808753669261932
03/25/2024 15:25:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:25:30 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 15:25:30 - INFO - __main__ - ID text: qqp_281137
03/25/2024 15:26:04 - INFO - __main__ - Mean variance for qqp_281137: 0.03178875893354416
03/25/2024 15:26:04 - INFO - __main__ - Mean std for for qqp_281137: 0.16081131994724274
03/25/2024 15:26:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:26:04 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 15:26:04 - INFO - __main__ - ID text: qqp_65444
03/25/2024 15:26:34 - INFO - __main__ - Mean variance for qqp_65444: 0.02911008708178997
03/25/2024 15:26:34 - INFO - __main__ - Mean std for for qqp_65444: 0.15428338944911957
03/25/2024 15:26:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:26:34 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:26:34 - INFO - __main__ - ID text: qqp_198461
03/25/2024 15:27:08 - INFO - __main__ - Mean variance for qqp_198461: 0.03503900766372681
03/25/2024 15:27:08 - INFO - __main__ - Mean std for for qqp_198461: 0.16828124225139618
03/25/2024 15:27:08 - INFO - __main__ - 
######## Language: rte ######## 

03/25/2024 15:27:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:27:08 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:27:08 - INFO - __main__ - ID text: rte_322
03/25/2024 15:27:39 - INFO - __main__ - Mean variance for rte_322: 0.02839910425245762
03/25/2024 15:27:39 - INFO - __main__ - Mean std for for rte_322: 0.15034089982509613
03/25/2024 15:27:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:27:39 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:27:39 - INFO - __main__ - ID text: rte_2261
03/25/2024 15:28:12 - INFO - __main__ - Mean variance for rte_2261: 0.03590201959013939
03/25/2024 15:28:12 - INFO - __main__ - Mean std for for rte_2261: 0.1726531833410263
03/25/2024 15:28:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:28:12 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 15:28:12 - INFO - __main__ - ID text: rte_1200
03/25/2024 15:28:43 - INFO - __main__ - Mean variance for rte_1200: 0.024181770160794258
03/25/2024 15:28:43 - INFO - __main__ - Mean std for for rte_1200: 0.13112850487232208
03/25/2024 15:28:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:28:43 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:28:43 - INFO - __main__ - ID text: rte_2574
03/25/2024 15:29:16 - INFO - __main__ - Mean variance for rte_2574: 0.029886877164244652
03/25/2024 15:29:16 - INFO - __main__ - Mean std for for rte_2574: 0.12601079046726227
03/25/2024 15:29:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:29:16 - INFO - __main__ - Masked count: 123, ratio = 0.4805
03/25/2024 15:29:16 - INFO - __main__ - ID text: rte_2533
03/25/2024 15:29:47 - INFO - __main__ - Mean variance for rte_2533: 0.029402950778603554
03/25/2024 15:29:47 - INFO - __main__ - Mean std for for rte_2533: 0.13171102106571198
03/25/2024 15:29:47 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:29:47 - INFO - __main__ - Masked count: 137, ratio = 0.5352
03/25/2024 15:29:47 - INFO - __main__ - ID text: rte_1481
03/25/2024 15:30:20 - INFO - __main__ - Mean variance for rte_1481: 0.02667437680065632
03/25/2024 15:30:20 - INFO - __main__ - Mean std for for rte_1481: 0.14083361625671387
03/25/2024 15:30:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:30:21 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:30:21 - INFO - __main__ - ID text: rte_2364
03/25/2024 15:30:51 - INFO - __main__ - Mean variance for rte_2364: 0.03053876757621765
03/25/2024 15:30:51 - INFO - __main__ - Mean std for for rte_2364: 0.15058906376361847
03/25/2024 15:30:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:30:51 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:30:51 - INFO - __main__ - ID text: rte_787
03/25/2024 15:31:25 - INFO - __main__ - Mean variance for rte_787: 0.027348311617970467
03/25/2024 15:31:25 - INFO - __main__ - Mean std for for rte_787: 0.1435108482837677
03/25/2024 15:31:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:31:25 - INFO - __main__ - Masked count: 126, ratio = 0.4922
03/25/2024 15:31:25 - INFO - __main__ - ID text: rte_2885
03/25/2024 15:31:55 - INFO - __main__ - Mean variance for rte_2885: 0.030286826193332672
03/25/2024 15:31:55 - INFO - __main__ - Mean std for for rte_2885: 0.13424889743328094
03/25/2024 15:31:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:31:55 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:31:55 - INFO - __main__ - ID text: rte_284
03/25/2024 15:32:29 - INFO - __main__ - Mean variance for rte_284: 0.03416655212640762
03/25/2024 15:32:29 - INFO - __main__ - Mean std for for rte_284: 0.16608671844005585
03/25/2024 15:32:29 - INFO - __main__ - 
######## Language: sst2 ######## 

03/25/2024 15:32:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:32:29 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:32:29 - INFO - __main__ - ID text: sst2_93
03/25/2024 15:33:01 - INFO - __main__ - Mean variance for sst2_93: 0.032529812306165695
03/25/2024 15:33:01 - INFO - __main__ - Mean std for for sst2_93: 0.16266077756881714
03/25/2024 15:33:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:33:01 - INFO - __main__ - Masked count: 124, ratio = 0.4844
03/25/2024 15:33:01 - INFO - __main__ - ID text: sst2_1354
03/25/2024 15:33:34 - INFO - __main__ - Mean variance for sst2_1354: 0.030069274827837944
03/25/2024 15:33:34 - INFO - __main__ - Mean std for for sst2_1354: 0.15792594850063324
03/25/2024 15:33:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:33:34 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:33:34 - INFO - __main__ - ID text: sst2_466
03/25/2024 15:34:07 - INFO - __main__ - Mean variance for sst2_466: 0.03179975971579552
03/25/2024 15:34:07 - INFO - __main__ - Mean std for for sst2_466: 0.16373778879642487
03/25/2024 15:34:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:34:08 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:34:08 - INFO - __main__ - ID text: sst2_1583
03/25/2024 15:34:41 - INFO - __main__ - Mean variance for sst2_1583: 0.03153745457530022
03/25/2024 15:34:41 - INFO - __main__ - Mean std for for sst2_1583: 0.15750879049301147
03/25/2024 15:34:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:34:41 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:34:41 - INFO - __main__ - ID text: sst2_592
03/25/2024 15:35:13 - INFO - __main__ - Mean variance for sst2_592: 0.032827798277139664
03/25/2024 15:35:13 - INFO - __main__ - Mean std for for sst2_592: 0.16000793874263763
03/25/2024 15:35:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:35:13 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:35:13 - INFO - __main__ - ID text: sst2_163
03/25/2024 15:35:45 - INFO - __main__ - Mean variance for sst2_163: 0.034694403409957886
03/25/2024 15:35:45 - INFO - __main__ - Mean std for for sst2_163: 0.17069405317306519
03/25/2024 15:35:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:35:45 - INFO - __main__ - Masked count: 127, ratio = 0.4961
03/25/2024 15:35:45 - INFO - __main__ - ID text: sst2_1751
03/25/2024 15:36:19 - INFO - __main__ - Mean variance for sst2_1751: 0.02686118148267269
03/25/2024 15:36:19 - INFO - __main__ - Mean std for for sst2_1751: 0.14957600831985474
03/25/2024 15:36:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:36:19 - INFO - __main__ - Masked count: 143, ratio = 0.5586
03/25/2024 15:36:19 - INFO - __main__ - ID text: sst2_476
03/25/2024 15:36:50 - INFO - __main__ - Mean variance for sst2_476: 0.030614353716373444
03/25/2024 15:36:50 - INFO - __main__ - Mean std for for sst2_476: 0.15658919513225555
03/25/2024 15:36:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:36:50 - INFO - __main__ - Masked count: 145, ratio = 0.5664
03/25/2024 15:36:50 - INFO - __main__ - ID text: sst2_1774
03/25/2024 15:37:23 - INFO - __main__ - Mean variance for sst2_1774: 0.03115203231573105
03/25/2024 15:37:23 - INFO - __main__ - Mean std for for sst2_1774: 0.158333882689476
03/25/2024 15:37:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:37:23 - INFO - __main__ - Masked count: 131, ratio = 0.5117
03/25/2024 15:37:23 - INFO - __main__ - ID text: sst2_206
03/25/2024 15:37:54 - INFO - __main__ - Mean variance for sst2_206: 0.030907852575182915
03/25/2024 15:37:54 - INFO - __main__ - Mean std for for sst2_206: 0.15963687002658844
03/25/2024 15:37:54 - INFO - __main__ - 
######## Language: stsb ######## 

03/25/2024 15:37:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:37:54 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:37:54 - INFO - __main__ - ID text: stsb_778
03/25/2024 15:38:28 - INFO - __main__ - Mean variance for stsb_778: 0.035513658076524734
03/25/2024 15:38:28 - INFO - __main__ - Mean std for for stsb_778: 0.17149432003498077
03/25/2024 15:38:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:38:28 - INFO - __main__ - Masked count: 141, ratio = 0.5508
03/25/2024 15:38:28 - INFO - __main__ - ID text: stsb_569
03/25/2024 15:38:59 - INFO - __main__ - Mean variance for stsb_569: 0.04015164449810982
03/25/2024 15:38:59 - INFO - __main__ - Mean std for for stsb_569: 0.18280671536922455
03/25/2024 15:38:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:38:59 - INFO - __main__ - Masked count: 136, ratio = 0.5312
03/25/2024 15:38:59 - INFO - __main__ - ID text: stsb_928
03/25/2024 15:39:32 - INFO - __main__ - Mean variance for stsb_928: 0.02298262156546116
03/25/2024 15:39:32 - INFO - __main__ - Mean std for for stsb_928: 0.1294671893119812
03/25/2024 15:39:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:39:32 - INFO - __main__ - Masked count: 140, ratio = 0.5469
03/25/2024 15:39:32 - INFO - __main__ - ID text: stsb_1301
03/25/2024 15:40:04 - INFO - __main__ - Mean variance for stsb_1301: 0.0366707369685173
03/25/2024 15:40:04 - INFO - __main__ - Mean std for for stsb_1301: 0.17412365972995758
03/25/2024 15:40:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:40:04 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:40:04 - INFO - __main__ - ID text: stsb_747
03/25/2024 15:40:37 - INFO - __main__ - Mean variance for stsb_747: 0.033319514244794846
03/25/2024 15:40:37 - INFO - __main__ - Mean std for for stsb_747: 0.16358067095279694
03/25/2024 15:40:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:40:37 - INFO - __main__ - Masked count: 130, ratio = 0.5078
03/25/2024 15:40:37 - INFO - __main__ - ID text: stsb_333
03/25/2024 15:41:08 - INFO - __main__ - Mean variance for stsb_333: 0.03177706524729729
03/25/2024 15:41:08 - INFO - __main__ - Mean std for for stsb_333: 0.1616111695766449
03/25/2024 15:41:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:41:08 - INFO - __main__ - Masked count: 133, ratio = 0.5195
03/25/2024 15:41:08 - INFO - __main__ - ID text: stsb_758
03/25/2024 15:41:41 - INFO - __main__ - Mean variance for stsb_758: 0.03440156579017639
03/25/2024 15:41:41 - INFO - __main__ - Mean std for for stsb_758: 0.16518694162368774
03/25/2024 15:41:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:41:41 - INFO - __main__ - Masked count: 135, ratio = 0.5273
03/25/2024 15:41:41 - INFO - __main__ - ID text: stsb_727
03/25/2024 15:42:12 - INFO - __main__ - Mean variance for stsb_727: 0.03585885092616081
03/25/2024 15:42:12 - INFO - __main__ - Mean std for for stsb_727: 0.17286936938762665
03/25/2024 15:42:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:42:13 - INFO - __main__ - Masked count: 148, ratio = 0.5781
03/25/2024 15:42:13 - INFO - __main__ - ID text: stsb_429
03/25/2024 15:42:45 - INFO - __main__ - Mean variance for stsb_429: 0.03954606130719185
03/25/2024 15:42:45 - INFO - __main__ - Mean std for for stsb_429: 0.18131746351718903
03/25/2024 15:42:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:42:45 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:42:45 - INFO - __main__ - ID text: stsb_1372
03/25/2024 15:43:17 - INFO - __main__ - Mean variance for stsb_1372: 0.03469218313694
03/25/2024 15:43:17 - INFO - __main__ - Mean std for for stsb_1372: 0.17003430426120758
03/25/2024 15:43:17 - INFO - __main__ - 
######## Language: wnli ######## 

03/25/2024 15:43:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:43:17 - INFO - __main__ - Masked count: 134, ratio = 0.5234
03/25/2024 15:43:17 - INFO - __main__ - ID text: wnli_68
03/25/2024 15:43:49 - INFO - __main__ - Mean variance for wnli_68: 0.028923144564032555
03/25/2024 15:43:49 - INFO - __main__ - Mean std for for wnli_68: 0.14818476140499115
03/25/2024 15:43:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:43:49 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:43:49 - INFO - __main__ - ID text: wnli_18
03/25/2024 15:44:21 - INFO - __main__ - Mean variance for wnli_18: 0.02639472670853138
03/25/2024 15:44:21 - INFO - __main__ - Mean std for for wnli_18: 0.1384972482919693
03/25/2024 15:44:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:44:21 - INFO - __main__ - Masked count: 129, ratio = 0.5039
03/25/2024 15:44:21 - INFO - __main__ - ID text: wnli_43
03/25/2024 15:44:53 - INFO - __main__ - Mean variance for wnli_43: 0.03346314653754234
03/25/2024 15:44:53 - INFO - __main__ - Mean std for for wnli_43: 0.16091808676719666
03/25/2024 15:44:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:44:53 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:44:53 - INFO - __main__ - ID text: wnli_136
03/25/2024 15:45:25 - INFO - __main__ - Mean variance for wnli_136: 0.02740783803164959
03/25/2024 15:45:25 - INFO - __main__ - Mean std for for wnli_136: 0.14433057606220245
03/25/2024 15:45:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:45:25 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:45:25 - INFO - __main__ - ID text: wnli_62
03/25/2024 15:45:57 - INFO - __main__ - Mean variance for wnli_62: 0.03117927722632885
03/25/2024 15:45:57 - INFO - __main__ - Mean std for for wnli_62: 0.15683986246585846
03/25/2024 15:45:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:45:57 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:45:57 - INFO - __main__ - ID text: wnli_41
03/25/2024 15:46:29 - INFO - __main__ - Mean variance for wnli_41: 0.033190011978149414
03/25/2024 15:46:29 - INFO - __main__ - Mean std for for wnli_41: 0.16074319183826447
03/25/2024 15:46:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:46:29 - INFO - __main__ - Masked count: 138, ratio = 0.5391
03/25/2024 15:46:29 - INFO - __main__ - ID text: wnli_118
03/25/2024 15:47:01 - INFO - __main__ - Mean variance for wnli_118: 0.027172183617949486
03/25/2024 15:47:01 - INFO - __main__ - Mean std for for wnli_118: 0.14700673520565033
03/25/2024 15:47:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:47:02 - INFO - __main__ - Masked count: 128, ratio = 0.5000
03/25/2024 15:47:02 - INFO - __main__ - ID text: wnli_97
03/25/2024 15:47:33 - INFO - __main__ - Mean variance for wnli_97: 0.023650474846363068
03/25/2024 15:47:33 - INFO - __main__ - Mean std for for wnli_97: 0.12921030819416046
03/25/2024 15:47:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:47:34 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:47:34 - INFO - __main__ - ID text: wnli_69
03/25/2024 15:48:06 - INFO - __main__ - Mean variance for wnli_69: 0.034096550196409225
03/25/2024 15:48:06 - INFO - __main__ - Mean std for for wnli_69: 0.16609549522399902
03/25/2024 15:48:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.2, 0.4, 0.6, 0.8, 0.9, 1.0]"  and "spacing = span"
03/25/2024 15:48:06 - INFO - __main__ - Masked count: 132, ratio = 0.5156
03/25/2024 15:48:06 - INFO - __main__ - ID text: wnli_142
03/25/2024 15:48:37 - INFO - __main__ - Mean variance for wnli_142: 0.023574648424983025
03/25/2024 15:48:37 - INFO - __main__ - Mean std for for wnli_142: 0.13075216114521027
03/25/2024 15:48:37 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.06416615098714828, 'amh_1': 0.0573517270386219, 'amh_2': 0.0589149184525013, 'amh_3': 0.07494007796049118, 'amh_4': 0.06184835359454155, 'amh_5': 0.051554471254348755, 'amh_6': 0.062489885836839676, 'amh_7': 0.0559193380177021, 'amh_8': 0.05907637998461723, 'amh_9': 0.06150830164551735}, 'conll_2003_en': {'conll_2003_en_0': 0.09192550182342529, 'conll_2003_en_1': 0.02195391058921814, 'conll_2003_en_2': 0.02561260759830475, 'conll_2003_en_3': 0.034585077315568924, 'conll_2003_en_4': 0.028269285336136818, 'conll_2003_en_5': 0.06620769202709198, 'conll_2003_en_6': 0.041259076446294785, 'conll_2003_en_7': 0.03660806640982628, 'conll_2003_en_8': 0.058890651911497116, 'conll_2003_en_9': 0.027177974581718445}, 'hau': {'hau_0': 0.022172240540385246, 'hau_1': 0.035925496369600296, 'hau_2': 0.044119153171777725, 'hau_3': 0.01981143094599247, 'hau_4': 0.02387365885078907, 'hau_5': 0.022157130762934685, 'hau_6': 0.027407927438616753, 'hau_7': 0.02158723957836628, 'hau_8': 0.02152695320546627, 'hau_9': 0.028856834396719933}, 'ibo': {'ibo_0': 0.03055661730468273, 'ibo_1': 0.030085088685154915, 'ibo_2': 0.03287490829825401, 'ibo_3': 0.02397833578288555, 'ibo_4': 0.03281484916806221, 'ibo_5': 0.029400810599327087, 'ibo_6': 0.02790786884725094, 'ibo_7': 0.024145476520061493, 'ibo_8': 0.03525269404053688, 'ibo_9': 0.03007717989385128}, 'kin': {'kin_0': 0.028676055371761322, 'kin_1': 0.03069637157022953, 'kin_2': 0.031494345515966415, 'kin_3': 0.02979861944913864, 'kin_4': 0.022724905982613564, 'kin_5': 0.02811291813850403, 'kin_6': 0.022137528285384178, 'kin_7': 0.029634902253746986, 'kin_8': 0.04000021889805794, 'kin_9': 0.03385130688548088}, 'lug': {'lug_0': 0.024461885914206505, 'lug_1': 0.028036512434482574, 'lug_2': 0.02078341692686081, 'lug_3': 0.02138288877904415, 'lug_4': 0.03249936178326607, 'lug_5': 0.026691384613513947, 'lug_6': 0.024164199829101562, 'lug_7': 0.028059659525752068, 'lug_8': 0.03241648152470589, 'lug_9': 0.02755730412900448}, 'luo': {'luo_0': 0.021874770522117615, 'luo_1': 0.03447246178984642, 'luo_2': 0.030038723722100258, 'luo_3': 0.022087888792157173, 'luo_4': 0.03274115175008774, 'luo_5': 0.031488511711359024, 'luo_6': 0.024855205789208412, 'luo_7': 0.035766322165727615, 'luo_8': 0.02602122537791729, 'luo_9': 0.030862724408507347}, 'pcm': {'pcm_0': 0.02832113951444626, 'pcm_1': 0.03140443563461304, 'pcm_2': 0.029262853786349297, 'pcm_3': 0.030106516554951668, 'pcm_4': 0.030803173780441284, 'pcm_5': 0.02817004732787609, 'pcm_6': 0.03215014562010765, 'pcm_7': 0.03054661490023136, 'pcm_8': 0.02856280840933323, 'pcm_9': 0.0322018638253212}, 'swa': {'swa_0': 0.021824337542057037, 'swa_1': 0.02967868000268936, 'swa_2': 0.025600142776966095, 'swa_3': 0.030446374788880348, 'swa_4': 0.018562057986855507, 'swa_5': 0.01740073226392269, 'swa_6': 0.025275617837905884, 'swa_7': 0.032496239989995956, 'swa_8': 0.030442848801612854, 'swa_9': 0.030051013454794884}, 'wol': {'wol_0': 0.027553336694836617, 'wol_1': 0.03439444676041603, 'wol_2': 0.029657604172825813, 'wol_3': 0.036566976457834244, 'wol_4': 0.027377286925911903, 'wol_5': 0.029212189838290215, 'wol_6': 0.05181879922747612, 'wol_7': 0.036381594836711884, 'wol_8': 0.0276839267462492, 'wol_9': 0.03575542941689491}, 'yor': {'yor_0': 0.07772641628980637, 'yor_1': 0.06411533802747726, 'yor_2': 0.03139827772974968, 'yor_3': 0.02025848627090454, 'yor_4': 0.06884094327688217, 'yor_5': 0.04201963543891907, 'yor_6': 0.028286121785640717, 'yor_7': 0.06443581730127335, 'yor_8': 0.024559788405895233, 'yor_9': 0.07012545317411423}, 'zh': {'zh_0': 0.0386413149535656, 'zh_1': 0.032771311700344086, 'zh_2': 0.054951589554548264, 'zh_3': 0.06909830123186111, 'zh_4': 0.05010411515831947, 'zh_5': 0.05641404911875725, 'zh_6': 0.0328381173312664, 'zh_7': 0.059448957443237305, 'zh_8': 0.057202283293008804, 'zh_9': 0.04256926476955414}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.030295630916953087, 'arabic--3340323169760881569-0': 0.021100766956806183, 'arabic-4544770624843559444-1': 0.017639320343732834, 'arabic-891952409566422966-0': 0.015437615104019642, 'arabic-3659291834714572527-0': 0.04249807074666023, 'arabic-9215226117011890166-0': 0.018044454976916313, 'arabic-6300896128538259469-0': 0.018660442903637886, 'arabic-2382507508588518905-0': 0.014732723124325275, 'arabic-1871632801094859741-1': 0.013122625648975372, 'arabic--7365809756232083807-0': 0.018347954377532005}, 'russian': {'russian-3457655197371763238-61': 0.014920388348400593, 'russian--1914807805318993335-49': 0.027569612488150597, 'russian--3307989180606173904-1': 0.013509436510503292, 'russian--2219512001175315660-0': 0.011937775649130344, 'russian--7076080992904718941-0': 0.01748575083911419, 'russian--6565862953558739013-1': 0.014745961874723434, 'russian--5098374684590548031-42': 0.039905767887830734, 'russian-3573734219967447693-1': 0.013901855796575546, 'russian--4521001374120505750-6': 0.03179038316011429, 'russian--1308382244018658424-9': 0.013843715190887451}, 'bengali': {'bengali--1199493965132146131-3': 0.013672571629285812, 'bengali-1807801556888134437-2': 0.015601417981088161, 'bengali-2113189855114052041-2': 0.012856471352279186, 'bengali--2527914488250041207-0': 0.01865193620324135, 'bengali--8260793280894408063-14': 0.013919605873525143, 'bengali-8313009204852557186-4': 0.015589587390422821, 'bengali--415964033364840061-0': 0.011976249516010284, 'bengali--4696865548928858824-5': 0.011264375410974026, 'bengali-6505224142472931712-1': 0.013081737793982029, 'bengali-599666913917674019-13': 0.040134452283382416}, 'telugu': {'telugu--3977923017846260053-0': 0.014281750656664371, 'telugu-2254198842560317781-0': 0.015058517456054688, 'telugu-5435080895440121384-0': 0.01502478588372469, 'telugu--1182505954974481191-2': 0.02041170932352543, 'telugu-119276511844068401-0': 0.015038363635540009, 'telugu--4111208545071789922-0': 0.014200645498931408, 'telugu--5922002196428211484-132': 0.02173066884279251, 'telugu--1817004721681155192-3': 0.008273796178400517, 'telugu-1602214480303968359-1': 0.018196403980255127, 'telugu--6495674712575945374-0': 0.015613961033523083}, 'finnish': {'finnish-6987763079741579998-0': 0.024983085691928864, 'finnish--8516625414052383903-0': 0.028006939217448235, 'finnish-4168898766124519517-0': 0.034676503390073776, 'finnish-783166898848672321-4': 0.026171749457716942, 'finnish-2208556840820233322-0': 0.027228765189647675, 'finnish--1981034637152391615-58': 0.021382829174399376, 'finnish-8689148941295949475-9': 0.02091183327138424, 'finnish-6900867945323517614-2': 0.03198935464024544, 'finnish-8023130170017405987-1': 0.022974789142608643, 'finnish-5001457972111781248-0': 0.021558865904808044}, 'swahili': {'swahili-7146838206539641546-10': 0.03157101199030876, 'swahili-7655634199707176439-0': 0.021755561232566833, 'swahili--4427180714267750534-1': 0.02888861857354641, 'swahili-4141779435061573138-0': 0.022037750110030174, 'swahili--5424518593960879661-0': 0.020964570343494415, 'swahili-4281845253405461584-0': 0.027731643989682198, 'swahili-4899164839984299762-2': 0.028690477833151817, 'swahili-1288750786498500530-0': 0.02809532918035984, 'swahili--2671134792844015228-3': 0.02040921151638031, 'swahili-4873225622490039485-2': 0.020531464368104935}, 'korean': {'korean--2869472392602314906-0': 0.014626762829720974, 'korean-4375199563921600155-0': 0.012454818934202194, 'korean--1715118423211755607-13': 0.01629304140806198, 'korean--8028977936696142934-9': 0.018265755847096443, 'korean-2807245034690443837-5': 0.026708999648690224, 'korean-3862451817164408576-0': 0.02045130729675293, 'korean-148115504649351135-0': 0.019543051719665527, 'korean--2885837157239647036-2': 0.015713099390268326, 'korean--1743220297777040002-22': 0.03257480636239052, 'korean-3268522368206106332-0': 0.06450717896223068}, 'indonesian': {'indonesian-9141868818310916091-0': 0.02122689038515091, 'indonesian-4609394337632433932-1': 0.03890056535601616, 'indonesian-2763468883290577923-0': 0.02401919849216938, 'indonesian-5633590583948933406-0': 0.020494690164923668, 'indonesian--5961409780035435015-0': 0.023835359141230583, 'indonesian-6274547934693326697-0': 0.02274952083826065, 'indonesian--2516321763567853082-0': 0.023788193240761757, 'indonesian-2048796427556239759-4': 0.025439897552132607, 'indonesian-6246592469157278547-2': 0.023446014150977135, 'indonesian--3724318458930736973-1': 0.022584354504942894}, 'english': {'english-2852412434797041176-6': 0.028175050392746925, 'english--1463732605740571606-0': 0.028323328122496605, 'english-5441411281255470421-0': 0.02689441479742527, 'english-7294054492486093447-1': 0.029608195647597313, 'english-8820750127045023244-0': 0.029392316937446594, 'english--506693546683012611-2': 0.03286006674170494, 'english-745411798111651115-0': 0.028441840782761574, 'english-7740772185887912651-0': 0.030497094616293907, 'english-383873188776267137-19': 0.02985323965549469, 'english--8277537578703156284-0': 0.02947751246392727}}, 'glue': {'cola': {'cola_228': 0.022112935781478882, 'cola_51': 0.02649485506117344, 'cola_563': 0.05552409216761589, 'cola_501': 0.02755211852490902, 'cola_457': 0.034853577613830566, 'cola_285': 0.030001260340213776, 'cola_209': 0.027285458520054817, 'cola_178': 0.03204264119267464, 'cola_864': 0.026960736140608788, 'cola_65': 0.032637644559144974}, 'mnli': {'mnli_488': 0.02783358283340931, 'mnli_1535': 0.033437807112932205, 'mnli_3582': 0.03215939179062843, 'mnli_3811': 0.031586941331624985, 'mnli_8279': 0.031792767345905304, 'mnli_434': 0.0270068421959877, 'mnli_9195': 0.03300810232758522, 'mnli_3257': 0.03260646387934685, 'mnli_8928': 0.02895948477089405, 'mnli_6873': 0.029715491458773613}, 'mrpc': {'mrpc_451': 0.027003811672329903, 'mrpc_919': 0.034308213740587234, 'mrpc_1206': 0.03486873209476471, 'mrpc_569': 0.029328467324376106, 'mrpc_1657': 0.024040281772613525, 'mrpc_13': 0.027411580085754395, 'mrpc_1554': 0.02281676046550274, 'mrpc_1650': 0.06048021838068962, 'mrpc_326': 0.02746153064072132, 'mrpc_1429': 0.03131807595491409}, 'qnli': {'qnli_3462': 0.031795382499694824, 'qnli_2787': 0.02928123064339161, 'qnli_2276': 0.02478932775557041, 'qnli_1273': 0.028782876208424568, 'qnli_1763': 0.03341814875602722, 'qnli_2757': 0.026947086676955223, 'qnli_837': 0.03120439313352108, 'qnli_759': 0.028629304841160774, 'qnli_3112': 0.02973243035376072, 'qnli_792': 0.028315814211964607}, 'qqp': {'qqp_188208': 0.033787284046411514, 'qqp_180331': 0.03186362609267235, 'qqp_316526': 0.02939009666442871, 'qqp_138685': 0.027673019096255302, 'qqp_22780': 0.03521276265382767, 'qqp_382589': 0.02617551200091839, 'qqp_240870': 0.030580684542655945, 'qqp_281137': 0.03178875893354416, 'qqp_65444': 0.02911008708178997, 'qqp_198461': 0.03503900766372681}, 'rte': {'rte_322': 0.02839910425245762, 'rte_2261': 0.03590201959013939, 'rte_1200': 0.024181770160794258, 'rte_2574': 0.029886877164244652, 'rte_2533': 0.029402950778603554, 'rte_1481': 0.02667437680065632, 'rte_2364': 0.03053876757621765, 'rte_787': 0.027348311617970467, 'rte_2885': 0.030286826193332672, 'rte_284': 0.03416655212640762}, 'sst2': {'sst2_93': 0.032529812306165695, 'sst2_1354': 0.030069274827837944, 'sst2_466': 0.03179975971579552, 'sst2_1583': 0.03153745457530022, 'sst2_592': 0.032827798277139664, 'sst2_163': 0.034694403409957886, 'sst2_1751': 0.02686118148267269, 'sst2_476': 0.030614353716373444, 'sst2_1774': 0.03115203231573105, 'sst2_206': 0.030907852575182915}, 'stsb': {'stsb_778': 0.035513658076524734, 'stsb_569': 0.04015164449810982, 'stsb_928': 0.02298262156546116, 'stsb_1301': 0.0366707369685173, 'stsb_747': 0.033319514244794846, 'stsb_333': 0.03177706524729729, 'stsb_758': 0.03440156579017639, 'stsb_727': 0.03585885092616081, 'stsb_429': 0.03954606130719185, 'stsb_1372': 0.03469218313694}, 'wnli': {'wnli_68': 0.028923144564032555, 'wnli_18': 0.02639472670853138, 'wnli_43': 0.03346314653754234, 'wnli_136': 0.02740783803164959, 'wnli_62': 0.03117927722632885, 'wnli_41': 0.033190011978149414, 'wnli_118': 0.027172183617949486, 'wnli_97': 0.023650474846363068, 'wnli_69': 0.034096550196409225, 'wnli_142': 0.023574648424983025}}}
03/25/2024 15:48:37 - INFO - __main__ - Saving data in SD_per_task_mask_0.9.json
03/25/2024 15:48:37 - INFO - __main__ - Saving data in var_per_task_mask_0.9.json
03/25/2024 15:48:37 - INFO - __main__ - 
UNCERTAINTY (SD)

03/25/2024 15:48:37 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.0607769601047039, 'conll_2003_en': 0.043248988687992096, 'hau': 0.026743808761239052, 'ibo': 0.029709383845329285, 'kin': 0.029712717980146408, 'lug': 0.026605308055877686, 'luo': 0.029020899906754494, 'pcm': 0.030152957886457443, 'swa': 0.02617780491709709, 'wol': 0.03364015743136406, 'yor': 0.04917662590742111, 'zh': 0.049403928220272064}, 'tydiqa': {'arabic': 0.020987961441278458, 'russian': 0.01996106468141079, 'bengali': 0.016674838960170746, 'telugu': 0.01578306034207344, 'finnish': 0.025988470762968063, 'swahili': 0.025067564100027084, 'korean': 0.024113882333040237, 'indonesian': 0.02464846894145012, 'english': 0.029352307319641113}, 'glue': {'cola': 0.03154653310775757, 'mnli': 0.030810683965682983, 'mrpc': 0.031903766095638275, 'qnli': 0.029289599508047104, 'qqp': 0.031062085181474686, 'rte': 0.02967875264585018, 'sst2': 0.03129938989877701, 'stsb': 0.034491389989852905, 'wnli': 0.028905201703310013}}

###############################################################################
Hábrók Cluster
Job 7718774 for user s3919609
Finished at: Mon Mar 25 15:48:42 CET 2024

Job details:
============

Job ID              : 7718774
Name                : std_monte_carlo_mask_0.9
User                : s3919609
Partition           : regularmedium
Nodes               : node61
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : COMPLETED
Submit              : 2024-03-25T13:07:14
Start               : 2024-03-25T13:07:14
End                 : 2024-03-25T15:48:42
Reserved walltime   : 10:00:00
Used walltime       : 02:41:28
Used CPU time       : 02:38:34 (efficiency: 98.20%)
% User (Computation): 99.55%
% System (I/O)      :  0.45%
Mem reserved        : 20G
Max Mem (Node/step) : 1.61G (node61, per node)
Full Max Mem usage  : 1.61G
Total Disk Read     : 1012.11M
Total Disk Write    : 2.32M

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
