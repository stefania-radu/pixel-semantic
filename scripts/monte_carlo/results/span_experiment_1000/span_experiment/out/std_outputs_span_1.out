The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/26/2024 20:46:11 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/26/2024 20:46:12 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 20:46:12 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 20:46:12 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/26/2024 20:46:13 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/26/2024 20:46:13 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/26/2024 20:46:13 - INFO - __main__ - Running MONTE CARLO experiment: span
03/26/2024 20:46:13 - INFO - __main__ - Loading data from loss_per_task_span_1.json
03/26/2024 20:46:13 - INFO - __main__ - 
LOSS

03/26/2024 20:46:13 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8363530039787292, 'conll_2003_en': 0.48484697937965393, 'hau': 0.38450297713279724, 'ibo': 0.40122389793395996, 'kin': 0.3860726058483124, 'lug': 0.3235897421836853, 'luo': 0.3576051592826843, 'pcm': 0.3818616271018982, 'swa': 0.38182032108306885, 'wol': 0.46597152948379517, 'yor': 0.525847315788269, 'zh': 0.8357642292976379}, 'tydiqa': {'arabic': 0.8010584115982056, 'russian': 0.46101465821266174, 'bengali': 0.6891900897026062, 'telugu': 0.7515284419059753, 'finnish': 0.25560975074768066, 'swahili': 0.218948096036911, 'korean': 0.8144637942314148, 'indonesian': 0.1992858350276947, 'english': 0.05980667471885681}, 'glue': {'cola': 0.14230976998806, 'mnli': 0.10377176851034164, 'mrpc': 0.05859554931521416, 'qnli': 0.02183576300740242, 'qqp': 0.07782100141048431, 'rte': 0.040600139647722244, 'sst2': 0.18300761282444, 'stsb': 0.08321075141429901, 'wnli': 0.026338282972574234}}
03/26/2024 20:46:13 - INFO - __main__ - Lowest losses:
03/26/2024 20:46:13 - INFO - __main__ - ID: qnli_1763, Loss: 0.004130921792238951
03/26/2024 20:46:13 - INFO - __main__ - ID: qnli_3112, Loss: 0.004365736152976751
03/26/2024 20:46:13 - INFO - __main__ - ID: rte_1481, Loss: 0.004976971074938774
03/26/2024 20:46:13 - INFO - __main__ - ID: wnli_118, Loss: 0.006672238931059837
03/26/2024 20:46:13 - INFO - __main__ - ID: qnli_759, Loss: 0.007949760183691978
03/26/2024 20:46:13 - INFO - __main__ - Highest losses:
03/26/2024 20:46:13 - INFO - __main__ - ID: korean--2885837157239647036-2, Loss: 0.8724463582038879
03/26/2024 20:46:13 - INFO - __main__ - ID: amh_7, Loss: 0.893237829208374
03/26/2024 20:46:13 - INFO - __main__ - ID: zh_0, Loss: 0.9205992221832275
03/26/2024 20:46:13 - INFO - __main__ - ID: conll_2003_en_6, Loss: 0.9238423109054565
03/26/2024 20:46:13 - INFO - __main__ - ID: zh_4, Loss: 0.9314068555831909
03/26/2024 20:46:13 - INFO - __main__ - Monte Carlo samples: 100
03/26/2024 20:46:13 - INFO - __main__ - Training mode: True
03/26/2024 20:46:13 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/26/2024 20:46:13 - INFO - __main__ - 
######## Language: amh ######## 

03/26/2024 20:46:14 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:46:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:46:14 - INFO - __main__ - ID text: amh_0
03/26/2024 20:47:32 - INFO - __main__ - Mean variance for amh_0: 0.15279540419578552
03/26/2024 20:47:32 - INFO - __main__ - Mean std for for amh_0: 0.34281837940216064
03/26/2024 20:47:32 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:47:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:47:32 - INFO - __main__ - ID text: amh_1
03/26/2024 20:48:47 - INFO - __main__ - Mean variance for amh_1: 0.14958815276622772
03/26/2024 20:48:47 - INFO - __main__ - Mean std for for amh_1: 0.33597007393836975
03/26/2024 20:48:47 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:48:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:48:47 - INFO - __main__ - ID text: amh_2
03/26/2024 20:50:01 - INFO - __main__ - Mean variance for amh_2: 0.17191433906555176
03/26/2024 20:50:01 - INFO - __main__ - Mean std for for amh_2: 0.36271384358406067
03/26/2024 20:50:01 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:50:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:50:01 - INFO - __main__ - ID text: amh_3
03/26/2024 20:51:16 - INFO - __main__ - Mean variance for amh_3: 0.13894452154636383
03/26/2024 20:51:16 - INFO - __main__ - Mean std for for amh_3: 0.3234098255634308
03/26/2024 20:51:16 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:51:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:51:16 - INFO - __main__ - ID text: amh_4
03/26/2024 20:52:30 - INFO - __main__ - Mean variance for amh_4: 0.15470917522907257
03/26/2024 20:52:30 - INFO - __main__ - Mean std for for amh_4: 0.34167349338531494
03/26/2024 20:52:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:52:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:52:30 - INFO - __main__ - ID text: amh_5
03/26/2024 20:53:44 - INFO - __main__ - Mean variance for amh_5: 0.14279191195964813
03/26/2024 20:53:44 - INFO - __main__ - Mean std for for amh_5: 0.3302607834339142
03/26/2024 20:53:44 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:53:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:53:44 - INFO - __main__ - ID text: amh_6
03/26/2024 20:54:59 - INFO - __main__ - Mean variance for amh_6: 0.1622370034456253
03/26/2024 20:54:59 - INFO - __main__ - Mean std for for amh_6: 0.3478691875934601
03/26/2024 20:54:59 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:54:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:54:59 - INFO - __main__ - ID text: amh_7
03/26/2024 20:56:13 - INFO - __main__ - Mean variance for amh_7: 0.15399202704429626
03/26/2024 20:56:13 - INFO - __main__ - Mean std for for amh_7: 0.34157896041870117
03/26/2024 20:56:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:56:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:56:17 - INFO - __main__ - ID text: amh_8
03/26/2024 20:57:30 - INFO - __main__ - Mean variance for amh_8: 0.1384493112564087
03/26/2024 20:57:30 - INFO - __main__ - Mean std for for amh_8: 0.32280233502388
03/26/2024 20:57:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:57:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:57:30 - INFO - __main__ - ID text: amh_9
03/26/2024 20:58:44 - INFO - __main__ - Mean variance for amh_9: 0.16036120057106018
03/26/2024 20:58:44 - INFO - __main__ - Mean std for for amh_9: 0.3480199873447418
03/26/2024 20:58:44 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/26/2024 20:58:44 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:58:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:58:44 - INFO - __main__ - ID text: conll_2003_en_0
03/26/2024 20:59:58 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.1614343822002411
03/26/2024 20:59:58 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.35706982016563416
03/26/2024 20:59:58 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 20:59:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 20:59:58 - INFO - __main__ - ID text: conll_2003_en_1
03/26/2024 21:01:12 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.054513830691576004
03/26/2024 21:01:12 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.20719540119171143
03/26/2024 21:01:12 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:01:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:01:12 - INFO - __main__ - ID text: conll_2003_en_2
03/26/2024 21:02:26 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.04353475198149681
03/26/2024 21:02:26 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.1606236845254898
03/26/2024 21:02:26 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:02:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:02:26 - INFO - __main__ - ID text: conll_2003_en_3
03/26/2024 21:03:40 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.03775066137313843
03/26/2024 21:03:40 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.16221298277378082
03/26/2024 21:03:40 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:03:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:03:40 - INFO - __main__ - ID text: conll_2003_en_4
03/26/2024 21:04:53 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.0438830703496933
03/26/2024 21:04:53 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.18490345776081085
03/26/2024 21:04:53 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:04:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:04:53 - INFO - __main__ - ID text: conll_2003_en_5
03/26/2024 21:06:07 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.16279436647891998
03/26/2024 21:06:07 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.35983654856681824
03/26/2024 21:06:07 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:06:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:06:07 - INFO - __main__ - ID text: conll_2003_en_6
03/26/2024 21:07:20 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.16325120627880096
03/26/2024 21:07:20 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.36596354842185974
03/26/2024 21:07:21 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:07:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:07:21 - INFO - __main__ - ID text: conll_2003_en_7
03/26/2024 21:08:34 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.16234605014324188
03/26/2024 21:08:34 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.36325979232788086
03/26/2024 21:08:34 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:08:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:08:34 - INFO - __main__ - ID text: conll_2003_en_8
03/26/2024 21:09:48 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.1744357943534851
03/26/2024 21:09:48 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.3755756616592407
03/26/2024 21:09:48 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:09:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:09:48 - INFO - __main__ - ID text: conll_2003_en_9
03/26/2024 21:11:02 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.04246404394507408
03/26/2024 21:11:02 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.17127202451229095
03/26/2024 21:11:02 - INFO - __main__ - 
######## Language: hau ######## 

03/26/2024 21:11:02 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:11:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:11:02 - INFO - __main__ - ID text: hau_0
03/26/2024 21:12:17 - INFO - __main__ - Mean variance for hau_0: 0.03356974571943283
03/26/2024 21:12:17 - INFO - __main__ - Mean std for for hau_0: 0.14181359112262726
03/26/2024 21:12:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:12:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:12:17 - INFO - __main__ - ID text: hau_1
03/26/2024 21:13:32 - INFO - __main__ - Mean variance for hau_1: 0.04626769199967384
03/26/2024 21:13:32 - INFO - __main__ - Mean std for for hau_1: 0.185712531208992
03/26/2024 21:13:32 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:13:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:13:32 - INFO - __main__ - ID text: hau_2
03/26/2024 21:14:47 - INFO - __main__ - Mean variance for hau_2: 0.17233715951442719
03/26/2024 21:14:47 - INFO - __main__ - Mean std for for hau_2: 0.3711181879043579
03/26/2024 21:14:47 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:14:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:14:47 - INFO - __main__ - ID text: hau_3
03/26/2024 21:16:02 - INFO - __main__ - Mean variance for hau_3: 0.021790502592921257
03/26/2024 21:16:02 - INFO - __main__ - Mean std for for hau_3: 0.11508852243423462
03/26/2024 21:16:02 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:16:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:16:02 - INFO - __main__ - ID text: hau_4
03/26/2024 21:17:17 - INFO - __main__ - Mean variance for hau_4: 0.0378568135201931
03/26/2024 21:17:17 - INFO - __main__ - Mean std for for hau_4: 0.1502259522676468
03/26/2024 21:17:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:17:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:17:17 - INFO - __main__ - ID text: hau_5
03/26/2024 21:18:31 - INFO - __main__ - Mean variance for hau_5: 0.0285980012267828
03/26/2024 21:18:31 - INFO - __main__ - Mean std for for hau_5: 0.13083668053150177
03/26/2024 21:18:31 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:18:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:18:31 - INFO - __main__ - ID text: hau_6
03/26/2024 21:19:46 - INFO - __main__ - Mean variance for hau_6: 0.04434089735150337
03/26/2024 21:19:46 - INFO - __main__ - Mean std for for hau_6: 0.16929501295089722
03/26/2024 21:19:46 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:19:46 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:19:46 - INFO - __main__ - ID text: hau_7
03/26/2024 21:21:01 - INFO - __main__ - Mean variance for hau_7: 0.04069918766617775
03/26/2024 21:21:01 - INFO - __main__ - Mean std for for hau_7: 0.15439295768737793
03/26/2024 21:21:01 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:21:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:21:01 - INFO - __main__ - ID text: hau_8
03/26/2024 21:22:16 - INFO - __main__ - Mean variance for hau_8: 0.030819537118077278
03/26/2024 21:22:16 - INFO - __main__ - Mean std for for hau_8: 0.13525287806987762
03/26/2024 21:22:16 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:22:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:22:16 - INFO - __main__ - ID text: hau_9
03/26/2024 21:23:30 - INFO - __main__ - Mean variance for hau_9: 0.04125666990876198
03/26/2024 21:23:30 - INFO - __main__ - Mean std for for hau_9: 0.16331861913204193
03/26/2024 21:23:30 - INFO - __main__ - 
######## Language: ibo ######## 

03/26/2024 21:23:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:23:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:23:30 - INFO - __main__ - ID text: ibo_0
03/26/2024 21:24:45 - INFO - __main__ - Mean variance for ibo_0: 0.04406494274735451
03/26/2024 21:24:45 - INFO - __main__ - Mean std for for ibo_0: 0.1708669513463974
03/26/2024 21:24:45 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:24:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:24:45 - INFO - __main__ - ID text: ibo_1
03/26/2024 21:26:00 - INFO - __main__ - Mean variance for ibo_1: 0.04210544005036354
03/26/2024 21:26:00 - INFO - __main__ - Mean std for for ibo_1: 0.16660532355308533
03/26/2024 21:26:00 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:26:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:26:00 - INFO - __main__ - ID text: ibo_2
03/26/2024 21:27:15 - INFO - __main__ - Mean variance for ibo_2: 0.04011420160531998
03/26/2024 21:27:15 - INFO - __main__ - Mean std for for ibo_2: 0.15851657092571259
03/26/2024 21:27:15 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:27:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:27:15 - INFO - __main__ - ID text: ibo_3
03/26/2024 21:28:29 - INFO - __main__ - Mean variance for ibo_3: 0.04072653874754906
03/26/2024 21:28:29 - INFO - __main__ - Mean std for for ibo_3: 0.179002046585083
03/26/2024 21:28:29 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:28:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:28:29 - INFO - __main__ - ID text: ibo_4
03/26/2024 21:29:44 - INFO - __main__ - Mean variance for ibo_4: 0.04108581319451332
03/26/2024 21:29:44 - INFO - __main__ - Mean std for for ibo_4: 0.1643967479467392
03/26/2024 21:29:44 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:29:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:29:44 - INFO - __main__ - ID text: ibo_5
03/26/2024 21:30:59 - INFO - __main__ - Mean variance for ibo_5: 0.03835109993815422
03/26/2024 21:30:59 - INFO - __main__ - Mean std for for ibo_5: 0.16880249977111816
03/26/2024 21:30:59 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:30:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:30:59 - INFO - __main__ - ID text: ibo_6
03/26/2024 21:32:14 - INFO - __main__ - Mean variance for ibo_6: 0.04256036877632141
03/26/2024 21:32:14 - INFO - __main__ - Mean std for for ibo_6: 0.1676313728094101
03/26/2024 21:32:14 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:32:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:32:14 - INFO - __main__ - ID text: ibo_7
03/26/2024 21:33:29 - INFO - __main__ - Mean variance for ibo_7: 0.042482923716306686
03/26/2024 21:33:29 - INFO - __main__ - Mean std for for ibo_7: 0.15967653691768646
03/26/2024 21:33:29 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:33:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:33:29 - INFO - __main__ - ID text: ibo_8
03/26/2024 21:34:43 - INFO - __main__ - Mean variance for ibo_8: 0.046263981610536575
03/26/2024 21:34:43 - INFO - __main__ - Mean std for for ibo_8: 0.186684712767601
03/26/2024 21:34:44 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:34:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:34:44 - INFO - __main__ - ID text: ibo_9
03/26/2024 21:35:58 - INFO - __main__ - Mean variance for ibo_9: 0.03777359798550606
03/26/2024 21:35:58 - INFO - __main__ - Mean std for for ibo_9: 0.15667986869812012
03/26/2024 21:35:58 - INFO - __main__ - 
######## Language: kin ######## 

03/26/2024 21:35:58 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:35:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:35:58 - INFO - __main__ - ID text: kin_0
03/26/2024 21:37:13 - INFO - __main__ - Mean variance for kin_0: 0.04594333469867706
03/26/2024 21:37:13 - INFO - __main__ - Mean std for for kin_0: 0.1679290533065796
03/26/2024 21:37:13 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:37:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:37:13 - INFO - __main__ - ID text: kin_1
03/26/2024 21:38:28 - INFO - __main__ - Mean variance for kin_1: 0.036079537123441696
03/26/2024 21:38:28 - INFO - __main__ - Mean std for for kin_1: 0.1544887274503708
03/26/2024 21:38:28 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:38:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:38:28 - INFO - __main__ - ID text: kin_2
03/26/2024 21:39:43 - INFO - __main__ - Mean variance for kin_2: 0.048343706876039505
03/26/2024 21:39:43 - INFO - __main__ - Mean std for for kin_2: 0.19660480320453644
03/26/2024 21:39:43 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:39:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:39:43 - INFO - __main__ - ID text: kin_3
03/26/2024 21:40:58 - INFO - __main__ - Mean variance for kin_3: 0.041226182132959366
03/26/2024 21:40:58 - INFO - __main__ - Mean std for for kin_3: 0.16259713470935822
03/26/2024 21:40:58 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:40:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:40:58 - INFO - __main__ - ID text: kin_4
03/26/2024 21:42:13 - INFO - __main__ - Mean variance for kin_4: 0.040246669203042984
03/26/2024 21:42:13 - INFO - __main__ - Mean std for for kin_4: 0.1539391428232193
03/26/2024 21:42:13 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:42:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:42:13 - INFO - __main__ - ID text: kin_5
03/26/2024 21:43:27 - INFO - __main__ - Mean variance for kin_5: 0.03496246412396431
03/26/2024 21:43:27 - INFO - __main__ - Mean std for for kin_5: 0.16144542396068573
03/26/2024 21:43:27 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:43:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:43:27 - INFO - __main__ - ID text: kin_6
03/26/2024 21:44:42 - INFO - __main__ - Mean variance for kin_6: 0.030332498252391815
03/26/2024 21:44:42 - INFO - __main__ - Mean std for for kin_6: 0.13452249765396118
03/26/2024 21:44:42 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:44:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:44:42 - INFO - __main__ - ID text: kin_7
03/26/2024 21:45:57 - INFO - __main__ - Mean variance for kin_7: 0.04504077509045601
03/26/2024 21:45:57 - INFO - __main__ - Mean std for for kin_7: 0.16924534738063812
03/26/2024 21:45:57 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:45:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:45:57 - INFO - __main__ - ID text: kin_8
03/26/2024 21:47:12 - INFO - __main__ - Mean variance for kin_8: 0.0394664891064167
03/26/2024 21:47:12 - INFO - __main__ - Mean std for for kin_8: 0.1679198294878006
03/26/2024 21:47:12 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:47:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:47:12 - INFO - __main__ - ID text: kin_9
03/26/2024 21:48:26 - INFO - __main__ - Mean variance for kin_9: 0.03602611646056175
03/26/2024 21:48:26 - INFO - __main__ - Mean std for for kin_9: 0.15995265543460846
03/26/2024 21:48:26 - INFO - __main__ - 
######## Language: lug ######## 

03/26/2024 21:48:26 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:48:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:48:26 - INFO - __main__ - ID text: lug_0
03/26/2024 21:49:41 - INFO - __main__ - Mean variance for lug_0: 0.03839042782783508
03/26/2024 21:49:41 - INFO - __main__ - Mean std for for lug_0: 0.1510554850101471
03/26/2024 21:49:41 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:49:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:49:41 - INFO - __main__ - ID text: lug_1
03/26/2024 21:50:56 - INFO - __main__ - Mean variance for lug_1: 0.04492716118693352
03/26/2024 21:50:56 - INFO - __main__ - Mean std for for lug_1: 0.16568367183208466
03/26/2024 21:50:56 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:50:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:50:56 - INFO - __main__ - ID text: lug_2
03/26/2024 21:52:11 - INFO - __main__ - Mean variance for lug_2: 0.01987922377884388
03/26/2024 21:52:11 - INFO - __main__ - Mean std for for lug_2: 0.11079885810613632
03/26/2024 21:52:11 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:52:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:52:11 - INFO - __main__ - ID text: lug_3
03/26/2024 21:53:26 - INFO - __main__ - Mean variance for lug_3: 0.02841898985207081
03/26/2024 21:53:26 - INFO - __main__ - Mean std for for lug_3: 0.1315765529870987
03/26/2024 21:53:26 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:53:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:53:26 - INFO - __main__ - ID text: lug_4
03/26/2024 21:54:41 - INFO - __main__ - Mean variance for lug_4: 0.04068300873041153
03/26/2024 21:54:41 - INFO - __main__ - Mean std for for lug_4: 0.16591452062129974
03/26/2024 21:54:41 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:54:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:54:41 - INFO - __main__ - ID text: lug_5
03/26/2024 21:55:56 - INFO - __main__ - Mean variance for lug_5: 0.042459968477487564
03/26/2024 21:55:56 - INFO - __main__ - Mean std for for lug_5: 0.15716230869293213
03/26/2024 21:55:56 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:55:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:55:56 - INFO - __main__ - ID text: lug_6
03/26/2024 21:57:10 - INFO - __main__ - Mean variance for lug_6: 0.04244634509086609
03/26/2024 21:57:10 - INFO - __main__ - Mean std for for lug_6: 0.16029535233974457
03/26/2024 21:57:10 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:57:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:57:10 - INFO - __main__ - ID text: lug_7
03/26/2024 21:58:25 - INFO - __main__ - Mean variance for lug_7: 0.04192541539669037
03/26/2024 21:58:25 - INFO - __main__ - Mean std for for lug_7: 0.16393551230430603
03/26/2024 21:58:25 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:58:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:58:25 - INFO - __main__ - ID text: lug_8
03/26/2024 21:59:40 - INFO - __main__ - Mean variance for lug_8: 0.04824620112776756
03/26/2024 21:59:40 - INFO - __main__ - Mean std for for lug_8: 0.1745239496231079
03/26/2024 21:59:40 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 21:59:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:59:40 - INFO - __main__ - ID text: lug_9
03/26/2024 22:00:55 - INFO - __main__ - Mean variance for lug_9: 0.03702991083264351
03/26/2024 22:00:55 - INFO - __main__ - Mean std for for lug_9: 0.15104784071445465
03/26/2024 22:00:55 - INFO - __main__ - 
######## Language: luo ######## 

03/26/2024 22:00:55 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:00:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:00:55 - INFO - __main__ - ID text: luo_0
03/26/2024 22:02:11 - INFO - __main__ - Mean variance for luo_0: 0.029611840844154358
03/26/2024 22:02:11 - INFO - __main__ - Mean std for for luo_0: 0.13038431107997894
03/26/2024 22:02:11 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:02:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:02:11 - INFO - __main__ - ID text: luo_1
03/26/2024 22:03:25 - INFO - __main__ - Mean variance for luo_1: 0.03707021847367287
03/26/2024 22:03:25 - INFO - __main__ - Mean std for for luo_1: 0.1605134755373001
03/26/2024 22:03:25 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:03:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:03:25 - INFO - __main__ - ID text: luo_2
03/26/2024 22:04:39 - INFO - __main__ - Mean variance for luo_2: 0.04645232483744621
03/26/2024 22:04:39 - INFO - __main__ - Mean std for for luo_2: 0.1672079712152481
03/26/2024 22:04:39 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:04:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:04:39 - INFO - __main__ - ID text: luo_3
03/26/2024 22:05:53 - INFO - __main__ - Mean variance for luo_3: 0.02903643436729908
03/26/2024 22:05:53 - INFO - __main__ - Mean std for for luo_3: 0.13060590624809265
03/26/2024 22:05:53 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:05:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:05:53 - INFO - __main__ - ID text: luo_4
03/26/2024 22:07:07 - INFO - __main__ - Mean variance for luo_4: 0.03941504657268524
03/26/2024 22:07:07 - INFO - __main__ - Mean std for for luo_4: 0.16549506783485413
03/26/2024 22:07:07 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:07:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:07:07 - INFO - __main__ - ID text: luo_5
03/26/2024 22:08:21 - INFO - __main__ - Mean variance for luo_5: 0.03618239238858223
03/26/2024 22:08:21 - INFO - __main__ - Mean std for for luo_5: 0.153285950422287
03/26/2024 22:08:21 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:08:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:08:21 - INFO - __main__ - ID text: luo_6
03/26/2024 22:09:35 - INFO - __main__ - Mean variance for luo_6: 0.03359062969684601
03/26/2024 22:09:35 - INFO - __main__ - Mean std for for luo_6: 0.1439879685640335
03/26/2024 22:09:35 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:09:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:09:35 - INFO - __main__ - ID text: luo_7
03/26/2024 22:10:49 - INFO - __main__ - Mean variance for luo_7: 0.05031384900212288
03/26/2024 22:10:49 - INFO - __main__ - Mean std for for luo_7: 0.1953250914812088
03/26/2024 22:10:49 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:10:49 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:10:49 - INFO - __main__ - ID text: luo_8
03/26/2024 22:12:04 - INFO - __main__ - Mean variance for luo_8: 0.04012151435017586
03/26/2024 22:12:04 - INFO - __main__ - Mean std for for luo_8: 0.16048197448253632
03/26/2024 22:12:04 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:12:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:12:04 - INFO - __main__ - ID text: luo_9
03/26/2024 22:13:18 - INFO - __main__ - Mean variance for luo_9: 0.05403570830821991
03/26/2024 22:13:18 - INFO - __main__ - Mean std for for luo_9: 0.20697015523910522
03/26/2024 22:13:18 - INFO - __main__ - 
######## Language: pcm ######## 

03/26/2024 22:13:18 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:13:18 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:13:18 - INFO - __main__ - ID text: pcm_0
03/26/2024 22:14:32 - INFO - __main__ - Mean variance for pcm_0: 0.0411776639521122
03/26/2024 22:14:32 - INFO - __main__ - Mean std for for pcm_0: 0.16729582846164703
03/26/2024 22:14:32 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:14:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:14:32 - INFO - __main__ - ID text: pcm_1
03/26/2024 22:15:46 - INFO - __main__ - Mean variance for pcm_1: 0.040447309613227844
03/26/2024 22:15:46 - INFO - __main__ - Mean std for for pcm_1: 0.1738048791885376
03/26/2024 22:15:46 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:15:46 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:15:46 - INFO - __main__ - ID text: pcm_2
03/26/2024 22:17:00 - INFO - __main__ - Mean variance for pcm_2: 0.04019279405474663
03/26/2024 22:17:00 - INFO - __main__ - Mean std for for pcm_2: 0.16479919850826263
03/26/2024 22:17:00 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:17:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:17:00 - INFO - __main__ - ID text: pcm_3
03/26/2024 22:18:15 - INFO - __main__ - Mean variance for pcm_3: 0.04439438879489899
03/26/2024 22:18:15 - INFO - __main__ - Mean std for for pcm_3: 0.16694360971450806
03/26/2024 22:18:15 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:18:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:18:15 - INFO - __main__ - ID text: pcm_4
03/26/2024 22:19:30 - INFO - __main__ - Mean variance for pcm_4: 0.04166872426867485
03/26/2024 22:19:30 - INFO - __main__ - Mean std for for pcm_4: 0.16108377277851105
03/26/2024 22:19:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:19:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:19:30 - INFO - __main__ - ID text: pcm_5
03/26/2024 22:20:44 - INFO - __main__ - Mean variance for pcm_5: 0.03815886750817299
03/26/2024 22:20:44 - INFO - __main__ - Mean std for for pcm_5: 0.17240633070468903
03/26/2024 22:20:44 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:20:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:20:44 - INFO - __main__ - ID text: pcm_6
03/26/2024 22:21:59 - INFO - __main__ - Mean variance for pcm_6: 0.03789563104510307
03/26/2024 22:21:59 - INFO - __main__ - Mean std for for pcm_6: 0.1551520675420761
03/26/2024 22:21:59 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:21:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:21:59 - INFO - __main__ - ID text: pcm_7
03/26/2024 22:23:13 - INFO - __main__ - Mean variance for pcm_7: 0.04032566770911217
03/26/2024 22:23:13 - INFO - __main__ - Mean std for for pcm_7: 0.1584944874048233
03/26/2024 22:23:14 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:23:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:23:14 - INFO - __main__ - ID text: pcm_8
03/26/2024 22:24:28 - INFO - __main__ - Mean variance for pcm_8: 0.03922165557742119
03/26/2024 22:24:28 - INFO - __main__ - Mean std for for pcm_8: 0.154144749045372
03/26/2024 22:24:28 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:24:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:24:28 - INFO - __main__ - ID text: pcm_9
03/26/2024 22:25:43 - INFO - __main__ - Mean variance for pcm_9: 0.0310660507529974
03/26/2024 22:25:43 - INFO - __main__ - Mean std for for pcm_9: 0.14962027966976166
03/26/2024 22:25:43 - INFO - __main__ - 
######## Language: swa ######## 

03/26/2024 22:25:43 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:25:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:25:43 - INFO - __main__ - ID text: swa_0
03/26/2024 22:26:58 - INFO - __main__ - Mean variance for swa_0: 0.041210420429706573
03/26/2024 22:26:58 - INFO - __main__ - Mean std for for swa_0: 0.15392906963825226
03/26/2024 22:26:58 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:26:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:26:58 - INFO - __main__ - ID text: swa_1
03/26/2024 22:28:12 - INFO - __main__ - Mean variance for swa_1: 0.034605722874403
03/26/2024 22:28:12 - INFO - __main__ - Mean std for for swa_1: 0.15120787918567657
03/26/2024 22:28:12 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:28:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:28:12 - INFO - __main__ - ID text: swa_2
03/26/2024 22:29:27 - INFO - __main__ - Mean variance for swa_2: 0.04091253504157066
03/26/2024 22:29:27 - INFO - __main__ - Mean std for for swa_2: 0.15673208236694336
03/26/2024 22:29:27 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:29:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:29:27 - INFO - __main__ - ID text: swa_3
03/26/2024 22:30:42 - INFO - __main__ - Mean variance for swa_3: 0.041215792298316956
03/26/2024 22:30:42 - INFO - __main__ - Mean std for for swa_3: 0.17040188610553741
03/26/2024 22:30:42 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:30:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:30:42 - INFO - __main__ - ID text: swa_4
03/26/2024 22:31:56 - INFO - __main__ - Mean variance for swa_4: 0.029344948008656502
03/26/2024 22:31:56 - INFO - __main__ - Mean std for for swa_4: 0.13205105066299438
03/26/2024 22:31:56 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:31:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:31:56 - INFO - __main__ - ID text: swa_5
03/26/2024 22:33:11 - INFO - __main__ - Mean variance for swa_5: 0.026364335790276527
03/26/2024 22:33:11 - INFO - __main__ - Mean std for for swa_5: 0.12635605037212372
03/26/2024 22:33:11 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:33:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:33:11 - INFO - __main__ - ID text: swa_6
03/26/2024 22:34:26 - INFO - __main__ - Mean variance for swa_6: 0.034196820110082626
03/26/2024 22:34:26 - INFO - __main__ - Mean std for for swa_6: 0.14165841042995453
03/26/2024 22:34:26 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:34:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:34:26 - INFO - __main__ - ID text: swa_7
03/26/2024 22:35:40 - INFO - __main__ - Mean variance for swa_7: 0.03972800076007843
03/26/2024 22:35:40 - INFO - __main__ - Mean std for for swa_7: 0.17889226973056793
03/26/2024 22:35:40 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:35:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:35:40 - INFO - __main__ - ID text: swa_8
03/26/2024 22:36:55 - INFO - __main__ - Mean variance for swa_8: 0.03546455129981041
03/26/2024 22:36:55 - INFO - __main__ - Mean std for for swa_8: 0.15597209334373474
03/26/2024 22:36:55 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:36:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:36:55 - INFO - __main__ - ID text: swa_9
03/26/2024 22:38:09 - INFO - __main__ - Mean variance for swa_9: 0.038049984723329544
03/26/2024 22:38:09 - INFO - __main__ - Mean std for for swa_9: 0.15884138643741608
03/26/2024 22:38:09 - INFO - __main__ - 
######## Language: wol ######## 

03/26/2024 22:38:09 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:38:09 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:38:09 - INFO - __main__ - ID text: wol_0
03/26/2024 22:39:24 - INFO - __main__ - Mean variance for wol_0: 0.039010073989629745
03/26/2024 22:39:24 - INFO - __main__ - Mean std for for wol_0: 0.15175418555736542
03/26/2024 22:39:24 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:39:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:39:24 - INFO - __main__ - ID text: wol_1
03/26/2024 22:40:38 - INFO - __main__ - Mean variance for wol_1: 0.03888476639986038
03/26/2024 22:40:38 - INFO - __main__ - Mean std for for wol_1: 0.15950967371463776
03/26/2024 22:40:38 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:40:38 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:40:38 - INFO - __main__ - ID text: wol_2
03/26/2024 22:41:53 - INFO - __main__ - Mean variance for wol_2: 0.04340429976582527
03/26/2024 22:41:53 - INFO - __main__ - Mean std for for wol_2: 0.17253540456295013
03/26/2024 22:41:53 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:41:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:41:53 - INFO - __main__ - ID text: wol_3
03/26/2024 22:43:07 - INFO - __main__ - Mean variance for wol_3: 0.07700693607330322
03/26/2024 22:43:07 - INFO - __main__ - Mean std for for wol_3: 0.249578595161438
03/26/2024 22:43:07 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:43:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:43:07 - INFO - __main__ - ID text: wol_4
03/26/2024 22:44:22 - INFO - __main__ - Mean variance for wol_4: 0.04061109200119972
03/26/2024 22:44:22 - INFO - __main__ - Mean std for for wol_4: 0.17733882367610931
03/26/2024 22:44:22 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:44:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:44:22 - INFO - __main__ - ID text: wol_5
03/26/2024 22:45:36 - INFO - __main__ - Mean variance for wol_5: 0.0403946228325367
03/26/2024 22:45:36 - INFO - __main__ - Mean std for for wol_5: 0.1617407351732254
03/26/2024 22:45:36 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:45:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:45:36 - INFO - __main__ - ID text: wol_6
03/26/2024 22:46:51 - INFO - __main__ - Mean variance for wol_6: 0.1616741269826889
03/26/2024 22:46:51 - INFO - __main__ - Mean std for for wol_6: 0.35353991389274597
03/26/2024 22:46:51 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:46:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:46:51 - INFO - __main__ - ID text: wol_7
03/26/2024 22:48:05 - INFO - __main__ - Mean variance for wol_7: 0.031880758702754974
03/26/2024 22:48:05 - INFO - __main__ - Mean std for for wol_7: 0.14968281984329224
03/26/2024 22:48:05 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:48:05 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:48:05 - INFO - __main__ - ID text: wol_8
03/26/2024 22:49:19 - INFO - __main__ - Mean variance for wol_8: 0.034144069999456406
03/26/2024 22:49:19 - INFO - __main__ - Mean std for for wol_8: 0.1619175672531128
03/26/2024 22:49:19 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:49:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:49:19 - INFO - __main__ - ID text: wol_9
03/26/2024 22:50:34 - INFO - __main__ - Mean variance for wol_9: 0.04325588047504425
03/26/2024 22:50:34 - INFO - __main__ - Mean std for for wol_9: 0.17702136933803558
03/26/2024 22:50:34 - INFO - __main__ - 
######## Language: yor ######## 

03/26/2024 22:50:34 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:50:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:50:34 - INFO - __main__ - ID text: yor_0
03/26/2024 22:51:48 - INFO - __main__ - Mean variance for yor_0: 0.1391533613204956
03/26/2024 22:51:48 - INFO - __main__ - Mean std for for yor_0: 0.3250060975551605
03/26/2024 22:51:48 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:51:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:51:48 - INFO - __main__ - ID text: yor_1
03/26/2024 22:53:03 - INFO - __main__ - Mean variance for yor_1: 0.13243041932582855
03/26/2024 22:53:03 - INFO - __main__ - Mean std for for yor_1: 0.3109651207923889
03/26/2024 22:53:03 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:53:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:53:03 - INFO - __main__ - ID text: yor_2
03/26/2024 22:54:17 - INFO - __main__ - Mean variance for yor_2: 0.036450888961553574
03/26/2024 22:54:17 - INFO - __main__ - Mean std for for yor_2: 0.15435701608657837
03/26/2024 22:54:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:54:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:54:17 - INFO - __main__ - ID text: yor_3
03/26/2024 22:55:32 - INFO - __main__ - Mean variance for yor_3: 0.03317361697554588
03/26/2024 22:55:32 - INFO - __main__ - Mean std for for yor_3: 0.14213822782039642
03/26/2024 22:55:32 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:55:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:55:32 - INFO - __main__ - ID text: yor_4
03/26/2024 22:56:46 - INFO - __main__ - Mean variance for yor_4: 0.13801836967468262
03/26/2024 22:56:46 - INFO - __main__ - Mean std for for yor_4: 0.3231850564479828
03/26/2024 22:56:46 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:56:46 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:56:46 - INFO - __main__ - ID text: yor_5
03/26/2024 22:58:00 - INFO - __main__ - Mean variance for yor_5: 0.10386013239622116
03/26/2024 22:58:00 - INFO - __main__ - Mean std for for yor_5: 0.2672157883644104
03/26/2024 22:58:00 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:58:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:58:00 - INFO - __main__ - ID text: yor_6
03/26/2024 22:59:15 - INFO - __main__ - Mean variance for yor_6: 0.04066789150238037
03/26/2024 22:59:15 - INFO - __main__ - Mean std for for yor_6: 0.1639210730791092
03/26/2024 22:59:15 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 22:59:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:59:15 - INFO - __main__ - ID text: yor_7
03/26/2024 23:00:29 - INFO - __main__ - Mean variance for yor_7: 0.13518227636814117
03/26/2024 23:00:29 - INFO - __main__ - Mean std for for yor_7: 0.31357595324516296
03/26/2024 23:00:29 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:00:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:00:29 - INFO - __main__ - ID text: yor_8
03/26/2024 23:01:44 - INFO - __main__ - Mean variance for yor_8: 0.04044640064239502
03/26/2024 23:01:44 - INFO - __main__ - Mean std for for yor_8: 0.1567370742559433
03/26/2024 23:01:44 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:01:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:01:44 - INFO - __main__ - ID text: yor_9
03/26/2024 23:02:58 - INFO - __main__ - Mean variance for yor_9: 0.14152057468891144
03/26/2024 23:02:58 - INFO - __main__ - Mean std for for yor_9: 0.3254249095916748
03/26/2024 23:02:58 - INFO - __main__ - 
######## Language: zh ######## 

03/26/2024 23:02:58 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:02:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:02:58 - INFO - __main__ - ID text: zh_0
03/26/2024 23:04:12 - INFO - __main__ - Mean variance for zh_0: 0.09360092878341675
03/26/2024 23:04:12 - INFO - __main__ - Mean std for for zh_0: 0.2738509774208069
03/26/2024 23:04:13 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:04:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:04:13 - INFO - __main__ - ID text: zh_1
03/26/2024 23:05:28 - INFO - __main__ - Mean variance for zh_1: 0.11936742067337036
03/26/2024 23:05:28 - INFO - __main__ - Mean std for for zh_1: 0.2894432246685028
03/26/2024 23:05:28 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:05:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:05:28 - INFO - __main__ - ID text: zh_2
03/26/2024 23:06:42 - INFO - __main__ - Mean variance for zh_2: 0.13459086418151855
03/26/2024 23:06:42 - INFO - __main__ - Mean std for for zh_2: 0.31600114703178406
03/26/2024 23:06:42 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:06:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:06:42 - INFO - __main__ - ID text: zh_3
03/26/2024 23:07:57 - INFO - __main__ - Mean variance for zh_3: 0.1620745211839676
03/26/2024 23:07:57 - INFO - __main__ - Mean std for for zh_3: 0.354133278131485
03/26/2024 23:07:57 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:07:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:07:57 - INFO - __main__ - ID text: zh_4
03/26/2024 23:09:13 - INFO - __main__ - Mean variance for zh_4: 0.0898737907409668
03/26/2024 23:09:13 - INFO - __main__ - Mean std for for zh_4: 0.269699364900589
03/26/2024 23:09:14 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:09:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:09:14 - INFO - __main__ - ID text: zh_5
03/26/2024 23:10:28 - INFO - __main__ - Mean variance for zh_5: 0.16228948533535004
03/26/2024 23:10:28 - INFO - __main__ - Mean std for for zh_5: 0.36321961879730225
03/26/2024 23:10:28 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:10:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:10:28 - INFO - __main__ - ID text: zh_6
03/26/2024 23:11:43 - INFO - __main__ - Mean variance for zh_6: 0.1315334290266037
03/26/2024 23:11:43 - INFO - __main__ - Mean std for for zh_6: 0.3052404224872589
03/26/2024 23:11:43 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:11:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:11:43 - INFO - __main__ - ID text: zh_7
03/26/2024 23:12:57 - INFO - __main__ - Mean variance for zh_7: 0.13040734827518463
03/26/2024 23:12:57 - INFO - __main__ - Mean std for for zh_7: 0.31233248114585876
03/26/2024 23:12:57 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:12:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:12:57 - INFO - __main__ - ID text: zh_8
03/26/2024 23:14:11 - INFO - __main__ - Mean variance for zh_8: 0.14052323997020721
03/26/2024 23:14:11 - INFO - __main__ - Mean std for for zh_8: 0.32134196162223816
03/26/2024 23:14:11 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:14:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:14:11 - INFO - __main__ - ID text: zh_9
03/26/2024 23:15:24 - INFO - __main__ - Mean variance for zh_9: 0.14731454849243164
03/26/2024 23:15:24 - INFO - __main__ - Mean std for for zh_9: 0.32262417674064636
03/26/2024 23:15:24 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/26/2024 23:15:24 - INFO - __main__ - 
######## Language: arabic ######## 

03/26/2024 23:15:24 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:15:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:15:24 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/26/2024 23:16:37 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.05175149440765381
03/26/2024 23:16:37 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.18756236135959625
03/26/2024 23:16:38 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:16:38 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:16:38 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/26/2024 23:17:51 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.04428001120686531
03/26/2024 23:17:51 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.16678430140018463
03/26/2024 23:17:51 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:17:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:17:51 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/26/2024 23:19:04 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.050702277570962906
03/26/2024 23:19:04 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.18412208557128906
03/26/2024 23:19:04 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:19:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:19:04 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/26/2024 23:20:17 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.04914596676826477
03/26/2024 23:20:17 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.18079936504364014
03/26/2024 23:20:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:20:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:20:17 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/26/2024 23:21:30 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.12203437089920044
03/26/2024 23:21:30 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.29841533303260803
03/26/2024 23:21:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:21:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:21:30 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/26/2024 23:22:44 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.04213079437613487
03/26/2024 23:22:44 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.16797077655792236
03/26/2024 23:22:44 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:22:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:22:44 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/26/2024 23:23:57 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.054814767092466354
03/26/2024 23:23:57 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.19223147630691528
03/26/2024 23:23:57 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:23:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:23:57 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/26/2024 23:25:11 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.047568123787641525
03/26/2024 23:25:11 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.1791459172964096
03/26/2024 23:25:11 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:25:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:25:11 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/26/2024 23:26:31 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.045186132192611694
03/26/2024 23:26:31 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.1749124974012375
03/26/2024 23:26:31 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:26:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:26:31 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/26/2024 23:27:52 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.04698643088340759
03/26/2024 23:27:52 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.1766943484544754
03/26/2024 23:27:52 - INFO - __main__ - 
######## Language: russian ######## 

03/26/2024 23:27:52 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:27:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:27:52 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/26/2024 23:29:14 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.02543056756258011
03/26/2024 23:29:14 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.1296582669019699
03/26/2024 23:29:14 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:29:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:29:14 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/26/2024 23:30:33 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.04609910026192665
03/26/2024 23:30:33 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.17247332632541656
03/26/2024 23:30:33 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:30:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:30:33 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/26/2024 23:31:52 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.025566844269633293
03/26/2024 23:31:52 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.1296611726284027
03/26/2024 23:31:52 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:31:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:31:52 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/26/2024 23:33:12 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.027533121407032013
03/26/2024 23:33:12 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.1346198320388794
03/26/2024 23:33:12 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:33:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:33:12 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/26/2024 23:34:30 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.029112443327903748
03/26/2024 23:34:30 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.13648664951324463
03/26/2024 23:34:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:34:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:34:30 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/26/2024 23:35:47 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.027114996686577797
03/26/2024 23:35:47 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.13320612907409668
03/26/2024 23:35:47 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:35:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:35:47 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/26/2024 23:37:06 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.05013762786984444
03/26/2024 23:37:06 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.19153928756713867
03/26/2024 23:37:06 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:37:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:37:06 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/26/2024 23:38:24 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.02862064354121685
03/26/2024 23:38:24 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.13709190487861633
03/26/2024 23:38:24 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:38:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:38:24 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/26/2024 23:39:42 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.045188117772340775
03/26/2024 23:39:42 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.16931051015853882
03/26/2024 23:39:42 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:39:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:39:42 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/26/2024 23:41:02 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.02847028709948063
03/26/2024 23:41:02 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.1364062875509262
03/26/2024 23:41:02 - INFO - __main__ - 
######## Language: bengali ######## 

03/26/2024 23:41:02 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:41:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:41:02 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/26/2024 23:42:21 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.08890596777200699
03/26/2024 23:42:21 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.24921965599060059
03/26/2024 23:42:21 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:42:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:42:21 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/26/2024 23:43:40 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.0874691978096962
03/26/2024 23:43:40 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.2468576580286026
03/26/2024 23:43:40 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:43:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:43:40 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/26/2024 23:44:58 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.09193005412817001
03/26/2024 23:44:58 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.2538057565689087
03/26/2024 23:44:58 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:44:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:44:58 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/26/2024 23:46:17 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.09815675765275955
03/26/2024 23:46:17 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.2614022195339203
03/26/2024 23:46:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:46:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:46:17 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/26/2024 23:47:33 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.09265189617872238
03/26/2024 23:47:33 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.2549757659435272
03/26/2024 23:47:33 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:47:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:47:33 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/26/2024 23:48:51 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.08790022134780884
03/26/2024 23:48:51 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.2477400302886963
03/26/2024 23:48:51 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:48:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:48:51 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/26/2024 23:50:10 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.08461743593215942
03/26/2024 23:50:10 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.24294216930866241
03/26/2024 23:50:10 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:50:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:50:10 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/26/2024 23:51:29 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.0828520655632019
03/26/2024 23:51:29 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.24095487594604492
03/26/2024 23:51:29 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:51:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:51:29 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/26/2024 23:52:47 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.0844247117638588
03/26/2024 23:52:47 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.24278543889522552
03/26/2024 23:52:47 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:52:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:52:47 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/26/2024 23:54:05 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.13085289299488068
03/26/2024 23:54:05 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.3095663785934448
03/26/2024 23:54:05 - INFO - __main__ - 
######## Language: telugu ######## 

03/26/2024 23:54:05 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:54:05 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:54:05 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/26/2024 23:55:22 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.03825412318110466
03/26/2024 23:55:22 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.15710261464118958
03/26/2024 23:55:22 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:55:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:55:22 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/26/2024 23:56:40 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.04021357372403145
03/26/2024 23:56:40 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.1619884967803955
03/26/2024 23:56:40 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:56:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:56:40 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/26/2024 23:57:59 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.033220626413822174
03/26/2024 23:57:59 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.1457432061433792
03/26/2024 23:57:59 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:57:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:57:59 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/26/2024 23:59:17 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.04804617166519165
03/26/2024 23:59:17 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.17946434020996094
03/26/2024 23:59:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/26/2024 23:59:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:59:17 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/27/2024 00:00:34 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.03474467992782593
03/27/2024 00:00:34 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.14972329139709473
03/27/2024 00:00:34 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:00:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:00:34 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/27/2024 00:01:52 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.03359273448586464
03/27/2024 00:01:52 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.14732424914836884
03/27/2024 00:01:52 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:01:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:01:52 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/27/2024 00:03:11 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.10333222150802612
03/27/2024 00:03:11 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.26723048090934753
03/27/2024 00:03:11 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:03:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:03:11 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/27/2024 00:04:30 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.037347812205553055
03/27/2024 00:04:30 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.15768368542194366
03/27/2024 00:04:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:04:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:04:30 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/27/2024 00:05:48 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.038900818675756454
03/27/2024 00:05:48 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.15776588022708893
03/27/2024 00:05:48 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:05:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:05:48 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/27/2024 00:07:03 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.037114277482032776
03/27/2024 00:07:03 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.15542516112327576
03/27/2024 00:07:03 - INFO - __main__ - 
######## Language: finnish ######## 

03/27/2024 00:07:03 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:07:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:07:03 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/27/2024 00:08:19 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.044387876987457275
03/27/2024 00:08:19 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.1619238704442978
03/27/2024 00:08:19 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:08:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:08:19 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/27/2024 00:09:36 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.04408171400427818
03/27/2024 00:09:36 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.16192542016506195
03/27/2024 00:09:36 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:09:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:09:36 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/27/2024 00:10:51 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.06341514736413956
03/27/2024 00:10:51 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.21507005393505096
03/27/2024 00:10:51 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:10:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:10:51 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/27/2024 00:12:06 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.045553695410490036
03/27/2024 00:12:06 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.16525934636592865
03/27/2024 00:12:06 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:12:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:12:06 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/27/2024 00:13:24 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.04157569631934166
03/27/2024 00:13:24 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.15703344345092773
03/27/2024 00:13:24 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:13:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:13:24 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/27/2024 00:14:41 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.018183434382081032
03/27/2024 00:14:41 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.10624039173126221
03/27/2024 00:14:41 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:14:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:14:41 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/27/2024 00:15:57 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.015920696780085564
03/27/2024 00:15:57 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.10128718614578247
03/27/2024 00:15:57 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:15:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:15:57 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/27/2024 00:17:14 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.06155497953295708
03/27/2024 00:17:14 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.2121388465166092
03/27/2024 00:17:14 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:17:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:17:14 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/27/2024 00:18:32 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.025445081293582916
03/27/2024 00:18:32 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.12339841574430466
03/27/2024 00:18:32 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:18:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:18:32 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/27/2024 00:19:50 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.01715211756527424
03/27/2024 00:19:50 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.10493868589401245
03/27/2024 00:19:50 - INFO - __main__ - 
######## Language: swahili ######## 

03/27/2024 00:19:50 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:19:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:19:50 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/27/2024 00:21:05 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.042902957648038864
03/27/2024 00:21:05 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.1623915731906891
03/27/2024 00:21:05 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:21:05 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:21:05 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/27/2024 00:22:22 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.018563615158200264
03/27/2024 00:22:22 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.10769890993833542
03/27/2024 00:22:22 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:22:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:22:22 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/27/2024 00:23:40 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.038614679127931595
03/27/2024 00:23:40 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.15370053052902222
03/27/2024 00:23:40 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:23:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:23:40 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/27/2024 00:24:56 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.01790640503168106
03/27/2024 00:24:56 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.10666286945343018
03/27/2024 00:24:56 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:24:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:24:56 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/27/2024 00:26:14 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.01676749996840954
03/27/2024 00:26:14 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.10371851921081543
03/27/2024 00:26:14 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:26:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:26:14 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/27/2024 00:27:31 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.041873034089803696
03/27/2024 00:27:31 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.16226550936698914
03/27/2024 00:27:31 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:27:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:27:31 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/27/2024 00:28:48 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.038623545318841934
03/27/2024 00:28:48 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.14936809241771698
03/27/2024 00:28:48 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:28:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:28:48 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/27/2024 00:30:03 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.045457225292921066
03/27/2024 00:30:03 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.16346514225006104
03/27/2024 00:30:03 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:30:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:30:03 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/27/2024 00:31:20 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.02360142208635807
03/27/2024 00:31:20 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.11880713701248169
03/27/2024 00:31:20 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:31:20 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:31:20 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/27/2024 00:32:37 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.020080292597413063
03/27/2024 00:32:37 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.1103326752781868
03/27/2024 00:32:37 - INFO - __main__ - 
######## Language: korean ######## 

03/27/2024 00:32:37 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:32:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:32:37 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/27/2024 00:33:53 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.09724994748830795
03/27/2024 00:33:53 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.2603546977043152
03/27/2024 00:33:53 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:33:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:33:53 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/27/2024 00:35:08 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.036479830741882324
03/27/2024 00:35:08 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.15780138969421387
03/27/2024 00:35:08 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:35:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:35:08 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/27/2024 00:36:24 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.03187447041273117
03/27/2024 00:36:24 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.14558815956115723
03/27/2024 00:36:24 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:36:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:36:24 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/27/2024 00:37:42 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.038772959262132645
03/27/2024 00:37:42 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.15957267582416534
03/27/2024 00:37:42 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:37:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:37:42 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/27/2024 00:39:01 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.11493935436010361
03/27/2024 00:39:01 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.28103724122047424
03/27/2024 00:39:01 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:39:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:39:01 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/27/2024 00:40:19 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.04977928102016449
03/27/2024 00:40:19 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.1803767830133438
03/27/2024 00:40:19 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:40:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:40:19 - INFO - __main__ - ID text: korean-148115504649351135-0
03/27/2024 00:41:37 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.04475316405296326
03/27/2024 00:41:37 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.17393289506435394
03/27/2024 00:41:37 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:41:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:41:37 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/27/2024 00:42:56 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.10012008994817734
03/27/2024 00:42:57 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.2627026438713074
03/27/2024 00:42:58 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:42:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:42:58 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/27/2024 00:44:17 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.12197021394968033
03/27/2024 00:44:17 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.2915741801261902
03/27/2024 00:44:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:44:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:44:17 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/27/2024 00:45:35 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.1641021966934204
03/27/2024 00:45:35 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.353936105966568
03/27/2024 00:45:35 - INFO - __main__ - 
######## Language: indonesian ######## 

03/27/2024 00:45:35 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:45:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:45:35 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/27/2024 00:46:53 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.018375743180513382
03/27/2024 00:46:53 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.10811483860015869
03/27/2024 00:46:53 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:46:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:46:53 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/27/2024 00:48:11 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.05748741328716278
03/27/2024 00:48:11 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.20645950734615326
03/27/2024 00:48:11 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:48:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:48:11 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/27/2024 00:49:28 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.01671089045703411
03/27/2024 00:49:28 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.10258185863494873
03/27/2024 00:49:28 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:49:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:49:28 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/27/2024 00:50:45 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.03107626736164093
03/27/2024 00:50:45 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.13429220020771027
03/27/2024 00:50:45 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:50:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:50:45 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/27/2024 00:52:00 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.01717599481344223
03/27/2024 00:52:00 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.10409333556890488
03/27/2024 00:52:00 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:52:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:52:00 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/27/2024 00:53:16 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.02174634486436844
03/27/2024 00:53:16 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.11364153027534485
03/27/2024 00:53:16 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:53:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:53:16 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/27/2024 00:54:32 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.015576780773699284
03/27/2024 00:54:32 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.09945723414421082
03/27/2024 00:54:32 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:54:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:54:32 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/27/2024 00:55:49 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.04256998002529144
03/27/2024 00:55:49 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.15745264291763306
03/27/2024 00:55:49 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:55:49 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:55:49 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/27/2024 00:57:06 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.025861958041787148
03/27/2024 00:57:06 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.1232881024479866
03/27/2024 00:57:06 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:57:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:57:06 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/27/2024 00:58:23 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.015406272374093533
03/27/2024 00:58:23 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.09947087615728378
03/27/2024 00:58:23 - INFO - __main__ - 
######## Language: english ######## 

03/27/2024 00:58:23 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:58:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:58:23 - INFO - __main__ - ID text: english-2852412434797041176-6
03/27/2024 00:59:41 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.06644827127456665
03/27/2024 00:59:41 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.22239094972610474
03/27/2024 00:59:41 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 00:59:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:59:41 - INFO - __main__ - ID text: english--1463732605740571606-0
03/27/2024 01:00:59 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.015483450144529343
03/27/2024 01:00:59 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.09840317815542221
03/27/2024 01:00:59 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:00:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:00:59 - INFO - __main__ - ID text: english-5441411281255470421-0
03/27/2024 01:02:16 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.017548806965351105
03/27/2024 01:02:16 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.10303977131843567
03/27/2024 01:02:16 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:02:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:02:16 - INFO - __main__ - ID text: english-7294054492486093447-1
03/27/2024 01:03:33 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.017135335132479668
03/27/2024 01:03:33 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.10115248709917068
03/27/2024 01:03:33 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:03:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:03:33 - INFO - __main__ - ID text: english-8820750127045023244-0
03/27/2024 01:04:50 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.044325005263090134
03/27/2024 01:04:50 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.15866152942180634
03/27/2024 01:04:50 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:04:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:04:50 - INFO - __main__ - ID text: english--506693546683012611-2
03/27/2024 01:06:06 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.05485653877258301
03/27/2024 01:06:06 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.17941130697727203
03/27/2024 01:06:06 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:06:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:06:06 - INFO - __main__ - ID text: english-745411798111651115-0
03/27/2024 01:07:23 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.015517578460276127
03/27/2024 01:07:23 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.09914784878492355
03/27/2024 01:07:23 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:07:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:07:23 - INFO - __main__ - ID text: english-7740772185887912651-0
03/27/2024 01:08:41 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.01836577244102955
03/27/2024 01:08:41 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.10361158847808838
03/27/2024 01:08:41 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:08:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:08:41 - INFO - __main__ - ID text: english-383873188776267137-19
03/27/2024 01:09:58 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.019035112112760544
03/27/2024 01:09:58 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.10661110281944275
03/27/2024 01:09:58 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:09:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:09:58 - INFO - __main__ - ID text: english--8277537578703156284-0
03/27/2024 01:11:15 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.0176344346255064
03/27/2024 01:11:15 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.10313431173563004
03/27/2024 01:11:15 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/27/2024 01:11:15 - INFO - __main__ - 
######## Language: cola ######## 

03/27/2024 01:11:15 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:11:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:11:15 - INFO - __main__ - ID text: cola_228
03/27/2024 01:12:31 - INFO - __main__ - Mean variance for cola_228: 0.04380058869719505
03/27/2024 01:12:31 - INFO - __main__ - Mean std for for cola_228: 0.18128769099712372
03/27/2024 01:12:31 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:12:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:12:31 - INFO - __main__ - ID text: cola_51
03/27/2024 01:13:49 - INFO - __main__ - Mean variance for cola_51: 0.051062922924757004
03/27/2024 01:13:49 - INFO - __main__ - Mean std for for cola_51: 0.19680571556091309
03/27/2024 01:13:49 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:13:49 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:13:49 - INFO - __main__ - ID text: cola_563
03/27/2024 01:15:08 - INFO - __main__ - Mean variance for cola_563: 0.1730603128671646
03/27/2024 01:15:08 - INFO - __main__ - Mean std for for cola_563: 0.3757930099964142
03/27/2024 01:15:08 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:15:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:15:08 - INFO - __main__ - ID text: cola_501
03/27/2024 01:16:24 - INFO - __main__ - Mean variance for cola_501: 0.05255122855305672
03/27/2024 01:16:24 - INFO - __main__ - Mean std for for cola_501: 0.1975127011537552
03/27/2024 01:16:25 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:16:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:16:25 - INFO - __main__ - ID text: cola_457
03/27/2024 01:17:42 - INFO - __main__ - Mean variance for cola_457: 0.05372856557369232
03/27/2024 01:17:42 - INFO - __main__ - Mean std for for cola_457: 0.20264041423797607
03/27/2024 01:17:42 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:17:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:17:42 - INFO - __main__ - ID text: cola_285
03/27/2024 01:19:00 - INFO - __main__ - Mean variance for cola_285: 0.061417970806360245
03/27/2024 01:19:00 - INFO - __main__ - Mean std for for cola_285: 0.21797741949558258
03/27/2024 01:19:00 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:19:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:19:00 - INFO - __main__ - ID text: cola_209
03/27/2024 01:20:17 - INFO - __main__ - Mean variance for cola_209: 0.042362455278635025
03/27/2024 01:20:17 - INFO - __main__ - Mean std for for cola_209: 0.18108908832073212
03/27/2024 01:20:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:20:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:20:17 - INFO - __main__ - ID text: cola_178
03/27/2024 01:21:34 - INFO - __main__ - Mean variance for cola_178: 0.06577612459659576
03/27/2024 01:21:34 - INFO - __main__ - Mean std for for cola_178: 0.22555500268936157
03/27/2024 01:21:34 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:21:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:21:34 - INFO - __main__ - ID text: cola_864
03/27/2024 01:22:54 - INFO - __main__ - Mean variance for cola_864: 0.07184396684169769
03/27/2024 01:22:54 - INFO - __main__ - Mean std for for cola_864: 0.23890794813632965
03/27/2024 01:22:54 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:22:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:22:54 - INFO - __main__ - ID text: cola_65
03/27/2024 01:24:12 - INFO - __main__ - Mean variance for cola_65: 0.05232799053192139
03/27/2024 01:24:12 - INFO - __main__ - Mean std for for cola_65: 0.19393883645534515
03/27/2024 01:24:12 - INFO - __main__ - 
######## Language: mnli ######## 

03/27/2024 01:24:12 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:24:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:24:12 - INFO - __main__ - ID text: mnli_488
03/27/2024 01:25:29 - INFO - __main__ - Mean variance for mnli_488: 0.05644706264138222
03/27/2024 01:25:29 - INFO - __main__ - Mean std for for mnli_488: 0.18125145137310028
03/27/2024 01:25:29 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:25:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:25:29 - INFO - __main__ - ID text: mnli_1535
03/27/2024 01:26:46 - INFO - __main__ - Mean variance for mnli_1535: 0.054769501090049744
03/27/2024 01:26:46 - INFO - __main__ - Mean std for for mnli_1535: 0.1766750067472458
03/27/2024 01:26:47 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:26:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:26:47 - INFO - __main__ - ID text: mnli_3582
03/27/2024 01:28:04 - INFO - __main__ - Mean variance for mnli_3582: 0.04834991693496704
03/27/2024 01:28:04 - INFO - __main__ - Mean std for for mnli_3582: 0.18228431046009064
03/27/2024 01:28:04 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:28:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:28:04 - INFO - __main__ - ID text: mnli_3811
03/27/2024 01:29:21 - INFO - __main__ - Mean variance for mnli_3811: 0.05039824917912483
03/27/2024 01:29:21 - INFO - __main__ - Mean std for for mnli_3811: 0.18184614181518555
03/27/2024 01:29:21 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:29:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:29:21 - INFO - __main__ - ID text: mnli_8279
03/27/2024 01:30:39 - INFO - __main__ - Mean variance for mnli_8279: 0.050025422126054764
03/27/2024 01:30:39 - INFO - __main__ - Mean std for for mnli_8279: 0.18860143423080444
03/27/2024 01:30:39 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:30:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:30:39 - INFO - __main__ - ID text: mnli_434
03/27/2024 01:31:57 - INFO - __main__ - Mean variance for mnli_434: 0.034884944558143616
03/27/2024 01:31:57 - INFO - __main__ - Mean std for for mnli_434: 0.1384371668100357
03/27/2024 01:31:57 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:31:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:31:57 - INFO - __main__ - ID text: mnli_9195
03/27/2024 01:33:17 - INFO - __main__ - Mean variance for mnli_9195: 0.05105004832148552
03/27/2024 01:33:17 - INFO - __main__ - Mean std for for mnli_9195: 0.20131909847259521
03/27/2024 01:33:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:33:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:33:17 - INFO - __main__ - ID text: mnli_3257
03/27/2024 01:34:36 - INFO - __main__ - Mean variance for mnli_3257: 0.05362071096897125
03/27/2024 01:34:36 - INFO - __main__ - Mean std for for mnli_3257: 0.18728794157505035
03/27/2024 01:34:36 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:34:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:34:36 - INFO - __main__ - ID text: mnli_8928
03/27/2024 01:35:57 - INFO - __main__ - Mean variance for mnli_8928: 0.050356414169073105
03/27/2024 01:35:57 - INFO - __main__ - Mean std for for mnli_8928: 0.17384254932403564
03/27/2024 01:35:57 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:35:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:35:57 - INFO - __main__ - ID text: mnli_6873
03/27/2024 01:37:14 - INFO - __main__ - Mean variance for mnli_6873: 0.05507872998714447
03/27/2024 01:37:14 - INFO - __main__ - Mean std for for mnli_6873: 0.1789519339799881
03/27/2024 01:37:14 - INFO - __main__ - 
######## Language: mrpc ######## 

03/27/2024 01:37:14 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:37:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:37:14 - INFO - __main__ - ID text: mrpc_451
03/27/2024 01:38:31 - INFO - __main__ - Mean variance for mrpc_451: 0.05813715234398842
03/27/2024 01:38:31 - INFO - __main__ - Mean std for for mrpc_451: 0.182668998837471
03/27/2024 01:38:31 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:38:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:38:31 - INFO - __main__ - ID text: mrpc_919
03/27/2024 01:39:50 - INFO - __main__ - Mean variance for mrpc_919: 0.053119879215955734
03/27/2024 01:39:50 - INFO - __main__ - Mean std for for mrpc_919: 0.17815493047237396
03/27/2024 01:39:50 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:39:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:39:50 - INFO - __main__ - ID text: mrpc_1206
03/27/2024 01:41:07 - INFO - __main__ - Mean variance for mrpc_1206: 0.055164407938718796
03/27/2024 01:41:07 - INFO - __main__ - Mean std for for mrpc_1206: 0.18974971771240234
03/27/2024 01:41:07 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:41:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:41:07 - INFO - __main__ - ID text: mrpc_569
03/27/2024 01:42:23 - INFO - __main__ - Mean variance for mrpc_569: 0.0560772530734539
03/27/2024 01:42:23 - INFO - __main__ - Mean std for for mrpc_569: 0.18460100889205933
03/27/2024 01:42:23 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:42:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:42:23 - INFO - __main__ - ID text: mrpc_1657
03/27/2024 01:43:40 - INFO - __main__ - Mean variance for mrpc_1657: 0.041178975254297256
03/27/2024 01:43:40 - INFO - __main__ - Mean std for for mrpc_1657: 0.1518733650445938
03/27/2024 01:43:40 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:43:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:43:40 - INFO - __main__ - ID text: mrpc_13
03/27/2024 01:44:59 - INFO - __main__ - Mean variance for mrpc_13: 0.05525106191635132
03/27/2024 01:44:59 - INFO - __main__ - Mean std for for mrpc_13: 0.18325121700763702
03/27/2024 01:44:59 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:44:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:44:59 - INFO - __main__ - ID text: mrpc_1554
03/27/2024 01:46:16 - INFO - __main__ - Mean variance for mrpc_1554: 0.041560135781764984
03/27/2024 01:46:16 - INFO - __main__ - Mean std for for mrpc_1554: 0.15322832763195038
03/27/2024 01:46:16 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:46:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:46:16 - INFO - __main__ - ID text: mrpc_1650
03/27/2024 01:47:32 - INFO - __main__ - Mean variance for mrpc_1650: 0.1270616054534912
03/27/2024 01:47:32 - INFO - __main__ - Mean std for for mrpc_1650: 0.304503470659256
03/27/2024 01:47:32 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:47:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:47:32 - INFO - __main__ - ID text: mrpc_326
03/27/2024 01:48:48 - INFO - __main__ - Mean variance for mrpc_326: 0.05641454458236694
03/27/2024 01:48:48 - INFO - __main__ - Mean std for for mrpc_326: 0.1843496561050415
03/27/2024 01:48:48 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:48:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:48:48 - INFO - __main__ - ID text: mrpc_1429
03/27/2024 01:50:04 - INFO - __main__ - Mean variance for mrpc_1429: 0.05298808217048645
03/27/2024 01:50:04 - INFO - __main__ - Mean std for for mrpc_1429: 0.17755581438541412
03/27/2024 01:50:04 - INFO - __main__ - 
######## Language: qnli ######## 

03/27/2024 01:50:04 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:50:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:50:04 - INFO - __main__ - ID text: qnli_3462
03/27/2024 01:51:21 - INFO - __main__ - Mean variance for qnli_3462: 0.053512588143348694
03/27/2024 01:51:21 - INFO - __main__ - Mean std for for qnli_3462: 0.1776995062828064
03/27/2024 01:51:21 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:51:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:51:21 - INFO - __main__ - ID text: qnli_2787
03/27/2024 01:52:37 - INFO - __main__ - Mean variance for qnli_2787: 0.04501301422715187
03/27/2024 01:52:37 - INFO - __main__ - Mean std for for qnli_2787: 0.16005833446979523
03/27/2024 01:52:37 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:52:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:52:37 - INFO - __main__ - ID text: qnli_2276
03/27/2024 01:53:55 - INFO - __main__ - Mean variance for qnli_2276: 0.048922326415777206
03/27/2024 01:53:55 - INFO - __main__ - Mean std for for qnli_2276: 0.16461272537708282
03/27/2024 01:53:55 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:53:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:53:55 - INFO - __main__ - ID text: qnli_1273
03/27/2024 01:55:13 - INFO - __main__ - Mean variance for qnli_1273: 0.04948878288269043
03/27/2024 01:55:13 - INFO - __main__ - Mean std for for qnli_1273: 0.16630679368972778
03/27/2024 01:55:13 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:55:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:55:13 - INFO - __main__ - ID text: qnli_1763
03/27/2024 01:56:31 - INFO - __main__ - Mean variance for qnli_1763: 0.05453452467918396
03/27/2024 01:56:31 - INFO - __main__ - Mean std for for qnli_1763: 0.17872996628284454
03/27/2024 01:56:31 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:56:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:56:31 - INFO - __main__ - ID text: qnli_2757
03/27/2024 01:57:51 - INFO - __main__ - Mean variance for qnli_2757: 0.054427046328783035
03/27/2024 01:57:51 - INFO - __main__ - Mean std for for qnli_2757: 0.17666053771972656
03/27/2024 01:57:51 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:57:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:57:51 - INFO - __main__ - ID text: qnli_837
03/27/2024 01:59:10 - INFO - __main__ - Mean variance for qnli_837: 0.06258132308721542
03/27/2024 01:59:10 - INFO - __main__ - Mean std for for qnli_837: 0.19532747566699982
03/27/2024 01:59:10 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 01:59:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:59:10 - INFO - __main__ - ID text: qnli_759
03/27/2024 02:00:29 - INFO - __main__ - Mean variance for qnli_759: 0.016850052401423454
03/27/2024 02:00:29 - INFO - __main__ - Mean std for for qnli_759: 0.10179305076599121
03/27/2024 02:00:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:00:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:00:30 - INFO - __main__ - ID text: qnli_3112
03/27/2024 02:01:51 - INFO - __main__ - Mean variance for qnli_3112: 0.06277915835380554
03/27/2024 02:01:51 - INFO - __main__ - Mean std for for qnli_3112: 0.19450215995311737
03/27/2024 02:01:52 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:01:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:01:52 - INFO - __main__ - ID text: qnli_792
03/27/2024 02:03:09 - INFO - __main__ - Mean variance for qnli_792: 0.053133830428123474
03/27/2024 02:03:09 - INFO - __main__ - Mean std for for qnli_792: 0.1731349229812622
03/27/2024 02:03:09 - INFO - __main__ - 
######## Language: qqp ######## 

03/27/2024 02:03:09 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:03:09 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:03:09 - INFO - __main__ - ID text: qqp_188208
03/27/2024 02:04:27 - INFO - __main__ - Mean variance for qqp_188208: 0.05368620157241821
03/27/2024 02:04:27 - INFO - __main__ - Mean std for for qqp_188208: 0.19406254589557648
03/27/2024 02:04:27 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:04:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:04:27 - INFO - __main__ - ID text: qqp_180331
03/27/2024 02:05:47 - INFO - __main__ - Mean variance for qqp_180331: 0.05128144100308418
03/27/2024 02:05:47 - INFO - __main__ - Mean std for for qqp_180331: 0.18431539833545685
03/27/2024 02:05:47 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:05:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:05:47 - INFO - __main__ - ID text: qqp_316526
03/27/2024 02:07:04 - INFO - __main__ - Mean variance for qqp_316526: 0.06327507644891739
03/27/2024 02:07:04 - INFO - __main__ - Mean std for for qqp_316526: 0.19970226287841797
03/27/2024 02:07:04 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:07:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:07:04 - INFO - __main__ - ID text: qqp_138685
03/27/2024 02:08:21 - INFO - __main__ - Mean variance for qqp_138685: 0.04001699388027191
03/27/2024 02:08:21 - INFO - __main__ - Mean std for for qqp_138685: 0.14951257407665253
03/27/2024 02:08:21 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:08:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:08:21 - INFO - __main__ - ID text: qqp_22780
03/27/2024 02:09:39 - INFO - __main__ - Mean variance for qqp_22780: 0.04811479523777962
03/27/2024 02:09:39 - INFO - __main__ - Mean std for for qqp_22780: 0.18858017027378082
03/27/2024 02:09:39 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:09:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:09:39 - INFO - __main__ - ID text: qqp_382589
03/27/2024 02:10:56 - INFO - __main__ - Mean variance for qqp_382589: 0.05786408856511116
03/27/2024 02:10:56 - INFO - __main__ - Mean std for for qqp_382589: 0.1906730979681015
03/27/2024 02:10:56 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:10:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:10:56 - INFO - __main__ - ID text: qqp_240870
03/27/2024 02:12:13 - INFO - __main__ - Mean variance for qqp_240870: 0.05348380282521248
03/27/2024 02:12:13 - INFO - __main__ - Mean std for for qqp_240870: 0.190666064620018
03/27/2024 02:12:13 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:12:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:12:13 - INFO - __main__ - ID text: qqp_281137
03/27/2024 02:13:30 - INFO - __main__ - Mean variance for qqp_281137: 0.05187487229704857
03/27/2024 02:13:30 - INFO - __main__ - Mean std for for qqp_281137: 0.18362486362457275
03/27/2024 02:13:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:13:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:13:30 - INFO - __main__ - ID text: qqp_65444
03/27/2024 02:14:46 - INFO - __main__ - Mean variance for qqp_65444: 0.044394832104444504
03/27/2024 02:14:46 - INFO - __main__ - Mean std for for qqp_65444: 0.1740092784166336
03/27/2024 02:14:46 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:14:46 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:14:46 - INFO - __main__ - ID text: qqp_198461
03/27/2024 02:16:03 - INFO - __main__ - Mean variance for qqp_198461: 0.046213675290346146
03/27/2024 02:16:03 - INFO - __main__ - Mean std for for qqp_198461: 0.17311201989650726
03/27/2024 02:16:03 - INFO - __main__ - 
######## Language: rte ######## 

03/27/2024 02:16:03 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:16:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:16:03 - INFO - __main__ - ID text: rte_322
03/27/2024 02:17:22 - INFO - __main__ - Mean variance for rte_322: 0.05216844007372856
03/27/2024 02:17:22 - INFO - __main__ - Mean std for for rte_322: 0.1802094429731369
03/27/2024 02:17:22 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:17:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:17:22 - INFO - __main__ - ID text: rte_2261
03/27/2024 02:18:40 - INFO - __main__ - Mean variance for rte_2261: 0.04520036280155182
03/27/2024 02:18:40 - INFO - __main__ - Mean std for for rte_2261: 0.1760053038597107
03/27/2024 02:18:40 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:18:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:18:40 - INFO - __main__ - ID text: rte_1200
03/27/2024 02:19:58 - INFO - __main__ - Mean variance for rte_1200: 0.03678112104535103
03/27/2024 02:19:58 - INFO - __main__ - Mean std for for rte_1200: 0.14612480998039246
03/27/2024 02:19:58 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:19:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:19:58 - INFO - __main__ - ID text: rte_2574
03/27/2024 02:21:17 - INFO - __main__ - Mean variance for rte_2574: 0.017442667856812477
03/27/2024 02:21:17 - INFO - __main__ - Mean std for for rte_2574: 0.10247776657342911
03/27/2024 02:21:17 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:21:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:21:17 - INFO - __main__ - ID text: rte_2533
03/27/2024 02:22:37 - INFO - __main__ - Mean variance for rte_2533: 0.016404708847403526
03/27/2024 02:22:37 - INFO - __main__ - Mean std for for rte_2533: 0.10167389363050461
03/27/2024 02:22:37 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:22:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:22:37 - INFO - __main__ - ID text: rte_1481
03/27/2024 02:23:55 - INFO - __main__ - Mean variance for rte_1481: 0.04898366704583168
03/27/2024 02:23:55 - INFO - __main__ - Mean std for for rte_1481: 0.1647154688835144
03/27/2024 02:23:56 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:23:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:23:56 - INFO - __main__ - ID text: rte_2364
03/27/2024 02:25:16 - INFO - __main__ - Mean variance for rte_2364: 0.04917421564459801
03/27/2024 02:25:16 - INFO - __main__ - Mean std for for rte_2364: 0.1632041484117508
03/27/2024 02:25:16 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:25:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:25:16 - INFO - __main__ - ID text: rte_787
03/27/2024 02:26:35 - INFO - __main__ - Mean variance for rte_787: 0.05528518185019493
03/27/2024 02:26:35 - INFO - __main__ - Mean std for for rte_787: 0.1760922223329544
03/27/2024 02:26:35 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:26:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:26:35 - INFO - __main__ - ID text: rte_2885
03/27/2024 02:27:54 - INFO - __main__ - Mean variance for rte_2885: 0.01841639168560505
03/27/2024 02:27:54 - INFO - __main__ - Mean std for for rte_2885: 0.10362416505813599
03/27/2024 02:27:54 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:27:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:27:54 - INFO - __main__ - ID text: rte_284
03/27/2024 02:29:14 - INFO - __main__ - Mean variance for rte_284: 0.051821619272232056
03/27/2024 02:29:14 - INFO - __main__ - Mean std for for rte_284: 0.1791711300611496
03/27/2024 02:29:14 - INFO - __main__ - 
######## Language: sst2 ######## 

03/27/2024 02:29:14 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:29:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:29:14 - INFO - __main__ - ID text: sst2_93
03/27/2024 02:30:33 - INFO - __main__ - Mean variance for sst2_93: 0.04509250819683075
03/27/2024 02:30:33 - INFO - __main__ - Mean std for for sst2_93: 0.17209406197071075
03/27/2024 02:30:33 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:30:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:30:33 - INFO - __main__ - ID text: sst2_1354
03/27/2024 02:31:52 - INFO - __main__ - Mean variance for sst2_1354: 0.05941760540008545
03/27/2024 02:31:52 - INFO - __main__ - Mean std for for sst2_1354: 0.2148096114397049
03/27/2024 02:31:52 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:31:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:31:52 - INFO - __main__ - ID text: sst2_466
03/27/2024 02:33:11 - INFO - __main__ - Mean variance for sst2_466: 0.048741843551397324
03/27/2024 02:33:11 - INFO - __main__ - Mean std for for sst2_466: 0.19583852589130402
03/27/2024 02:33:11 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:33:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:33:11 - INFO - __main__ - ID text: sst2_1583
03/27/2024 02:34:31 - INFO - __main__ - Mean variance for sst2_1583: 0.05508105084300041
03/27/2024 02:34:31 - INFO - __main__ - Mean std for for sst2_1583: 0.18566668033599854
03/27/2024 02:34:31 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:34:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:34:31 - INFO - __main__ - ID text: sst2_592
03/27/2024 02:35:50 - INFO - __main__ - Mean variance for sst2_592: 0.058163974434137344
03/27/2024 02:35:50 - INFO - __main__ - Mean std for for sst2_592: 0.18804657459259033
03/27/2024 02:35:50 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:35:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:35:50 - INFO - __main__ - ID text: sst2_163
03/27/2024 02:37:12 - INFO - __main__ - Mean variance for sst2_163: 0.07283132523298264
03/27/2024 02:37:12 - INFO - __main__ - Mean std for for sst2_163: 0.24298463761806488
03/27/2024 02:37:12 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:37:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:37:12 - INFO - __main__ - ID text: sst2_1751
03/27/2024 02:38:32 - INFO - __main__ - Mean variance for sst2_1751: 0.04953962564468384
03/27/2024 02:38:32 - INFO - __main__ - Mean std for for sst2_1751: 0.19472815096378326
03/27/2024 02:38:32 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:38:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:38:32 - INFO - __main__ - ID text: sst2_476
03/27/2024 02:39:51 - INFO - __main__ - Mean variance for sst2_476: 0.04740028455853462
03/27/2024 02:39:51 - INFO - __main__ - Mean std for for sst2_476: 0.17468445003032684
03/27/2024 02:39:51 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:39:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:39:51 - INFO - __main__ - ID text: sst2_1774
03/27/2024 02:41:12 - INFO - __main__ - Mean variance for sst2_1774: 0.051077455282211304
03/27/2024 02:41:12 - INFO - __main__ - Mean std for for sst2_1774: 0.18139557540416718
03/27/2024 02:41:12 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:41:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:41:12 - INFO - __main__ - ID text: sst2_206
03/27/2024 02:42:32 - INFO - __main__ - Mean variance for sst2_206: 0.04720873758196831
03/27/2024 02:42:32 - INFO - __main__ - Mean std for for sst2_206: 0.17981590330600739
03/27/2024 02:42:32 - INFO - __main__ - 
######## Language: stsb ######## 

03/27/2024 02:42:32 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:42:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:42:32 - INFO - __main__ - ID text: stsb_778
03/27/2024 02:43:50 - INFO - __main__ - Mean variance for stsb_778: 0.049518223851919174
03/27/2024 02:43:50 - INFO - __main__ - Mean std for for stsb_778: 0.18390381336212158
03/27/2024 02:43:50 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:43:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:43:50 - INFO - __main__ - ID text: stsb_569
03/27/2024 02:45:08 - INFO - __main__ - Mean variance for stsb_569: 0.062018733471632004
03/27/2024 02:45:08 - INFO - __main__ - Mean std for for stsb_569: 0.2140614539384842
03/27/2024 02:45:08 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:45:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:45:08 - INFO - __main__ - ID text: stsb_928
03/27/2024 02:46:25 - INFO - __main__ - Mean variance for stsb_928: 0.03687388822436333
03/27/2024 02:46:25 - INFO - __main__ - Mean std for for stsb_928: 0.14304962754249573
03/27/2024 02:46:25 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:46:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:46:25 - INFO - __main__ - ID text: stsb_1301
03/27/2024 02:47:42 - INFO - __main__ - Mean variance for stsb_1301: 0.047218967229127884
03/27/2024 02:47:42 - INFO - __main__ - Mean std for for stsb_1301: 0.18013828992843628
03/27/2024 02:47:42 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:47:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:47:42 - INFO - __main__ - ID text: stsb_747
03/27/2024 02:49:00 - INFO - __main__ - Mean variance for stsb_747: 0.05956700071692467
03/27/2024 02:49:00 - INFO - __main__ - Mean std for for stsb_747: 0.1907108873128891
03/27/2024 02:49:00 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:49:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:49:00 - INFO - __main__ - ID text: stsb_333
03/27/2024 02:50:19 - INFO - __main__ - Mean variance for stsb_333: 0.05364488065242767
03/27/2024 02:50:19 - INFO - __main__ - Mean std for for stsb_333: 0.1895333081483841
03/27/2024 02:50:19 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:50:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:50:19 - INFO - __main__ - ID text: stsb_758
03/27/2024 02:51:35 - INFO - __main__ - Mean variance for stsb_758: 0.05757879093289375
03/27/2024 02:51:35 - INFO - __main__ - Mean std for for stsb_758: 0.19207628071308136
03/27/2024 02:51:35 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:51:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:51:35 - INFO - __main__ - ID text: stsb_727
03/27/2024 02:52:51 - INFO - __main__ - Mean variance for stsb_727: 0.046260397881269455
03/27/2024 02:52:51 - INFO - __main__ - Mean std for for stsb_727: 0.1816735416650772
03/27/2024 02:52:51 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:52:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:52:51 - INFO - __main__ - ID text: stsb_429
03/27/2024 02:54:08 - INFO - __main__ - Mean variance for stsb_429: 0.052051883190870285
03/27/2024 02:54:08 - INFO - __main__ - Mean std for for stsb_429: 0.19410045444965363
03/27/2024 02:54:08 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:54:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:54:08 - INFO - __main__ - ID text: stsb_1372
03/27/2024 02:55:26 - INFO - __main__ - Mean variance for stsb_1372: 0.0479619987308979
03/27/2024 02:55:26 - INFO - __main__ - Mean std for for stsb_1372: 0.18122513592243195
03/27/2024 02:55:26 - INFO - __main__ - 
######## Language: wnli ######## 

03/27/2024 02:55:27 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:55:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:55:27 - INFO - __main__ - ID text: wnli_68
03/27/2024 02:56:45 - INFO - __main__ - Mean variance for wnli_68: 0.055916573852300644
03/27/2024 02:56:45 - INFO - __main__ - Mean std for for wnli_68: 0.17858834564685822
03/27/2024 02:56:45 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:56:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:56:45 - INFO - __main__ - ID text: wnli_18
03/27/2024 02:58:02 - INFO - __main__ - Mean variance for wnli_18: 0.04477273300290108
03/27/2024 02:58:02 - INFO - __main__ - Mean std for for wnli_18: 0.15570034086704254
03/27/2024 02:58:02 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:58:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:58:02 - INFO - __main__ - ID text: wnli_43
03/27/2024 02:59:18 - INFO - __main__ - Mean variance for wnli_43: 0.055325429886579514
03/27/2024 02:59:18 - INFO - __main__ - Mean std for for wnli_43: 0.18048034608364105
03/27/2024 02:59:18 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 02:59:18 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:59:18 - INFO - __main__ - ID text: wnli_136
03/27/2024 03:00:35 - INFO - __main__ - Mean variance for wnli_136: 0.05570797249674797
03/27/2024 03:00:35 - INFO - __main__ - Mean std for for wnli_136: 0.1829504370689392
03/27/2024 03:00:35 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 03:00:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:00:35 - INFO - __main__ - ID text: wnli_62
03/27/2024 03:01:54 - INFO - __main__ - Mean variance for wnli_62: 0.056767430156469345
03/27/2024 03:01:54 - INFO - __main__ - Mean std for for wnli_62: 0.18443292379379272
03/27/2024 03:01:54 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 03:01:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:01:54 - INFO - __main__ - ID text: wnli_41
03/27/2024 03:03:12 - INFO - __main__ - Mean variance for wnli_41: 0.05422768369317055
03/27/2024 03:03:12 - INFO - __main__ - Mean std for for wnli_41: 0.17885075509548187
03/27/2024 03:03:12 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 03:03:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:03:12 - INFO - __main__ - ID text: wnli_118
03/27/2024 03:04:29 - INFO - __main__ - Mean variance for wnli_118: 0.058347154408693314
03/27/2024 03:04:29 - INFO - __main__ - Mean std for for wnli_118: 0.18977706134319305
03/27/2024 03:04:30 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 03:04:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:04:30 - INFO - __main__ - ID text: wnli_97
03/27/2024 03:05:48 - INFO - __main__ - Mean variance for wnli_97: 0.037968892604112625
03/27/2024 03:05:48 - INFO - __main__ - Mean std for for wnli_97: 0.14356212317943573
03/27/2024 03:05:48 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 03:05:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:05:48 - INFO - __main__ - ID text: wnli_69
03/27/2024 03:07:06 - INFO - __main__ - Mean variance for wnli_69: 0.04832048341631889
03/27/2024 03:07:06 - INFO - __main__ - Mean std for for wnli_69: 0.17668230831623077
03/27/2024 03:07:06 - INFO - __main__ - Applying span masking with "max_span_length = 1" , "cumulative_span_weights = [1.0]"  and "spacing = span"
03/27/2024 03:07:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:07:06 - INFO - __main__ - ID text: wnli_142
03/27/2024 03:08:23 - INFO - __main__ - Mean variance for wnli_142: 0.038309842348098755
03/27/2024 03:08:23 - INFO - __main__ - Mean std for for wnli_142: 0.14795656502246857
03/27/2024 03:08:24 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.15279540419578552, 'amh_1': 0.14958815276622772, 'amh_2': 0.17191433906555176, 'amh_3': 0.13894452154636383, 'amh_4': 0.15470917522907257, 'amh_5': 0.14279191195964813, 'amh_6': 0.1622370034456253, 'amh_7': 0.15399202704429626, 'amh_8': 0.1384493112564087, 'amh_9': 0.16036120057106018}, 'conll_2003_en': {'conll_2003_en_0': 0.1614343822002411, 'conll_2003_en_1': 0.054513830691576004, 'conll_2003_en_2': 0.04353475198149681, 'conll_2003_en_3': 0.03775066137313843, 'conll_2003_en_4': 0.0438830703496933, 'conll_2003_en_5': 0.16279436647891998, 'conll_2003_en_6': 0.16325120627880096, 'conll_2003_en_7': 0.16234605014324188, 'conll_2003_en_8': 0.1744357943534851, 'conll_2003_en_9': 0.04246404394507408}, 'hau': {'hau_0': 0.03356974571943283, 'hau_1': 0.04626769199967384, 'hau_2': 0.17233715951442719, 'hau_3': 0.021790502592921257, 'hau_4': 0.0378568135201931, 'hau_5': 0.0285980012267828, 'hau_6': 0.04434089735150337, 'hau_7': 0.04069918766617775, 'hau_8': 0.030819537118077278, 'hau_9': 0.04125666990876198}, 'ibo': {'ibo_0': 0.04406494274735451, 'ibo_1': 0.04210544005036354, 'ibo_2': 0.04011420160531998, 'ibo_3': 0.04072653874754906, 'ibo_4': 0.04108581319451332, 'ibo_5': 0.03835109993815422, 'ibo_6': 0.04256036877632141, 'ibo_7': 0.042482923716306686, 'ibo_8': 0.046263981610536575, 'ibo_9': 0.03777359798550606}, 'kin': {'kin_0': 0.04594333469867706, 'kin_1': 0.036079537123441696, 'kin_2': 0.048343706876039505, 'kin_3': 0.041226182132959366, 'kin_4': 0.040246669203042984, 'kin_5': 0.03496246412396431, 'kin_6': 0.030332498252391815, 'kin_7': 0.04504077509045601, 'kin_8': 0.0394664891064167, 'kin_9': 0.03602611646056175}, 'lug': {'lug_0': 0.03839042782783508, 'lug_1': 0.04492716118693352, 'lug_2': 0.01987922377884388, 'lug_3': 0.02841898985207081, 'lug_4': 0.04068300873041153, 'lug_5': 0.042459968477487564, 'lug_6': 0.04244634509086609, 'lug_7': 0.04192541539669037, 'lug_8': 0.04824620112776756, 'lug_9': 0.03702991083264351}, 'luo': {'luo_0': 0.029611840844154358, 'luo_1': 0.03707021847367287, 'luo_2': 0.04645232483744621, 'luo_3': 0.02903643436729908, 'luo_4': 0.03941504657268524, 'luo_5': 0.03618239238858223, 'luo_6': 0.03359062969684601, 'luo_7': 0.05031384900212288, 'luo_8': 0.04012151435017586, 'luo_9': 0.05403570830821991}, 'pcm': {'pcm_0': 0.0411776639521122, 'pcm_1': 0.040447309613227844, 'pcm_2': 0.04019279405474663, 'pcm_3': 0.04439438879489899, 'pcm_4': 0.04166872426867485, 'pcm_5': 0.03815886750817299, 'pcm_6': 0.03789563104510307, 'pcm_7': 0.04032566770911217, 'pcm_8': 0.03922165557742119, 'pcm_9': 0.0310660507529974}, 'swa': {'swa_0': 0.041210420429706573, 'swa_1': 0.034605722874403, 'swa_2': 0.04091253504157066, 'swa_3': 0.041215792298316956, 'swa_4': 0.029344948008656502, 'swa_5': 0.026364335790276527, 'swa_6': 0.034196820110082626, 'swa_7': 0.03972800076007843, 'swa_8': 0.03546455129981041, 'swa_9': 0.038049984723329544}, 'wol': {'wol_0': 0.039010073989629745, 'wol_1': 0.03888476639986038, 'wol_2': 0.04340429976582527, 'wol_3': 0.07700693607330322, 'wol_4': 0.04061109200119972, 'wol_5': 0.0403946228325367, 'wol_6': 0.1616741269826889, 'wol_7': 0.031880758702754974, 'wol_8': 0.034144069999456406, 'wol_9': 0.04325588047504425}, 'yor': {'yor_0': 0.1391533613204956, 'yor_1': 0.13243041932582855, 'yor_2': 0.036450888961553574, 'yor_3': 0.03317361697554588, 'yor_4': 0.13801836967468262, 'yor_5': 0.10386013239622116, 'yor_6': 0.04066789150238037, 'yor_7': 0.13518227636814117, 'yor_8': 0.04044640064239502, 'yor_9': 0.14152057468891144}, 'zh': {'zh_0': 0.09360092878341675, 'zh_1': 0.11936742067337036, 'zh_2': 0.13459086418151855, 'zh_3': 0.1620745211839676, 'zh_4': 0.0898737907409668, 'zh_5': 0.16228948533535004, 'zh_6': 0.1315334290266037, 'zh_7': 0.13040734827518463, 'zh_8': 0.14052323997020721, 'zh_9': 0.14731454849243164}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.05175149440765381, 'arabic--3340323169760881569-0': 0.04428001120686531, 'arabic-4544770624843559444-1': 0.050702277570962906, 'arabic-891952409566422966-0': 0.04914596676826477, 'arabic-3659291834714572527-0': 0.12203437089920044, 'arabic-9215226117011890166-0': 0.04213079437613487, 'arabic-6300896128538259469-0': 0.054814767092466354, 'arabic-2382507508588518905-0': 0.047568123787641525, 'arabic-1871632801094859741-1': 0.045186132192611694, 'arabic--7365809756232083807-0': 0.04698643088340759}, 'russian': {'russian-3457655197371763238-61': 0.02543056756258011, 'russian--1914807805318993335-49': 0.04609910026192665, 'russian--3307989180606173904-1': 0.025566844269633293, 'russian--2219512001175315660-0': 0.027533121407032013, 'russian--7076080992904718941-0': 0.029112443327903748, 'russian--6565862953558739013-1': 0.027114996686577797, 'russian--5098374684590548031-42': 0.05013762786984444, 'russian-3573734219967447693-1': 0.02862064354121685, 'russian--4521001374120505750-6': 0.045188117772340775, 'russian--1308382244018658424-9': 0.02847028709948063}, 'bengali': {'bengali--1199493965132146131-3': 0.08890596777200699, 'bengali-1807801556888134437-2': 0.0874691978096962, 'bengali-2113189855114052041-2': 0.09193005412817001, 'bengali--2527914488250041207-0': 0.09815675765275955, 'bengali--8260793280894408063-14': 0.09265189617872238, 'bengali-8313009204852557186-4': 0.08790022134780884, 'bengali--415964033364840061-0': 0.08461743593215942, 'bengali--4696865548928858824-5': 0.0828520655632019, 'bengali-6505224142472931712-1': 0.0844247117638588, 'bengali-599666913917674019-13': 0.13085289299488068}, 'telugu': {'telugu--3977923017846260053-0': 0.03825412318110466, 'telugu-2254198842560317781-0': 0.04021357372403145, 'telugu-5435080895440121384-0': 0.033220626413822174, 'telugu--1182505954974481191-2': 0.04804617166519165, 'telugu-119276511844068401-0': 0.03474467992782593, 'telugu--4111208545071789922-0': 0.03359273448586464, 'telugu--5922002196428211484-132': 0.10333222150802612, 'telugu--1817004721681155192-3': 0.037347812205553055, 'telugu-1602214480303968359-1': 0.038900818675756454, 'telugu--6495674712575945374-0': 0.037114277482032776}, 'finnish': {'finnish-6987763079741579998-0': 0.044387876987457275, 'finnish--8516625414052383903-0': 0.04408171400427818, 'finnish-4168898766124519517-0': 0.06341514736413956, 'finnish-783166898848672321-4': 0.045553695410490036, 'finnish-2208556840820233322-0': 0.04157569631934166, 'finnish--1981034637152391615-58': 0.018183434382081032, 'finnish-8689148941295949475-9': 0.015920696780085564, 'finnish-6900867945323517614-2': 0.06155497953295708, 'finnish-8023130170017405987-1': 0.025445081293582916, 'finnish-5001457972111781248-0': 0.01715211756527424}, 'swahili': {'swahili-7146838206539641546-10': 0.042902957648038864, 'swahili-7655634199707176439-0': 0.018563615158200264, 'swahili--4427180714267750534-1': 0.038614679127931595, 'swahili-4141779435061573138-0': 0.01790640503168106, 'swahili--5424518593960879661-0': 0.01676749996840954, 'swahili-4281845253405461584-0': 0.041873034089803696, 'swahili-4899164839984299762-2': 0.038623545318841934, 'swahili-1288750786498500530-0': 0.045457225292921066, 'swahili--2671134792844015228-3': 0.02360142208635807, 'swahili-4873225622490039485-2': 0.020080292597413063}, 'korean': {'korean--2869472392602314906-0': 0.09724994748830795, 'korean-4375199563921600155-0': 0.036479830741882324, 'korean--1715118423211755607-13': 0.03187447041273117, 'korean--8028977936696142934-9': 0.038772959262132645, 'korean-2807245034690443837-5': 0.11493935436010361, 'korean-3862451817164408576-0': 0.04977928102016449, 'korean-148115504649351135-0': 0.04475316405296326, 'korean--2885837157239647036-2': 0.10012008994817734, 'korean--1743220297777040002-22': 0.12197021394968033, 'korean-3268522368206106332-0': 0.1641021966934204}, 'indonesian': {'indonesian-9141868818310916091-0': 0.018375743180513382, 'indonesian-4609394337632433932-1': 0.05748741328716278, 'indonesian-2763468883290577923-0': 0.01671089045703411, 'indonesian-5633590583948933406-0': 0.03107626736164093, 'indonesian--5961409780035435015-0': 0.01717599481344223, 'indonesian-6274547934693326697-0': 0.02174634486436844, 'indonesian--2516321763567853082-0': 0.015576780773699284, 'indonesian-2048796427556239759-4': 0.04256998002529144, 'indonesian-6246592469157278547-2': 0.025861958041787148, 'indonesian--3724318458930736973-1': 0.015406272374093533}, 'english': {'english-2852412434797041176-6': 0.06644827127456665, 'english--1463732605740571606-0': 0.015483450144529343, 'english-5441411281255470421-0': 0.017548806965351105, 'english-7294054492486093447-1': 0.017135335132479668, 'english-8820750127045023244-0': 0.044325005263090134, 'english--506693546683012611-2': 0.05485653877258301, 'english-745411798111651115-0': 0.015517578460276127, 'english-7740772185887912651-0': 0.01836577244102955, 'english-383873188776267137-19': 0.019035112112760544, 'english--8277537578703156284-0': 0.0176344346255064}}, 'glue': {'cola': {'cola_228': 0.04380058869719505, 'cola_51': 0.051062922924757004, 'cola_563': 0.1730603128671646, 'cola_501': 0.05255122855305672, 'cola_457': 0.05372856557369232, 'cola_285': 0.061417970806360245, 'cola_209': 0.042362455278635025, 'cola_178': 0.06577612459659576, 'cola_864': 0.07184396684169769, 'cola_65': 0.05232799053192139}, 'mnli': {'mnli_488': 0.05644706264138222, 'mnli_1535': 0.054769501090049744, 'mnli_3582': 0.04834991693496704, 'mnli_3811': 0.05039824917912483, 'mnli_8279': 0.050025422126054764, 'mnli_434': 0.034884944558143616, 'mnli_9195': 0.05105004832148552, 'mnli_3257': 0.05362071096897125, 'mnli_8928': 0.050356414169073105, 'mnli_6873': 0.05507872998714447}, 'mrpc': {'mrpc_451': 0.05813715234398842, 'mrpc_919': 0.053119879215955734, 'mrpc_1206': 0.055164407938718796, 'mrpc_569': 0.0560772530734539, 'mrpc_1657': 0.041178975254297256, 'mrpc_13': 0.05525106191635132, 'mrpc_1554': 0.041560135781764984, 'mrpc_1650': 0.1270616054534912, 'mrpc_326': 0.05641454458236694, 'mrpc_1429': 0.05298808217048645}, 'qnli': {'qnli_3462': 0.053512588143348694, 'qnli_2787': 0.04501301422715187, 'qnli_2276': 0.048922326415777206, 'qnli_1273': 0.04948878288269043, 'qnli_1763': 0.05453452467918396, 'qnli_2757': 0.054427046328783035, 'qnli_837': 0.06258132308721542, 'qnli_759': 0.016850052401423454, 'qnli_3112': 0.06277915835380554, 'qnli_792': 0.053133830428123474}, 'qqp': {'qqp_188208': 0.05368620157241821, 'qqp_180331': 0.05128144100308418, 'qqp_316526': 0.06327507644891739, 'qqp_138685': 0.04001699388027191, 'qqp_22780': 0.04811479523777962, 'qqp_382589': 0.05786408856511116, 'qqp_240870': 0.05348380282521248, 'qqp_281137': 0.05187487229704857, 'qqp_65444': 0.044394832104444504, 'qqp_198461': 0.046213675290346146}, 'rte': {'rte_322': 0.05216844007372856, 'rte_2261': 0.04520036280155182, 'rte_1200': 0.03678112104535103, 'rte_2574': 0.017442667856812477, 'rte_2533': 0.016404708847403526, 'rte_1481': 0.04898366704583168, 'rte_2364': 0.04917421564459801, 'rte_787': 0.05528518185019493, 'rte_2885': 0.01841639168560505, 'rte_284': 0.051821619272232056}, 'sst2': {'sst2_93': 0.04509250819683075, 'sst2_1354': 0.05941760540008545, 'sst2_466': 0.048741843551397324, 'sst2_1583': 0.05508105084300041, 'sst2_592': 0.058163974434137344, 'sst2_163': 0.07283132523298264, 'sst2_1751': 0.04953962564468384, 'sst2_476': 0.04740028455853462, 'sst2_1774': 0.051077455282211304, 'sst2_206': 0.04720873758196831}, 'stsb': {'stsb_778': 0.049518223851919174, 'stsb_569': 0.062018733471632004, 'stsb_928': 0.03687388822436333, 'stsb_1301': 0.047218967229127884, 'stsb_747': 0.05956700071692467, 'stsb_333': 0.05364488065242767, 'stsb_758': 0.05757879093289375, 'stsb_727': 0.046260397881269455, 'stsb_429': 0.052051883190870285, 'stsb_1372': 0.0479619987308979}, 'wnli': {'wnli_68': 0.055916573852300644, 'wnli_18': 0.04477273300290108, 'wnli_43': 0.055325429886579514, 'wnli_136': 0.05570797249674797, 'wnli_62': 0.056767430156469345, 'wnli_41': 0.05422768369317055, 'wnli_118': 0.058347154408693314, 'wnli_97': 0.037968892604112625, 'wnli_69': 0.04832048341631889, 'wnli_142': 0.038309842348098755}}}
03/27/2024 03:08:24 - INFO - __main__ - Saving data in SD_per_task_span_1.json
03/27/2024 03:08:24 - INFO - __main__ - Saving data in var_per_task_span_1.json
03/27/2024 03:08:24 - INFO - __main__ - 
UNCERTAINTY (SD)

03/27/2024 03:08:24 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.15257830917835236, 'conll_2003_en': 0.10464081913232803, 'hau': 0.04975362494587898, 'ibo': 0.041552890092134476, 'kin': 0.03976678103208542, 'lug': 0.03844066336750984, 'luo': 0.0395829938352108, 'pcm': 0.0394548736512661, 'swa': 0.036109309643507004, 'wol': 0.05502666160464287, 'yor': 0.09409038722515106, 'zh': 0.1311575472354889}, 'tydiqa': {'arabic': 0.055460043251514435, 'russian': 0.0333273783326149, 'bengali': 0.09297612309455872, 'telugu': 0.0444767065346241, 'finnish': 0.03772704303264618, 'swahili': 0.030439067631959915, 'korean': 0.08000415563583374, 'indonesian': 0.02619876340031624, 'english': 0.02863503061234951}, 'glue': {'cola': 0.06679321825504303, 'mnli': 0.050498105585575104, 'mrpc': 0.05969531089067459, 'qnli': 0.050124265253543854, 'qqp': 0.051020581275224686, 'rte': 0.03916784003376961, 'sst2': 0.05345544219017029, 'stsb': 0.05126948282122612, 'wnli': 0.0505664236843586}}

###############################################################################
Hábrók Cluster
Job 7761403 for user s3919609
Finished at: Wed Mar 27 03:08:24 CET 2024

Job details:
============

Job ID              : 7761403
Name                : std_monte_carlo_span_1
User                : s3919609
Partition           : regularmedium
Nodes               : node95
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-26T20:43:50
Start               : 2024-03-26T20:43:52
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 06:24:33
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 20G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
