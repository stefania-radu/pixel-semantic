The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/26/2024 21:12:14 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/26/2024 21:12:14 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:12:14 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:12:14 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/26/2024 21:12:16 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/26/2024 21:12:16 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/26/2024 21:12:16 - INFO - __main__ - Running MONTE CARLO experiment: span
03/26/2024 21:12:16 - INFO - __main__ - Loading data from loss_per_task_span_6.json
03/26/2024 21:12:16 - INFO - __main__ - 
LOSS

03/26/2024 21:12:16 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8507745862007141, 'conll_2003_en': 0.7478290796279907, 'hau': 0.6653851270675659, 'ibo': 0.702365517616272, 'kin': 0.6832608580589294, 'lug': 0.6553265452384949, 'luo': 0.6689382791519165, 'pcm': 0.7111262679100037, 'swa': 0.6858783960342407, 'wol': 0.7020034193992615, 'yor': 0.7236864566802979, 'zh': 0.8645378351211548}, 'tydiqa': {'arabic': 0.8378459215164185, 'russian': 0.668391227722168, 'bengali': 0.6905763149261475, 'telugu': 0.7706618309020996, 'finnish': 0.6156558394432068, 'swahili': 0.6185370683670044, 'korean': 0.870985209941864, 'indonesian': 0.5896432995796204, 'english': 0.3230023682117462}, 'glue': {'cola': 0.6131375432014465, 'mnli': 0.436643123626709, 'mrpc': 0.3429515063762665, 'qnli': 0.44831418991088867, 'qqp': 0.5414034128189087, 'rte': 0.4955548644065857, 'sst2': 0.5986437201499939, 'stsb': 0.46997207403182983, 'wnli': 0.3655056357383728}}
03/26/2024 21:12:16 - INFO - __main__ - Lowest losses:
03/26/2024 21:12:16 - INFO - __main__ - ID: wnli_41, Loss: 0.12585137784481049
03/26/2024 21:12:16 - INFO - __main__ - ID: mrpc_1657, Loss: 0.13974635303020477
03/26/2024 21:12:16 - INFO - __main__ - ID: english--506693546683012611-2, Loss: 0.14897136390209198
03/26/2024 21:12:16 - INFO - __main__ - ID: wnli_136, Loss: 0.15508368611335754
03/26/2024 21:12:16 - INFO - __main__ - ID: english-383873188776267137-19, Loss: 0.15876051783561707
03/26/2024 21:12:16 - INFO - __main__ - Highest losses:
03/26/2024 21:12:16 - INFO - __main__ - ID: korean--1743220297777040002-22, Loss: 0.8946073651313782
03/26/2024 21:12:16 - INFO - __main__ - ID: korean-3268522368206106332-0, Loss: 0.8958002328872681
03/26/2024 21:12:16 - INFO - __main__ - ID: korean-2807245034690443837-5, Loss: 0.8982949256896973
03/26/2024 21:12:16 - INFO - __main__ - ID: zh_4, Loss: 0.9065679311752319
03/26/2024 21:12:16 - INFO - __main__ - ID: conll_2003_en_6, Loss: 1.0858252048492432
03/26/2024 21:12:16 - INFO - __main__ - Monte Carlo samples: 100
03/26/2024 21:12:16 - INFO - __main__ - Training mode: True
03/26/2024 21:12:16 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/26/2024 21:12:16 - INFO - __main__ - 
######## Language: amh ######## 

03/26/2024 21:12:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:12:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:12:16 - INFO - __main__ - ID text: amh_0
03/26/2024 21:13:28 - INFO - __main__ - Mean variance for amh_0: 0.16139629483222961
03/26/2024 21:13:28 - INFO - __main__ - Mean std for for amh_0: 0.3503417670726776
03/26/2024 21:13:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:13:28 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:13:28 - INFO - __main__ - ID text: amh_1
03/26/2024 21:14:39 - INFO - __main__ - Mean variance for amh_1: 0.1408184915781021
03/26/2024 21:14:39 - INFO - __main__ - Mean std for for amh_1: 0.328755646944046
03/26/2024 21:14:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:14:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:14:39 - INFO - __main__ - ID text: amh_2
03/26/2024 21:15:49 - INFO - __main__ - Mean variance for amh_2: 0.15041078627109528
03/26/2024 21:15:49 - INFO - __main__ - Mean std for for amh_2: 0.3379559814929962
03/26/2024 21:15:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:15:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:15:49 - INFO - __main__ - ID text: amh_3
03/26/2024 21:16:59 - INFO - __main__ - Mean variance for amh_3: 0.15019108355045319
03/26/2024 21:16:59 - INFO - __main__ - Mean std for for amh_3: 0.3375544250011444
03/26/2024 21:16:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:16:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:16:59 - INFO - __main__ - ID text: amh_4
03/26/2024 21:18:11 - INFO - __main__ - Mean variance for amh_4: 0.15010981261730194
03/26/2024 21:18:11 - INFO - __main__ - Mean std for for amh_4: 0.3384578227996826
03/26/2024 21:18:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:18:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:18:11 - INFO - __main__ - ID text: amh_5
03/26/2024 21:19:21 - INFO - __main__ - Mean variance for amh_5: 0.15885953605175018
03/26/2024 21:19:21 - INFO - __main__ - Mean std for for amh_5: 0.35181567072868347
03/26/2024 21:19:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:19:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:19:21 - INFO - __main__ - ID text: amh_6
03/26/2024 21:20:31 - INFO - __main__ - Mean variance for amh_6: 0.16367082297801971
03/26/2024 21:20:31 - INFO - __main__ - Mean std for for amh_6: 0.35552695393562317
03/26/2024 21:20:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:20:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:20:31 - INFO - __main__ - ID text: amh_7
03/26/2024 21:21:41 - INFO - __main__ - Mean variance for amh_7: 0.14181378483772278
03/26/2024 21:21:41 - INFO - __main__ - Mean std for for amh_7: 0.3283960819244385
03/26/2024 21:21:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:21:41 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:21:41 - INFO - __main__ - ID text: amh_8
03/26/2024 21:22:51 - INFO - __main__ - Mean variance for amh_8: 0.15837259590625763
03/26/2024 21:22:51 - INFO - __main__ - Mean std for for amh_8: 0.35007211565971375
03/26/2024 21:22:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:22:51 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:22:51 - INFO - __main__ - ID text: amh_9
03/26/2024 21:24:01 - INFO - __main__ - Mean variance for amh_9: 0.16855917870998383
03/26/2024 21:24:01 - INFO - __main__ - Mean std for for amh_9: 0.3578801453113556
03/26/2024 21:24:01 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/26/2024 21:24:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:24:01 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:24:01 - INFO - __main__ - ID text: conll_2003_en_0
03/26/2024 21:25:11 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.15696699917316437
03/26/2024 21:25:11 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.3530045449733734
03/26/2024 21:25:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:25:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:25:11 - INFO - __main__ - ID text: conll_2003_en_1
03/26/2024 21:26:22 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.04859061539173126
03/26/2024 21:26:22 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.19661693274974823
03/26/2024 21:26:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:26:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:26:22 - INFO - __main__ - ID text: conll_2003_en_2
03/26/2024 21:27:32 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.044047627598047256
03/26/2024 21:27:32 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.1648177057504654
03/26/2024 21:27:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:27:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:27:32 - INFO - __main__ - ID text: conll_2003_en_3
03/26/2024 21:28:42 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.04357804358005524
03/26/2024 21:28:42 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.17808032035827637
03/26/2024 21:28:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:28:42 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:28:42 - INFO - __main__ - ID text: conll_2003_en_4
03/26/2024 21:29:52 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.04175133630633354
03/26/2024 21:29:52 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.18327049911022186
03/26/2024 21:29:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:29:52 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:29:52 - INFO - __main__ - ID text: conll_2003_en_5
03/26/2024 21:31:02 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.14656974375247955
03/26/2024 21:31:02 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.3426629602909088
03/26/2024 21:31:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:31:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:31:02 - INFO - __main__ - ID text: conll_2003_en_6
03/26/2024 21:32:14 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.031555622816085815
03/26/2024 21:32:14 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.15832528471946716
03/26/2024 21:32:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:32:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:32:15 - INFO - __main__ - ID text: conll_2003_en_7
03/26/2024 21:33:25 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.17197471857070923
03/26/2024 21:33:25 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.3750084936618805
03/26/2024 21:33:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:33:25 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:33:25 - INFO - __main__ - ID text: conll_2003_en_8
03/26/2024 21:34:35 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.16454379260540009
03/26/2024 21:34:35 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.36524292826652527
03/26/2024 21:34:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:34:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:34:35 - INFO - __main__ - ID text: conll_2003_en_9
03/26/2024 21:35:45 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.047250669449567795
03/26/2024 21:35:45 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.17992641031742096
03/26/2024 21:35:45 - INFO - __main__ - 
######## Language: hau ######## 

03/26/2024 21:35:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:35:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:35:45 - INFO - __main__ - ID text: hau_0
03/26/2024 21:36:55 - INFO - __main__ - Mean variance for hau_0: 0.03787032514810562
03/26/2024 21:36:55 - INFO - __main__ - Mean std for for hau_0: 0.14918501675128937
03/26/2024 21:36:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:36:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:36:55 - INFO - __main__ - ID text: hau_1
03/26/2024 21:38:05 - INFO - __main__ - Mean variance for hau_1: 0.03197423368692398
03/26/2024 21:38:05 - INFO - __main__ - Mean std for for hau_1: 0.15558619797229767
03/26/2024 21:38:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:38:05 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:38:05 - INFO - __main__ - ID text: hau_2
03/26/2024 21:39:14 - INFO - __main__ - Mean variance for hau_2: 0.15108425915241241
03/26/2024 21:39:14 - INFO - __main__ - Mean std for for hau_2: 0.34964632987976074
03/26/2024 21:39:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:39:14 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:39:14 - INFO - __main__ - ID text: hau_3
03/26/2024 21:40:24 - INFO - __main__ - Mean variance for hau_3: 0.025674020871520042
03/26/2024 21:40:24 - INFO - __main__ - Mean std for for hau_3: 0.12518927454948425
03/26/2024 21:40:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:40:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:40:24 - INFO - __main__ - ID text: hau_4
03/26/2024 21:41:34 - INFO - __main__ - Mean variance for hau_4: 0.042130809277296066
03/26/2024 21:41:34 - INFO - __main__ - Mean std for for hau_4: 0.1620156168937683
03/26/2024 21:41:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:41:34 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:41:34 - INFO - __main__ - ID text: hau_5
03/26/2024 21:42:44 - INFO - __main__ - Mean variance for hau_5: 0.035824209451675415
03/26/2024 21:42:44 - INFO - __main__ - Mean std for for hau_5: 0.14734183251857758
03/26/2024 21:42:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:42:44 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:42:44 - INFO - __main__ - ID text: hau_6
03/26/2024 21:43:54 - INFO - __main__ - Mean variance for hau_6: 0.037088919430971146
03/26/2024 21:43:54 - INFO - __main__ - Mean std for for hau_6: 0.1532435268163681
03/26/2024 21:43:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:43:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:43:54 - INFO - __main__ - ID text: hau_7
03/26/2024 21:45:04 - INFO - __main__ - Mean variance for hau_7: 0.04460398480296135
03/26/2024 21:45:04 - INFO - __main__ - Mean std for for hau_7: 0.16559581458568573
03/26/2024 21:45:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:45:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:45:04 - INFO - __main__ - ID text: hau_8
03/26/2024 21:46:14 - INFO - __main__ - Mean variance for hau_8: 0.03699831664562225
03/26/2024 21:46:14 - INFO - __main__ - Mean std for for hau_8: 0.14953084290027618
03/26/2024 21:46:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:46:14 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:46:14 - INFO - __main__ - ID text: hau_9
03/26/2024 21:47:24 - INFO - __main__ - Mean variance for hau_9: 0.042806226760149
03/26/2024 21:47:24 - INFO - __main__ - Mean std for for hau_9: 0.16574741899967194
03/26/2024 21:47:24 - INFO - __main__ - 
######## Language: ibo ######## 

03/26/2024 21:47:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:47:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:47:24 - INFO - __main__ - ID text: ibo_0
03/26/2024 21:48:34 - INFO - __main__ - Mean variance for ibo_0: 0.04299941658973694
03/26/2024 21:48:34 - INFO - __main__ - Mean std for for ibo_0: 0.16796530783176422
03/26/2024 21:48:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:48:34 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:48:34 - INFO - __main__ - ID text: ibo_1
03/26/2024 21:49:44 - INFO - __main__ - Mean variance for ibo_1: 0.039215337485075
03/26/2024 21:49:44 - INFO - __main__ - Mean std for for ibo_1: 0.15715263783931732
03/26/2024 21:49:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:49:44 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:49:44 - INFO - __main__ - ID text: ibo_2
03/26/2024 21:50:54 - INFO - __main__ - Mean variance for ibo_2: 0.04604488983750343
03/26/2024 21:50:54 - INFO - __main__ - Mean std for for ibo_2: 0.17129290103912354
03/26/2024 21:50:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:50:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:50:54 - INFO - __main__ - ID text: ibo_3
03/26/2024 21:52:04 - INFO - __main__ - Mean variance for ibo_3: 0.04972641170024872
03/26/2024 21:52:04 - INFO - __main__ - Mean std for for ibo_3: 0.19840282201766968
03/26/2024 21:52:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:52:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:52:04 - INFO - __main__ - ID text: ibo_4
03/26/2024 21:53:15 - INFO - __main__ - Mean variance for ibo_4: 0.048721086233854294
03/26/2024 21:53:15 - INFO - __main__ - Mean std for for ibo_4: 0.17991715669631958
03/26/2024 21:53:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:53:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:53:15 - INFO - __main__ - ID text: ibo_5
03/26/2024 21:54:25 - INFO - __main__ - Mean variance for ibo_5: 0.038644153624773026
03/26/2024 21:54:25 - INFO - __main__ - Mean std for for ibo_5: 0.16449759900569916
03/26/2024 21:54:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:54:25 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:54:25 - INFO - __main__ - ID text: ibo_6
03/26/2024 21:55:35 - INFO - __main__ - Mean variance for ibo_6: 0.04205477237701416
03/26/2024 21:55:35 - INFO - __main__ - Mean std for for ibo_6: 0.1655944138765335
03/26/2024 21:55:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:55:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:55:35 - INFO - __main__ - ID text: ibo_7
03/26/2024 21:56:45 - INFO - __main__ - Mean variance for ibo_7: 0.04418989643454552
03/26/2024 21:56:45 - INFO - __main__ - Mean std for for ibo_7: 0.16205914318561554
03/26/2024 21:56:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:56:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:56:45 - INFO - __main__ - ID text: ibo_8
03/26/2024 21:57:55 - INFO - __main__ - Mean variance for ibo_8: 0.040317606180906296
03/26/2024 21:57:55 - INFO - __main__ - Mean std for for ibo_8: 0.17423297464847565
03/26/2024 21:57:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:57:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:57:55 - INFO - __main__ - ID text: ibo_9
03/26/2024 21:59:05 - INFO - __main__ - Mean variance for ibo_9: 0.03896227106451988
03/26/2024 21:59:05 - INFO - __main__ - Mean std for for ibo_9: 0.15685097873210907
03/26/2024 21:59:05 - INFO - __main__ - 
######## Language: kin ######## 

03/26/2024 21:59:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:59:05 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:59:05 - INFO - __main__ - ID text: kin_0
03/26/2024 22:00:15 - INFO - __main__ - Mean variance for kin_0: 0.04767166078090668
03/26/2024 22:00:15 - INFO - __main__ - Mean std for for kin_0: 0.17492079734802246
03/26/2024 22:00:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:00:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:00:15 - INFO - __main__ - ID text: kin_1
03/26/2024 22:01:25 - INFO - __main__ - Mean variance for kin_1: 0.045212406665086746
03/26/2024 22:01:25 - INFO - __main__ - Mean std for for kin_1: 0.17345602810382843
03/26/2024 22:01:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:01:25 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:01:25 - INFO - __main__ - ID text: kin_2
03/26/2024 22:02:35 - INFO - __main__ - Mean variance for kin_2: 0.03843085467815399
03/26/2024 22:02:35 - INFO - __main__ - Mean std for for kin_2: 0.17684440314769745
03/26/2024 22:02:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:02:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:02:35 - INFO - __main__ - ID text: kin_3
03/26/2024 22:03:45 - INFO - __main__ - Mean variance for kin_3: 0.040596362203359604
03/26/2024 22:03:45 - INFO - __main__ - Mean std for for kin_3: 0.15985248982906342
03/26/2024 22:03:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:03:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:03:45 - INFO - __main__ - ID text: kin_4
03/26/2024 22:04:55 - INFO - __main__ - Mean variance for kin_4: 0.04300710931420326
03/26/2024 22:04:55 - INFO - __main__ - Mean std for for kin_4: 0.1626708060503006
03/26/2024 22:04:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:04:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:04:55 - INFO - __main__ - ID text: kin_5
03/26/2024 22:06:06 - INFO - __main__ - Mean variance for kin_5: 0.04512304067611694
03/26/2024 22:06:06 - INFO - __main__ - Mean std for for kin_5: 0.18398696184158325
03/26/2024 22:06:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:06:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:06:06 - INFO - __main__ - ID text: kin_6
03/26/2024 22:07:17 - INFO - __main__ - Mean variance for kin_6: 0.03548605740070343
03/26/2024 22:07:17 - INFO - __main__ - Mean std for for kin_6: 0.1478458046913147
03/26/2024 22:07:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:07:17 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:07:17 - INFO - __main__ - ID text: kin_7
03/26/2024 22:08:27 - INFO - __main__ - Mean variance for kin_7: 0.045636966824531555
03/26/2024 22:08:27 - INFO - __main__ - Mean std for for kin_7: 0.1751575917005539
03/26/2024 22:08:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:08:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:08:27 - INFO - __main__ - ID text: kin_8
03/26/2024 22:09:37 - INFO - __main__ - Mean variance for kin_8: 0.035706259310245514
03/26/2024 22:09:37 - INFO - __main__ - Mean std for for kin_8: 0.16182442009449005
03/26/2024 22:09:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:09:37 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:09:37 - INFO - __main__ - ID text: kin_9
03/26/2024 22:10:48 - INFO - __main__ - Mean variance for kin_9: 0.03785325959324837
03/26/2024 22:10:48 - INFO - __main__ - Mean std for for kin_9: 0.16386903822422028
03/26/2024 22:10:48 - INFO - __main__ - 
######## Language: lug ######## 

03/26/2024 22:10:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:10:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:10:48 - INFO - __main__ - ID text: lug_0
03/26/2024 22:11:58 - INFO - __main__ - Mean variance for lug_0: 0.04012266546487808
03/26/2024 22:11:58 - INFO - __main__ - Mean std for for lug_0: 0.15565232932567596
03/26/2024 22:11:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:11:58 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:11:58 - INFO - __main__ - ID text: lug_1
03/26/2024 22:13:08 - INFO - __main__ - Mean variance for lug_1: 0.048471733927726746
03/26/2024 22:13:08 - INFO - __main__ - Mean std for for lug_1: 0.17344538867473602
03/26/2024 22:13:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:13:08 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:13:08 - INFO - __main__ - ID text: lug_2
03/26/2024 22:14:19 - INFO - __main__ - Mean variance for lug_2: 0.0245188120752573
03/26/2024 22:14:19 - INFO - __main__ - Mean std for for lug_2: 0.12238926440477371
03/26/2024 22:14:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:14:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:14:19 - INFO - __main__ - ID text: lug_3
03/26/2024 22:15:29 - INFO - __main__ - Mean variance for lug_3: 0.03158621862530708
03/26/2024 22:15:29 - INFO - __main__ - Mean std for for lug_3: 0.14069990813732147
03/26/2024 22:15:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:15:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:15:29 - INFO - __main__ - ID text: lug_4
03/26/2024 22:16:39 - INFO - __main__ - Mean variance for lug_4: 0.04600338637828827
03/26/2024 22:16:39 - INFO - __main__ - Mean std for for lug_4: 0.17486052215099335
03/26/2024 22:16:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:16:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:16:39 - INFO - __main__ - ID text: lug_5
03/26/2024 22:17:50 - INFO - __main__ - Mean variance for lug_5: 0.0447043813765049
03/26/2024 22:17:50 - INFO - __main__ - Mean std for for lug_5: 0.1635885089635849
03/26/2024 22:17:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:17:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:17:50 - INFO - __main__ - ID text: lug_6
03/26/2024 22:19:00 - INFO - __main__ - Mean variance for lug_6: 0.0429597906768322
03/26/2024 22:19:00 - INFO - __main__ - Mean std for for lug_6: 0.16121169924736023
03/26/2024 22:19:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:19:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:19:00 - INFO - __main__ - ID text: lug_7
03/26/2024 22:20:11 - INFO - __main__ - Mean variance for lug_7: 0.047373607754707336
03/26/2024 22:20:11 - INFO - __main__ - Mean std for for lug_7: 0.17480923235416412
03/26/2024 22:20:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:20:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:20:11 - INFO - __main__ - ID text: lug_8
03/26/2024 22:21:21 - INFO - __main__ - Mean variance for lug_8: 0.04500859975814819
03/26/2024 22:21:21 - INFO - __main__ - Mean std for for lug_8: 0.16946889460086823
03/26/2024 22:21:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:21:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:21:21 - INFO - __main__ - ID text: lug_9
03/26/2024 22:22:32 - INFO - __main__ - Mean variance for lug_9: 0.04453616216778755
03/26/2024 22:22:32 - INFO - __main__ - Mean std for for lug_9: 0.16923414170742035
03/26/2024 22:22:32 - INFO - __main__ - 
######## Language: luo ######## 

03/26/2024 22:22:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:22:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:22:32 - INFO - __main__ - ID text: luo_0
03/26/2024 22:23:42 - INFO - __main__ - Mean variance for luo_0: 0.0312516875565052
03/26/2024 22:23:42 - INFO - __main__ - Mean std for for luo_0: 0.13691061735153198
03/26/2024 22:23:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:23:42 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:23:42 - INFO - __main__ - ID text: luo_1
03/26/2024 22:24:53 - INFO - __main__ - Mean variance for luo_1: 0.036339279264211655
03/26/2024 22:24:53 - INFO - __main__ - Mean std for for luo_1: 0.16364619135856628
03/26/2024 22:24:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:24:53 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:24:53 - INFO - __main__ - ID text: luo_2
03/26/2024 22:26:03 - INFO - __main__ - Mean variance for luo_2: 0.04347120225429535
03/26/2024 22:26:03 - INFO - __main__ - Mean std for for luo_2: 0.16454215347766876
03/26/2024 22:26:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:26:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:26:03 - INFO - __main__ - ID text: luo_3
03/26/2024 22:27:14 - INFO - __main__ - Mean variance for luo_3: 0.03140415623784065
03/26/2024 22:27:14 - INFO - __main__ - Mean std for for luo_3: 0.1395443230867386
03/26/2024 22:27:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:27:14 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:27:14 - INFO - __main__ - ID text: luo_4
03/26/2024 22:28:24 - INFO - __main__ - Mean variance for luo_4: 0.04356611892580986
03/26/2024 22:28:24 - INFO - __main__ - Mean std for for luo_4: 0.17456762492656708
03/26/2024 22:28:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:28:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:28:24 - INFO - __main__ - ID text: luo_5
03/26/2024 22:29:35 - INFO - __main__ - Mean variance for luo_5: 0.038931820541620255
03/26/2024 22:29:35 - INFO - __main__ - Mean std for for luo_5: 0.16291594505310059
03/26/2024 22:29:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:29:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:29:35 - INFO - __main__ - ID text: luo_6
03/26/2024 22:30:45 - INFO - __main__ - Mean variance for luo_6: 0.040099721401929855
03/26/2024 22:30:45 - INFO - __main__ - Mean std for for luo_6: 0.1570391207933426
03/26/2024 22:30:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:30:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:30:45 - INFO - __main__ - ID text: luo_7
03/26/2024 22:31:56 - INFO - __main__ - Mean variance for luo_7: 0.053094133734703064
03/26/2024 22:31:56 - INFO - __main__ - Mean std for for luo_7: 0.19811184704303741
03/26/2024 22:31:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:31:56 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:31:56 - INFO - __main__ - ID text: luo_8
03/26/2024 22:33:06 - INFO - __main__ - Mean variance for luo_8: 0.046322669833898544
03/26/2024 22:33:06 - INFO - __main__ - Mean std for for luo_8: 0.17377637326717377
03/26/2024 22:33:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:33:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:33:06 - INFO - __main__ - ID text: luo_9
03/26/2024 22:34:17 - INFO - __main__ - Mean variance for luo_9: 0.046280983835458755
03/26/2024 22:34:17 - INFO - __main__ - Mean std for for luo_9: 0.19244420528411865
03/26/2024 22:34:17 - INFO - __main__ - 
######## Language: pcm ######## 

03/26/2024 22:34:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:34:17 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:34:17 - INFO - __main__ - ID text: pcm_0
03/26/2024 22:35:27 - INFO - __main__ - Mean variance for pcm_0: 0.03836404159665108
03/26/2024 22:35:27 - INFO - __main__ - Mean std for for pcm_0: 0.16245384514331818
03/26/2024 22:35:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:35:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:35:27 - INFO - __main__ - ID text: pcm_1
03/26/2024 22:36:37 - INFO - __main__ - Mean variance for pcm_1: 0.04808150604367256
03/26/2024 22:36:37 - INFO - __main__ - Mean std for for pcm_1: 0.19126196205615997
03/26/2024 22:36:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:36:37 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:36:37 - INFO - __main__ - ID text: pcm_2
03/26/2024 22:37:48 - INFO - __main__ - Mean variance for pcm_2: 0.0458211712539196
03/26/2024 22:37:48 - INFO - __main__ - Mean std for for pcm_2: 0.17916326224803925
03/26/2024 22:37:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:37:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:37:48 - INFO - __main__ - ID text: pcm_3
03/26/2024 22:38:58 - INFO - __main__ - Mean variance for pcm_3: 0.039881352335214615
03/26/2024 22:38:58 - INFO - __main__ - Mean std for for pcm_3: 0.1611432433128357
03/26/2024 22:38:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:38:58 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:38:58 - INFO - __main__ - ID text: pcm_4
03/26/2024 22:40:09 - INFO - __main__ - Mean variance for pcm_4: 0.042665038257837296
03/26/2024 22:40:09 - INFO - __main__ - Mean std for for pcm_4: 0.16578228771686554
03/26/2024 22:40:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:40:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:40:09 - INFO - __main__ - ID text: pcm_5
03/26/2024 22:41:19 - INFO - __main__ - Mean variance for pcm_5: 0.049783095717430115
03/26/2024 22:41:19 - INFO - __main__ - Mean std for for pcm_5: 0.19772541522979736
03/26/2024 22:41:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:41:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:41:19 - INFO - __main__ - ID text: pcm_6
03/26/2024 22:42:29 - INFO - __main__ - Mean variance for pcm_6: 0.04186056926846504
03/26/2024 22:42:29 - INFO - __main__ - Mean std for for pcm_6: 0.16921091079711914
03/26/2024 22:42:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:42:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:42:29 - INFO - __main__ - ID text: pcm_7
03/26/2024 22:43:40 - INFO - __main__ - Mean variance for pcm_7: 0.04380818083882332
03/26/2024 22:43:40 - INFO - __main__ - Mean std for for pcm_7: 0.1694740206003189
03/26/2024 22:43:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:43:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:43:40 - INFO - __main__ - ID text: pcm_8
03/26/2024 22:44:50 - INFO - __main__ - Mean variance for pcm_8: 0.044456515461206436
03/26/2024 22:44:50 - INFO - __main__ - Mean std for for pcm_8: 0.16835026443004608
03/26/2024 22:44:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:44:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:44:50 - INFO - __main__ - ID text: pcm_9
03/26/2024 22:45:59 - INFO - __main__ - Mean variance for pcm_9: 0.03713205084204674
03/26/2024 22:45:59 - INFO - __main__ - Mean std for for pcm_9: 0.16622573137283325
03/26/2024 22:45:59 - INFO - __main__ - 
######## Language: swa ######## 

03/26/2024 22:45:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:45:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:45:59 - INFO - __main__ - ID text: swa_0
03/26/2024 22:47:09 - INFO - __main__ - Mean variance for swa_0: 0.04436229169368744
03/26/2024 22:47:09 - INFO - __main__ - Mean std for for swa_0: 0.16610099375247955
03/26/2024 22:47:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:47:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:47:09 - INFO - __main__ - ID text: swa_1
03/26/2024 22:48:19 - INFO - __main__ - Mean variance for swa_1: 0.049897804856300354
03/26/2024 22:48:19 - INFO - __main__ - Mean std for for swa_1: 0.18327312171459198
03/26/2024 22:48:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:48:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:48:19 - INFO - __main__ - ID text: swa_2
03/26/2024 22:49:29 - INFO - __main__ - Mean variance for swa_2: 0.042655497789382935
03/26/2024 22:49:29 - INFO - __main__ - Mean std for for swa_2: 0.16348296403884888
03/26/2024 22:49:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:49:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:49:29 - INFO - __main__ - ID text: swa_3
03/26/2024 22:50:40 - INFO - __main__ - Mean variance for swa_3: 0.03848101943731308
03/26/2024 22:50:40 - INFO - __main__ - Mean std for for swa_3: 0.16537170112133026
03/26/2024 22:50:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:50:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:50:40 - INFO - __main__ - ID text: swa_4
03/26/2024 22:51:50 - INFO - __main__ - Mean variance for swa_4: 0.03414130583405495
03/26/2024 22:51:50 - INFO - __main__ - Mean std for for swa_4: 0.14470930397510529
03/26/2024 22:51:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:51:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:51:50 - INFO - __main__ - ID text: swa_5
03/26/2024 22:53:00 - INFO - __main__ - Mean variance for swa_5: 0.0327865295112133
03/26/2024 22:53:00 - INFO - __main__ - Mean std for for swa_5: 0.13990534842014313
03/26/2024 22:53:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:53:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:53:00 - INFO - __main__ - ID text: swa_6
03/26/2024 22:54:10 - INFO - __main__ - Mean variance for swa_6: 0.036725014448165894
03/26/2024 22:54:10 - INFO - __main__ - Mean std for for swa_6: 0.15107570588588715
03/26/2024 22:54:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:54:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:54:10 - INFO - __main__ - ID text: swa_7
03/26/2024 22:55:20 - INFO - __main__ - Mean variance for swa_7: 0.04492773488163948
03/26/2024 22:55:20 - INFO - __main__ - Mean std for for swa_7: 0.1900157779455185
03/26/2024 22:55:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:55:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:55:20 - INFO - __main__ - ID text: swa_8
03/26/2024 22:56:30 - INFO - __main__ - Mean variance for swa_8: 0.03674760088324547
03/26/2024 22:56:30 - INFO - __main__ - Mean std for for swa_8: 0.15914729237556458
03/26/2024 22:56:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:56:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:56:30 - INFO - __main__ - ID text: swa_9
03/26/2024 22:57:40 - INFO - __main__ - Mean variance for swa_9: 0.04667706787586212
03/26/2024 22:57:40 - INFO - __main__ - Mean std for for swa_9: 0.17960108816623688
03/26/2024 22:57:40 - INFO - __main__ - 
######## Language: wol ######## 

03/26/2024 22:57:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:57:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:57:40 - INFO - __main__ - ID text: wol_0
03/26/2024 22:58:50 - INFO - __main__ - Mean variance for wol_0: 0.04434405639767647
03/26/2024 22:58:50 - INFO - __main__ - Mean std for for wol_0: 0.1650715321302414
03/26/2024 22:58:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:58:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:58:50 - INFO - __main__ - ID text: wol_1
03/26/2024 23:00:00 - INFO - __main__ - Mean variance for wol_1: 0.044217001646757126
03/26/2024 23:00:00 - INFO - __main__ - Mean std for for wol_1: 0.17265279591083527
03/26/2024 23:00:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:00:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:00:00 - INFO - __main__ - ID text: wol_2
03/26/2024 23:01:10 - INFO - __main__ - Mean variance for wol_2: 0.04728753864765167
03/26/2024 23:01:10 - INFO - __main__ - Mean std for for wol_2: 0.1837688833475113
03/26/2024 23:01:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:01:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:01:10 - INFO - __main__ - ID text: wol_3
03/26/2024 23:02:20 - INFO - __main__ - Mean variance for wol_3: 0.06760188192129135
03/26/2024 23:02:20 - INFO - __main__ - Mean std for for wol_3: 0.233889639377594
03/26/2024 23:02:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:02:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:02:20 - INFO - __main__ - ID text: wol_4
03/26/2024 23:03:30 - INFO - __main__ - Mean variance for wol_4: 0.04193262383341789
03/26/2024 23:03:30 - INFO - __main__ - Mean std for for wol_4: 0.18162347376346588
03/26/2024 23:03:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:03:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:03:30 - INFO - __main__ - ID text: wol_5
03/26/2024 23:04:40 - INFO - __main__ - Mean variance for wol_5: 0.04325827956199646
03/26/2024 23:04:40 - INFO - __main__ - Mean std for for wol_5: 0.16957946121692657
03/26/2024 23:04:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:04:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:04:40 - INFO - __main__ - ID text: wol_6
03/26/2024 23:05:50 - INFO - __main__ - Mean variance for wol_6: 0.15542104840278625
03/26/2024 23:05:50 - INFO - __main__ - Mean std for for wol_6: 0.34862425923347473
03/26/2024 23:05:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:05:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:05:50 - INFO - __main__ - ID text: wol_7
03/26/2024 23:07:00 - INFO - __main__ - Mean variance for wol_7: 0.05109231173992157
03/26/2024 23:07:00 - INFO - __main__ - Mean std for for wol_7: 0.1897701621055603
03/26/2024 23:07:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:07:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:07:00 - INFO - __main__ - ID text: wol_8
03/26/2024 23:08:11 - INFO - __main__ - Mean variance for wol_8: 0.03642047569155693
03/26/2024 23:08:11 - INFO - __main__ - Mean std for for wol_8: 0.16812662780284882
03/26/2024 23:08:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:08:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:08:11 - INFO - __main__ - ID text: wol_9
03/26/2024 23:09:20 - INFO - __main__ - Mean variance for wol_9: 0.040660109370946884
03/26/2024 23:09:20 - INFO - __main__ - Mean std for for wol_9: 0.1767290085554123
03/26/2024 23:09:20 - INFO - __main__ - 
######## Language: yor ######## 

03/26/2024 23:09:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:09:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:09:20 - INFO - __main__ - ID text: yor_0
03/26/2024 23:10:30 - INFO - __main__ - Mean variance for yor_0: 0.14288058876991272
03/26/2024 23:10:30 - INFO - __main__ - Mean std for for yor_0: 0.3291603624820709
03/26/2024 23:10:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:10:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:10:30 - INFO - __main__ - ID text: yor_1
03/26/2024 23:11:40 - INFO - __main__ - Mean variance for yor_1: 0.13804464042186737
03/26/2024 23:11:40 - INFO - __main__ - Mean std for for yor_1: 0.31936120986938477
03/26/2024 23:11:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:11:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:11:40 - INFO - __main__ - ID text: yor_2
03/26/2024 23:12:50 - INFO - __main__ - Mean variance for yor_2: 0.04196888580918312
03/26/2024 23:12:50 - INFO - __main__ - Mean std for for yor_2: 0.16495992243289948
03/26/2024 23:12:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:12:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:12:50 - INFO - __main__ - ID text: yor_3
03/26/2024 23:14:00 - INFO - __main__ - Mean variance for yor_3: 0.043179452419281006
03/26/2024 23:14:00 - INFO - __main__ - Mean std for for yor_3: 0.16113817691802979
03/26/2024 23:14:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:14:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:14:00 - INFO - __main__ - ID text: yor_4
03/26/2024 23:15:10 - INFO - __main__ - Mean variance for yor_4: 0.13444136083126068
03/26/2024 23:15:10 - INFO - __main__ - Mean std for for yor_4: 0.31994351744651794
03/26/2024 23:15:10 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:15:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:15:10 - INFO - __main__ - ID text: yor_5
03/26/2024 23:16:20 - INFO - __main__ - Mean variance for yor_5: 0.09890095144510269
03/26/2024 23:16:20 - INFO - __main__ - Mean std for for yor_5: 0.2587642967700958
03/26/2024 23:16:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:16:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:16:20 - INFO - __main__ - ID text: yor_6
03/26/2024 23:17:30 - INFO - __main__ - Mean variance for yor_6: 0.04073533043265343
03/26/2024 23:17:30 - INFO - __main__ - Mean std for for yor_6: 0.16552700102329254
03/26/2024 23:17:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:17:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:17:30 - INFO - __main__ - ID text: yor_7
03/26/2024 23:18:40 - INFO - __main__ - Mean variance for yor_7: 0.1336546391248703
03/26/2024 23:18:40 - INFO - __main__ - Mean std for for yor_7: 0.3084256947040558
03/26/2024 23:18:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:18:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:18:40 - INFO - __main__ - ID text: yor_8
03/26/2024 23:19:49 - INFO - __main__ - Mean variance for yor_8: 0.04073220118880272
03/26/2024 23:19:49 - INFO - __main__ - Mean std for for yor_8: 0.15971557796001434
03/26/2024 23:19:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:19:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:19:49 - INFO - __main__ - ID text: yor_9
03/26/2024 23:20:59 - INFO - __main__ - Mean variance for yor_9: 0.1393061876296997
03/26/2024 23:20:59 - INFO - __main__ - Mean std for for yor_9: 0.3237041234970093
03/26/2024 23:20:59 - INFO - __main__ - 
######## Language: zh ######## 

03/26/2024 23:20:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:20:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:20:59 - INFO - __main__ - ID text: zh_0
03/26/2024 23:22:09 - INFO - __main__ - Mean variance for zh_0: 0.1647060364484787
03/26/2024 23:22:09 - INFO - __main__ - Mean std for for zh_0: 0.3609626293182373
03/26/2024 23:22:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:22:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:22:09 - INFO - __main__ - ID text: zh_1
03/26/2024 23:23:19 - INFO - __main__ - Mean variance for zh_1: 0.1196209192276001
03/26/2024 23:23:19 - INFO - __main__ - Mean std for for zh_1: 0.2879958152770996
03/26/2024 23:23:19 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:23:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:23:19 - INFO - __main__ - ID text: zh_2
03/26/2024 23:24:29 - INFO - __main__ - Mean variance for zh_2: 0.1318722516298294
03/26/2024 23:24:29 - INFO - __main__ - Mean std for for zh_2: 0.3092024624347687
03/26/2024 23:24:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:24:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:24:29 - INFO - __main__ - ID text: zh_3
03/26/2024 23:25:39 - INFO - __main__ - Mean variance for zh_3: 0.14701707661151886
03/26/2024 23:25:39 - INFO - __main__ - Mean std for for zh_3: 0.33764663338661194
03/26/2024 23:25:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:25:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:25:39 - INFO - __main__ - ID text: zh_4
03/26/2024 23:26:49 - INFO - __main__ - Mean variance for zh_4: 0.18386732041835785
03/26/2024 23:26:49 - INFO - __main__ - Mean std for for zh_4: 0.38217464089393616
03/26/2024 23:26:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:26:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:26:49 - INFO - __main__ - ID text: zh_5
03/26/2024 23:27:59 - INFO - __main__ - Mean variance for zh_5: 0.1645204871892929
03/26/2024 23:27:59 - INFO - __main__ - Mean std for for zh_5: 0.3643595278263092
03/26/2024 23:27:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:27:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:27:59 - INFO - __main__ - ID text: zh_6
03/26/2024 23:29:09 - INFO - __main__ - Mean variance for zh_6: 0.13399045169353485
03/26/2024 23:29:09 - INFO - __main__ - Mean std for for zh_6: 0.3085865378379822
03/26/2024 23:29:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:29:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:29:09 - INFO - __main__ - ID text: zh_7
03/26/2024 23:30:18 - INFO - __main__ - Mean variance for zh_7: 0.13075725734233856
03/26/2024 23:30:18 - INFO - __main__ - Mean std for for zh_7: 0.3149644434452057
03/26/2024 23:30:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:30:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:30:18 - INFO - __main__ - ID text: zh_8
03/26/2024 23:31:27 - INFO - __main__ - Mean variance for zh_8: 0.13247555494308472
03/26/2024 23:31:27 - INFO - __main__ - Mean std for for zh_8: 0.3143787384033203
03/26/2024 23:31:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:31:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:31:27 - INFO - __main__ - ID text: zh_9
03/26/2024 23:32:36 - INFO - __main__ - Mean variance for zh_9: 0.1469947248697281
03/26/2024 23:32:36 - INFO - __main__ - Mean std for for zh_9: 0.324497252702713
03/26/2024 23:32:36 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/26/2024 23:32:36 - INFO - __main__ - 
######## Language: arabic ######## 

03/26/2024 23:32:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:32:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:32:36 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/26/2024 23:33:45 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.0716170147061348
03/26/2024 23:33:45 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.2206134796142578
03/26/2024 23:33:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:33:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:33:45 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/26/2024 23:34:54 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.04885891079902649
03/26/2024 23:34:54 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.17718152701854706
03/26/2024 23:34:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:34:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:34:54 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/26/2024 23:36:02 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.042771611362695694
03/26/2024 23:36:02 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.16731607913970947
03/26/2024 23:36:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:36:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:36:02 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/26/2024 23:37:12 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.0444754958152771
03/26/2024 23:37:12 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.17128293216228485
03/26/2024 23:37:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:37:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:37:12 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/26/2024 23:38:21 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.11780337244272232
03/26/2024 23:38:21 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.2953774929046631
03/26/2024 23:38:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:38:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:38:21 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/26/2024 23:39:30 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.03935781121253967
03/26/2024 23:39:30 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.16007556021213531
03/26/2024 23:39:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:39:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:39:30 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/26/2024 23:40:39 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.050101324915885925
03/26/2024 23:40:39 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.1809755116701126
03/26/2024 23:40:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:40:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:40:39 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/26/2024 23:41:48 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.04013596102595329
03/26/2024 23:41:48 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.16206669807434082
03/26/2024 23:41:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:41:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:41:48 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/26/2024 23:42:57 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.04006366804242134
03/26/2024 23:42:57 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.16197781264781952
03/26/2024 23:42:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:42:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:42:57 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/26/2024 23:44:06 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.04371531680226326
03/26/2024 23:44:06 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.16921980679035187
03/26/2024 23:44:06 - INFO - __main__ - 
######## Language: russian ######## 

03/26/2024 23:44:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:44:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:44:06 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/26/2024 23:45:15 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.029628388583660126
03/26/2024 23:45:15 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.13353905081748962
03/26/2024 23:45:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:45:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:45:15 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/26/2024 23:46:24 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.052472371608018875
03/26/2024 23:46:24 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.1802796870470047
03/26/2024 23:46:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:46:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:46:24 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/26/2024 23:47:33 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.027153993025422096
03/26/2024 23:47:33 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.12757699191570282
03/26/2024 23:47:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:47:33 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:47:33 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/26/2024 23:48:42 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.02706190198659897
03/26/2024 23:48:42 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.12861911952495575
03/26/2024 23:48:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:48:42 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:48:42 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/26/2024 23:49:51 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.02798864245414734
03/26/2024 23:49:51 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.13014058768749237
03/26/2024 23:49:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:49:51 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:49:51 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/26/2024 23:51:00 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.029758499935269356
03/26/2024 23:51:00 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.13538646697998047
03/26/2024 23:51:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:51:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:51:00 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/26/2024 23:52:09 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.0438651442527771
03/26/2024 23:52:09 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.17565475404262543
03/26/2024 23:52:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:52:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:52:09 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/26/2024 23:53:18 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.027742484584450722
03/26/2024 23:53:18 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.13083915412425995
03/26/2024 23:53:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:53:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:53:18 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/26/2024 23:54:27 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.04371592774987221
03/26/2024 23:54:27 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.16733741760253906
03/26/2024 23:54:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:54:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:54:27 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/26/2024 23:55:36 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.028617987409234047
03/26/2024 23:55:36 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.13250409066677094
03/26/2024 23:55:36 - INFO - __main__ - 
######## Language: bengali ######## 

03/26/2024 23:55:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:55:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:55:36 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/26/2024 23:56:45 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.09583625942468643
03/26/2024 23:56:45 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.2562086880207062
03/26/2024 23:56:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:56:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:56:45 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/26/2024 23:57:54 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.09499449282884598
03/26/2024 23:57:54 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.25573012232780457
03/26/2024 23:57:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:57:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:57:54 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/26/2024 23:59:02 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.09915196895599365
03/26/2024 23:59:02 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.26118335127830505
03/26/2024 23:59:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:59:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:59:02 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/27/2024 00:00:11 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.10520467162132263
03/27/2024 00:00:11 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.270154744386673
03/27/2024 00:00:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:00:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:00:11 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/27/2024 00:01:20 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.1139976754784584
03/27/2024 00:01:20 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.2791241705417633
03/27/2024 00:01:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:01:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:01:20 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/27/2024 00:02:29 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.09980978816747665
03/27/2024 00:02:29 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.2613387405872345
03/27/2024 00:02:29 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:02:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:02:29 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/27/2024 00:03:38 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.09642622619867325
03/27/2024 00:03:38 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.2572712004184723
03/27/2024 00:03:38 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:03:38 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:03:38 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/27/2024 00:04:46 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.09502970427274704
03/27/2024 00:04:46 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.25523966550827026
03/27/2024 00:04:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:04:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:04:46 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/27/2024 00:05:55 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.09580782055854797
03/27/2024 00:05:55 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.2563813328742981
03/27/2024 00:05:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:05:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:05:55 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/27/2024 00:07:04 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.1326724737882614
03/27/2024 00:07:04 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.3105488419532776
03/27/2024 00:07:04 - INFO - __main__ - 
######## Language: telugu ######## 

03/27/2024 00:07:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:07:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:07:04 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/27/2024 00:08:13 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.036891303956508636
03/27/2024 00:08:13 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.15372276306152344
03/27/2024 00:08:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:08:13 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:08:13 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/27/2024 00:09:22 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.035384539514780045
03/27/2024 00:09:22 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.1495220810174942
03/27/2024 00:09:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:09:23 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:09:23 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/27/2024 00:10:32 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.03827248141169548
03/27/2024 00:10:32 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.1548066884279251
03/27/2024 00:10:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:10:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:10:32 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/27/2024 00:11:41 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.04595804214477539
03/27/2024 00:11:41 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.17216800153255463
03/27/2024 00:11:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:11:41 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:11:41 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/27/2024 00:12:50 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.04214942082762718
03/27/2024 00:12:50 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.1655476838350296
03/27/2024 00:12:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:12:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:12:50 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/27/2024 00:13:59 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.03796878829598427
03/27/2024 00:13:59 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.15473049879074097
03/27/2024 00:13:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:13:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:13:59 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/27/2024 00:15:08 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.1172448918223381
03/27/2024 00:15:08 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.28315094113349915
03/27/2024 00:15:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:15:08 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:15:08 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/27/2024 00:16:18 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.037614237517118454
03/27/2024 00:16:18 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.15362627804279327
03/27/2024 00:16:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:16:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:16:18 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/27/2024 00:17:27 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.04008986055850983
03/27/2024 00:17:27 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.16003049910068512
03/27/2024 00:17:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:17:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:17:27 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/27/2024 00:18:36 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.0401068739593029
03/27/2024 00:18:36 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.1576279252767563
03/27/2024 00:18:36 - INFO - __main__ - 
######## Language: finnish ######## 

03/27/2024 00:18:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:18:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:18:36 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/27/2024 00:19:45 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.04541914165019989
03/27/2024 00:19:45 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.16610123217105865
03/27/2024 00:19:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:19:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:19:45 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/27/2024 00:20:54 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.046102896332740784
03/27/2024 00:20:54 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.16653451323509216
03/27/2024 00:20:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:20:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:20:54 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/27/2024 00:22:03 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.07007670402526855
03/27/2024 00:22:03 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.21840305626392365
03/27/2024 00:22:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:22:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:22:03 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/27/2024 00:23:13 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.05056905746459961
03/27/2024 00:23:13 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.17488835752010345
03/27/2024 00:23:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:23:13 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:23:13 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/27/2024 00:24:22 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.04403555765748024
03/27/2024 00:24:22 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.1667330414056778
03/27/2024 00:24:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:24:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:24:22 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/27/2024 00:25:31 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.025626301765441895
03/27/2024 00:25:31 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.12423679977655411
03/27/2024 00:25:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:25:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:25:31 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/27/2024 00:26:41 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.024856247007846832
03/27/2024 00:26:41 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.12201645225286484
03/27/2024 00:26:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:26:41 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:26:41 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/27/2024 00:27:50 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.070622019469738
03/27/2024 00:27:50 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.22018563747406006
03/27/2024 00:27:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:27:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:27:50 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/27/2024 00:28:59 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.03381166607141495
03/27/2024 00:28:59 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.14120814204216003
03/27/2024 00:28:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:28:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:28:59 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/27/2024 00:30:08 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.02671312727034092
03/27/2024 00:30:08 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.12796126306056976
03/27/2024 00:30:08 - INFO - __main__ - 
######## Language: swahili ######## 

03/27/2024 00:30:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:30:08 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:30:08 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/27/2024 00:31:17 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.05107317864894867
03/27/2024 00:31:17 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.1773102730512619
03/27/2024 00:31:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:31:17 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:31:17 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/27/2024 00:32:26 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.028264857828617096
03/27/2024 00:32:26 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.12968648970127106
03/27/2024 00:32:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:32:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:32:26 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/27/2024 00:33:35 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.044929515570402145
03/27/2024 00:33:35 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.16671030223369598
03/27/2024 00:33:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:33:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:33:35 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/27/2024 00:34:44 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.02976200543344021
03/27/2024 00:34:44 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.13405252993106842
03/27/2024 00:34:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:34:44 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:34:44 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/27/2024 00:35:54 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.027907712385058403
03/27/2024 00:35:54 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.13062889873981476
03/27/2024 00:35:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:35:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:35:54 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/27/2024 00:37:03 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.053084224462509155
03/27/2024 00:37:03 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.18349768221378326
03/27/2024 00:37:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:37:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:37:03 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/27/2024 00:38:12 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.04702771082520485
03/27/2024 00:38:12 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.16792982816696167
03/27/2024 00:38:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:38:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:38:12 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/27/2024 00:39:21 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.04926685988903046
03/27/2024 00:39:21 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.17822770774364471
03/27/2024 00:39:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:39:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:39:21 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/27/2024 00:40:30 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.03198722004890442
03/27/2024 00:40:30 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.13759155571460724
03/27/2024 00:40:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:40:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:40:30 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/27/2024 00:41:39 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.028369054198265076
03/27/2024 00:41:39 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.1296934336423874
03/27/2024 00:41:39 - INFO - __main__ - 
######## Language: korean ######## 

03/27/2024 00:41:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:41:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:41:39 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/27/2024 00:42:48 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.08889073878526688
03/27/2024 00:42:48 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.24501310288906097
03/27/2024 00:42:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:42:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:42:48 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/27/2024 00:43:57 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.03905242681503296
03/27/2024 00:43:57 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.15822285413742065
03/27/2024 00:43:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:43:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:43:57 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/27/2024 00:45:06 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.029900023713707924
03/27/2024 00:45:06 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.14095786213874817
03/27/2024 00:45:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:45:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:45:06 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/27/2024 00:46:15 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.04093964770436287
03/27/2024 00:46:15 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.1628604680299759
03/27/2024 00:46:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:46:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:46:15 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/27/2024 00:47:24 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.13330292701721191
03/27/2024 00:47:24 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.30463096499443054
03/27/2024 00:47:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:47:25 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:47:25 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/27/2024 00:48:34 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.03878692165017128
03/27/2024 00:48:34 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.15627458691596985
03/27/2024 00:48:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:48:34 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:48:34 - INFO - __main__ - ID text: korean-148115504649351135-0
03/27/2024 00:49:43 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.0697670504450798
03/27/2024 00:49:43 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.21857668459415436
03/27/2024 00:49:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:49:43 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:49:43 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/27/2024 00:50:52 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.13948820531368256
03/27/2024 00:50:52 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.3104293644428253
03/27/2024 00:50:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:50:52 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:50:52 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/27/2024 00:52:01 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.11435377597808838
03/27/2024 00:52:01 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.28063225746154785
03/27/2024 00:52:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:52:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:52:02 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/27/2024 00:53:11 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.1848059743642807
03/27/2024 00:53:11 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.3774687945842743
03/27/2024 00:53:12 - INFO - __main__ - 
######## Language: indonesian ######## 

03/27/2024 00:53:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:53:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:53:12 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/27/2024 00:54:21 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.02938375063240528
03/27/2024 00:54:21 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.1348460465669632
03/27/2024 00:54:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:54:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:54:21 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/27/2024 00:55:31 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.06800039857625961
03/27/2024 00:55:31 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.21408839523792267
03/27/2024 00:55:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:55:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:55:31 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/27/2024 00:56:40 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.02830558829009533
03/27/2024 00:56:40 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.13243286311626434
03/27/2024 00:56:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:56:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:56:40 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/27/2024 00:57:49 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.03430624678730965
03/27/2024 00:57:49 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.1472940742969513
03/27/2024 00:57:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:57:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:57:49 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/27/2024 00:58:58 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.02661292441189289
03/27/2024 00:58:58 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.1279732882976532
03/27/2024 00:58:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:58:58 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:58:58 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/27/2024 01:00:08 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.028979739174246788
03/27/2024 01:00:08 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.13250721991062164
03/27/2024 01:00:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:00:08 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:00:08 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/27/2024 01:01:18 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.02518174611032009
03/27/2024 01:01:18 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.12354829907417297
03/27/2024 01:01:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:01:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:01:18 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/27/2024 01:02:27 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.04939065873622894
03/27/2024 01:02:27 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.1754888892173767
03/27/2024 01:02:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:02:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:02:27 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/27/2024 01:03:37 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.036760102957487106
03/27/2024 01:03:37 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.15332750976085663
03/27/2024 01:03:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:03:37 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:03:37 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/27/2024 01:04:46 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.026390263810753822
03/27/2024 01:04:46 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.1278393268585205
03/27/2024 01:04:46 - INFO - __main__ - 
######## Language: english ######## 

03/27/2024 01:04:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:04:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:04:46 - INFO - __main__ - ID text: english-2852412434797041176-6
03/27/2024 01:05:55 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.07840350270271301
03/27/2024 01:05:55 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.23822583258152008
03/27/2024 01:05:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:05:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:05:55 - INFO - __main__ - ID text: english--1463732605740571606-0
03/27/2024 01:07:04 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.03560250997543335
03/27/2024 01:07:04 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.14647214114665985
03/27/2024 01:07:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:07:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:07:04 - INFO - __main__ - ID text: english-5441411281255470421-0
03/27/2024 01:08:13 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.03503110632300377
03/27/2024 01:08:13 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.14647197723388672
03/27/2024 01:08:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:08:13 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:08:13 - INFO - __main__ - ID text: english-7294054492486093447-1
03/27/2024 01:09:22 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.032354045659303665
03/27/2024 01:09:22 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.14068187773227692
03/27/2024 01:09:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:09:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:09:22 - INFO - __main__ - ID text: english-8820750127045023244-0
03/27/2024 01:10:31 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.04861007258296013
03/27/2024 01:10:31 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.17184554040431976
03/27/2024 01:10:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:10:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:10:31 - INFO - __main__ - ID text: english--506693546683012611-2
03/27/2024 01:11:40 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.06860540062189102
03/27/2024 01:11:40 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.20584255456924438
03/27/2024 01:11:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:11:41 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:11:41 - INFO - __main__ - ID text: english-745411798111651115-0
03/27/2024 01:12:50 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.033341411501169205
03/27/2024 01:12:50 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.1431134194135666
03/27/2024 01:12:50 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:12:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:12:50 - INFO - __main__ - ID text: english-7740772185887912651-0
03/27/2024 01:13:59 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.03541332110762596
03/27/2024 01:13:59 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.14843139052391052
03/27/2024 01:13:59 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:13:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:13:59 - INFO - __main__ - ID text: english-383873188776267137-19
03/27/2024 01:15:07 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.033534370362758636
03/27/2024 01:15:07 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.14367589354515076
03/27/2024 01:15:08 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:15:08 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:15:08 - INFO - __main__ - ID text: english--8277537578703156284-0
03/27/2024 01:16:17 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.03498723730444908
03/27/2024 01:16:17 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.14732716977596283
03/27/2024 01:16:17 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/27/2024 01:16:17 - INFO - __main__ - 
######## Language: cola ######## 

03/27/2024 01:16:17 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:16:17 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:16:17 - INFO - __main__ - ID text: cola_228
03/27/2024 01:17:26 - INFO - __main__ - Mean variance for cola_228: 0.04868265986442566
03/27/2024 01:17:26 - INFO - __main__ - Mean std for for cola_228: 0.19385963678359985
03/27/2024 01:17:26 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:17:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:17:26 - INFO - __main__ - ID text: cola_51
03/27/2024 01:18:35 - INFO - __main__ - Mean variance for cola_51: 0.043059397488832474
03/27/2024 01:18:35 - INFO - __main__ - Mean std for for cola_51: 0.1815735548734665
03/27/2024 01:18:35 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:18:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:18:35 - INFO - __main__ - ID text: cola_563
03/27/2024 01:19:44 - INFO - __main__ - Mean variance for cola_563: 0.1628420352935791
03/27/2024 01:19:44 - INFO - __main__ - Mean std for for cola_563: 0.3631523847579956
03/27/2024 01:19:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:19:44 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:19:44 - INFO - __main__ - ID text: cola_501
03/27/2024 01:20:53 - INFO - __main__ - Mean variance for cola_501: 0.05089232325553894
03/27/2024 01:20:53 - INFO - __main__ - Mean std for for cola_501: 0.19945769011974335
03/27/2024 01:20:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:20:53 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:20:53 - INFO - __main__ - ID text: cola_457
03/27/2024 01:22:02 - INFO - __main__ - Mean variance for cola_457: 0.05399375036358833
03/27/2024 01:22:02 - INFO - __main__ - Mean std for for cola_457: 0.20796650648117065
03/27/2024 01:22:02 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:22:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:22:02 - INFO - __main__ - ID text: cola_285
03/27/2024 01:23:11 - INFO - __main__ - Mean variance for cola_285: 0.04539039731025696
03/27/2024 01:23:11 - INFO - __main__ - Mean std for for cola_285: 0.19128473103046417
03/27/2024 01:23:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:23:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:23:11 - INFO - __main__ - ID text: cola_209
03/27/2024 01:24:20 - INFO - __main__ - Mean variance for cola_209: 0.04575332626700401
03/27/2024 01:24:20 - INFO - __main__ - Mean std for for cola_209: 0.18933267891407013
03/27/2024 01:24:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:24:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:24:20 - INFO - __main__ - ID text: cola_178
03/27/2024 01:25:28 - INFO - __main__ - Mean variance for cola_178: 0.04634964093565941
03/27/2024 01:25:28 - INFO - __main__ - Mean std for for cola_178: 0.19111305475234985
03/27/2024 01:25:28 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:25:28 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:25:28 - INFO - __main__ - ID text: cola_864
03/27/2024 01:26:37 - INFO - __main__ - Mean variance for cola_864: 0.04361974075436592
03/27/2024 01:26:37 - INFO - __main__ - Mean std for for cola_864: 0.18897201120853424
03/27/2024 01:26:37 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:26:37 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:26:37 - INFO - __main__ - ID text: cola_65
03/27/2024 01:27:46 - INFO - __main__ - Mean variance for cola_65: 0.038832467049360275
03/27/2024 01:27:46 - INFO - __main__ - Mean std for for cola_65: 0.17157118022441864
03/27/2024 01:27:46 - INFO - __main__ - 
######## Language: mnli ######## 

03/27/2024 01:27:46 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:27:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:27:46 - INFO - __main__ - ID text: mnli_488
03/27/2024 01:28:55 - INFO - __main__ - Mean variance for mnli_488: 0.06084689125418663
03/27/2024 01:28:55 - INFO - __main__ - Mean std for for mnli_488: 0.19662754237651825
03/27/2024 01:28:55 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:28:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:28:55 - INFO - __main__ - ID text: mnli_1535
03/27/2024 01:30:03 - INFO - __main__ - Mean variance for mnli_1535: 0.057462479919195175
03/27/2024 01:30:03 - INFO - __main__ - Mean std for for mnli_1535: 0.1938595324754715
03/27/2024 01:30:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:30:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:30:04 - INFO - __main__ - ID text: mnli_3582
03/27/2024 01:31:12 - INFO - __main__ - Mean variance for mnli_3582: 0.05244649574160576
03/27/2024 01:31:12 - INFO - __main__ - Mean std for for mnli_3582: 0.19429326057434082
03/27/2024 01:31:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:31:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:31:12 - INFO - __main__ - ID text: mnli_3811
03/27/2024 01:32:21 - INFO - __main__ - Mean variance for mnli_3811: 0.04458633437752724
03/27/2024 01:32:21 - INFO - __main__ - Mean std for for mnli_3811: 0.17371360957622528
03/27/2024 01:32:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:32:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:32:21 - INFO - __main__ - ID text: mnli_8279
03/27/2024 01:33:30 - INFO - __main__ - Mean variance for mnli_8279: 0.04534142091870308
03/27/2024 01:33:30 - INFO - __main__ - Mean std for for mnli_8279: 0.18166644871234894
03/27/2024 01:33:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:33:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:33:30 - INFO - __main__ - ID text: mnli_434
03/27/2024 01:34:39 - INFO - __main__ - Mean variance for mnli_434: 0.04738586023449898
03/27/2024 01:34:39 - INFO - __main__ - Mean std for for mnli_434: 0.1704627126455307
03/27/2024 01:34:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:34:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:34:39 - INFO - __main__ - ID text: mnli_9195
03/27/2024 01:35:48 - INFO - __main__ - Mean variance for mnli_9195: 0.06194568797945976
03/27/2024 01:35:48 - INFO - __main__ - Mean std for for mnli_9195: 0.22382211685180664
03/27/2024 01:35:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:35:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:35:48 - INFO - __main__ - ID text: mnli_3257
03/27/2024 01:36:57 - INFO - __main__ - Mean variance for mnli_3257: 0.043427590280771255
03/27/2024 01:36:57 - INFO - __main__ - Mean std for for mnli_3257: 0.17364205420017242
03/27/2024 01:36:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:36:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:36:57 - INFO - __main__ - ID text: mnli_8928
03/27/2024 01:38:06 - INFO - __main__ - Mean variance for mnli_8928: 0.05766269564628601
03/27/2024 01:38:06 - INFO - __main__ - Mean std for for mnli_8928: 0.19276215136051178
03/27/2024 01:38:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:38:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:38:06 - INFO - __main__ - ID text: mnli_6873
03/27/2024 01:39:15 - INFO - __main__ - Mean variance for mnli_6873: 0.05763654783368111
03/27/2024 01:39:15 - INFO - __main__ - Mean std for for mnli_6873: 0.1898396611213684
03/27/2024 01:39:15 - INFO - __main__ - 
######## Language: mrpc ######## 

03/27/2024 01:39:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:39:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:39:15 - INFO - __main__ - ID text: mrpc_451
03/27/2024 01:40:24 - INFO - __main__ - Mean variance for mrpc_451: 0.06474218517541885
03/27/2024 01:40:24 - INFO - __main__ - Mean std for for mrpc_451: 0.1962866336107254
03/27/2024 01:40:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:40:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:40:24 - INFO - __main__ - ID text: mrpc_919
03/27/2024 01:41:33 - INFO - __main__ - Mean variance for mrpc_919: 0.053694456815719604
03/27/2024 01:41:33 - INFO - __main__ - Mean std for for mrpc_919: 0.18168234825134277
03/27/2024 01:41:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:41:33 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:41:33 - INFO - __main__ - ID text: mrpc_1206
03/27/2024 01:42:42 - INFO - __main__ - Mean variance for mrpc_1206: 0.0630296990275383
03/27/2024 01:42:42 - INFO - __main__ - Mean std for for mrpc_1206: 0.2047940343618393
03/27/2024 01:42:42 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:42:42 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:42:42 - INFO - __main__ - ID text: mrpc_569
03/27/2024 01:43:51 - INFO - __main__ - Mean variance for mrpc_569: 0.04970934987068176
03/27/2024 01:43:51 - INFO - __main__ - Mean std for for mrpc_569: 0.17994306981563568
03/27/2024 01:43:51 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:43:51 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:43:51 - INFO - __main__ - ID text: mrpc_1657
03/27/2024 01:45:00 - INFO - __main__ - Mean variance for mrpc_1657: 0.05453520640730858
03/27/2024 01:45:00 - INFO - __main__ - Mean std for for mrpc_1657: 0.18567492067813873
03/27/2024 01:45:00 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:45:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:45:00 - INFO - __main__ - ID text: mrpc_13
03/27/2024 01:46:09 - INFO - __main__ - Mean variance for mrpc_13: 0.06131294369697571
03/27/2024 01:46:09 - INFO - __main__ - Mean std for for mrpc_13: 0.20070350170135498
03/27/2024 01:46:09 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:46:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:46:09 - INFO - __main__ - ID text: mrpc_1554
03/27/2024 01:47:18 - INFO - __main__ - Mean variance for mrpc_1554: 0.05511845648288727
03/27/2024 01:47:18 - INFO - __main__ - Mean std for for mrpc_1554: 0.18357603251934052
03/27/2024 01:47:18 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:47:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:47:18 - INFO - __main__ - ID text: mrpc_1650
03/27/2024 01:48:27 - INFO - __main__ - Mean variance for mrpc_1650: 0.12329629063606262
03/27/2024 01:48:27 - INFO - __main__ - Mean std for for mrpc_1650: 0.3010927736759186
03/27/2024 01:48:27 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:48:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:48:27 - INFO - __main__ - ID text: mrpc_326
03/27/2024 01:49:36 - INFO - __main__ - Mean variance for mrpc_326: 0.05843931809067726
03/27/2024 01:49:36 - INFO - __main__ - Mean std for for mrpc_326: 0.19582431018352509
03/27/2024 01:49:36 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:49:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:49:36 - INFO - __main__ - ID text: mrpc_1429
03/27/2024 01:50:45 - INFO - __main__ - Mean variance for mrpc_1429: 0.06662086397409439
03/27/2024 01:50:45 - INFO - __main__ - Mean std for for mrpc_1429: 0.21000127494335175
03/27/2024 01:50:45 - INFO - __main__ - 
######## Language: qnli ######## 

03/27/2024 01:50:45 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:50:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:50:45 - INFO - __main__ - ID text: qnli_3462
03/27/2024 01:51:54 - INFO - __main__ - Mean variance for qnli_3462: 0.06084665656089783
03/27/2024 01:51:54 - INFO - __main__ - Mean std for for qnli_3462: 0.19897116720676422
03/27/2024 01:51:54 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:51:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:51:54 - INFO - __main__ - ID text: qnli_2787
03/27/2024 01:53:03 - INFO - __main__ - Mean variance for qnli_2787: 0.053796399384737015
03/27/2024 01:53:03 - INFO - __main__ - Mean std for for qnli_2787: 0.18341825902462006
03/27/2024 01:53:03 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:53:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:53:03 - INFO - __main__ - ID text: qnli_2276
03/27/2024 01:54:12 - INFO - __main__ - Mean variance for qnli_2276: 0.05317666009068489
03/27/2024 01:54:12 - INFO - __main__ - Mean std for for qnli_2276: 0.18568359315395355
03/27/2024 01:54:12 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:54:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:54:12 - INFO - __main__ - ID text: qnli_1273
03/27/2024 01:55:21 - INFO - __main__ - Mean variance for qnli_1273: 0.05710810795426369
03/27/2024 01:55:21 - INFO - __main__ - Mean std for for qnli_1273: 0.18681634962558746
03/27/2024 01:55:21 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:55:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:55:21 - INFO - __main__ - ID text: qnli_1763
03/27/2024 01:56:31 - INFO - __main__ - Mean variance for qnli_1763: 0.05850130319595337
03/27/2024 01:56:31 - INFO - __main__ - Mean std for for qnli_1763: 0.19112317264080048
03/27/2024 01:56:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:56:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:56:31 - INFO - __main__ - ID text: qnli_2757
03/27/2024 01:57:39 - INFO - __main__ - Mean variance for qnli_2757: 0.05305367708206177
03/27/2024 01:57:39 - INFO - __main__ - Mean std for for qnli_2757: 0.18427890539169312
03/27/2024 01:57:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:57:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:57:39 - INFO - __main__ - ID text: qnli_837
03/27/2024 01:58:48 - INFO - __main__ - Mean variance for qnli_837: 0.05259189009666443
03/27/2024 01:58:48 - INFO - __main__ - Mean std for for qnli_837: 0.1860751062631607
03/27/2024 01:58:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:58:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:58:48 - INFO - __main__ - ID text: qnli_759
03/27/2024 01:59:57 - INFO - __main__ - Mean variance for qnli_759: 0.03238949179649353
03/27/2024 01:59:57 - INFO - __main__ - Mean std for for qnli_759: 0.14198817312717438
03/27/2024 01:59:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:59:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:59:57 - INFO - __main__ - ID text: qnli_3112
03/27/2024 02:01:05 - INFO - __main__ - Mean variance for qnli_3112: 0.052318986505270004
03/27/2024 02:01:05 - INFO - __main__ - Mean std for for qnli_3112: 0.18380625545978546
03/27/2024 02:01:05 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:01:05 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:01:05 - INFO - __main__ - ID text: qnli_792
03/27/2024 02:02:14 - INFO - __main__ - Mean variance for qnli_792: 0.05662158504128456
03/27/2024 02:02:14 - INFO - __main__ - Mean std for for qnli_792: 0.18629015982151031
03/27/2024 02:02:14 - INFO - __main__ - 
######## Language: qqp ######## 

03/27/2024 02:02:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:02:14 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:02:14 - INFO - __main__ - ID text: qqp_188208
03/27/2024 02:03:23 - INFO - __main__ - Mean variance for qqp_188208: 0.045805737376213074
03/27/2024 02:03:23 - INFO - __main__ - Mean std for for qqp_188208: 0.18513178825378418
03/27/2024 02:03:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:03:23 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:03:23 - INFO - __main__ - ID text: qqp_180331
03/27/2024 02:04:32 - INFO - __main__ - Mean variance for qqp_180331: 0.04663920775055885
03/27/2024 02:04:32 - INFO - __main__ - Mean std for for qqp_180331: 0.17957426607608795
03/27/2024 02:04:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:04:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:04:32 - INFO - __main__ - ID text: qqp_316526
03/27/2024 02:05:40 - INFO - __main__ - Mean variance for qqp_316526: 0.053920093923807144
03/27/2024 02:05:40 - INFO - __main__ - Mean std for for qqp_316526: 0.18963201344013214
03/27/2024 02:05:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:05:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:05:40 - INFO - __main__ - ID text: qqp_138685
03/27/2024 02:06:49 - INFO - __main__ - Mean variance for qqp_138685: 0.046936821192502975
03/27/2024 02:06:49 - INFO - __main__ - Mean std for for qqp_138685: 0.16859465837478638
03/27/2024 02:06:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:06:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:06:49 - INFO - __main__ - ID text: qqp_22780
03/27/2024 02:07:58 - INFO - __main__ - Mean variance for qqp_22780: 0.04124690592288971
03/27/2024 02:07:58 - INFO - __main__ - Mean std for for qqp_22780: 0.17463307082653046
03/27/2024 02:07:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:07:58 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:07:58 - INFO - __main__ - ID text: qqp_382589
03/27/2024 02:09:07 - INFO - __main__ - Mean variance for qqp_382589: 0.05098980292677879
03/27/2024 02:09:07 - INFO - __main__ - Mean std for for qqp_382589: 0.1843920350074768
03/27/2024 02:09:07 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:09:07 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:09:07 - INFO - __main__ - ID text: qqp_240870
03/27/2024 02:10:15 - INFO - __main__ - Mean variance for qqp_240870: 0.05093279108405113
03/27/2024 02:10:15 - INFO - __main__ - Mean std for for qqp_240870: 0.19050300121307373
03/27/2024 02:10:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:10:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:10:15 - INFO - __main__ - ID text: qqp_281137
03/27/2024 02:11:24 - INFO - __main__ - Mean variance for qqp_281137: 0.04662874713540077
03/27/2024 02:11:24 - INFO - __main__ - Mean std for for qqp_281137: 0.17621344327926636
03/27/2024 02:11:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:11:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:11:24 - INFO - __main__ - ID text: qqp_65444
03/27/2024 02:12:32 - INFO - __main__ - Mean variance for qqp_65444: 0.04323926195502281
03/27/2024 02:12:32 - INFO - __main__ - Mean std for for qqp_65444: 0.1744414120912552
03/27/2024 02:12:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:12:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:12:32 - INFO - __main__ - ID text: qqp_198461
03/27/2024 02:13:41 - INFO - __main__ - Mean variance for qqp_198461: 0.0448068231344223
03/27/2024 02:13:41 - INFO - __main__ - Mean std for for qqp_198461: 0.17398865520954132
03/27/2024 02:13:41 - INFO - __main__ - 
######## Language: rte ######## 

03/27/2024 02:13:41 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:13:41 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:13:41 - INFO - __main__ - ID text: rte_322
03/27/2024 02:14:49 - INFO - __main__ - Mean variance for rte_322: 0.05372143164277077
03/27/2024 02:14:49 - INFO - __main__ - Mean std for for rte_322: 0.18837283551692963
03/27/2024 02:14:49 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:14:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:14:49 - INFO - __main__ - ID text: rte_2261
03/27/2024 02:15:58 - INFO - __main__ - Mean variance for rte_2261: 0.05434911325573921
03/27/2024 02:15:58 - INFO - __main__ - Mean std for for rte_2261: 0.19565190374851227
03/27/2024 02:15:58 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:15:58 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:15:58 - INFO - __main__ - ID text: rte_1200
03/27/2024 02:17:06 - INFO - __main__ - Mean variance for rte_1200: 0.04328488931059837
03/27/2024 02:17:06 - INFO - __main__ - Mean std for for rte_1200: 0.16436944901943207
03/27/2024 02:17:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:17:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:17:06 - INFO - __main__ - ID text: rte_2574
03/27/2024 02:18:14 - INFO - __main__ - Mean variance for rte_2574: 0.033213965594768524
03/27/2024 02:18:14 - INFO - __main__ - Mean std for for rte_2574: 0.14287447929382324
03/27/2024 02:18:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:18:14 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:18:14 - INFO - __main__ - ID text: rte_2533
03/27/2024 02:19:23 - INFO - __main__ - Mean variance for rte_2533: 0.03066040575504303
03/27/2024 02:19:23 - INFO - __main__ - Mean std for for rte_2533: 0.1365683376789093
03/27/2024 02:19:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:19:23 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:19:23 - INFO - __main__ - ID text: rte_1481
03/27/2024 02:20:31 - INFO - __main__ - Mean variance for rte_1481: 0.05605608597397804
03/27/2024 02:20:31 - INFO - __main__ - Mean std for for rte_1481: 0.18530578911304474
03/27/2024 02:20:31 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:20:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:20:31 - INFO - __main__ - ID text: rte_2364
03/27/2024 02:21:40 - INFO - __main__ - Mean variance for rte_2364: 0.05053488537669182
03/27/2024 02:21:40 - INFO - __main__ - Mean std for for rte_2364: 0.1769571751356125
03/27/2024 02:21:40 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:21:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:21:40 - INFO - __main__ - ID text: rte_787
03/27/2024 02:22:48 - INFO - __main__ - Mean variance for rte_787: 0.05760415270924568
03/27/2024 02:22:48 - INFO - __main__ - Mean std for for rte_787: 0.1885668784379959
03/27/2024 02:22:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:22:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:22:48 - INFO - __main__ - ID text: rte_2885
03/27/2024 02:23:56 - INFO - __main__ - Mean variance for rte_2885: 0.03236325457692146
03/27/2024 02:23:56 - INFO - __main__ - Mean std for for rte_2885: 0.143121138215065
03/27/2024 02:23:56 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:23:56 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:23:56 - INFO - __main__ - ID text: rte_284
03/27/2024 02:25:04 - INFO - __main__ - Mean variance for rte_284: 0.04690555855631828
03/27/2024 02:25:04 - INFO - __main__ - Mean std for for rte_284: 0.17654161155223846
03/27/2024 02:25:04 - INFO - __main__ - 
######## Language: sst2 ######## 

03/27/2024 02:25:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:25:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:25:04 - INFO - __main__ - ID text: sst2_93
03/27/2024 02:26:13 - INFO - __main__ - Mean variance for sst2_93: 0.04743706062436104
03/27/2024 02:26:13 - INFO - __main__ - Mean std for for sst2_93: 0.1788504272699356
03/27/2024 02:26:13 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:26:13 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:26:13 - INFO - __main__ - ID text: sst2_1354
03/27/2024 02:27:22 - INFO - __main__ - Mean variance for sst2_1354: 0.049123141914606094
03/27/2024 02:27:22 - INFO - __main__ - Mean std for for sst2_1354: 0.19605153799057007
03/27/2024 02:27:22 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:27:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:27:22 - INFO - __main__ - ID text: sst2_466
03/27/2024 02:28:30 - INFO - __main__ - Mean variance for sst2_466: 0.05719638243317604
03/27/2024 02:28:30 - INFO - __main__ - Mean std for for sst2_466: 0.2118668556213379
03/27/2024 02:28:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:28:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:28:30 - INFO - __main__ - ID text: sst2_1583
03/27/2024 02:29:39 - INFO - __main__ - Mean variance for sst2_1583: 0.04618239402770996
03/27/2024 02:29:39 - INFO - __main__ - Mean std for for sst2_1583: 0.17242048680782318
03/27/2024 02:29:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:29:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:29:39 - INFO - __main__ - ID text: sst2_592
03/27/2024 02:30:47 - INFO - __main__ - Mean variance for sst2_592: 0.05675549432635307
03/27/2024 02:30:47 - INFO - __main__ - Mean std for for sst2_592: 0.19113463163375854
03/27/2024 02:30:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:30:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:30:48 - INFO - __main__ - ID text: sst2_163
03/27/2024 02:31:57 - INFO - __main__ - Mean variance for sst2_163: 0.07757356017827988
03/27/2024 02:31:57 - INFO - __main__ - Mean std for for sst2_163: 0.2506524622440338
03/27/2024 02:31:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:31:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:31:57 - INFO - __main__ - ID text: sst2_1751
03/27/2024 02:33:06 - INFO - __main__ - Mean variance for sst2_1751: 0.04340178892016411
03/27/2024 02:33:06 - INFO - __main__ - Mean std for for sst2_1751: 0.18420326709747314
03/27/2024 02:33:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:33:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:33:06 - INFO - __main__ - ID text: sst2_476
03/27/2024 02:34:15 - INFO - __main__ - Mean variance for sst2_476: 0.044680822640657425
03/27/2024 02:34:15 - INFO - __main__ - Mean std for for sst2_476: 0.1743413209915161
03/27/2024 02:34:15 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:34:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:34:15 - INFO - __main__ - ID text: sst2_1774
03/27/2024 02:35:24 - INFO - __main__ - Mean variance for sst2_1774: 0.0445382297039032
03/27/2024 02:35:24 - INFO - __main__ - Mean std for for sst2_1774: 0.1730673760175705
03/27/2024 02:35:24 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:35:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:35:24 - INFO - __main__ - ID text: sst2_206
03/27/2024 02:36:33 - INFO - __main__ - Mean variance for sst2_206: 0.04981725290417671
03/27/2024 02:36:33 - INFO - __main__ - Mean std for for sst2_206: 0.1897512525320053
03/27/2024 02:36:33 - INFO - __main__ - 
######## Language: stsb ######## 

03/27/2024 02:36:33 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:36:33 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:36:33 - INFO - __main__ - ID text: stsb_778
03/27/2024 02:37:43 - INFO - __main__ - Mean variance for stsb_778: 0.04412415623664856
03/27/2024 02:37:43 - INFO - __main__ - Mean std for for stsb_778: 0.17806947231292725
03/27/2024 02:37:43 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:37:43 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:37:43 - INFO - __main__ - ID text: stsb_569
03/27/2024 02:38:52 - INFO - __main__ - Mean variance for stsb_569: 0.04703553393483162
03/27/2024 02:38:52 - INFO - __main__ - Mean std for for stsb_569: 0.186454176902771
03/27/2024 02:38:52 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:38:52 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:38:52 - INFO - __main__ - ID text: stsb_928
03/27/2024 02:40:01 - INFO - __main__ - Mean variance for stsb_928: 0.044342443346977234
03/27/2024 02:40:01 - INFO - __main__ - Mean std for for stsb_928: 0.1640336960554123
03/27/2024 02:40:01 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:40:01 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:40:01 - INFO - __main__ - ID text: stsb_1301
03/27/2024 02:41:11 - INFO - __main__ - Mean variance for stsb_1301: 0.060098517686128616
03/27/2024 02:41:11 - INFO - __main__ - Mean std for for stsb_1301: 0.20909492671489716
03/27/2024 02:41:11 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:41:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:41:11 - INFO - __main__ - ID text: stsb_747
03/27/2024 02:42:20 - INFO - __main__ - Mean variance for stsb_747: 0.06125159561634064
03/27/2024 02:42:20 - INFO - __main__ - Mean std for for stsb_747: 0.20284168422222137
03/27/2024 02:42:20 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:42:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:42:20 - INFO - __main__ - ID text: stsb_333
03/27/2024 02:43:30 - INFO - __main__ - Mean variance for stsb_333: 0.05069469287991524
03/27/2024 02:43:30 - INFO - __main__ - Mean std for for stsb_333: 0.18540161848068237
03/27/2024 02:43:30 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:43:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:43:30 - INFO - __main__ - ID text: stsb_758
03/27/2024 02:44:39 - INFO - __main__ - Mean variance for stsb_758: 0.05684517323970795
03/27/2024 02:44:39 - INFO - __main__ - Mean std for for stsb_758: 0.19335128366947174
03/27/2024 02:44:39 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:44:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:44:39 - INFO - __main__ - ID text: stsb_727
03/27/2024 02:45:48 - INFO - __main__ - Mean variance for stsb_727: 0.045839909464120865
03/27/2024 02:45:48 - INFO - __main__ - Mean std for for stsb_727: 0.18228517472743988
03/27/2024 02:45:48 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:45:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:45:48 - INFO - __main__ - ID text: stsb_429
03/27/2024 02:46:57 - INFO - __main__ - Mean variance for stsb_429: 0.05095904693007469
03/27/2024 02:46:57 - INFO - __main__ - Mean std for for stsb_429: 0.1914304494857788
03/27/2024 02:46:57 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:46:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:46:57 - INFO - __main__ - ID text: stsb_1372
03/27/2024 02:48:06 - INFO - __main__ - Mean variance for stsb_1372: 0.04741932079195976
03/27/2024 02:48:06 - INFO - __main__ - Mean std for for stsb_1372: 0.1821802407503128
03/27/2024 02:48:06 - INFO - __main__ - 
######## Language: wnli ######## 

03/27/2024 02:48:06 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:48:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:48:06 - INFO - __main__ - ID text: wnli_68
03/27/2024 02:49:16 - INFO - __main__ - Mean variance for wnli_68: 0.054839055985212326
03/27/2024 02:49:16 - INFO - __main__ - Mean std for for wnli_68: 0.1828344613313675
03/27/2024 02:49:16 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:49:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:49:16 - INFO - __main__ - ID text: wnli_18
03/27/2024 02:50:25 - INFO - __main__ - Mean variance for wnli_18: 0.04250713810324669
03/27/2024 02:50:25 - INFO - __main__ - Mean std for for wnli_18: 0.16517354547977448
03/27/2024 02:50:25 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:50:25 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:50:25 - INFO - __main__ - ID text: wnli_43
03/27/2024 02:51:34 - INFO - __main__ - Mean variance for wnli_43: 0.05553505942225456
03/27/2024 02:51:34 - INFO - __main__ - Mean std for for wnli_43: 0.18937136232852936
03/27/2024 02:51:34 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:51:34 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:51:34 - INFO - __main__ - ID text: wnli_136
03/27/2024 02:52:43 - INFO - __main__ - Mean variance for wnli_136: 0.06383993476629257
03/27/2024 02:52:43 - INFO - __main__ - Mean std for for wnli_136: 0.2001245617866516
03/27/2024 02:52:44 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:52:44 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:52:44 - INFO - __main__ - ID text: wnli_62
03/27/2024 02:53:53 - INFO - __main__ - Mean variance for wnli_62: 0.055110443383455276
03/27/2024 02:53:53 - INFO - __main__ - Mean std for for wnli_62: 0.18760144710540771
03/27/2024 02:53:53 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:53:53 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:53:53 - INFO - __main__ - ID text: wnli_41
03/27/2024 02:55:03 - INFO - __main__ - Mean variance for wnli_41: 0.0644904151558876
03/27/2024 02:55:03 - INFO - __main__ - Mean std for for wnli_41: 0.19714657962322235
03/27/2024 02:55:04 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:55:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:55:04 - INFO - __main__ - ID text: wnli_118
03/27/2024 02:56:14 - INFO - __main__ - Mean variance for wnli_118: 0.05523151531815529
03/27/2024 02:56:14 - INFO - __main__ - Mean std for for wnli_118: 0.18962763249874115
03/27/2024 02:56:14 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:56:14 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:56:14 - INFO - __main__ - ID text: wnli_97
03/27/2024 02:57:23 - INFO - __main__ - Mean variance for wnli_97: 0.04367156699299812
03/27/2024 02:57:23 - INFO - __main__ - Mean std for for wnli_97: 0.16201737523078918
03/27/2024 02:57:23 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:57:23 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:57:23 - INFO - __main__ - ID text: wnli_69
03/27/2024 02:58:32 - INFO - __main__ - Mean variance for wnli_69: 0.04579520225524902
03/27/2024 02:58:32 - INFO - __main__ - Mean std for for wnli_69: 0.17871911823749542
03/27/2024 02:58:32 - INFO - __main__ - Applying span masking with "max_span_length = 6" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:58:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:58:32 - INFO - __main__ - ID text: wnli_142
03/27/2024 02:59:41 - INFO - __main__ - Mean variance for wnli_142: 0.048638325184583664
03/27/2024 02:59:41 - INFO - __main__ - Mean std for for wnli_142: 0.17274607717990875
03/27/2024 02:59:41 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.16139629483222961, 'amh_1': 0.1408184915781021, 'amh_2': 0.15041078627109528, 'amh_3': 0.15019108355045319, 'amh_4': 0.15010981261730194, 'amh_5': 0.15885953605175018, 'amh_6': 0.16367082297801971, 'amh_7': 0.14181378483772278, 'amh_8': 0.15837259590625763, 'amh_9': 0.16855917870998383}, 'conll_2003_en': {'conll_2003_en_0': 0.15696699917316437, 'conll_2003_en_1': 0.04859061539173126, 'conll_2003_en_2': 0.044047627598047256, 'conll_2003_en_3': 0.04357804358005524, 'conll_2003_en_4': 0.04175133630633354, 'conll_2003_en_5': 0.14656974375247955, 'conll_2003_en_6': 0.031555622816085815, 'conll_2003_en_7': 0.17197471857070923, 'conll_2003_en_8': 0.16454379260540009, 'conll_2003_en_9': 0.047250669449567795}, 'hau': {'hau_0': 0.03787032514810562, 'hau_1': 0.03197423368692398, 'hau_2': 0.15108425915241241, 'hau_3': 0.025674020871520042, 'hau_4': 0.042130809277296066, 'hau_5': 0.035824209451675415, 'hau_6': 0.037088919430971146, 'hau_7': 0.04460398480296135, 'hau_8': 0.03699831664562225, 'hau_9': 0.042806226760149}, 'ibo': {'ibo_0': 0.04299941658973694, 'ibo_1': 0.039215337485075, 'ibo_2': 0.04604488983750343, 'ibo_3': 0.04972641170024872, 'ibo_4': 0.048721086233854294, 'ibo_5': 0.038644153624773026, 'ibo_6': 0.04205477237701416, 'ibo_7': 0.04418989643454552, 'ibo_8': 0.040317606180906296, 'ibo_9': 0.03896227106451988}, 'kin': {'kin_0': 0.04767166078090668, 'kin_1': 0.045212406665086746, 'kin_2': 0.03843085467815399, 'kin_3': 0.040596362203359604, 'kin_4': 0.04300710931420326, 'kin_5': 0.04512304067611694, 'kin_6': 0.03548605740070343, 'kin_7': 0.045636966824531555, 'kin_8': 0.035706259310245514, 'kin_9': 0.03785325959324837}, 'lug': {'lug_0': 0.04012266546487808, 'lug_1': 0.048471733927726746, 'lug_2': 0.0245188120752573, 'lug_3': 0.03158621862530708, 'lug_4': 0.04600338637828827, 'lug_5': 0.0447043813765049, 'lug_6': 0.0429597906768322, 'lug_7': 0.047373607754707336, 'lug_8': 0.04500859975814819, 'lug_9': 0.04453616216778755}, 'luo': {'luo_0': 0.0312516875565052, 'luo_1': 0.036339279264211655, 'luo_2': 0.04347120225429535, 'luo_3': 0.03140415623784065, 'luo_4': 0.04356611892580986, 'luo_5': 0.038931820541620255, 'luo_6': 0.040099721401929855, 'luo_7': 0.053094133734703064, 'luo_8': 0.046322669833898544, 'luo_9': 0.046280983835458755}, 'pcm': {'pcm_0': 0.03836404159665108, 'pcm_1': 0.04808150604367256, 'pcm_2': 0.0458211712539196, 'pcm_3': 0.039881352335214615, 'pcm_4': 0.042665038257837296, 'pcm_5': 0.049783095717430115, 'pcm_6': 0.04186056926846504, 'pcm_7': 0.04380818083882332, 'pcm_8': 0.044456515461206436, 'pcm_9': 0.03713205084204674}, 'swa': {'swa_0': 0.04436229169368744, 'swa_1': 0.049897804856300354, 'swa_2': 0.042655497789382935, 'swa_3': 0.03848101943731308, 'swa_4': 0.03414130583405495, 'swa_5': 0.0327865295112133, 'swa_6': 0.036725014448165894, 'swa_7': 0.04492773488163948, 'swa_8': 0.03674760088324547, 'swa_9': 0.04667706787586212}, 'wol': {'wol_0': 0.04434405639767647, 'wol_1': 0.044217001646757126, 'wol_2': 0.04728753864765167, 'wol_3': 0.06760188192129135, 'wol_4': 0.04193262383341789, 'wol_5': 0.04325827956199646, 'wol_6': 0.15542104840278625, 'wol_7': 0.05109231173992157, 'wol_8': 0.03642047569155693, 'wol_9': 0.040660109370946884}, 'yor': {'yor_0': 0.14288058876991272, 'yor_1': 0.13804464042186737, 'yor_2': 0.04196888580918312, 'yor_3': 0.043179452419281006, 'yor_4': 0.13444136083126068, 'yor_5': 0.09890095144510269, 'yor_6': 0.04073533043265343, 'yor_7': 0.1336546391248703, 'yor_8': 0.04073220118880272, 'yor_9': 0.1393061876296997}, 'zh': {'zh_0': 0.1647060364484787, 'zh_1': 0.1196209192276001, 'zh_2': 0.1318722516298294, 'zh_3': 0.14701707661151886, 'zh_4': 0.18386732041835785, 'zh_5': 0.1645204871892929, 'zh_6': 0.13399045169353485, 'zh_7': 0.13075725734233856, 'zh_8': 0.13247555494308472, 'zh_9': 0.1469947248697281}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.0716170147061348, 'arabic--3340323169760881569-0': 0.04885891079902649, 'arabic-4544770624843559444-1': 0.042771611362695694, 'arabic-891952409566422966-0': 0.0444754958152771, 'arabic-3659291834714572527-0': 0.11780337244272232, 'arabic-9215226117011890166-0': 0.03935781121253967, 'arabic-6300896128538259469-0': 0.050101324915885925, 'arabic-2382507508588518905-0': 0.04013596102595329, 'arabic-1871632801094859741-1': 0.04006366804242134, 'arabic--7365809756232083807-0': 0.04371531680226326}, 'russian': {'russian-3457655197371763238-61': 0.029628388583660126, 'russian--1914807805318993335-49': 0.052472371608018875, 'russian--3307989180606173904-1': 0.027153993025422096, 'russian--2219512001175315660-0': 0.02706190198659897, 'russian--7076080992904718941-0': 0.02798864245414734, 'russian--6565862953558739013-1': 0.029758499935269356, 'russian--5098374684590548031-42': 0.0438651442527771, 'russian-3573734219967447693-1': 0.027742484584450722, 'russian--4521001374120505750-6': 0.04371592774987221, 'russian--1308382244018658424-9': 0.028617987409234047}, 'bengali': {'bengali--1199493965132146131-3': 0.09583625942468643, 'bengali-1807801556888134437-2': 0.09499449282884598, 'bengali-2113189855114052041-2': 0.09915196895599365, 'bengali--2527914488250041207-0': 0.10520467162132263, 'bengali--8260793280894408063-14': 0.1139976754784584, 'bengali-8313009204852557186-4': 0.09980978816747665, 'bengali--415964033364840061-0': 0.09642622619867325, 'bengali--4696865548928858824-5': 0.09502970427274704, 'bengali-6505224142472931712-1': 0.09580782055854797, 'bengali-599666913917674019-13': 0.1326724737882614}, 'telugu': {'telugu--3977923017846260053-0': 0.036891303956508636, 'telugu-2254198842560317781-0': 0.035384539514780045, 'telugu-5435080895440121384-0': 0.03827248141169548, 'telugu--1182505954974481191-2': 0.04595804214477539, 'telugu-119276511844068401-0': 0.04214942082762718, 'telugu--4111208545071789922-0': 0.03796878829598427, 'telugu--5922002196428211484-132': 0.1172448918223381, 'telugu--1817004721681155192-3': 0.037614237517118454, 'telugu-1602214480303968359-1': 0.04008986055850983, 'telugu--6495674712575945374-0': 0.0401068739593029}, 'finnish': {'finnish-6987763079741579998-0': 0.04541914165019989, 'finnish--8516625414052383903-0': 0.046102896332740784, 'finnish-4168898766124519517-0': 0.07007670402526855, 'finnish-783166898848672321-4': 0.05056905746459961, 'finnish-2208556840820233322-0': 0.04403555765748024, 'finnish--1981034637152391615-58': 0.025626301765441895, 'finnish-8689148941295949475-9': 0.024856247007846832, 'finnish-6900867945323517614-2': 0.070622019469738, 'finnish-8023130170017405987-1': 0.03381166607141495, 'finnish-5001457972111781248-0': 0.02671312727034092}, 'swahili': {'swahili-7146838206539641546-10': 0.05107317864894867, 'swahili-7655634199707176439-0': 0.028264857828617096, 'swahili--4427180714267750534-1': 0.044929515570402145, 'swahili-4141779435061573138-0': 0.02976200543344021, 'swahili--5424518593960879661-0': 0.027907712385058403, 'swahili-4281845253405461584-0': 0.053084224462509155, 'swahili-4899164839984299762-2': 0.04702771082520485, 'swahili-1288750786498500530-0': 0.04926685988903046, 'swahili--2671134792844015228-3': 0.03198722004890442, 'swahili-4873225622490039485-2': 0.028369054198265076}, 'korean': {'korean--2869472392602314906-0': 0.08889073878526688, 'korean-4375199563921600155-0': 0.03905242681503296, 'korean--1715118423211755607-13': 0.029900023713707924, 'korean--8028977936696142934-9': 0.04093964770436287, 'korean-2807245034690443837-5': 0.13330292701721191, 'korean-3862451817164408576-0': 0.03878692165017128, 'korean-148115504649351135-0': 0.0697670504450798, 'korean--2885837157239647036-2': 0.13948820531368256, 'korean--1743220297777040002-22': 0.11435377597808838, 'korean-3268522368206106332-0': 0.1848059743642807}, 'indonesian': {'indonesian-9141868818310916091-0': 0.02938375063240528, 'indonesian-4609394337632433932-1': 0.06800039857625961, 'indonesian-2763468883290577923-0': 0.02830558829009533, 'indonesian-5633590583948933406-0': 0.03430624678730965, 'indonesian--5961409780035435015-0': 0.02661292441189289, 'indonesian-6274547934693326697-0': 0.028979739174246788, 'indonesian--2516321763567853082-0': 0.02518174611032009, 'indonesian-2048796427556239759-4': 0.04939065873622894, 'indonesian-6246592469157278547-2': 0.036760102957487106, 'indonesian--3724318458930736973-1': 0.026390263810753822}, 'english': {'english-2852412434797041176-6': 0.07840350270271301, 'english--1463732605740571606-0': 0.03560250997543335, 'english-5441411281255470421-0': 0.03503110632300377, 'english-7294054492486093447-1': 0.032354045659303665, 'english-8820750127045023244-0': 0.04861007258296013, 'english--506693546683012611-2': 0.06860540062189102, 'english-745411798111651115-0': 0.033341411501169205, 'english-7740772185887912651-0': 0.03541332110762596, 'english-383873188776267137-19': 0.033534370362758636, 'english--8277537578703156284-0': 0.03498723730444908}}, 'glue': {'cola': {'cola_228': 0.04868265986442566, 'cola_51': 0.043059397488832474, 'cola_563': 0.1628420352935791, 'cola_501': 0.05089232325553894, 'cola_457': 0.05399375036358833, 'cola_285': 0.04539039731025696, 'cola_209': 0.04575332626700401, 'cola_178': 0.04634964093565941, 'cola_864': 0.04361974075436592, 'cola_65': 0.038832467049360275}, 'mnli': {'mnli_488': 0.06084689125418663, 'mnli_1535': 0.057462479919195175, 'mnli_3582': 0.05244649574160576, 'mnli_3811': 0.04458633437752724, 'mnli_8279': 0.04534142091870308, 'mnli_434': 0.04738586023449898, 'mnli_9195': 0.06194568797945976, 'mnli_3257': 0.043427590280771255, 'mnli_8928': 0.05766269564628601, 'mnli_6873': 0.05763654783368111}, 'mrpc': {'mrpc_451': 0.06474218517541885, 'mrpc_919': 0.053694456815719604, 'mrpc_1206': 0.0630296990275383, 'mrpc_569': 0.04970934987068176, 'mrpc_1657': 0.05453520640730858, 'mrpc_13': 0.06131294369697571, 'mrpc_1554': 0.05511845648288727, 'mrpc_1650': 0.12329629063606262, 'mrpc_326': 0.05843931809067726, 'mrpc_1429': 0.06662086397409439}, 'qnli': {'qnli_3462': 0.06084665656089783, 'qnli_2787': 0.053796399384737015, 'qnli_2276': 0.05317666009068489, 'qnli_1273': 0.05710810795426369, 'qnli_1763': 0.05850130319595337, 'qnli_2757': 0.05305367708206177, 'qnli_837': 0.05259189009666443, 'qnli_759': 0.03238949179649353, 'qnli_3112': 0.052318986505270004, 'qnli_792': 0.05662158504128456}, 'qqp': {'qqp_188208': 0.045805737376213074, 'qqp_180331': 0.04663920775055885, 'qqp_316526': 0.053920093923807144, 'qqp_138685': 0.046936821192502975, 'qqp_22780': 0.04124690592288971, 'qqp_382589': 0.05098980292677879, 'qqp_240870': 0.05093279108405113, 'qqp_281137': 0.04662874713540077, 'qqp_65444': 0.04323926195502281, 'qqp_198461': 0.0448068231344223}, 'rte': {'rte_322': 0.05372143164277077, 'rte_2261': 0.05434911325573921, 'rte_1200': 0.04328488931059837, 'rte_2574': 0.033213965594768524, 'rte_2533': 0.03066040575504303, 'rte_1481': 0.05605608597397804, 'rte_2364': 0.05053488537669182, 'rte_787': 0.05760415270924568, 'rte_2885': 0.03236325457692146, 'rte_284': 0.04690555855631828}, 'sst2': {'sst2_93': 0.04743706062436104, 'sst2_1354': 0.049123141914606094, 'sst2_466': 0.05719638243317604, 'sst2_1583': 0.04618239402770996, 'sst2_592': 0.05675549432635307, 'sst2_163': 0.07757356017827988, 'sst2_1751': 0.04340178892016411, 'sst2_476': 0.044680822640657425, 'sst2_1774': 0.0445382297039032, 'sst2_206': 0.04981725290417671}, 'stsb': {'stsb_778': 0.04412415623664856, 'stsb_569': 0.04703553393483162, 'stsb_928': 0.044342443346977234, 'stsb_1301': 0.060098517686128616, 'stsb_747': 0.06125159561634064, 'stsb_333': 0.05069469287991524, 'stsb_758': 0.05684517323970795, 'stsb_727': 0.045839909464120865, 'stsb_429': 0.05095904693007469, 'stsb_1372': 0.04741932079195976}, 'wnli': {'wnli_68': 0.054839055985212326, 'wnli_18': 0.04250713810324669, 'wnli_43': 0.05553505942225456, 'wnli_136': 0.06383993476629257, 'wnli_62': 0.055110443383455276, 'wnli_41': 0.0644904151558876, 'wnli_118': 0.05523151531815529, 'wnli_97': 0.04367156699299812, 'wnli_69': 0.04579520225524902, 'wnli_142': 0.048638325184583664}}}
03/27/2024 02:59:41 - INFO - __main__ - Saving data in SD_per_task_span_6.json
03/27/2024 02:59:41 - INFO - __main__ - Saving data in var_per_task_span_6.json
03/27/2024 02:59:41 - INFO - __main__ - 
UNCERTAINTY (SD)

03/27/2024 02:59:41 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.15442022681236267, 'conll_2003_en': 0.0896829217672348, 'hau': 0.048605527728796005, 'ibo': 0.04308758303523064, 'kin': 0.04147239774465561, 'lug': 0.04152853414416313, 'luo': 0.0410761758685112, 'pcm': 0.04318535700440407, 'swa': 0.04074018448591232, 'wol': 0.05722353607416153, 'yor': 0.09538442641496658, 'zh': 0.1455821990966797}, 'tydiqa': {'arabic': 0.05389004945755005, 'russian': 0.03380053490400314, 'bengali': 0.10289311408996582, 'telugu': 0.04716804251074791, 'finnish': 0.043783269822597504, 'swahili': 0.03916723281145096, 'korean': 0.08792877197265625, 'indonesian': 0.03533114120364189, 'english': 0.043588295578956604}, 'glue': {'cola': 0.05794157460331917, 'mnli': 0.05287420004606247, 'mrpc': 0.06504987180233002, 'qnli': 0.05304047465324402, 'qqp': 0.04711461812257767, 'rte': 0.0458693727850914, 'sst2': 0.051670610904693604, 'stsb': 0.050861041992902756, 'wnli': 0.05296586826443672}}

###############################################################################
Hábrók Cluster
Job 7761474 for user s3919609
Finished at: Wed Mar 27 02:59:42 CET 2024

Job details:
============

Job ID              : 7761474
Name                : std_monte_carlo_span_6
User                : s3919609
Partition           : regularmedium
Nodes               : node95
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-26T21:12:04
Start               : 2024-03-26T21:12:04
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 05:47:38
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 20G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
