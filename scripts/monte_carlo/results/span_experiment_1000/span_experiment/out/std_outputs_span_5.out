The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/26/2024 21:11:50 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/26/2024 21:11:50 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:11:50 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:11:50 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/26/2024 21:11:51 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/26/2024 21:11:51 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/26/2024 21:11:51 - INFO - __main__ - Running MONTE CARLO experiment: span
03/26/2024 21:11:51 - INFO - __main__ - Loading data from loss_per_task_span_5.json
03/26/2024 21:11:51 - INFO - __main__ - 
LOSS

03/26/2024 21:11:51 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8059361577033997, 'conll_2003_en': 0.7308732867240906, 'hau': 0.6648865342140198, 'ibo': 0.6401486396789551, 'kin': 0.6879958510398865, 'lug': 0.6300790309906006, 'luo': 0.6623767018318176, 'pcm': 0.7126871347427368, 'swa': 0.6705790162086487, 'wol': 0.6978886127471924, 'yor': 0.7362298369407654, 'zh': 0.8579775094985962}, 'tydiqa': {'arabic': 0.8399260640144348, 'russian': 0.6683318018913269, 'bengali': 0.6921597123146057, 'telugu': 0.7796175479888916, 'finnish': 0.6107715368270874, 'swahili': 0.600334882736206, 'korean': 0.8729847073554993, 'indonesian': 0.5485635995864868, 'english': 0.2757948637008667}, 'glue': {'cola': 0.5557262301445007, 'mnli': 0.41712838411331177, 'mrpc': 0.29594749212265015, 'qnli': 0.37529584765434265, 'qqp': 0.4714593291282654, 'rte': 0.3381616473197937, 'sst2': 0.575677216053009, 'stsb': 0.392253577709198, 'wnli': 0.29269036650657654}}
03/26/2024 21:11:51 - INFO - __main__ - Lowest losses:
03/26/2024 21:11:51 - INFO - __main__ - ID: wnli_43, Loss: 0.022215427830815315
03/26/2024 21:11:51 - INFO - __main__ - ID: qnli_1763, Loss: 0.08155893534421921
03/26/2024 21:11:51 - INFO - __main__ - ID: english-383873188776267137-19, Loss: 0.08426132053136826
03/26/2024 21:11:51 - INFO - __main__ - ID: mrpc_1657, Loss: 0.14751271903514862
03/26/2024 21:11:51 - INFO - __main__ - ID: rte_1200, Loss: 0.15088370442390442
03/26/2024 21:11:51 - INFO - __main__ - Highest losses:
03/26/2024 21:11:51 - INFO - __main__ - ID: korean--2869472392602314906-0, Loss: 0.8900707364082336
03/26/2024 21:11:51 - INFO - __main__ - ID: korean-3268522368206106332-0, Loss: 0.9041715860366821
03/26/2024 21:11:51 - INFO - __main__ - ID: korean-2807245034690443837-5, Loss: 0.9045848250389099
03/26/2024 21:11:51 - INFO - __main__ - ID: zh_4, Loss: 0.9216915369033813
03/26/2024 21:11:51 - INFO - __main__ - ID: conll_2003_en_6, Loss: 1.032435417175293
03/26/2024 21:11:51 - INFO - __main__ - Monte Carlo samples: 100
03/26/2024 21:11:51 - INFO - __main__ - Training mode: True
03/26/2024 21:11:51 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/26/2024 21:11:51 - INFO - __main__ - 
######## Language: amh ######## 

03/26/2024 21:11:51 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:11:51 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:11:51 - INFO - __main__ - ID text: amh_0
03/26/2024 21:13:04 - INFO - __main__ - Mean variance for amh_0: 0.15221337974071503
03/26/2024 21:13:04 - INFO - __main__ - Mean std for for amh_0: 0.341214656829834
03/26/2024 21:13:04 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:13:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:13:04 - INFO - __main__ - ID text: amh_1
03/26/2024 21:14:15 - INFO - __main__ - Mean variance for amh_1: 0.14086584746837616
03/26/2024 21:14:15 - INFO - __main__ - Mean std for for amh_1: 0.32602980732917786
03/26/2024 21:14:15 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:14:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:14:15 - INFO - __main__ - ID text: amh_2
03/26/2024 21:15:26 - INFO - __main__ - Mean variance for amh_2: 0.1673775315284729
03/26/2024 21:15:26 - INFO - __main__ - Mean std for for amh_2: 0.35830628871917725
03/26/2024 21:15:26 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:15:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:15:26 - INFO - __main__ - ID text: amh_3
03/26/2024 21:16:36 - INFO - __main__ - Mean variance for amh_3: 0.14910657703876495
03/26/2024 21:16:36 - INFO - __main__ - Mean std for for amh_3: 0.33523961901664734
03/26/2024 21:16:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:16:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:16:36 - INFO - __main__ - ID text: amh_4
03/26/2024 21:17:47 - INFO - __main__ - Mean variance for amh_4: 0.14711035788059235
03/26/2024 21:17:47 - INFO - __main__ - Mean std for for amh_4: 0.33681929111480713
03/26/2024 21:17:47 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:17:47 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:17:47 - INFO - __main__ - ID text: amh_5
03/26/2024 21:18:57 - INFO - __main__ - Mean variance for amh_5: 0.18162833154201508
03/26/2024 21:18:57 - INFO - __main__ - Mean std for for amh_5: 0.3736855089664459
03/26/2024 21:18:57 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:18:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:18:57 - INFO - __main__ - ID text: amh_6
03/26/2024 21:20:07 - INFO - __main__ - Mean variance for amh_6: 0.14408324658870697
03/26/2024 21:20:07 - INFO - __main__ - Mean std for for amh_6: 0.3293381631374359
03/26/2024 21:20:07 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:20:07 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:20:07 - INFO - __main__ - ID text: amh_7
03/26/2024 21:21:17 - INFO - __main__ - Mean variance for amh_7: 0.1688663512468338
03/26/2024 21:21:17 - INFO - __main__ - Mean std for for amh_7: 0.3601616322994232
03/26/2024 21:21:17 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:21:17 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:21:17 - INFO - __main__ - ID text: amh_8
03/26/2024 21:22:28 - INFO - __main__ - Mean variance for amh_8: 0.15342287719249725
03/26/2024 21:22:28 - INFO - __main__ - Mean std for for amh_8: 0.33914974331855774
03/26/2024 21:22:28 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:22:28 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:22:28 - INFO - __main__ - ID text: amh_9
03/26/2024 21:23:38 - INFO - __main__ - Mean variance for amh_9: 0.15627366304397583
03/26/2024 21:23:38 - INFO - __main__ - Mean std for for amh_9: 0.34339669346809387
03/26/2024 21:23:38 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/26/2024 21:23:38 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:23:38 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:23:38 - INFO - __main__ - ID text: conll_2003_en_0
03/26/2024 21:24:48 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.163121297955513
03/26/2024 21:24:48 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.35973644256591797
03/26/2024 21:24:48 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:24:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:24:48 - INFO - __main__ - ID text: conll_2003_en_1
03/26/2024 21:25:59 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.051558032631874084
03/26/2024 21:25:59 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.20072495937347412
03/26/2024 21:25:59 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:25:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:25:59 - INFO - __main__ - ID text: conll_2003_en_2
03/26/2024 21:27:09 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.05202525481581688
03/26/2024 21:27:09 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.18043501675128937
03/26/2024 21:27:09 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:27:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:27:09 - INFO - __main__ - ID text: conll_2003_en_3
03/26/2024 21:28:19 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.0383925698697567
03/26/2024 21:28:19 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.167363703250885
03/26/2024 21:28:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:28:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:28:19 - INFO - __main__ - ID text: conll_2003_en_4
03/26/2024 21:29:29 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.04638194665312767
03/26/2024 21:29:29 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.19246794283390045
03/26/2024 21:29:29 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:29:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:29:29 - INFO - __main__ - ID text: conll_2003_en_5
03/26/2024 21:30:39 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.15740908682346344
03/26/2024 21:30:39 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.3561900854110718
03/26/2024 21:30:39 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:30:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:30:39 - INFO - __main__ - ID text: conll_2003_en_6
03/26/2024 21:31:51 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.053161412477493286
03/26/2024 21:31:51 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.20788003504276276
03/26/2024 21:31:52 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:31:52 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:31:52 - INFO - __main__ - ID text: conll_2003_en_7
03/26/2024 21:33:02 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.1718515157699585
03/26/2024 21:33:02 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.37414053082466125
03/26/2024 21:33:02 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:33:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:33:02 - INFO - __main__ - ID text: conll_2003_en_8
03/26/2024 21:34:12 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.16410070657730103
03/26/2024 21:34:12 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.36518797278404236
03/26/2024 21:34:12 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:34:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:34:12 - INFO - __main__ - ID text: conll_2003_en_9
03/26/2024 21:35:22 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.03830087557435036
03/26/2024 21:35:22 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.1620100885629654
03/26/2024 21:35:22 - INFO - __main__ - 
######## Language: hau ######## 

03/26/2024 21:35:22 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:35:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:35:22 - INFO - __main__ - ID text: hau_0
03/26/2024 21:36:32 - INFO - __main__ - Mean variance for hau_0: 0.03759671375155449
03/26/2024 21:36:32 - INFO - __main__ - Mean std for for hau_0: 0.15198075771331787
03/26/2024 21:36:32 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:36:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:36:32 - INFO - __main__ - ID text: hau_1
03/26/2024 21:37:42 - INFO - __main__ - Mean variance for hau_1: 0.04033864662051201
03/26/2024 21:37:42 - INFO - __main__ - Mean std for for hau_1: 0.1750076413154602
03/26/2024 21:37:42 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:37:42 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:37:42 - INFO - __main__ - ID text: hau_2
03/26/2024 21:38:52 - INFO - __main__ - Mean variance for hau_2: 0.1457180231809616
03/26/2024 21:38:52 - INFO - __main__ - Mean std for for hau_2: 0.3425309658050537
03/26/2024 21:38:52 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:38:52 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:38:52 - INFO - __main__ - ID text: hau_3
03/26/2024 21:40:02 - INFO - __main__ - Mean variance for hau_3: 0.023581653833389282
03/26/2024 21:40:02 - INFO - __main__ - Mean std for for hau_3: 0.12025365978479385
03/26/2024 21:40:02 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:40:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:40:02 - INFO - __main__ - ID text: hau_4
03/26/2024 21:41:12 - INFO - __main__ - Mean variance for hau_4: 0.046151090413331985
03/26/2024 21:41:12 - INFO - __main__ - Mean std for for hau_4: 0.16796772181987762
03/26/2024 21:41:12 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:41:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:41:12 - INFO - __main__ - ID text: hau_5
03/26/2024 21:42:22 - INFO - __main__ - Mean variance for hau_5: 0.033779338002204895
03/26/2024 21:42:22 - INFO - __main__ - Mean std for for hau_5: 0.14353369176387787
03/26/2024 21:42:22 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:42:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:42:22 - INFO - __main__ - ID text: hau_6
03/26/2024 21:43:32 - INFO - __main__ - Mean variance for hau_6: 0.051751747727394104
03/26/2024 21:43:32 - INFO - __main__ - Mean std for for hau_6: 0.18221938610076904
03/26/2024 21:43:32 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:43:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:43:32 - INFO - __main__ - ID text: hau_7
03/26/2024 21:44:42 - INFO - __main__ - Mean variance for hau_7: 0.04408809170126915
03/26/2024 21:44:42 - INFO - __main__ - Mean std for for hau_7: 0.16345857083797455
03/26/2024 21:44:42 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:44:42 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:44:42 - INFO - __main__ - ID text: hau_8
03/26/2024 21:45:52 - INFO - __main__ - Mean variance for hau_8: 0.03631770983338356
03/26/2024 21:45:52 - INFO - __main__ - Mean std for for hau_8: 0.1501798927783966
03/26/2024 21:45:52 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:45:52 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:45:52 - INFO - __main__ - ID text: hau_9
03/26/2024 21:47:02 - INFO - __main__ - Mean variance for hau_9: 0.04334677755832672
03/26/2024 21:47:02 - INFO - __main__ - Mean std for for hau_9: 0.1680082231760025
03/26/2024 21:47:02 - INFO - __main__ - 
######## Language: ibo ######## 

03/26/2024 21:47:02 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:47:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:47:02 - INFO - __main__ - ID text: ibo_0
03/26/2024 21:48:12 - INFO - __main__ - Mean variance for ibo_0: 0.03696133568882942
03/26/2024 21:48:12 - INFO - __main__ - Mean std for for ibo_0: 0.15711940824985504
03/26/2024 21:48:12 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:48:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:48:12 - INFO - __main__ - ID text: ibo_1
03/26/2024 21:49:22 - INFO - __main__ - Mean variance for ibo_1: 0.04390252009034157
03/26/2024 21:49:22 - INFO - __main__ - Mean std for for ibo_1: 0.1703176647424698
03/26/2024 21:49:22 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:49:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:49:22 - INFO - __main__ - ID text: ibo_2
03/26/2024 21:50:32 - INFO - __main__ - Mean variance for ibo_2: 0.0445658303797245
03/26/2024 21:50:32 - INFO - __main__ - Mean std for for ibo_2: 0.17045839130878448
03/26/2024 21:50:32 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:50:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:50:32 - INFO - __main__ - ID text: ibo_3
03/26/2024 21:51:43 - INFO - __main__ - Mean variance for ibo_3: 0.05077508091926575
03/26/2024 21:51:43 - INFO - __main__ - Mean std for for ibo_3: 0.20117805898189545
03/26/2024 21:51:43 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:51:43 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:51:43 - INFO - __main__ - ID text: ibo_4
03/26/2024 21:52:53 - INFO - __main__ - Mean variance for ibo_4: 0.04254136607050896
03/26/2024 21:52:53 - INFO - __main__ - Mean std for for ibo_4: 0.1698906421661377
03/26/2024 21:52:53 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:52:53 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:52:53 - INFO - __main__ - ID text: ibo_5
03/26/2024 21:54:03 - INFO - __main__ - Mean variance for ibo_5: 0.04696773365139961
03/26/2024 21:54:03 - INFO - __main__ - Mean std for for ibo_5: 0.18577884137630463
03/26/2024 21:54:03 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:54:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:54:03 - INFO - __main__ - ID text: ibo_6
03/26/2024 21:55:14 - INFO - __main__ - Mean variance for ibo_6: 0.04400277137756348
03/26/2024 21:55:14 - INFO - __main__ - Mean std for for ibo_6: 0.17159634828567505
03/26/2024 21:55:14 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:55:14 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:55:14 - INFO - __main__ - ID text: ibo_7
03/26/2024 21:56:24 - INFO - __main__ - Mean variance for ibo_7: 0.04499199986457825
03/26/2024 21:56:24 - INFO - __main__ - Mean std for for ibo_7: 0.16706889867782593
03/26/2024 21:56:24 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:56:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:56:24 - INFO - __main__ - ID text: ibo_8
03/26/2024 21:57:34 - INFO - __main__ - Mean variance for ibo_8: 0.04082901403307915
03/26/2024 21:57:34 - INFO - __main__ - Mean std for for ibo_8: 0.17282287776470184
03/26/2024 21:57:34 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:57:34 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:57:34 - INFO - __main__ - ID text: ibo_9
03/26/2024 21:58:44 - INFO - __main__ - Mean variance for ibo_9: 0.04311821982264519
03/26/2024 21:58:44 - INFO - __main__ - Mean std for for ibo_9: 0.1696481704711914
03/26/2024 21:58:44 - INFO - __main__ - 
######## Language: kin ######## 

03/26/2024 21:58:44 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:58:44 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:58:44 - INFO - __main__ - ID text: kin_0
03/26/2024 21:59:54 - INFO - __main__ - Mean variance for kin_0: 0.04553024470806122
03/26/2024 21:59:54 - INFO - __main__ - Mean std for for kin_0: 0.17045359313488007
03/26/2024 21:59:54 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:59:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 21:59:54 - INFO - __main__ - ID text: kin_1
03/26/2024 22:01:05 - INFO - __main__ - Mean variance for kin_1: 0.041226863861083984
03/26/2024 22:01:05 - INFO - __main__ - Mean std for for kin_1: 0.16718097031116486
03/26/2024 22:01:05 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:01:05 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:01:05 - INFO - __main__ - ID text: kin_2
03/26/2024 22:02:15 - INFO - __main__ - Mean variance for kin_2: 0.04395046830177307
03/26/2024 22:02:15 - INFO - __main__ - Mean std for for kin_2: 0.1889321655035019
03/26/2024 22:02:15 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:02:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:02:15 - INFO - __main__ - ID text: kin_3
03/26/2024 22:03:25 - INFO - __main__ - Mean variance for kin_3: 0.04241446778178215
03/26/2024 22:03:25 - INFO - __main__ - Mean std for for kin_3: 0.1653185933828354
03/26/2024 22:03:25 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:03:25 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:03:25 - INFO - __main__ - ID text: kin_4
03/26/2024 22:04:35 - INFO - __main__ - Mean variance for kin_4: 0.04182589054107666
03/26/2024 22:04:35 - INFO - __main__ - Mean std for for kin_4: 0.16195280849933624
03/26/2024 22:04:35 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:04:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:04:35 - INFO - __main__ - ID text: kin_5
03/26/2024 22:05:46 - INFO - __main__ - Mean variance for kin_5: 0.04134407266974449
03/26/2024 22:05:46 - INFO - __main__ - Mean std for for kin_5: 0.17795796692371368
03/26/2024 22:05:46 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:05:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:05:46 - INFO - __main__ - ID text: kin_6
03/26/2024 22:06:56 - INFO - __main__ - Mean variance for kin_6: 0.034388601779937744
03/26/2024 22:06:56 - INFO - __main__ - Mean std for for kin_6: 0.1459326595067978
03/26/2024 22:06:56 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:06:56 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:06:56 - INFO - __main__ - ID text: kin_7
03/26/2024 22:08:07 - INFO - __main__ - Mean variance for kin_7: 0.03658905252814293
03/26/2024 22:08:07 - INFO - __main__ - Mean std for for kin_7: 0.15230271220207214
03/26/2024 22:08:07 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:08:07 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:08:07 - INFO - __main__ - ID text: kin_8
03/26/2024 22:09:18 - INFO - __main__ - Mean variance for kin_8: 0.03664666786789894
03/26/2024 22:09:18 - INFO - __main__ - Mean std for for kin_8: 0.16299985349178314
03/26/2024 22:09:18 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:09:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:09:18 - INFO - __main__ - ID text: kin_9
03/26/2024 22:10:28 - INFO - __main__ - Mean variance for kin_9: 0.03798076882958412
03/26/2024 22:10:28 - INFO - __main__ - Mean std for for kin_9: 0.1657475084066391
03/26/2024 22:10:28 - INFO - __main__ - 
######## Language: lug ######## 

03/26/2024 22:10:28 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:10:28 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:10:28 - INFO - __main__ - ID text: lug_0
03/26/2024 22:11:39 - INFO - __main__ - Mean variance for lug_0: 0.03797736391425133
03/26/2024 22:11:39 - INFO - __main__ - Mean std for for lug_0: 0.15370650589466095
03/26/2024 22:11:39 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:11:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:11:39 - INFO - __main__ - ID text: lug_1
03/26/2024 22:12:49 - INFO - __main__ - Mean variance for lug_1: 0.0502893440425396
03/26/2024 22:12:49 - INFO - __main__ - Mean std for for lug_1: 0.17778408527374268
03/26/2024 22:12:49 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:12:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:12:49 - INFO - __main__ - ID text: lug_2
03/26/2024 22:14:00 - INFO - __main__ - Mean variance for lug_2: 0.024998286738991737
03/26/2024 22:14:00 - INFO - __main__ - Mean std for for lug_2: 0.12225949019193649
03/26/2024 22:14:00 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:14:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:14:00 - INFO - __main__ - ID text: lug_3
03/26/2024 22:15:10 - INFO - __main__ - Mean variance for lug_3: 0.03445734456181526
03/26/2024 22:15:10 - INFO - __main__ - Mean std for for lug_3: 0.14569495618343353
03/26/2024 22:15:10 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:15:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:15:10 - INFO - __main__ - ID text: lug_4
03/26/2024 22:16:20 - INFO - __main__ - Mean variance for lug_4: 0.0402483269572258
03/26/2024 22:16:20 - INFO - __main__ - Mean std for for lug_4: 0.16493280231952667
03/26/2024 22:16:20 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:16:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:16:20 - INFO - __main__ - ID text: lug_5
03/26/2024 22:17:32 - INFO - __main__ - Mean variance for lug_5: 0.043001722544431686
03/26/2024 22:17:32 - INFO - __main__ - Mean std for for lug_5: 0.16360333561897278
03/26/2024 22:17:33 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:17:33 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:17:33 - INFO - __main__ - ID text: lug_6
03/26/2024 22:18:43 - INFO - __main__ - Mean variance for lug_6: 0.047299619764089584
03/26/2024 22:18:43 - INFO - __main__ - Mean std for for lug_6: 0.1706545501947403
03/26/2024 22:18:43 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:18:43 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:18:43 - INFO - __main__ - ID text: lug_7
03/26/2024 22:19:54 - INFO - __main__ - Mean variance for lug_7: 0.0415317602455616
03/26/2024 22:19:54 - INFO - __main__ - Mean std for for lug_7: 0.16659052670001984
03/26/2024 22:19:54 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:19:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:19:54 - INFO - __main__ - ID text: lug_8
03/26/2024 22:21:04 - INFO - __main__ - Mean variance for lug_8: 0.04516803100705147
03/26/2024 22:21:04 - INFO - __main__ - Mean std for for lug_8: 0.170889750123024
03/26/2024 22:21:04 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:21:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:21:04 - INFO - __main__ - ID text: lug_9
03/26/2024 22:22:15 - INFO - __main__ - Mean variance for lug_9: 0.042857035994529724
03/26/2024 22:22:15 - INFO - __main__ - Mean std for for lug_9: 0.1659223586320877
03/26/2024 22:22:15 - INFO - __main__ - 
######## Language: luo ######## 

03/26/2024 22:22:15 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:22:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:22:15 - INFO - __main__ - ID text: luo_0
03/26/2024 22:23:26 - INFO - __main__ - Mean variance for luo_0: 0.031570810824632645
03/26/2024 22:23:26 - INFO - __main__ - Mean std for for luo_0: 0.14014047384262085
03/26/2024 22:23:26 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:23:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:23:26 - INFO - __main__ - ID text: luo_1
03/26/2024 22:24:36 - INFO - __main__ - Mean variance for luo_1: 0.043513331562280655
03/26/2024 22:24:36 - INFO - __main__ - Mean std for for luo_1: 0.17996512353420258
03/26/2024 22:24:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:24:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:24:36 - INFO - __main__ - ID text: luo_2
03/26/2024 22:25:47 - INFO - __main__ - Mean variance for luo_2: 0.04415542259812355
03/26/2024 22:25:47 - INFO - __main__ - Mean std for for luo_2: 0.1680431365966797
03/26/2024 22:25:47 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:25:47 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:25:47 - INFO - __main__ - ID text: luo_3
03/26/2024 22:26:57 - INFO - __main__ - Mean variance for luo_3: 0.035645660012960434
03/26/2024 22:26:57 - INFO - __main__ - Mean std for for luo_3: 0.1473962962627411
03/26/2024 22:26:57 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:26:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:26:57 - INFO - __main__ - ID text: luo_4
03/26/2024 22:28:08 - INFO - __main__ - Mean variance for luo_4: 0.04016714543104172
03/26/2024 22:28:08 - INFO - __main__ - Mean std for for luo_4: 0.16857220232486725
03/26/2024 22:28:08 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:28:08 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:28:08 - INFO - __main__ - ID text: luo_5
03/26/2024 22:29:19 - INFO - __main__ - Mean variance for luo_5: 0.04105671867728233
03/26/2024 22:29:19 - INFO - __main__ - Mean std for for luo_5: 0.16847757995128632
03/26/2024 22:29:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:29:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:29:19 - INFO - __main__ - ID text: luo_6
03/26/2024 22:30:29 - INFO - __main__ - Mean variance for luo_6: 0.04084290564060211
03/26/2024 22:30:29 - INFO - __main__ - Mean std for for luo_6: 0.15716016292572021
03/26/2024 22:30:29 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:30:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:30:29 - INFO - __main__ - ID text: luo_7
03/26/2024 22:31:40 - INFO - __main__ - Mean variance for luo_7: 0.049690570682287216
03/26/2024 22:31:40 - INFO - __main__ - Mean std for for luo_7: 0.19215095043182373
03/26/2024 22:31:40 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:31:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:31:40 - INFO - __main__ - ID text: luo_8
03/26/2024 22:32:50 - INFO - __main__ - Mean variance for luo_8: 0.04331870749592781
03/26/2024 22:32:50 - INFO - __main__ - Mean std for for luo_8: 0.16895176470279694
03/26/2024 22:32:50 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:32:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:32:50 - INFO - __main__ - ID text: luo_9
03/26/2024 22:34:01 - INFO - __main__ - Mean variance for luo_9: 0.0527380108833313
03/26/2024 22:34:01 - INFO - __main__ - Mean std for for luo_9: 0.20588171482086182
03/26/2024 22:34:01 - INFO - __main__ - 
######## Language: pcm ######## 

03/26/2024 22:34:01 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:34:01 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:34:01 - INFO - __main__ - ID text: pcm_0
03/26/2024 22:35:11 - INFO - __main__ - Mean variance for pcm_0: 0.042529914528131485
03/26/2024 22:35:11 - INFO - __main__ - Mean std for for pcm_0: 0.17556150257587433
03/26/2024 22:35:11 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:35:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:35:11 - INFO - __main__ - ID text: pcm_1
03/26/2024 22:36:21 - INFO - __main__ - Mean variance for pcm_1: 0.046166300773620605
03/26/2024 22:36:21 - INFO - __main__ - Mean std for for pcm_1: 0.1880878359079361
03/26/2024 22:36:21 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:36:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:36:21 - INFO - __main__ - ID text: pcm_2
03/26/2024 22:37:32 - INFO - __main__ - Mean variance for pcm_2: 0.04857124760746956
03/26/2024 22:37:32 - INFO - __main__ - Mean std for for pcm_2: 0.18521831929683685
03/26/2024 22:37:32 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:37:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:37:32 - INFO - __main__ - ID text: pcm_3
03/26/2024 22:38:43 - INFO - __main__ - Mean variance for pcm_3: 0.04047610983252525
03/26/2024 22:38:43 - INFO - __main__ - Mean std for for pcm_3: 0.1637163907289505
03/26/2024 22:38:43 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:38:43 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:38:43 - INFO - __main__ - ID text: pcm_4
03/26/2024 22:39:54 - INFO - __main__ - Mean variance for pcm_4: 0.04360169172286987
03/26/2024 22:39:54 - INFO - __main__ - Mean std for for pcm_4: 0.16931544244289398
03/26/2024 22:39:54 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:39:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:39:54 - INFO - __main__ - ID text: pcm_5
03/26/2024 22:41:04 - INFO - __main__ - Mean variance for pcm_5: 0.03445165231823921
03/26/2024 22:41:04 - INFO - __main__ - Mean std for for pcm_5: 0.1650896966457367
03/26/2024 22:41:04 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:41:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:41:04 - INFO - __main__ - ID text: pcm_6
03/26/2024 22:42:15 - INFO - __main__ - Mean variance for pcm_6: 0.03919045627117157
03/26/2024 22:42:15 - INFO - __main__ - Mean std for for pcm_6: 0.16408492624759674
03/26/2024 22:42:15 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:42:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:42:15 - INFO - __main__ - ID text: pcm_7
03/26/2024 22:43:25 - INFO - __main__ - Mean variance for pcm_7: 0.0438975989818573
03/26/2024 22:43:25 - INFO - __main__ - Mean std for for pcm_7: 0.16883450746536255
03/26/2024 22:43:25 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:43:25 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:43:25 - INFO - __main__ - ID text: pcm_8
03/26/2024 22:44:35 - INFO - __main__ - Mean variance for pcm_8: 0.0441870242357254
03/26/2024 22:44:35 - INFO - __main__ - Mean std for for pcm_8: 0.16736309230327606
03/26/2024 22:44:35 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:44:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:44:35 - INFO - __main__ - ID text: pcm_9
03/26/2024 22:45:45 - INFO - __main__ - Mean variance for pcm_9: 0.03668888285756111
03/26/2024 22:45:45 - INFO - __main__ - Mean std for for pcm_9: 0.16294719278812408
03/26/2024 22:45:45 - INFO - __main__ - 
######## Language: swa ######## 

03/26/2024 22:45:45 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:45:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:45:45 - INFO - __main__ - ID text: swa_0
03/26/2024 22:46:55 - INFO - __main__ - Mean variance for swa_0: 0.04323111101984978
03/26/2024 22:46:55 - INFO - __main__ - Mean std for for swa_0: 0.16339653730392456
03/26/2024 22:46:55 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:46:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:46:55 - INFO - __main__ - ID text: swa_1
03/26/2024 22:48:06 - INFO - __main__ - Mean variance for swa_1: 0.04087315872311592
03/26/2024 22:48:06 - INFO - __main__ - Mean std for for swa_1: 0.16638237237930298
03/26/2024 22:48:06 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:48:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:48:06 - INFO - __main__ - ID text: swa_2
03/26/2024 22:49:16 - INFO - __main__ - Mean variance for swa_2: 0.04496048018336296
03/26/2024 22:49:16 - INFO - __main__ - Mean std for for swa_2: 0.16570739448070526
03/26/2024 22:49:16 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:49:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:49:16 - INFO - __main__ - ID text: swa_3
03/26/2024 22:50:26 - INFO - __main__ - Mean variance for swa_3: 0.046744752675294876
03/26/2024 22:50:26 - INFO - __main__ - Mean std for for swa_3: 0.18250827491283417
03/26/2024 22:50:26 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:50:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:50:26 - INFO - __main__ - ID text: swa_4
03/26/2024 22:51:36 - INFO - __main__ - Mean variance for swa_4: 0.032490696758031845
03/26/2024 22:51:36 - INFO - __main__ - Mean std for for swa_4: 0.14007911086082458
03/26/2024 22:51:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:51:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:51:36 - INFO - __main__ - ID text: swa_5
03/26/2024 22:52:46 - INFO - __main__ - Mean variance for swa_5: 0.031680878251791
03/26/2024 22:52:46 - INFO - __main__ - Mean std for for swa_5: 0.14072643220424652
03/26/2024 22:52:46 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:52:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:52:46 - INFO - __main__ - ID text: swa_6
03/26/2024 22:53:56 - INFO - __main__ - Mean variance for swa_6: 0.0337965302169323
03/26/2024 22:53:56 - INFO - __main__ - Mean std for for swa_6: 0.1441670060157776
03/26/2024 22:53:56 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:53:56 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:53:56 - INFO - __main__ - ID text: swa_7
03/26/2024 22:55:06 - INFO - __main__ - Mean variance for swa_7: 0.04696619510650635
03/26/2024 22:55:06 - INFO - __main__ - Mean std for for swa_7: 0.1946045309305191
03/26/2024 22:55:06 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:55:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:55:06 - INFO - __main__ - ID text: swa_8
03/26/2024 22:56:16 - INFO - __main__ - Mean variance for swa_8: 0.03693723678588867
03/26/2024 22:56:16 - INFO - __main__ - Mean std for for swa_8: 0.16278870403766632
03/26/2024 22:56:16 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:56:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:56:16 - INFO - __main__ - ID text: swa_9
03/26/2024 22:57:27 - INFO - __main__ - Mean variance for swa_9: 0.05134909972548485
03/26/2024 22:57:27 - INFO - __main__ - Mean std for for swa_9: 0.18330363929271698
03/26/2024 22:57:27 - INFO - __main__ - 
######## Language: wol ######## 

03/26/2024 22:57:27 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:57:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:57:27 - INFO - __main__ - ID text: wol_0
03/26/2024 22:58:37 - INFO - __main__ - Mean variance for wol_0: 0.03929058834910393
03/26/2024 22:58:37 - INFO - __main__ - Mean std for for wol_0: 0.15850943326950073
03/26/2024 22:58:37 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:58:37 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:58:37 - INFO - __main__ - ID text: wol_1
03/26/2024 22:59:47 - INFO - __main__ - Mean variance for wol_1: 0.04115727171301842
03/26/2024 22:59:47 - INFO - __main__ - Mean std for for wol_1: 0.16485464572906494
03/26/2024 22:59:47 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:59:47 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 22:59:47 - INFO - __main__ - ID text: wol_2
03/26/2024 23:00:57 - INFO - __main__ - Mean variance for wol_2: 0.04511048272252083
03/26/2024 23:00:57 - INFO - __main__ - Mean std for for wol_2: 0.1750611662864685
03/26/2024 23:00:57 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:00:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:00:57 - INFO - __main__ - ID text: wol_3
03/26/2024 23:02:08 - INFO - __main__ - Mean variance for wol_3: 0.05816873535513878
03/26/2024 23:02:08 - INFO - __main__ - Mean std for for wol_3: 0.2163468450307846
03/26/2024 23:02:08 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:02:08 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:02:08 - INFO - __main__ - ID text: wol_4
03/26/2024 23:03:18 - INFO - __main__ - Mean variance for wol_4: 0.03860225901007652
03/26/2024 23:03:18 - INFO - __main__ - Mean std for for wol_4: 0.1734466701745987
03/26/2024 23:03:18 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:03:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:03:18 - INFO - __main__ - ID text: wol_5
03/26/2024 23:04:28 - INFO - __main__ - Mean variance for wol_5: 0.03728771582245827
03/26/2024 23:04:28 - INFO - __main__ - Mean std for for wol_5: 0.15699107944965363
03/26/2024 23:04:28 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:04:28 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:04:28 - INFO - __main__ - ID text: wol_6
03/26/2024 23:05:38 - INFO - __main__ - Mean variance for wol_6: 0.16429151594638824
03/26/2024 23:05:38 - INFO - __main__ - Mean std for for wol_6: 0.35770726203918457
03/26/2024 23:05:38 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:05:38 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:05:38 - INFO - __main__ - ID text: wol_7
03/26/2024 23:06:49 - INFO - __main__ - Mean variance for wol_7: 0.04720568284392357
03/26/2024 23:06:49 - INFO - __main__ - Mean std for for wol_7: 0.18539154529571533
03/26/2024 23:06:49 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:06:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:06:49 - INFO - __main__ - ID text: wol_8
03/26/2024 23:07:59 - INFO - __main__ - Mean variance for wol_8: 0.0417969785630703
03/26/2024 23:07:59 - INFO - __main__ - Mean std for for wol_8: 0.18110398948192596
03/26/2024 23:07:59 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:07:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:07:59 - INFO - __main__ - ID text: wol_9
03/26/2024 23:09:09 - INFO - __main__ - Mean variance for wol_9: 0.041340943425893784
03/26/2024 23:09:09 - INFO - __main__ - Mean std for for wol_9: 0.17379559576511383
03/26/2024 23:09:09 - INFO - __main__ - 
######## Language: yor ######## 

03/26/2024 23:09:09 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:09:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:09:09 - INFO - __main__ - ID text: yor_0
03/26/2024 23:10:19 - INFO - __main__ - Mean variance for yor_0: 0.1417703777551651
03/26/2024 23:10:19 - INFO - __main__ - Mean std for for yor_0: 0.3299536406993866
03/26/2024 23:10:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:10:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:10:19 - INFO - __main__ - ID text: yor_1
03/26/2024 23:11:29 - INFO - __main__ - Mean variance for yor_1: 0.13839338719844818
03/26/2024 23:11:29 - INFO - __main__ - Mean std for for yor_1: 0.31848421692848206
03/26/2024 23:11:29 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:11:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:11:29 - INFO - __main__ - ID text: yor_2
03/26/2024 23:12:39 - INFO - __main__ - Mean variance for yor_2: 0.04594570770859718
03/26/2024 23:12:39 - INFO - __main__ - Mean std for for yor_2: 0.17410600185394287
03/26/2024 23:12:39 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:12:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:12:39 - INFO - __main__ - ID text: yor_3
03/26/2024 23:13:49 - INFO - __main__ - Mean variance for yor_3: 0.041970059275627136
03/26/2024 23:13:49 - INFO - __main__ - Mean std for for yor_3: 0.16270101070404053
03/26/2024 23:13:49 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:13:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:13:49 - INFO - __main__ - ID text: yor_4
03/26/2024 23:14:59 - INFO - __main__ - Mean variance for yor_4: 0.13844692707061768
03/26/2024 23:14:59 - INFO - __main__ - Mean std for for yor_4: 0.32466354966163635
03/26/2024 23:14:59 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:14:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:14:59 - INFO - __main__ - ID text: yor_5
03/26/2024 23:16:09 - INFO - __main__ - Mean variance for yor_5: 0.09702015668153763
03/26/2024 23:16:09 - INFO - __main__ - Mean std for for yor_5: 0.2571409344673157
03/26/2024 23:16:09 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:16:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:16:09 - INFO - __main__ - ID text: yor_6
03/26/2024 23:17:19 - INFO - __main__ - Mean variance for yor_6: 0.04380977153778076
03/26/2024 23:17:19 - INFO - __main__ - Mean std for for yor_6: 0.1724032610654831
03/26/2024 23:17:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:17:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:17:19 - INFO - __main__ - ID text: yor_7
03/26/2024 23:18:29 - INFO - __main__ - Mean variance for yor_7: 0.1407156139612198
03/26/2024 23:18:29 - INFO - __main__ - Mean std for for yor_7: 0.3201431334018707
03/26/2024 23:18:29 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:18:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:18:29 - INFO - __main__ - ID text: yor_8
03/26/2024 23:19:39 - INFO - __main__ - Mean variance for yor_8: 0.04421656206250191
03/26/2024 23:19:39 - INFO - __main__ - Mean std for for yor_8: 0.1653880625963211
03/26/2024 23:19:39 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:19:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:19:39 - INFO - __main__ - ID text: yor_9
03/26/2024 23:20:49 - INFO - __main__ - Mean variance for yor_9: 0.1393934190273285
03/26/2024 23:20:49 - INFO - __main__ - Mean std for for yor_9: 0.3210570216178894
03/26/2024 23:20:49 - INFO - __main__ - 
######## Language: zh ######## 

03/26/2024 23:20:49 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:20:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:20:49 - INFO - __main__ - ID text: zh_0
03/26/2024 23:21:59 - INFO - __main__ - Mean variance for zh_0: 0.15487951040267944
03/26/2024 23:21:59 - INFO - __main__ - Mean std for for zh_0: 0.35024937987327576
03/26/2024 23:21:59 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:21:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:21:59 - INFO - __main__ - ID text: zh_1
03/26/2024 23:23:09 - INFO - __main__ - Mean variance for zh_1: 0.11957819014787674
03/26/2024 23:23:09 - INFO - __main__ - Mean std for for zh_1: 0.28882262110710144
03/26/2024 23:23:09 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:23:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:23:09 - INFO - __main__ - ID text: zh_2
03/26/2024 23:24:19 - INFO - __main__ - Mean variance for zh_2: 0.12941856682300568
03/26/2024 23:24:19 - INFO - __main__ - Mean std for for zh_2: 0.30701884627342224
03/26/2024 23:24:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:24:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:24:19 - INFO - __main__ - ID text: zh_3
03/26/2024 23:25:29 - INFO - __main__ - Mean variance for zh_3: 0.15044450759887695
03/26/2024 23:25:29 - INFO - __main__ - Mean std for for zh_3: 0.3422408103942871
03/26/2024 23:25:29 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:25:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:25:29 - INFO - __main__ - ID text: zh_4
03/26/2024 23:26:39 - INFO - __main__ - Mean variance for zh_4: 0.07466442883014679
03/26/2024 23:26:39 - INFO - __main__ - Mean std for for zh_4: 0.2441604733467102
03/26/2024 23:26:40 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:26:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:26:40 - INFO - __main__ - ID text: zh_5
03/26/2024 23:27:50 - INFO - __main__ - Mean variance for zh_5: 0.1671813279390335
03/26/2024 23:27:50 - INFO - __main__ - Mean std for for zh_5: 0.36514517664909363
03/26/2024 23:27:50 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:27:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:27:50 - INFO - __main__ - ID text: zh_6
03/26/2024 23:29:00 - INFO - __main__ - Mean variance for zh_6: 0.13886433839797974
03/26/2024 23:29:00 - INFO - __main__ - Mean std for for zh_6: 0.3164665699005127
03/26/2024 23:29:00 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:29:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:29:00 - INFO - __main__ - ID text: zh_7
03/26/2024 23:30:10 - INFO - __main__ - Mean variance for zh_7: 0.138008251786232
03/26/2024 23:30:10 - INFO - __main__ - Mean std for for zh_7: 0.32411694526672363
03/26/2024 23:30:10 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:30:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:30:10 - INFO - __main__ - ID text: zh_8
03/26/2024 23:31:21 - INFO - __main__ - Mean variance for zh_8: 0.14264364540576935
03/26/2024 23:31:21 - INFO - __main__ - Mean std for for zh_8: 0.3288780748844147
03/26/2024 23:31:21 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:31:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:31:21 - INFO - __main__ - ID text: zh_9
03/26/2024 23:32:31 - INFO - __main__ - Mean variance for zh_9: 0.1490771621465683
03/26/2024 23:32:31 - INFO - __main__ - Mean std for for zh_9: 0.3259601891040802
03/26/2024 23:32:31 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/26/2024 23:32:31 - INFO - __main__ - 
######## Language: arabic ######## 

03/26/2024 23:32:31 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:32:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:32:31 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/26/2024 23:33:41 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.06851422041654587
03/26/2024 23:33:41 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.22297151386737823
03/26/2024 23:33:41 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:33:41 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:33:41 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/26/2024 23:34:51 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.04411398246884346
03/26/2024 23:34:51 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.167852520942688
03/26/2024 23:34:51 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:34:51 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:34:51 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/26/2024 23:36:01 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.040833424776792526
03/26/2024 23:36:01 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.16419275104999542
03/26/2024 23:36:01 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:36:01 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:36:01 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/26/2024 23:37:11 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.04667757824063301
03/26/2024 23:37:11 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.1751035898923874
03/26/2024 23:37:11 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:37:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:37:11 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/26/2024 23:38:22 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.12114254385232925
03/26/2024 23:38:22 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.29786694049835205
03/26/2024 23:38:22 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:38:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:38:22 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/26/2024 23:39:32 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.042925793677568436
03/26/2024 23:39:32 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.16796450316905975
03/26/2024 23:39:32 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:39:32 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:39:32 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/26/2024 23:40:42 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.053992170840501785
03/26/2024 23:40:42 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.18676500022411346
03/26/2024 23:40:43 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:40:43 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:40:43 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/26/2024 23:41:53 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.04262362793087959
03/26/2024 23:41:53 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.16657468676567078
03/26/2024 23:41:53 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:41:53 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:41:53 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/26/2024 23:43:03 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.04241006448864937
03/26/2024 23:43:03 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.16687655448913574
03/26/2024 23:43:03 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:43:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:43:03 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/26/2024 23:44:14 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.04341290518641472
03/26/2024 23:44:14 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.16773700714111328
03/26/2024 23:44:14 - INFO - __main__ - 
######## Language: russian ######## 

03/26/2024 23:44:14 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:44:14 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:44:14 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/26/2024 23:45:24 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.028037047013640404
03/26/2024 23:45:24 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.13069291412830353
03/26/2024 23:45:24 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:45:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:45:24 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/26/2024 23:46:35 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.0492098443210125
03/26/2024 23:46:35 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.17443782091140747
03/26/2024 23:46:35 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:46:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:46:35 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/26/2024 23:47:45 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.028869504109025
03/26/2024 23:47:45 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.13188773393630981
03/26/2024 23:47:45 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:47:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:47:45 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/26/2024 23:48:55 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.027913114055991173
03/26/2024 23:48:55 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.1310882270336151
03/26/2024 23:48:55 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:48:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:48:55 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/26/2024 23:50:06 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.030235325917601585
03/26/2024 23:50:06 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.13484863936901093
03/26/2024 23:50:06 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:50:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:50:06 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/26/2024 23:51:16 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.028760196641087532
03/26/2024 23:51:16 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.1341908574104309
03/26/2024 23:51:16 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:51:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:51:16 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/26/2024 23:52:26 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.04183085262775421
03/26/2024 23:52:26 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.17219220101833344
03/26/2024 23:52:26 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:52:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:52:26 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/26/2024 23:53:36 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.028416074812412262
03/26/2024 23:53:36 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.13271157443523407
03/26/2024 23:53:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:53:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:53:36 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/26/2024 23:54:46 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.05006568506360054
03/26/2024 23:54:46 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.17809142172336578
03/26/2024 23:54:46 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:54:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:54:46 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/26/2024 23:55:56 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.029580699279904366
03/26/2024 23:55:56 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.1348552107810974
03/26/2024 23:55:56 - INFO - __main__ - 
######## Language: bengali ######## 

03/26/2024 23:55:56 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:55:56 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:55:56 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/26/2024 23:57:07 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.09716229885816574
03/26/2024 23:57:07 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.2580225169658661
03/26/2024 23:57:07 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:57:07 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:57:07 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/26/2024 23:58:16 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.098463274538517
03/26/2024 23:58:16 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.2606405019760132
03/26/2024 23:58:16 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:58:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:58:16 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/26/2024 23:59:26 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.10100967437028885
03/26/2024 23:59:26 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.263509064912796
03/26/2024 23:59:26 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:59:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/26/2024 23:59:26 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/27/2024 00:00:36 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.09737422317266464
03/27/2024 00:00:36 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.26078692078590393
03/27/2024 00:00:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:00:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:00:36 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/27/2024 00:01:46 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.10620880126953125
03/27/2024 00:01:46 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.2713904082775116
03/27/2024 00:01:46 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:01:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:01:46 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/27/2024 00:02:56 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.0965656265616417
03/27/2024 00:02:56 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.25758469104766846
03/27/2024 00:02:56 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:02:56 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:02:56 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/27/2024 00:04:06 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.09750709682703018
03/27/2024 00:04:06 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.2595295011997223
03/27/2024 00:04:06 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:04:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:04:06 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/27/2024 00:05:16 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.09429313987493515
03/27/2024 00:05:16 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.25485730171203613
03/27/2024 00:05:16 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:05:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:05:16 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/27/2024 00:06:26 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.09718680381774902
03/27/2024 00:06:26 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.25867146253585815
03/27/2024 00:06:26 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:06:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:06:26 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/27/2024 00:07:35 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.14642994105815887
03/27/2024 00:07:35 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.3280669152736664
03/27/2024 00:07:35 - INFO - __main__ - 
######## Language: telugu ######## 

03/27/2024 00:07:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:07:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:07:36 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/27/2024 00:08:45 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.04105794057250023
03/27/2024 00:08:45 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.16133080422878265
03/27/2024 00:08:45 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:08:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:08:45 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/27/2024 00:09:55 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.036165617406368256
03/27/2024 00:09:55 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.1511494368314743
03/27/2024 00:09:56 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:09:56 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:09:56 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/27/2024 00:11:06 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.039091404527425766
03/27/2024 00:11:06 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.15799139440059662
03/27/2024 00:11:06 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:11:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:11:06 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/27/2024 00:12:16 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.04573555290699005
03/27/2024 00:12:16 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.17294524610042572
03/27/2024 00:12:16 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:12:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:12:16 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/27/2024 00:13:26 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.04073221608996391
03/27/2024 00:13:26 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.1610572785139084
03/27/2024 00:13:26 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:13:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:13:26 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/27/2024 00:14:36 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.038106273859739304
03/27/2024 00:14:36 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.15873277187347412
03/27/2024 00:14:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:14:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:14:36 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/27/2024 00:15:46 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.11287200450897217
03/27/2024 00:15:46 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.2771475613117218
03/27/2024 00:15:46 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:15:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:15:46 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/27/2024 00:16:56 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.04118962585926056
03/27/2024 00:16:56 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.15910588204860687
03/27/2024 00:16:56 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:16:56 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:16:56 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/27/2024 00:18:05 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.04214745759963989
03/27/2024 00:18:05 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.1640596240758896
03/27/2024 00:18:05 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:18:05 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:18:05 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/27/2024 00:19:14 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.04014776274561882
03/27/2024 00:19:14 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.16108857095241547
03/27/2024 00:19:15 - INFO - __main__ - 
######## Language: finnish ######## 

03/27/2024 00:19:15 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:19:15 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:19:15 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/27/2024 00:20:24 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.04656895622611046
03/27/2024 00:20:24 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.16658596694469452
03/27/2024 00:20:24 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:20:24 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:20:24 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/27/2024 00:21:33 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.04306526854634285
03/27/2024 00:21:33 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.16180025041103363
03/27/2024 00:21:33 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:21:33 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:21:33 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/27/2024 00:22:43 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.07181546837091446
03/27/2024 00:22:43 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.22199612855911255
03/27/2024 00:22:43 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:22:43 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:22:43 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/27/2024 00:23:52 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.047909751534461975
03/27/2024 00:23:52 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.17230242490768433
03/27/2024 00:23:52 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:23:52 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:23:52 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/27/2024 00:25:02 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.046583402901887894
03/27/2024 00:25:02 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.17229904234409332
03/27/2024 00:25:02 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:25:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:25:02 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/27/2024 00:26:11 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.024852698668837547
03/27/2024 00:26:11 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.1259789913892746
03/27/2024 00:26:11 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:26:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:26:11 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/27/2024 00:27:20 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.024549156427383423
03/27/2024 00:27:20 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.12233825773000717
03/27/2024 00:27:20 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:27:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:27:20 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/27/2024 00:28:30 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.06729719787836075
03/27/2024 00:28:30 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.21515758335590363
03/27/2024 00:28:30 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:28:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:28:30 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/27/2024 00:29:39 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.03911241143941879
03/27/2024 00:29:39 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.1527942270040512
03/27/2024 00:29:39 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:29:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:29:39 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/27/2024 00:30:48 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.02652565948665142
03/27/2024 00:30:48 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.12663637101650238
03/27/2024 00:30:48 - INFO - __main__ - 
######## Language: swahili ######## 

03/27/2024 00:30:48 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:30:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:30:48 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/27/2024 00:31:57 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.04659390449523926
03/27/2024 00:31:57 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.17360913753509521
03/27/2024 00:31:57 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:31:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:31:57 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/27/2024 00:33:07 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.028355829417705536
03/27/2024 00:33:07 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.1317872852087021
03/27/2024 00:33:07 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:33:07 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:33:07 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/27/2024 00:34:16 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.049913421273231506
03/27/2024 00:34:16 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.178439661860466
03/27/2024 00:34:16 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:34:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:34:16 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/27/2024 00:35:26 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.02697376348078251
03/27/2024 00:35:26 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.12938900291919708
03/27/2024 00:35:26 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:35:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:35:26 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/27/2024 00:36:35 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.028136393055319786
03/27/2024 00:36:35 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.13093751668930054
03/27/2024 00:36:35 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:36:35 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:36:35 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/27/2024 00:37:44 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.047272711992263794
03/27/2024 00:37:44 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.1760861873626709
03/27/2024 00:37:44 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:37:44 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:37:44 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/27/2024 00:38:53 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.04871433973312378
03/27/2024 00:38:53 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.17114166915416718
03/27/2024 00:38:53 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:38:53 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:38:53 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/27/2024 00:40:03 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.05284072831273079
03/27/2024 00:40:03 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.1804627627134323
03/27/2024 00:40:03 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:40:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:40:03 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/27/2024 00:41:12 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.0298453401774168
03/27/2024 00:41:12 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.13492856919765472
03/27/2024 00:41:12 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:41:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:41:12 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/27/2024 00:42:21 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.029988663271069527
03/27/2024 00:42:21 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.13320009410381317
03/27/2024 00:42:21 - INFO - __main__ - 
######## Language: korean ######## 

03/27/2024 00:42:21 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:42:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:42:21 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/27/2024 00:43:30 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.10542389750480652
03/27/2024 00:43:30 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.26887068152427673
03/27/2024 00:43:31 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:43:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:43:31 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/27/2024 00:44:40 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.03926545009016991
03/27/2024 00:44:40 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.15999190509319305
03/27/2024 00:44:40 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:44:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:44:40 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/27/2024 00:45:50 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.03012518398463726
03/27/2024 00:45:50 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.14074818789958954
03/27/2024 00:45:50 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:45:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:45:50 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/27/2024 00:46:59 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.07444087415933609
03/27/2024 00:46:59 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.22039894759655
03/27/2024 00:46:59 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:46:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:46:59 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/27/2024 00:48:08 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.1271435022354126
03/27/2024 00:48:08 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.29732099175453186
03/27/2024 00:48:09 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:48:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:48:09 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/27/2024 00:49:18 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.04177219793200493
03/27/2024 00:49:18 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.16422085464000702
03/27/2024 00:49:18 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:49:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:49:18 - INFO - __main__ - ID text: korean-148115504649351135-0
03/27/2024 00:50:28 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.055455733090639114
03/27/2024 00:50:28 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.19315022230148315
03/27/2024 00:50:28 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:50:28 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:50:28 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/27/2024 00:51:36 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.10098417848348618
03/27/2024 00:51:36 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.2603428065776825
03/27/2024 00:51:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:51:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:51:36 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/27/2024 00:52:46 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.13235031068325043
03/27/2024 00:52:46 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.30634060502052307
03/27/2024 00:52:46 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:52:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:52:46 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/27/2024 00:53:54 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.15036527812480927
03/27/2024 00:53:54 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.3380779027938843
03/27/2024 00:53:55 - INFO - __main__ - 
######## Language: indonesian ######## 

03/27/2024 00:53:55 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:53:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:53:55 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/27/2024 00:55:03 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.029147638007998466
03/27/2024 00:55:03 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.13512618839740753
03/27/2024 00:55:03 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:55:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:55:03 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/27/2024 00:56:12 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.07211150974035263
03/27/2024 00:56:12 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.22507689893245697
03/27/2024 00:56:12 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:56:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:56:12 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/27/2024 00:57:20 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.028101792559027672
03/27/2024 00:57:20 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.13335372507572174
03/27/2024 00:57:20 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:57:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:57:20 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/27/2024 00:58:29 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.03458687290549278
03/27/2024 00:58:29 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.1455165445804596
03/27/2024 00:58:29 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:58:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:58:29 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/27/2024 00:59:37 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.025637425482273102
03/27/2024 00:59:37 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.1267787218093872
03/27/2024 00:59:37 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:59:37 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 00:59:37 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/27/2024 01:00:45 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.03441387787461281
03/27/2024 01:00:45 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.14455725252628326
03/27/2024 01:00:45 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:00:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:00:45 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/27/2024 01:01:54 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.02556365169584751
03/27/2024 01:01:54 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.12709800899028778
03/27/2024 01:01:54 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:01:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:01:54 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/27/2024 01:03:02 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.053577762097120285
03/27/2024 01:03:02 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.18037192523479462
03/27/2024 01:03:02 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:03:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:03:02 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/27/2024 01:04:10 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.03100503981113434
03/27/2024 01:04:10 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.1393427699804306
03/27/2024 01:04:10 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:04:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:04:10 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/27/2024 01:05:19 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.026322467252612114
03/27/2024 01:05:19 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.12627838551998138
03/27/2024 01:05:19 - INFO - __main__ - 
######## Language: english ######## 

03/27/2024 01:05:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:05:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:05:19 - INFO - __main__ - ID text: english-2852412434797041176-6
03/27/2024 01:06:27 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.07412225753068924
03/27/2024 01:06:27 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.23135213553905487
03/27/2024 01:06:27 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:06:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:06:27 - INFO - __main__ - ID text: english--1463732605740571606-0
03/27/2024 01:07:36 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.03237120807170868
03/27/2024 01:07:36 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.14097096025943756
03/27/2024 01:07:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:07:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:07:36 - INFO - __main__ - ID text: english-5441411281255470421-0
03/27/2024 01:08:44 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.03255108371376991
03/27/2024 01:08:44 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.14075252413749695
03/27/2024 01:08:44 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:08:44 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:08:44 - INFO - __main__ - ID text: english-7294054492486093447-1
03/27/2024 01:09:52 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.03394707664847374
03/27/2024 01:09:52 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.14252245426177979
03/27/2024 01:09:52 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:09:52 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:09:52 - INFO - __main__ - ID text: english-8820750127045023244-0
03/27/2024 01:11:01 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.044228021055459976
03/27/2024 01:11:01 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.1675012707710266
03/27/2024 01:11:01 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:11:01 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:11:01 - INFO - __main__ - ID text: english--506693546683012611-2
03/27/2024 01:12:10 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.06104360148310661
03/27/2024 01:12:10 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.19607365131378174
03/27/2024 01:12:10 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:12:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:12:10 - INFO - __main__ - ID text: english-745411798111651115-0
03/27/2024 01:13:18 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.03593263030052185
03/27/2024 01:13:18 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.14676237106323242
03/27/2024 01:13:18 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:13:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:13:18 - INFO - __main__ - ID text: english-7740772185887912651-0
03/27/2024 01:14:27 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.035232190042734146
03/27/2024 01:14:27 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.1460091918706894
03/27/2024 01:14:27 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:14:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:14:27 - INFO - __main__ - ID text: english-383873188776267137-19
03/27/2024 01:15:35 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.03331402316689491
03/27/2024 01:15:35 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.14102350175380707
03/27/2024 01:15:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:15:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:15:36 - INFO - __main__ - ID text: english--8277537578703156284-0
03/27/2024 01:16:45 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.03476416692137718
03/27/2024 01:16:45 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.14447380602359772
03/27/2024 01:16:45 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/27/2024 01:16:45 - INFO - __main__ - 
######## Language: cola ######## 

03/27/2024 01:16:45 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:16:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:16:45 - INFO - __main__ - ID text: cola_228
03/27/2024 01:17:54 - INFO - __main__ - Mean variance for cola_228: 0.04688519239425659
03/27/2024 01:17:54 - INFO - __main__ - Mean std for for cola_228: 0.19192355871200562
03/27/2024 01:17:54 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:17:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:17:54 - INFO - __main__ - ID text: cola_51
03/27/2024 01:19:03 - INFO - __main__ - Mean variance for cola_51: 0.042810242623090744
03/27/2024 01:19:03 - INFO - __main__ - Mean std for for cola_51: 0.1836758702993393
03/27/2024 01:19:03 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:19:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:19:03 - INFO - __main__ - ID text: cola_563
03/27/2024 01:20:12 - INFO - __main__ - Mean variance for cola_563: 0.15406320989131927
03/27/2024 01:20:12 - INFO - __main__ - Mean std for for cola_563: 0.35284650325775146
03/27/2024 01:20:12 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:20:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:20:12 - INFO - __main__ - ID text: cola_501
03/27/2024 01:21:21 - INFO - __main__ - Mean variance for cola_501: 0.04424339532852173
03/27/2024 01:21:21 - INFO - __main__ - Mean std for for cola_501: 0.18639887869358063
03/27/2024 01:21:21 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:21:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:21:21 - INFO - __main__ - ID text: cola_457
03/27/2024 01:22:30 - INFO - __main__ - Mean variance for cola_457: 0.04496326670050621
03/27/2024 01:22:30 - INFO - __main__ - Mean std for for cola_457: 0.18889932334423065
03/27/2024 01:22:30 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:22:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:22:30 - INFO - __main__ - ID text: cola_285
03/27/2024 01:23:39 - INFO - __main__ - Mean variance for cola_285: 0.06496715545654297
03/27/2024 01:23:39 - INFO - __main__ - Mean std for for cola_285: 0.22559337317943573
03/27/2024 01:23:39 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:23:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:23:39 - INFO - __main__ - ID text: cola_209
03/27/2024 01:24:47 - INFO - __main__ - Mean variance for cola_209: 0.04046032577753067
03/27/2024 01:24:47 - INFO - __main__ - Mean std for for cola_209: 0.1778241991996765
03/27/2024 01:24:47 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:24:47 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:24:47 - INFO - __main__ - ID text: cola_178
03/27/2024 01:25:56 - INFO - __main__ - Mean variance for cola_178: 0.04278760030865669
03/27/2024 01:25:56 - INFO - __main__ - Mean std for for cola_178: 0.1840732842683792
03/27/2024 01:25:56 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:25:56 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:25:56 - INFO - __main__ - ID text: cola_864
03/27/2024 01:27:05 - INFO - __main__ - Mean variance for cola_864: 0.05251237750053406
03/27/2024 01:27:05 - INFO - __main__ - Mean std for for cola_864: 0.2058277577161789
03/27/2024 01:27:05 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:27:05 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:27:05 - INFO - __main__ - ID text: cola_65
03/27/2024 01:28:14 - INFO - __main__ - Mean variance for cola_65: 0.05383376404643059
03/27/2024 01:28:14 - INFO - __main__ - Mean std for for cola_65: 0.2015564888715744
03/27/2024 01:28:14 - INFO - __main__ - 
######## Language: mnli ######## 

03/27/2024 01:28:14 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:28:14 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:28:14 - INFO - __main__ - ID text: mnli_488
03/27/2024 01:29:22 - INFO - __main__ - Mean variance for mnli_488: 0.06284830719232559
03/27/2024 01:29:22 - INFO - __main__ - Mean std for for mnli_488: 0.20075087249279022
03/27/2024 01:29:22 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:29:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:29:22 - INFO - __main__ - ID text: mnli_1535
03/27/2024 01:30:31 - INFO - __main__ - Mean variance for mnli_1535: 0.06177842989563942
03/27/2024 01:30:31 - INFO - __main__ - Mean std for for mnli_1535: 0.19609694182872772
03/27/2024 01:30:31 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:30:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:30:31 - INFO - __main__ - ID text: mnli_3582
03/27/2024 01:31:40 - INFO - __main__ - Mean variance for mnli_3582: 0.06416197866201401
03/27/2024 01:31:40 - INFO - __main__ - Mean std for for mnli_3582: 0.213312029838562
03/27/2024 01:31:40 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:31:40 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:31:40 - INFO - __main__ - ID text: mnli_3811
03/27/2024 01:32:49 - INFO - __main__ - Mean variance for mnli_3811: 0.043459322303533554
03/27/2024 01:32:49 - INFO - __main__ - Mean std for for mnli_3811: 0.17350687086582184
03/27/2024 01:32:49 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:32:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:32:49 - INFO - __main__ - ID text: mnli_8279
03/27/2024 01:33:58 - INFO - __main__ - Mean variance for mnli_8279: 0.04580480232834816
03/27/2024 01:33:58 - INFO - __main__ - Mean std for for mnli_8279: 0.1844051033258438
03/27/2024 01:33:58 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:33:58 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:33:58 - INFO - __main__ - ID text: mnli_434
03/27/2024 01:35:07 - INFO - __main__ - Mean variance for mnli_434: 0.04741804301738739
03/27/2024 01:35:07 - INFO - __main__ - Mean std for for mnli_434: 0.17115892469882965
03/27/2024 01:35:07 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:35:07 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:35:07 - INFO - __main__ - ID text: mnli_9195
03/27/2024 01:36:16 - INFO - __main__ - Mean variance for mnli_9195: 0.04721599817276001
03/27/2024 01:36:16 - INFO - __main__ - Mean std for for mnli_9195: 0.19438590109348297
03/27/2024 01:36:16 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:36:16 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:36:16 - INFO - __main__ - ID text: mnli_3257
03/27/2024 01:37:25 - INFO - __main__ - Mean variance for mnli_3257: 0.05358291044831276
03/27/2024 01:37:25 - INFO - __main__ - Mean std for for mnli_3257: 0.19186006486415863
03/27/2024 01:37:25 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:37:25 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:37:25 - INFO - __main__ - ID text: mnli_8928
03/27/2024 01:38:34 - INFO - __main__ - Mean variance for mnli_8928: 0.05608125403523445
03/27/2024 01:38:34 - INFO - __main__ - Mean std for for mnli_8928: 0.18989896774291992
03/27/2024 01:38:34 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:38:34 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:38:34 - INFO - __main__ - ID text: mnli_6873
03/27/2024 01:39:43 - INFO - __main__ - Mean variance for mnli_6873: 0.059500645846128464
03/27/2024 01:39:43 - INFO - __main__ - Mean std for for mnli_6873: 0.19671843945980072
03/27/2024 01:39:43 - INFO - __main__ - 
######## Language: mrpc ######## 

03/27/2024 01:39:43 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:39:43 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:39:43 - INFO - __main__ - ID text: mrpc_451
03/27/2024 01:40:52 - INFO - __main__ - Mean variance for mrpc_451: 0.05965123698115349
03/27/2024 01:40:52 - INFO - __main__ - Mean std for for mrpc_451: 0.19131819903850555
03/27/2024 01:40:53 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:40:53 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:40:53 - INFO - __main__ - ID text: mrpc_919
03/27/2024 01:42:02 - INFO - __main__ - Mean variance for mrpc_919: 0.0604819618165493
03/27/2024 01:42:02 - INFO - __main__ - Mean std for for mrpc_919: 0.1953079104423523
03/27/2024 01:42:02 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:42:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:42:02 - INFO - __main__ - ID text: mrpc_1206
03/27/2024 01:43:10 - INFO - __main__ - Mean variance for mrpc_1206: 0.04788258299231529
03/27/2024 01:43:10 - INFO - __main__ - Mean std for for mrpc_1206: 0.17753078043460846
03/27/2024 01:43:10 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:43:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:43:10 - INFO - __main__ - ID text: mrpc_569
03/27/2024 01:44:20 - INFO - __main__ - Mean variance for mrpc_569: 0.05102260783314705
03/27/2024 01:44:20 - INFO - __main__ - Mean std for for mrpc_569: 0.18167094886302948
03/27/2024 01:44:20 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:44:20 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:44:20 - INFO - __main__ - ID text: mrpc_1657
03/27/2024 01:45:28 - INFO - __main__ - Mean variance for mrpc_1657: 0.05310998857021332
03/27/2024 01:45:28 - INFO - __main__ - Mean std for for mrpc_1657: 0.17861734330654144
03/27/2024 01:45:29 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:45:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:45:29 - INFO - __main__ - ID text: mrpc_13
03/27/2024 01:46:37 - INFO - __main__ - Mean variance for mrpc_13: 0.060455214232206345
03/27/2024 01:46:37 - INFO - __main__ - Mean std for for mrpc_13: 0.1969013810157776
03/27/2024 01:46:38 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:46:38 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:46:38 - INFO - __main__ - ID text: mrpc_1554
03/27/2024 01:47:46 - INFO - __main__ - Mean variance for mrpc_1554: 0.05061132088303566
03/27/2024 01:47:46 - INFO - __main__ - Mean std for for mrpc_1554: 0.1785670667886734
03/27/2024 01:47:46 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:47:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:47:46 - INFO - __main__ - ID text: mrpc_1650
03/27/2024 01:48:55 - INFO - __main__ - Mean variance for mrpc_1650: 0.13143184781074524
03/27/2024 01:48:55 - INFO - __main__ - Mean std for for mrpc_1650: 0.31231358647346497
03/27/2024 01:48:55 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:48:55 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:48:55 - INFO - __main__ - ID text: mrpc_326
03/27/2024 01:50:04 - INFO - __main__ - Mean variance for mrpc_326: 0.06747530400753021
03/27/2024 01:50:04 - INFO - __main__ - Mean std for for mrpc_326: 0.2091510146856308
03/27/2024 01:50:04 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:50:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:50:04 - INFO - __main__ - ID text: mrpc_1429
03/27/2024 01:51:13 - INFO - __main__ - Mean variance for mrpc_1429: 0.06083904206752777
03/27/2024 01:51:13 - INFO - __main__ - Mean std for for mrpc_1429: 0.20042411983013153
03/27/2024 01:51:13 - INFO - __main__ - 
######## Language: qnli ######## 

03/27/2024 01:51:13 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:51:13 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:51:13 - INFO - __main__ - ID text: qnli_3462
03/27/2024 01:52:22 - INFO - __main__ - Mean variance for qnli_3462: 0.05867971107363701
03/27/2024 01:52:22 - INFO - __main__ - Mean std for for qnli_3462: 0.19322167336940765
03/27/2024 01:52:22 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:52:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:52:22 - INFO - __main__ - ID text: qnli_2787
03/27/2024 01:53:31 - INFO - __main__ - Mean variance for qnli_2787: 0.05410731956362724
03/27/2024 01:53:31 - INFO - __main__ - Mean std for for qnli_2787: 0.18356670439243317
03/27/2024 01:53:31 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:53:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:53:31 - INFO - __main__ - ID text: qnli_2276
03/27/2024 01:54:41 - INFO - __main__ - Mean variance for qnli_2276: 0.057225584983825684
03/27/2024 01:54:41 - INFO - __main__ - Mean std for for qnli_2276: 0.18447695672512054
03/27/2024 01:54:41 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:54:41 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:54:41 - INFO - __main__ - ID text: qnli_1273
03/27/2024 01:55:50 - INFO - __main__ - Mean variance for qnli_1273: 0.05791792273521423
03/27/2024 01:55:50 - INFO - __main__ - Mean std for for qnli_1273: 0.19175934791564941
03/27/2024 01:55:50 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:55:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:55:50 - INFO - __main__ - ID text: qnli_1763
03/27/2024 01:57:00 - INFO - __main__ - Mean variance for qnli_1763: 0.06287042796611786
03/27/2024 01:57:00 - INFO - __main__ - Mean std for for qnli_1763: 0.19973953068256378
03/27/2024 01:57:00 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:57:00 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:57:00 - INFO - __main__ - ID text: qnli_2757
03/27/2024 01:58:09 - INFO - __main__ - Mean variance for qnli_2757: 0.06227320060133934
03/27/2024 01:58:09 - INFO - __main__ - Mean std for for qnli_2757: 0.19863997399806976
03/27/2024 01:58:09 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:58:09 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:58:09 - INFO - __main__ - ID text: qnli_837
03/27/2024 01:59:18 - INFO - __main__ - Mean variance for qnli_837: 0.05763767287135124
03/27/2024 01:59:18 - INFO - __main__ - Mean std for for qnli_837: 0.19430597126483917
03/27/2024 01:59:18 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:59:18 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 01:59:18 - INFO - __main__ - ID text: qnli_759
03/27/2024 02:00:27 - INFO - __main__ - Mean variance for qnli_759: 0.03356240317225456
03/27/2024 02:00:27 - INFO - __main__ - Mean std for for qnli_759: 0.14112459123134613
03/27/2024 02:00:27 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:00:27 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:00:27 - INFO - __main__ - ID text: qnli_3112
03/27/2024 02:01:36 - INFO - __main__ - Mean variance for qnli_3112: 0.06802337616682053
03/27/2024 02:01:36 - INFO - __main__ - Mean std for for qnli_3112: 0.21068646013736725
03/27/2024 02:01:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:01:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:01:36 - INFO - __main__ - ID text: qnli_792
03/27/2024 02:02:44 - INFO - __main__ - Mean variance for qnli_792: 0.06873317062854767
03/27/2024 02:02:44 - INFO - __main__ - Mean std for for qnli_792: 0.20545153319835663
03/27/2024 02:02:44 - INFO - __main__ - 
######## Language: qqp ######## 

03/27/2024 02:02:44 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:02:44 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:02:44 - INFO - __main__ - ID text: qqp_188208
03/27/2024 02:03:53 - INFO - __main__ - Mean variance for qqp_188208: 0.04407433792948723
03/27/2024 02:03:53 - INFO - __main__ - Mean std for for qqp_188208: 0.1796388477087021
03/27/2024 02:03:53 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:03:53 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:03:53 - INFO - __main__ - ID text: qqp_180331
03/27/2024 02:05:01 - INFO - __main__ - Mean variance for qqp_180331: 0.052612293511629105
03/27/2024 02:05:01 - INFO - __main__ - Mean std for for qqp_180331: 0.1901470422744751
03/27/2024 02:05:02 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:05:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:05:02 - INFO - __main__ - ID text: qqp_316526
03/27/2024 02:06:10 - INFO - __main__ - Mean variance for qqp_316526: 0.051852207630872726
03/27/2024 02:06:10 - INFO - __main__ - Mean std for for qqp_316526: 0.18401503562927246
03/27/2024 02:06:10 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:06:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:06:10 - INFO - __main__ - ID text: qqp_138685
03/27/2024 02:07:19 - INFO - __main__ - Mean variance for qqp_138685: 0.0517754852771759
03/27/2024 02:07:19 - INFO - __main__ - Mean std for for qqp_138685: 0.1773974895477295
03/27/2024 02:07:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:07:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:07:19 - INFO - __main__ - ID text: qqp_22780
03/27/2024 02:08:28 - INFO - __main__ - Mean variance for qqp_22780: 0.04609007015824318
03/27/2024 02:08:28 - INFO - __main__ - Mean std for for qqp_22780: 0.187147319316864
03/27/2024 02:08:28 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:08:28 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:08:28 - INFO - __main__ - ID text: qqp_382589
03/27/2024 02:09:37 - INFO - __main__ - Mean variance for qqp_382589: 0.05935157462954521
03/27/2024 02:09:37 - INFO - __main__ - Mean std for for qqp_382589: 0.1977468729019165
03/27/2024 02:09:37 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:09:37 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:09:37 - INFO - __main__ - ID text: qqp_240870
03/27/2024 02:10:45 - INFO - __main__ - Mean variance for qqp_240870: 0.05708479881286621
03/27/2024 02:10:45 - INFO - __main__ - Mean std for for qqp_240870: 0.19993151724338531
03/27/2024 02:10:45 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:10:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:10:45 - INFO - __main__ - ID text: qqp_281137
03/27/2024 02:11:54 - INFO - __main__ - Mean variance for qqp_281137: 0.059759046882390976
03/27/2024 02:11:54 - INFO - __main__ - Mean std for for qqp_281137: 0.2007407695055008
03/27/2024 02:11:54 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:11:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:11:54 - INFO - __main__ - ID text: qqp_65444
03/27/2024 02:13:02 - INFO - __main__ - Mean variance for qqp_65444: 0.04897010326385498
03/27/2024 02:13:02 - INFO - __main__ - Mean std for for qqp_65444: 0.18293292820453644
03/27/2024 02:13:02 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:13:02 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:13:02 - INFO - __main__ - ID text: qqp_198461
03/27/2024 02:14:11 - INFO - __main__ - Mean variance for qqp_198461: 0.04802928864955902
03/27/2024 02:14:11 - INFO - __main__ - Mean std for for qqp_198461: 0.17973993718624115
03/27/2024 02:14:11 - INFO - __main__ - 
######## Language: rte ######## 

03/27/2024 02:14:11 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:14:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:14:11 - INFO - __main__ - ID text: rte_322
03/27/2024 02:15:19 - INFO - __main__ - Mean variance for rte_322: 0.05248451232910156
03/27/2024 02:15:19 - INFO - __main__ - Mean std for for rte_322: 0.18834535777568817
03/27/2024 02:15:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:15:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:15:19 - INFO - __main__ - ID text: rte_2261
03/27/2024 02:16:28 - INFO - __main__ - Mean variance for rte_2261: 0.05387983098626137
03/27/2024 02:16:28 - INFO - __main__ - Mean std for for rte_2261: 0.1971616894006729
03/27/2024 02:16:28 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:16:28 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:16:28 - INFO - __main__ - ID text: rte_1200
03/27/2024 02:17:36 - INFO - __main__ - Mean variance for rte_1200: 0.048294756561517715
03/27/2024 02:17:36 - INFO - __main__ - Mean std for for rte_1200: 0.1752292513847351
03/27/2024 02:17:37 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:17:37 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:17:37 - INFO - __main__ - ID text: rte_2574
03/27/2024 02:18:45 - INFO - __main__ - Mean variance for rte_2574: 0.034421179443597794
03/27/2024 02:18:45 - INFO - __main__ - Mean std for for rte_2574: 0.14624924957752228
03/27/2024 02:18:46 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:18:46 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:18:46 - INFO - __main__ - ID text: rte_2533
03/27/2024 02:19:54 - INFO - __main__ - Mean variance for rte_2533: 0.03193897381424904
03/27/2024 02:19:54 - INFO - __main__ - Mean std for for rte_2533: 0.14097419381141663
03/27/2024 02:19:54 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:19:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:19:54 - INFO - __main__ - ID text: rte_1481
03/27/2024 02:21:03 - INFO - __main__ - Mean variance for rte_1481: 0.05439658463001251
03/27/2024 02:21:03 - INFO - __main__ - Mean std for for rte_1481: 0.18671686947345734
03/27/2024 02:21:03 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:21:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:21:03 - INFO - __main__ - ID text: rte_2364
03/27/2024 02:22:11 - INFO - __main__ - Mean variance for rte_2364: 0.05726991966366768
03/27/2024 02:22:11 - INFO - __main__ - Mean std for for rte_2364: 0.1903211623430252
03/27/2024 02:22:11 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:22:11 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:22:11 - INFO - __main__ - ID text: rte_787
03/27/2024 02:23:19 - INFO - __main__ - Mean variance for rte_787: 0.061742693185806274
03/27/2024 02:23:19 - INFO - __main__ - Mean std for for rte_787: 0.19582046568393707
03/27/2024 02:23:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:23:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:23:19 - INFO - __main__ - ID text: rte_2885
03/27/2024 02:24:28 - INFO - __main__ - Mean variance for rte_2885: 0.032294292002916336
03/27/2024 02:24:28 - INFO - __main__ - Mean std for for rte_2885: 0.14414910972118378
03/27/2024 02:24:28 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:24:28 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:24:28 - INFO - __main__ - ID text: rte_284
03/27/2024 02:25:36 - INFO - __main__ - Mean variance for rte_284: 0.05240219831466675
03/27/2024 02:25:36 - INFO - __main__ - Mean std for for rte_284: 0.18297892808914185
03/27/2024 02:25:36 - INFO - __main__ - 
######## Language: sst2 ######## 

03/27/2024 02:25:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:25:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:25:36 - INFO - __main__ - ID text: sst2_93
03/27/2024 02:26:45 - INFO - __main__ - Mean variance for sst2_93: 0.04137292504310608
03/27/2024 02:26:45 - INFO - __main__ - Mean std for for sst2_93: 0.17104703187942505
03/27/2024 02:26:45 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:26:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:26:45 - INFO - __main__ - ID text: sst2_1354
03/27/2024 02:27:54 - INFO - __main__ - Mean variance for sst2_1354: 0.04907975718379021
03/27/2024 02:27:54 - INFO - __main__ - Mean std for for sst2_1354: 0.19679808616638184
03/27/2024 02:27:54 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:27:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:27:54 - INFO - __main__ - ID text: sst2_466
03/27/2024 02:29:03 - INFO - __main__ - Mean variance for sst2_466: 0.05401955917477608
03/27/2024 02:29:03 - INFO - __main__ - Mean std for for sst2_466: 0.20604370534420013
03/27/2024 02:29:03 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:29:03 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:29:03 - INFO - __main__ - ID text: sst2_1583
03/27/2024 02:30:12 - INFO - __main__ - Mean variance for sst2_1583: 0.057638879865407944
03/27/2024 02:30:12 - INFO - __main__ - Mean std for for sst2_1583: 0.1948716640472412
03/27/2024 02:30:12 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:30:12 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:30:12 - INFO - __main__ - ID text: sst2_592
03/27/2024 02:31:21 - INFO - __main__ - Mean variance for sst2_592: 0.04971611499786377
03/27/2024 02:31:21 - INFO - __main__ - Mean std for for sst2_592: 0.18115980923175812
03/27/2024 02:31:21 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:31:21 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:31:21 - INFO - __main__ - ID text: sst2_163
03/27/2024 02:32:30 - INFO - __main__ - Mean variance for sst2_163: 0.07811616361141205
03/27/2024 02:32:30 - INFO - __main__ - Mean std for for sst2_163: 0.25078946352005005
03/27/2024 02:32:30 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:32:30 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:32:30 - INFO - __main__ - ID text: sst2_1751
03/27/2024 02:33:39 - INFO - __main__ - Mean variance for sst2_1751: 0.045257240533828735
03/27/2024 02:33:39 - INFO - __main__ - Mean std for for sst2_1751: 0.18629753589630127
03/27/2024 02:33:39 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:33:39 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:33:39 - INFO - __main__ - ID text: sst2_476
03/27/2024 02:34:48 - INFO - __main__ - Mean variance for sst2_476: 0.04100685939192772
03/27/2024 02:34:48 - INFO - __main__ - Mean std for for sst2_476: 0.16655568778514862
03/27/2024 02:34:49 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:34:49 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:34:49 - INFO - __main__ - ID text: sst2_1774
03/27/2024 02:35:58 - INFO - __main__ - Mean variance for sst2_1774: 0.051148671656847
03/27/2024 02:35:58 - INFO - __main__ - Mean std for for sst2_1774: 0.18528525531291962
03/27/2024 02:35:58 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:35:58 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:35:58 - INFO - __main__ - ID text: sst2_206
03/27/2024 02:37:07 - INFO - __main__ - Mean variance for sst2_206: 0.043979864567518234
03/27/2024 02:37:07 - INFO - __main__ - Mean std for for sst2_206: 0.1795327067375183
03/27/2024 02:37:07 - INFO - __main__ - 
######## Language: stsb ######## 

03/27/2024 02:37:07 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:37:07 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:37:07 - INFO - __main__ - ID text: stsb_778
03/27/2024 02:38:17 - INFO - __main__ - Mean variance for stsb_778: 0.051393505185842514
03/27/2024 02:38:17 - INFO - __main__ - Mean std for for stsb_778: 0.1902105063199997
03/27/2024 02:38:17 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:38:17 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:38:17 - INFO - __main__ - ID text: stsb_569
03/27/2024 02:39:26 - INFO - __main__ - Mean variance for stsb_569: 0.053999800235033035
03/27/2024 02:39:26 - INFO - __main__ - Mean std for for stsb_569: 0.20029151439666748
03/27/2024 02:39:26 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:39:26 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:39:26 - INFO - __main__ - ID text: stsb_928
03/27/2024 02:40:36 - INFO - __main__ - Mean variance for stsb_928: 0.04427693411707878
03/27/2024 02:40:36 - INFO - __main__ - Mean std for for stsb_928: 0.1646028757095337
03/27/2024 02:40:36 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:40:36 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:40:36 - INFO - __main__ - ID text: stsb_1301
03/27/2024 02:41:45 - INFO - __main__ - Mean variance for stsb_1301: 0.04321238398551941
03/27/2024 02:41:45 - INFO - __main__ - Mean std for for stsb_1301: 0.17334769666194916
03/27/2024 02:41:45 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:41:45 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:41:45 - INFO - __main__ - ID text: stsb_747
03/27/2024 02:42:54 - INFO - __main__ - Mean variance for stsb_747: 0.05568680167198181
03/27/2024 02:42:54 - INFO - __main__ - Mean std for for stsb_747: 0.19223250448703766
03/27/2024 02:42:54 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:42:54 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:42:54 - INFO - __main__ - ID text: stsb_333
03/27/2024 02:44:03 - INFO - __main__ - Mean variance for stsb_333: 0.048487842082977295
03/27/2024 02:44:03 - INFO - __main__ - Mean std for for stsb_333: 0.18403132259845734
03/27/2024 02:44:04 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:44:04 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:44:04 - INFO - __main__ - ID text: stsb_758
03/27/2024 02:45:13 - INFO - __main__ - Mean variance for stsb_758: 0.058518555015325546
03/27/2024 02:45:13 - INFO - __main__ - Mean std for for stsb_758: 0.19473175704479218
03/27/2024 02:45:13 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:45:13 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:45:13 - INFO - __main__ - ID text: stsb_727
03/27/2024 02:46:22 - INFO - __main__ - Mean variance for stsb_727: 0.051585178822278976
03/27/2024 02:46:22 - INFO - __main__ - Mean std for for stsb_727: 0.19375629723072052
03/27/2024 02:46:22 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:46:22 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:46:22 - INFO - __main__ - ID text: stsb_429
03/27/2024 02:47:31 - INFO - __main__ - Mean variance for stsb_429: 0.05083441361784935
03/27/2024 02:47:31 - INFO - __main__ - Mean std for for stsb_429: 0.19301562011241913
03/27/2024 02:47:31 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:47:31 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:47:31 - INFO - __main__ - ID text: stsb_1372
03/27/2024 02:48:41 - INFO - __main__ - Mean variance for stsb_1372: 0.03981594368815422
03/27/2024 02:48:41 - INFO - __main__ - Mean std for for stsb_1372: 0.16802054643630981
03/27/2024 02:48:41 - INFO - __main__ - 
######## Language: wnli ######## 

03/27/2024 02:48:41 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:48:41 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:48:41 - INFO - __main__ - ID text: wnli_68
03/27/2024 02:49:50 - INFO - __main__ - Mean variance for wnli_68: 0.06000901386141777
03/27/2024 02:49:50 - INFO - __main__ - Mean std for for wnli_68: 0.19335760176181793
03/27/2024 02:49:50 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:49:50 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:49:50 - INFO - __main__ - ID text: wnli_18
03/27/2024 02:50:59 - INFO - __main__ - Mean variance for wnli_18: 0.04940321668982506
03/27/2024 02:50:59 - INFO - __main__ - Mean std for for wnli_18: 0.17146418988704681
03/27/2024 02:50:59 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:50:59 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:50:59 - INFO - __main__ - ID text: wnli_43
03/27/2024 02:52:09 - INFO - __main__ - Mean variance for wnli_43: 0.06238560378551483
03/27/2024 02:52:09 - INFO - __main__ - Mean std for for wnli_43: 0.19851873815059662
03/27/2024 02:52:10 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:52:10 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:52:10 - INFO - __main__ - ID text: wnli_136
03/27/2024 02:53:19 - INFO - __main__ - Mean variance for wnli_136: 0.05859126150608063
03/27/2024 02:53:19 - INFO - __main__ - Mean std for for wnli_136: 0.1910581737756729
03/27/2024 02:53:19 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:53:19 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:53:19 - INFO - __main__ - ID text: wnli_62
03/27/2024 02:54:29 - INFO - __main__ - Mean variance for wnli_62: 0.05740034952759743
03/27/2024 02:54:29 - INFO - __main__ - Mean std for for wnli_62: 0.19167478382587433
03/27/2024 02:54:29 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:54:29 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:54:29 - INFO - __main__ - ID text: wnli_41
03/27/2024 02:55:38 - INFO - __main__ - Mean variance for wnli_41: 0.059566572308540344
03/27/2024 02:55:38 - INFO - __main__ - Mean std for for wnli_41: 0.19505555927753448
03/27/2024 02:55:38 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:55:38 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:55:38 - INFO - __main__ - ID text: wnli_118
03/27/2024 02:56:48 - INFO - __main__ - Mean variance for wnli_118: 0.0515584833920002
03/27/2024 02:56:48 - INFO - __main__ - Mean std for for wnli_118: 0.18236370384693146
03/27/2024 02:56:48 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:56:48 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:56:48 - INFO - __main__ - ID text: wnli_97
03/27/2024 02:57:57 - INFO - __main__ - Mean variance for wnli_97: 0.04345302656292915
03/27/2024 02:57:57 - INFO - __main__ - Mean std for for wnli_97: 0.16098226606845856
03/27/2024 02:57:57 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:57:57 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:57:57 - INFO - __main__ - ID text: wnli_69
03/27/2024 02:59:07 - INFO - __main__ - Mean variance for wnli_69: 0.04905254766345024
03/27/2024 02:59:07 - INFO - __main__ - Mean std for for wnli_69: 0.1798018217086792
03/27/2024 02:59:07 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:59:07 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/27/2024 02:59:07 - INFO - __main__ - ID text: wnli_142
03/27/2024 03:00:13 - INFO - __main__ - Mean variance for wnli_142: 0.05177830159664154
03/27/2024 03:00:13 - INFO - __main__ - Mean std for for wnli_142: 0.17792196571826935
03/27/2024 03:00:13 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.15221337974071503, 'amh_1': 0.14086584746837616, 'amh_2': 0.1673775315284729, 'amh_3': 0.14910657703876495, 'amh_4': 0.14711035788059235, 'amh_5': 0.18162833154201508, 'amh_6': 0.14408324658870697, 'amh_7': 0.1688663512468338, 'amh_8': 0.15342287719249725, 'amh_9': 0.15627366304397583}, 'conll_2003_en': {'conll_2003_en_0': 0.163121297955513, 'conll_2003_en_1': 0.051558032631874084, 'conll_2003_en_2': 0.05202525481581688, 'conll_2003_en_3': 0.0383925698697567, 'conll_2003_en_4': 0.04638194665312767, 'conll_2003_en_5': 0.15740908682346344, 'conll_2003_en_6': 0.053161412477493286, 'conll_2003_en_7': 0.1718515157699585, 'conll_2003_en_8': 0.16410070657730103, 'conll_2003_en_9': 0.03830087557435036}, 'hau': {'hau_0': 0.03759671375155449, 'hau_1': 0.04033864662051201, 'hau_2': 0.1457180231809616, 'hau_3': 0.023581653833389282, 'hau_4': 0.046151090413331985, 'hau_5': 0.033779338002204895, 'hau_6': 0.051751747727394104, 'hau_7': 0.04408809170126915, 'hau_8': 0.03631770983338356, 'hau_9': 0.04334677755832672}, 'ibo': {'ibo_0': 0.03696133568882942, 'ibo_1': 0.04390252009034157, 'ibo_2': 0.0445658303797245, 'ibo_3': 0.05077508091926575, 'ibo_4': 0.04254136607050896, 'ibo_5': 0.04696773365139961, 'ibo_6': 0.04400277137756348, 'ibo_7': 0.04499199986457825, 'ibo_8': 0.04082901403307915, 'ibo_9': 0.04311821982264519}, 'kin': {'kin_0': 0.04553024470806122, 'kin_1': 0.041226863861083984, 'kin_2': 0.04395046830177307, 'kin_3': 0.04241446778178215, 'kin_4': 0.04182589054107666, 'kin_5': 0.04134407266974449, 'kin_6': 0.034388601779937744, 'kin_7': 0.03658905252814293, 'kin_8': 0.03664666786789894, 'kin_9': 0.03798076882958412}, 'lug': {'lug_0': 0.03797736391425133, 'lug_1': 0.0502893440425396, 'lug_2': 0.024998286738991737, 'lug_3': 0.03445734456181526, 'lug_4': 0.0402483269572258, 'lug_5': 0.043001722544431686, 'lug_6': 0.047299619764089584, 'lug_7': 0.0415317602455616, 'lug_8': 0.04516803100705147, 'lug_9': 0.042857035994529724}, 'luo': {'luo_0': 0.031570810824632645, 'luo_1': 0.043513331562280655, 'luo_2': 0.04415542259812355, 'luo_3': 0.035645660012960434, 'luo_4': 0.04016714543104172, 'luo_5': 0.04105671867728233, 'luo_6': 0.04084290564060211, 'luo_7': 0.049690570682287216, 'luo_8': 0.04331870749592781, 'luo_9': 0.0527380108833313}, 'pcm': {'pcm_0': 0.042529914528131485, 'pcm_1': 0.046166300773620605, 'pcm_2': 0.04857124760746956, 'pcm_3': 0.04047610983252525, 'pcm_4': 0.04360169172286987, 'pcm_5': 0.03445165231823921, 'pcm_6': 0.03919045627117157, 'pcm_7': 0.0438975989818573, 'pcm_8': 0.0441870242357254, 'pcm_9': 0.03668888285756111}, 'swa': {'swa_0': 0.04323111101984978, 'swa_1': 0.04087315872311592, 'swa_2': 0.04496048018336296, 'swa_3': 0.046744752675294876, 'swa_4': 0.032490696758031845, 'swa_5': 0.031680878251791, 'swa_6': 0.0337965302169323, 'swa_7': 0.04696619510650635, 'swa_8': 0.03693723678588867, 'swa_9': 0.05134909972548485}, 'wol': {'wol_0': 0.03929058834910393, 'wol_1': 0.04115727171301842, 'wol_2': 0.04511048272252083, 'wol_3': 0.05816873535513878, 'wol_4': 0.03860225901007652, 'wol_5': 0.03728771582245827, 'wol_6': 0.16429151594638824, 'wol_7': 0.04720568284392357, 'wol_8': 0.0417969785630703, 'wol_9': 0.041340943425893784}, 'yor': {'yor_0': 0.1417703777551651, 'yor_1': 0.13839338719844818, 'yor_2': 0.04594570770859718, 'yor_3': 0.041970059275627136, 'yor_4': 0.13844692707061768, 'yor_5': 0.09702015668153763, 'yor_6': 0.04380977153778076, 'yor_7': 0.1407156139612198, 'yor_8': 0.04421656206250191, 'yor_9': 0.1393934190273285}, 'zh': {'zh_0': 0.15487951040267944, 'zh_1': 0.11957819014787674, 'zh_2': 0.12941856682300568, 'zh_3': 0.15044450759887695, 'zh_4': 0.07466442883014679, 'zh_5': 0.1671813279390335, 'zh_6': 0.13886433839797974, 'zh_7': 0.138008251786232, 'zh_8': 0.14264364540576935, 'zh_9': 0.1490771621465683}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.06851422041654587, 'arabic--3340323169760881569-0': 0.04411398246884346, 'arabic-4544770624843559444-1': 0.040833424776792526, 'arabic-891952409566422966-0': 0.04667757824063301, 'arabic-3659291834714572527-0': 0.12114254385232925, 'arabic-9215226117011890166-0': 0.042925793677568436, 'arabic-6300896128538259469-0': 0.053992170840501785, 'arabic-2382507508588518905-0': 0.04262362793087959, 'arabic-1871632801094859741-1': 0.04241006448864937, 'arabic--7365809756232083807-0': 0.04341290518641472}, 'russian': {'russian-3457655197371763238-61': 0.028037047013640404, 'russian--1914807805318993335-49': 0.0492098443210125, 'russian--3307989180606173904-1': 0.028869504109025, 'russian--2219512001175315660-0': 0.027913114055991173, 'russian--7076080992904718941-0': 0.030235325917601585, 'russian--6565862953558739013-1': 0.028760196641087532, 'russian--5098374684590548031-42': 0.04183085262775421, 'russian-3573734219967447693-1': 0.028416074812412262, 'russian--4521001374120505750-6': 0.05006568506360054, 'russian--1308382244018658424-9': 0.029580699279904366}, 'bengali': {'bengali--1199493965132146131-3': 0.09716229885816574, 'bengali-1807801556888134437-2': 0.098463274538517, 'bengali-2113189855114052041-2': 0.10100967437028885, 'bengali--2527914488250041207-0': 0.09737422317266464, 'bengali--8260793280894408063-14': 0.10620880126953125, 'bengali-8313009204852557186-4': 0.0965656265616417, 'bengali--415964033364840061-0': 0.09750709682703018, 'bengali--4696865548928858824-5': 0.09429313987493515, 'bengali-6505224142472931712-1': 0.09718680381774902, 'bengali-599666913917674019-13': 0.14642994105815887}, 'telugu': {'telugu--3977923017846260053-0': 0.04105794057250023, 'telugu-2254198842560317781-0': 0.036165617406368256, 'telugu-5435080895440121384-0': 0.039091404527425766, 'telugu--1182505954974481191-2': 0.04573555290699005, 'telugu-119276511844068401-0': 0.04073221608996391, 'telugu--4111208545071789922-0': 0.038106273859739304, 'telugu--5922002196428211484-132': 0.11287200450897217, 'telugu--1817004721681155192-3': 0.04118962585926056, 'telugu-1602214480303968359-1': 0.04214745759963989, 'telugu--6495674712575945374-0': 0.04014776274561882}, 'finnish': {'finnish-6987763079741579998-0': 0.04656895622611046, 'finnish--8516625414052383903-0': 0.04306526854634285, 'finnish-4168898766124519517-0': 0.07181546837091446, 'finnish-783166898848672321-4': 0.047909751534461975, 'finnish-2208556840820233322-0': 0.046583402901887894, 'finnish--1981034637152391615-58': 0.024852698668837547, 'finnish-8689148941295949475-9': 0.024549156427383423, 'finnish-6900867945323517614-2': 0.06729719787836075, 'finnish-8023130170017405987-1': 0.03911241143941879, 'finnish-5001457972111781248-0': 0.02652565948665142}, 'swahili': {'swahili-7146838206539641546-10': 0.04659390449523926, 'swahili-7655634199707176439-0': 0.028355829417705536, 'swahili--4427180714267750534-1': 0.049913421273231506, 'swahili-4141779435061573138-0': 0.02697376348078251, 'swahili--5424518593960879661-0': 0.028136393055319786, 'swahili-4281845253405461584-0': 0.047272711992263794, 'swahili-4899164839984299762-2': 0.04871433973312378, 'swahili-1288750786498500530-0': 0.05284072831273079, 'swahili--2671134792844015228-3': 0.0298453401774168, 'swahili-4873225622490039485-2': 0.029988663271069527}, 'korean': {'korean--2869472392602314906-0': 0.10542389750480652, 'korean-4375199563921600155-0': 0.03926545009016991, 'korean--1715118423211755607-13': 0.03012518398463726, 'korean--8028977936696142934-9': 0.07444087415933609, 'korean-2807245034690443837-5': 0.1271435022354126, 'korean-3862451817164408576-0': 0.04177219793200493, 'korean-148115504649351135-0': 0.055455733090639114, 'korean--2885837157239647036-2': 0.10098417848348618, 'korean--1743220297777040002-22': 0.13235031068325043, 'korean-3268522368206106332-0': 0.15036527812480927}, 'indonesian': {'indonesian-9141868818310916091-0': 0.029147638007998466, 'indonesian-4609394337632433932-1': 0.07211150974035263, 'indonesian-2763468883290577923-0': 0.028101792559027672, 'indonesian-5633590583948933406-0': 0.03458687290549278, 'indonesian--5961409780035435015-0': 0.025637425482273102, 'indonesian-6274547934693326697-0': 0.03441387787461281, 'indonesian--2516321763567853082-0': 0.02556365169584751, 'indonesian-2048796427556239759-4': 0.053577762097120285, 'indonesian-6246592469157278547-2': 0.03100503981113434, 'indonesian--3724318458930736973-1': 0.026322467252612114}, 'english': {'english-2852412434797041176-6': 0.07412225753068924, 'english--1463732605740571606-0': 0.03237120807170868, 'english-5441411281255470421-0': 0.03255108371376991, 'english-7294054492486093447-1': 0.03394707664847374, 'english-8820750127045023244-0': 0.044228021055459976, 'english--506693546683012611-2': 0.06104360148310661, 'english-745411798111651115-0': 0.03593263030052185, 'english-7740772185887912651-0': 0.035232190042734146, 'english-383873188776267137-19': 0.03331402316689491, 'english--8277537578703156284-0': 0.03476416692137718}}, 'glue': {'cola': {'cola_228': 0.04688519239425659, 'cola_51': 0.042810242623090744, 'cola_563': 0.15406320989131927, 'cola_501': 0.04424339532852173, 'cola_457': 0.04496326670050621, 'cola_285': 0.06496715545654297, 'cola_209': 0.04046032577753067, 'cola_178': 0.04278760030865669, 'cola_864': 0.05251237750053406, 'cola_65': 0.05383376404643059}, 'mnli': {'mnli_488': 0.06284830719232559, 'mnli_1535': 0.06177842989563942, 'mnli_3582': 0.06416197866201401, 'mnli_3811': 0.043459322303533554, 'mnli_8279': 0.04580480232834816, 'mnli_434': 0.04741804301738739, 'mnli_9195': 0.04721599817276001, 'mnli_3257': 0.05358291044831276, 'mnli_8928': 0.05608125403523445, 'mnli_6873': 0.059500645846128464}, 'mrpc': {'mrpc_451': 0.05965123698115349, 'mrpc_919': 0.0604819618165493, 'mrpc_1206': 0.04788258299231529, 'mrpc_569': 0.05102260783314705, 'mrpc_1657': 0.05310998857021332, 'mrpc_13': 0.060455214232206345, 'mrpc_1554': 0.05061132088303566, 'mrpc_1650': 0.13143184781074524, 'mrpc_326': 0.06747530400753021, 'mrpc_1429': 0.06083904206752777}, 'qnli': {'qnli_3462': 0.05867971107363701, 'qnli_2787': 0.05410731956362724, 'qnli_2276': 0.057225584983825684, 'qnli_1273': 0.05791792273521423, 'qnli_1763': 0.06287042796611786, 'qnli_2757': 0.06227320060133934, 'qnli_837': 0.05763767287135124, 'qnli_759': 0.03356240317225456, 'qnli_3112': 0.06802337616682053, 'qnli_792': 0.06873317062854767}, 'qqp': {'qqp_188208': 0.04407433792948723, 'qqp_180331': 0.052612293511629105, 'qqp_316526': 0.051852207630872726, 'qqp_138685': 0.0517754852771759, 'qqp_22780': 0.04609007015824318, 'qqp_382589': 0.05935157462954521, 'qqp_240870': 0.05708479881286621, 'qqp_281137': 0.059759046882390976, 'qqp_65444': 0.04897010326385498, 'qqp_198461': 0.04802928864955902}, 'rte': {'rte_322': 0.05248451232910156, 'rte_2261': 0.05387983098626137, 'rte_1200': 0.048294756561517715, 'rte_2574': 0.034421179443597794, 'rte_2533': 0.03193897381424904, 'rte_1481': 0.05439658463001251, 'rte_2364': 0.05726991966366768, 'rte_787': 0.061742693185806274, 'rte_2885': 0.032294292002916336, 'rte_284': 0.05240219831466675}, 'sst2': {'sst2_93': 0.04137292504310608, 'sst2_1354': 0.04907975718379021, 'sst2_466': 0.05401955917477608, 'sst2_1583': 0.057638879865407944, 'sst2_592': 0.04971611499786377, 'sst2_163': 0.07811616361141205, 'sst2_1751': 0.045257240533828735, 'sst2_476': 0.04100685939192772, 'sst2_1774': 0.051148671656847, 'sst2_206': 0.043979864567518234}, 'stsb': {'stsb_778': 0.051393505185842514, 'stsb_569': 0.053999800235033035, 'stsb_928': 0.04427693411707878, 'stsb_1301': 0.04321238398551941, 'stsb_747': 0.05568680167198181, 'stsb_333': 0.048487842082977295, 'stsb_758': 0.058518555015325546, 'stsb_727': 0.051585178822278976, 'stsb_429': 0.05083441361784935, 'stsb_1372': 0.03981594368815422}, 'wnli': {'wnli_68': 0.06000901386141777, 'wnli_18': 0.04940321668982506, 'wnli_43': 0.06238560378551483, 'wnli_136': 0.05859126150608063, 'wnli_62': 0.05740034952759743, 'wnli_41': 0.059566572308540344, 'wnli_118': 0.0515584833920002, 'wnli_97': 0.04345302656292915, 'wnli_69': 0.04905254766345024, 'wnli_142': 0.05177830159664154}}}
03/27/2024 03:00:13 - INFO - __main__ - Saving data in SD_per_task_span_5.json
03/27/2024 03:00:14 - INFO - __main__ - Saving data in var_per_task_span_5.json
03/27/2024 03:00:14 - INFO - __main__ - 
UNCERTAINTY (SD)

03/27/2024 03:00:14 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.15609481930732727, 'conll_2003_en': 0.09363026916980743, 'hau': 0.05026697367429733, 'ibo': 0.04386558383703232, 'kin': 0.0401897132396698, 'lug': 0.04078288376331329, 'luo': 0.042269930243492126, 'pcm': 0.04197608679533005, 'swa': 0.040903013199567795, 'wol': 0.055425215512514114, 'yor': 0.09716819226741791, 'zh': 0.13647598028182983}, 'tydiqa': {'arabic': 0.05466463416814804, 'russian': 0.034291837364435196, 'bengali': 0.10322008281946182, 'telugu': 0.047724585980176926, 'finnish': 0.043827999383211136, 'swahili': 0.03886351361870766, 'korean': 0.08573265373706818, 'indonesian': 0.03604680299758911, 'english': 0.041750624775886536}, 'glue': {'cola': 0.05875266343355179, 'mnli': 0.0541851706802845, 'mrpc': 0.06429611146450043, 'qnli': 0.058103084564208984, 'qqp': 0.051959920674562454, 'rte': 0.04791249334812164, 'sst2': 0.05113360285758972, 'stsb': 0.049781136214733124, 'wnli': 0.0543198399245739}}

###############################################################################
Hábrók Cluster
Job 7761473 for user s3919609
Finished at: Wed Mar 27 03:00:14 CET 2024

Job details:
============

Job ID              : 7761473
Name                : std_monte_carlo_span_5
User                : s3919609
Partition           : regularmedium
Nodes               : node95
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-26T21:11:38
Start               : 2024-03-26T21:11:39
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 05:48:36
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 20G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
