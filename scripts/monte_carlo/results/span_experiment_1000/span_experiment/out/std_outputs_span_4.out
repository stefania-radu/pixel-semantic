The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/26/2024 21:11:30 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/26/2024 21:11:30 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:11:30 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:11:30 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/26/2024 21:11:31 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/26/2024 21:11:31 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/26/2024 21:11:31 - INFO - __main__ - Running MONTE CARLO experiment: span
03/26/2024 21:11:31 - INFO - __main__ - Loading data from loss_per_task_span_4.json
03/26/2024 21:11:31 - INFO - __main__ - 
LOSS

03/26/2024 21:11:31 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8472682237625122, 'conll_2003_en': 0.733957827091217, 'hau': 0.6628249883651733, 'ibo': 0.6642719507217407, 'kin': 0.648504376411438, 'lug': 0.6425142288208008, 'luo': 0.6758673787117004, 'pcm': 0.6676560640335083, 'swa': 0.6458304524421692, 'wol': 0.692165195941925, 'yor': 0.7045311331748962, 'zh': 0.8585457801818848}, 'tydiqa': {'arabic': 0.8478070497512817, 'russian': 0.6538556814193726, 'bengali': 0.6965555548667908, 'telugu': 0.7689300775527954, 'finnish': 0.5697134733200073, 'swahili': 0.5625636577606201, 'korean': 0.8686054944992065, 'indonesian': 0.52568519115448, 'english': 0.23290514945983887}, 'glue': {'cola': 0.5036490559577942, 'mnli': 0.34647977352142334, 'mrpc': 0.24255168437957764, 'qnli': 0.29977530241012573, 'qqp': 0.3748932480812073, 'rte': 0.26908111572265625, 'sst2': 0.49932146072387695, 'stsb': 0.2635020315647125, 'wnli': 0.24978843331336975}}
03/26/2024 21:11:31 - INFO - __main__ - Lowest losses:
03/26/2024 21:11:31 - INFO - __main__ - ID: stsb_1301, Loss: 0.009702400304377079
03/26/2024 21:11:31 - INFO - __main__ - ID: mrpc_326, Loss: 0.022254083305597305
03/26/2024 21:11:31 - INFO - __main__ - ID: qnli_759, Loss: 0.03467945009469986
03/26/2024 21:11:31 - INFO - __main__ - ID: english-383873188776267137-19, Loss: 0.0739326924085617
03/26/2024 21:11:31 - INFO - __main__ - ID: stsb_333, Loss: 0.09521930664777756
03/26/2024 21:11:31 - INFO - __main__ - Highest losses:
03/26/2024 21:11:31 - INFO - __main__ - ID: arabic-3659291834714572527-0, Loss: 0.8983985781669617
03/26/2024 21:11:31 - INFO - __main__ - ID: korean-3268522368206106332-0, Loss: 0.9025317430496216
03/26/2024 21:11:31 - INFO - __main__ - ID: zh_0, Loss: 0.9035710096359253
03/26/2024 21:11:31 - INFO - __main__ - ID: korean-2807245034690443837-5, Loss: 0.904843807220459
03/26/2024 21:11:31 - INFO - __main__ - ID: conll_2003_en_6, Loss: 0.9518193602561951
03/26/2024 21:11:31 - INFO - __main__ - Monte Carlo samples: 100
03/26/2024 21:11:31 - INFO - __main__ - Training mode: True
03/26/2024 21:11:31 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/26/2024 21:11:31 - INFO - __main__ - 
######## Language: amh ######## 

03/26/2024 21:11:31 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:11:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:11:31 - INFO - __main__ - ID text: amh_0
03/26/2024 21:12:43 - INFO - __main__ - Mean variance for amh_0: 0.15964888036251068
03/26/2024 21:12:43 - INFO - __main__ - Mean std for for amh_0: 0.34183141589164734
03/26/2024 21:12:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:12:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:12:43 - INFO - __main__ - ID text: amh_1
03/26/2024 21:13:54 - INFO - __main__ - Mean variance for amh_1: 0.15918245911598206
03/26/2024 21:13:54 - INFO - __main__ - Mean std for for amh_1: 0.3448513448238373
03/26/2024 21:13:54 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:13:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:13:54 - INFO - __main__ - ID text: amh_2
03/26/2024 21:15:03 - INFO - __main__ - Mean variance for amh_2: 0.1605585515499115
03/26/2024 21:15:03 - INFO - __main__ - Mean std for for amh_2: 0.3467752933502197
03/26/2024 21:15:03 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:15:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:15:03 - INFO - __main__ - ID text: amh_3
03/26/2024 21:16:13 - INFO - __main__ - Mean variance for amh_3: 0.13884291052818298
03/26/2024 21:16:13 - INFO - __main__ - Mean std for for amh_3: 0.32131463289260864
03/26/2024 21:16:13 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:16:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:16:13 - INFO - __main__ - ID text: amh_4
03/26/2024 21:17:23 - INFO - __main__ - Mean variance for amh_4: 0.14091001451015472
03/26/2024 21:17:23 - INFO - __main__ - Mean std for for amh_4: 0.32471296191215515
03/26/2024 21:17:23 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:17:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:17:23 - INFO - __main__ - ID text: amh_5
03/26/2024 21:18:33 - INFO - __main__ - Mean variance for amh_5: 0.17386849224567413
03/26/2024 21:18:33 - INFO - __main__ - Mean std for for amh_5: 0.3649492561817169
03/26/2024 21:18:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:18:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:18:33 - INFO - __main__ - ID text: amh_6
03/26/2024 21:19:43 - INFO - __main__ - Mean variance for amh_6: 0.1373472660779953
03/26/2024 21:19:43 - INFO - __main__ - Mean std for for amh_6: 0.3243059515953064
03/26/2024 21:19:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:19:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:19:43 - INFO - __main__ - ID text: amh_7
03/26/2024 21:20:54 - INFO - __main__ - Mean variance for amh_7: 0.14290788769721985
03/26/2024 21:20:54 - INFO - __main__ - Mean std for for amh_7: 0.3282700777053833
03/26/2024 21:20:54 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:20:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:20:54 - INFO - __main__ - ID text: amh_8
03/26/2024 21:22:04 - INFO - __main__ - Mean variance for amh_8: 0.1602204591035843
03/26/2024 21:22:04 - INFO - __main__ - Mean std for for amh_8: 0.3434630334377289
03/26/2024 21:22:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:22:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:22:04 - INFO - __main__ - ID text: amh_9
03/26/2024 21:23:14 - INFO - __main__ - Mean variance for amh_9: 0.1562538892030716
03/26/2024 21:23:14 - INFO - __main__ - Mean std for for amh_9: 0.3415120542049408
03/26/2024 21:23:14 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/26/2024 21:23:14 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:23:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:23:14 - INFO - __main__ - ID text: conll_2003_en_0
03/26/2024 21:24:24 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.1478344351053238
03/26/2024 21:24:24 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.3405013084411621
03/26/2024 21:24:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:24:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:24:24 - INFO - __main__ - ID text: conll_2003_en_1
03/26/2024 21:25:34 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.04240729287266731
03/26/2024 21:25:34 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.1835775524377823
03/26/2024 21:25:34 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:25:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:25:34 - INFO - __main__ - ID text: conll_2003_en_2
03/26/2024 21:26:44 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.03826410323381424
03/26/2024 21:26:44 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.1526523381471634
03/26/2024 21:26:44 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:26:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:26:44 - INFO - __main__ - ID text: conll_2003_en_3
03/26/2024 21:27:55 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.036425795406103134
03/26/2024 21:27:55 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.16080977022647858
03/26/2024 21:27:55 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:27:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:27:55 - INFO - __main__ - ID text: conll_2003_en_4
03/26/2024 21:29:04 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.04435155913233757
03/26/2024 21:29:04 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.18570107221603394
03/26/2024 21:29:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:29:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:29:04 - INFO - __main__ - ID text: conll_2003_en_5
03/26/2024 21:30:14 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.14784620702266693
03/26/2024 21:30:14 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.34241294860839844
03/26/2024 21:30:15 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:30:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:30:15 - INFO - __main__ - ID text: conll_2003_en_6
03/26/2024 21:31:26 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.12266383320093155
03/26/2024 21:31:26 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.3163659870624542
03/26/2024 21:31:27 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:31:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:31:27 - INFO - __main__ - ID text: conll_2003_en_7
03/26/2024 21:32:37 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.16805998980998993
03/26/2024 21:32:37 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.36977338790893555
03/26/2024 21:32:37 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:32:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:32:37 - INFO - __main__ - ID text: conll_2003_en_8
03/26/2024 21:33:47 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.16180481016635895
03/26/2024 21:33:47 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.3619284927845001
03/26/2024 21:33:47 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:33:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:33:47 - INFO - __main__ - ID text: conll_2003_en_9
03/26/2024 21:34:57 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.038822319358587265
03/26/2024 21:34:57 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.1621531993150711
03/26/2024 21:34:57 - INFO - __main__ - 
######## Language: hau ######## 

03/26/2024 21:34:57 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:34:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:34:57 - INFO - __main__ - ID text: hau_0
03/26/2024 21:36:06 - INFO - __main__ - Mean variance for hau_0: 0.02782689966261387
03/26/2024 21:36:06 - INFO - __main__ - Mean std for for hau_0: 0.1293737292289734
03/26/2024 21:36:06 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:36:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:36:06 - INFO - __main__ - ID text: hau_1
03/26/2024 21:37:16 - INFO - __main__ - Mean variance for hau_1: 0.04472079873085022
03/26/2024 21:37:16 - INFO - __main__ - Mean std for for hau_1: 0.18013806641101837
03/26/2024 21:37:16 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:37:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:37:16 - INFO - __main__ - ID text: hau_2
03/26/2024 21:38:26 - INFO - __main__ - Mean variance for hau_2: 0.13741247355937958
03/26/2024 21:38:26 - INFO - __main__ - Mean std for for hau_2: 0.33070123195648193
03/26/2024 21:38:26 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:38:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:38:26 - INFO - __main__ - ID text: hau_3
03/26/2024 21:39:35 - INFO - __main__ - Mean variance for hau_3: 0.01632189005613327
03/26/2024 21:39:35 - INFO - __main__ - Mean std for for hau_3: 0.10013612359762192
03/26/2024 21:39:36 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:39:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:39:36 - INFO - __main__ - ID text: hau_4
03/26/2024 21:40:45 - INFO - __main__ - Mean variance for hau_4: 0.03423035144805908
03/26/2024 21:40:45 - INFO - __main__ - Mean std for for hau_4: 0.14146097004413605
03/26/2024 21:40:45 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:40:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:40:45 - INFO - __main__ - ID text: hau_5
03/26/2024 21:41:55 - INFO - __main__ - Mean variance for hau_5: 0.025631381198763847
03/26/2024 21:41:55 - INFO - __main__ - Mean std for for hau_5: 0.12157788872718811
03/26/2024 21:41:55 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:41:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:41:55 - INFO - __main__ - ID text: hau_6
03/26/2024 21:43:05 - INFO - __main__ - Mean variance for hau_6: 0.04374922811985016
03/26/2024 21:43:05 - INFO - __main__ - Mean std for for hau_6: 0.16216722130775452
03/26/2024 21:43:05 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:43:05 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:43:05 - INFO - __main__ - ID text: hau_7
03/26/2024 21:44:15 - INFO - __main__ - Mean variance for hau_7: 0.0362948440015316
03/26/2024 21:44:15 - INFO - __main__ - Mean std for for hau_7: 0.14417286217212677
03/26/2024 21:44:15 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:44:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:44:15 - INFO - __main__ - ID text: hau_8
03/26/2024 21:45:24 - INFO - __main__ - Mean variance for hau_8: 0.028321994468569756
03/26/2024 21:45:24 - INFO - __main__ - Mean std for for hau_8: 0.12727701663970947
03/26/2024 21:45:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:45:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:45:24 - INFO - __main__ - ID text: hau_9
03/26/2024 21:46:34 - INFO - __main__ - Mean variance for hau_9: 0.038034822791814804
03/26/2024 21:46:34 - INFO - __main__ - Mean std for for hau_9: 0.156410813331604
03/26/2024 21:46:34 - INFO - __main__ - 
######## Language: ibo ######## 

03/26/2024 21:46:34 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:46:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:46:34 - INFO - __main__ - ID text: ibo_0
03/26/2024 21:47:44 - INFO - __main__ - Mean variance for ibo_0: 0.03878892585635185
03/26/2024 21:47:44 - INFO - __main__ - Mean std for for ibo_0: 0.1601981520652771
03/26/2024 21:47:44 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:47:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:47:44 - INFO - __main__ - ID text: ibo_1
03/26/2024 21:48:54 - INFO - __main__ - Mean variance for ibo_1: 0.03999466821551323
03/26/2024 21:48:54 - INFO - __main__ - Mean std for for ibo_1: 0.16007153689861298
03/26/2024 21:48:54 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:48:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:48:54 - INFO - __main__ - ID text: ibo_2
03/26/2024 21:50:04 - INFO - __main__ - Mean variance for ibo_2: 0.037420351058244705
03/26/2024 21:50:04 - INFO - __main__ - Mean std for for ibo_2: 0.15094684064388275
03/26/2024 21:50:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:50:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:50:04 - INFO - __main__ - ID text: ibo_3
03/26/2024 21:51:14 - INFO - __main__ - Mean variance for ibo_3: 0.04750017821788788
03/26/2024 21:51:14 - INFO - __main__ - Mean std for for ibo_3: 0.19178372621536255
03/26/2024 21:51:14 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:51:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:51:14 - INFO - __main__ - ID text: ibo_4
03/26/2024 21:52:24 - INFO - __main__ - Mean variance for ibo_4: 0.03395068272948265
03/26/2024 21:52:24 - INFO - __main__ - Mean std for for ibo_4: 0.1500113159418106
03/26/2024 21:52:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:52:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:52:24 - INFO - __main__ - ID text: ibo_5
03/26/2024 21:53:34 - INFO - __main__ - Mean variance for ibo_5: 0.037258077412843704
03/26/2024 21:53:34 - INFO - __main__ - Mean std for for ibo_5: 0.16296887397766113
03/26/2024 21:53:34 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:53:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:53:34 - INFO - __main__ - ID text: ibo_6
03/26/2024 21:54:44 - INFO - __main__ - Mean variance for ibo_6: 0.03944776579737663
03/26/2024 21:54:44 - INFO - __main__ - Mean std for for ibo_6: 0.15769632160663605
03/26/2024 21:54:44 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:54:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:54:44 - INFO - __main__ - ID text: ibo_7
03/26/2024 21:55:54 - INFO - __main__ - Mean variance for ibo_7: 0.036131154745817184
03/26/2024 21:55:54 - INFO - __main__ - Mean std for for ibo_7: 0.14454440772533417
03/26/2024 21:55:54 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:55:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:55:54 - INFO - __main__ - ID text: ibo_8
03/26/2024 21:57:04 - INFO - __main__ - Mean variance for ibo_8: 0.03573179244995117
03/26/2024 21:57:04 - INFO - __main__ - Mean std for for ibo_8: 0.16564449667930603
03/26/2024 21:57:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:57:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:57:04 - INFO - __main__ - ID text: ibo_9
03/26/2024 21:58:14 - INFO - __main__ - Mean variance for ibo_9: 0.032668571919202805
03/26/2024 21:58:14 - INFO - __main__ - Mean std for for ibo_9: 0.14417964220046997
03/26/2024 21:58:14 - INFO - __main__ - 
######## Language: kin ######## 

03/26/2024 21:58:14 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:58:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:58:14 - INFO - __main__ - ID text: kin_0
03/26/2024 21:59:24 - INFO - __main__ - Mean variance for kin_0: 0.03889470919966698
03/26/2024 21:59:24 - INFO - __main__ - Mean std for for kin_0: 0.15153636038303375
03/26/2024 21:59:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:59:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:59:24 - INFO - __main__ - ID text: kin_1
03/26/2024 22:00:33 - INFO - __main__ - Mean variance for kin_1: 0.04005184397101402
03/26/2024 22:00:33 - INFO - __main__ - Mean std for for kin_1: 0.1625649780035019
03/26/2024 22:00:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:00:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:00:33 - INFO - __main__ - ID text: kin_2
03/26/2024 22:01:44 - INFO - __main__ - Mean variance for kin_2: 0.052381932735443115
03/26/2024 22:01:44 - INFO - __main__ - Mean std for for kin_2: 0.20244790613651276
03/26/2024 22:01:44 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:01:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:01:44 - INFO - __main__ - ID text: kin_3
03/26/2024 22:02:54 - INFO - __main__ - Mean variance for kin_3: 0.037470392882823944
03/26/2024 22:02:54 - INFO - __main__ - Mean std for for kin_3: 0.14477382600307465
03/26/2024 22:02:54 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:02:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:02:54 - INFO - __main__ - ID text: kin_4
03/26/2024 22:04:04 - INFO - __main__ - Mean variance for kin_4: 0.03537178039550781
03/26/2024 22:04:04 - INFO - __main__ - Mean std for for kin_4: 0.14336387813091278
03/26/2024 22:04:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:04:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:04:04 - INFO - __main__ - ID text: kin_5
03/26/2024 22:05:14 - INFO - __main__ - Mean variance for kin_5: 0.04255763813853264
03/26/2024 22:05:14 - INFO - __main__ - Mean std for for kin_5: 0.17746007442474365
03/26/2024 22:05:14 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:05:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:05:14 - INFO - __main__ - ID text: kin_6
03/26/2024 22:06:24 - INFO - __main__ - Mean variance for kin_6: 0.0275699645280838
03/26/2024 22:06:24 - INFO - __main__ - Mean std for for kin_6: 0.12797032296657562
03/26/2024 22:06:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:06:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:06:24 - INFO - __main__ - ID text: kin_7
03/26/2024 22:07:35 - INFO - __main__ - Mean variance for kin_7: 0.033870965242385864
03/26/2024 22:07:35 - INFO - __main__ - Mean std for for kin_7: 0.1432151198387146
03/26/2024 22:07:35 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:07:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:07:35 - INFO - __main__ - ID text: kin_8
03/26/2024 22:08:45 - INFO - __main__ - Mean variance for kin_8: 0.03497060015797615
03/26/2024 22:08:45 - INFO - __main__ - Mean std for for kin_8: 0.1555904895067215
03/26/2024 22:08:45 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:08:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:08:45 - INFO - __main__ - ID text: kin_9
03/26/2024 22:09:55 - INFO - __main__ - Mean variance for kin_9: 0.03540464863181114
03/26/2024 22:09:55 - INFO - __main__ - Mean std for for kin_9: 0.15644042193889618
03/26/2024 22:09:55 - INFO - __main__ - 
######## Language: lug ######## 

03/26/2024 22:09:55 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:09:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:09:55 - INFO - __main__ - ID text: lug_0
03/26/2024 22:11:05 - INFO - __main__ - Mean variance for lug_0: 0.029958074912428856
03/26/2024 22:11:05 - INFO - __main__ - Mean std for for lug_0: 0.13294093310832977
03/26/2024 22:11:05 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:11:05 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:11:05 - INFO - __main__ - ID text: lug_1
03/26/2024 22:12:15 - INFO - __main__ - Mean variance for lug_1: 0.03334689140319824
03/26/2024 22:12:15 - INFO - __main__ - Mean std for for lug_1: 0.14440031349658966
03/26/2024 22:12:15 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:12:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:12:15 - INFO - __main__ - ID text: lug_2
03/26/2024 22:13:25 - INFO - __main__ - Mean variance for lug_2: 0.01517285406589508
03/26/2024 22:13:25 - INFO - __main__ - Mean std for for lug_2: 0.09722638130187988
03/26/2024 22:13:25 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:13:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:13:25 - INFO - __main__ - ID text: lug_3
03/26/2024 22:14:35 - INFO - __main__ - Mean variance for lug_3: 0.025577588006854057
03/26/2024 22:14:35 - INFO - __main__ - Mean std for for lug_3: 0.12308896332979202
03/26/2024 22:14:35 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:14:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:14:35 - INFO - __main__ - ID text: lug_4
03/26/2024 22:15:45 - INFO - __main__ - Mean variance for lug_4: 0.041520826518535614
03/26/2024 22:15:45 - INFO - __main__ - Mean std for for lug_4: 0.16434025764465332
03/26/2024 22:15:45 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:15:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:15:45 - INFO - __main__ - ID text: lug_5
03/26/2024 22:16:55 - INFO - __main__ - Mean variance for lug_5: 0.03327082470059395
03/26/2024 22:16:55 - INFO - __main__ - Mean std for for lug_5: 0.14102889597415924
03/26/2024 22:16:55 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:16:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:16:55 - INFO - __main__ - ID text: lug_6
03/26/2024 22:18:07 - INFO - __main__ - Mean variance for lug_6: 0.03431788459420204
03/26/2024 22:18:07 - INFO - __main__ - Mean std for for lug_6: 0.14469265937805176
03/26/2024 22:18:07 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:18:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:18:07 - INFO - __main__ - ID text: lug_7
03/26/2024 22:19:17 - INFO - __main__ - Mean variance for lug_7: 0.03873894736170769
03/26/2024 22:19:17 - INFO - __main__ - Mean std for for lug_7: 0.15740518271923065
03/26/2024 22:19:17 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:19:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:19:17 - INFO - __main__ - ID text: lug_8
03/26/2024 22:20:27 - INFO - __main__ - Mean variance for lug_8: 0.03862174600362778
03/26/2024 22:20:27 - INFO - __main__ - Mean std for for lug_8: 0.154508575797081
03/26/2024 22:20:27 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:20:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:20:27 - INFO - __main__ - ID text: lug_9
03/26/2024 22:21:38 - INFO - __main__ - Mean variance for lug_9: 0.03750307857990265
03/26/2024 22:21:38 - INFO - __main__ - Mean std for for lug_9: 0.1504640430212021
03/26/2024 22:21:38 - INFO - __main__ - 
######## Language: luo ######## 

03/26/2024 22:21:38 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:21:38 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:21:38 - INFO - __main__ - ID text: luo_0
03/26/2024 22:22:48 - INFO - __main__ - Mean variance for luo_0: 0.02209770679473877
03/26/2024 22:22:48 - INFO - __main__ - Mean std for for luo_0: 0.11452168971300125
03/26/2024 22:22:48 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:22:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:22:48 - INFO - __main__ - ID text: luo_1
03/26/2024 22:23:58 - INFO - __main__ - Mean variance for luo_1: 0.038847941905260086
03/26/2024 22:23:58 - INFO - __main__ - Mean std for for luo_1: 0.1648426353931427
03/26/2024 22:23:58 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:23:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:23:58 - INFO - __main__ - ID text: luo_2
03/26/2024 22:25:09 - INFO - __main__ - Mean variance for luo_2: 0.03517375513911247
03/26/2024 22:25:09 - INFO - __main__ - Mean std for for luo_2: 0.14585497975349426
03/26/2024 22:25:09 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:25:09 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:25:09 - INFO - __main__ - ID text: luo_3
03/26/2024 22:26:19 - INFO - __main__ - Mean variance for luo_3: 0.027032367885112762
03/26/2024 22:26:19 - INFO - __main__ - Mean std for for luo_3: 0.12568925321102142
03/26/2024 22:26:19 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:26:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:26:19 - INFO - __main__ - ID text: luo_4
03/26/2024 22:27:30 - INFO - __main__ - Mean variance for luo_4: 0.03992186114192009
03/26/2024 22:27:30 - INFO - __main__ - Mean std for for luo_4: 0.16532714664936066
03/26/2024 22:27:30 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:27:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:27:30 - INFO - __main__ - ID text: luo_5
03/26/2024 22:28:40 - INFO - __main__ - Mean variance for luo_5: 0.03457614779472351
03/26/2024 22:28:40 - INFO - __main__ - Mean std for for luo_5: 0.14901725947856903
03/26/2024 22:28:40 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:28:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:28:40 - INFO - __main__ - ID text: luo_6
03/26/2024 22:29:51 - INFO - __main__ - Mean variance for luo_6: 0.03385496884584427
03/26/2024 22:29:51 - INFO - __main__ - Mean std for for luo_6: 0.14117759466171265
03/26/2024 22:29:51 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:29:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:29:51 - INFO - __main__ - ID text: luo_7
03/26/2024 22:31:01 - INFO - __main__ - Mean variance for luo_7: 0.04764236509799957
03/26/2024 22:31:01 - INFO - __main__ - Mean std for for luo_7: 0.1874544620513916
03/26/2024 22:31:01 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:31:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:31:01 - INFO - __main__ - ID text: luo_8
03/26/2024 22:32:12 - INFO - __main__ - Mean variance for luo_8: 0.03693525120615959
03/26/2024 22:32:12 - INFO - __main__ - Mean std for for luo_8: 0.1535423994064331
03/26/2024 22:32:12 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:32:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:32:12 - INFO - __main__ - ID text: luo_9
03/26/2024 22:33:22 - INFO - __main__ - Mean variance for luo_9: 0.049496281892061234
03/26/2024 22:33:22 - INFO - __main__ - Mean std for for luo_9: 0.1987398862838745
03/26/2024 22:33:22 - INFO - __main__ - 
######## Language: pcm ######## 

03/26/2024 22:33:22 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:33:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:33:22 - INFO - __main__ - ID text: pcm_0
03/26/2024 22:34:33 - INFO - __main__ - Mean variance for pcm_0: 0.03590461611747742
03/26/2024 22:34:33 - INFO - __main__ - Mean std for for pcm_0: 0.15657863020896912
03/26/2024 22:34:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:34:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:34:33 - INFO - __main__ - ID text: pcm_1
03/26/2024 22:35:43 - INFO - __main__ - Mean variance for pcm_1: 0.04915781691670418
03/26/2024 22:35:43 - INFO - __main__ - Mean std for for pcm_1: 0.1911724954843521
03/26/2024 22:35:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:35:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:35:43 - INFO - __main__ - ID text: pcm_2
03/26/2024 22:36:53 - INFO - __main__ - Mean variance for pcm_2: 0.040141116827726364
03/26/2024 22:36:53 - INFO - __main__ - Mean std for for pcm_2: 0.16483859717845917
03/26/2024 22:36:53 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:36:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:36:53 - INFO - __main__ - ID text: pcm_3
03/26/2024 22:38:03 - INFO - __main__ - Mean variance for pcm_3: 0.033306706696748734
03/26/2024 22:38:03 - INFO - __main__ - Mean std for for pcm_3: 0.14355450868606567
03/26/2024 22:38:03 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:38:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:38:03 - INFO - __main__ - ID text: pcm_4
03/26/2024 22:39:14 - INFO - __main__ - Mean variance for pcm_4: 0.03164767846465111
03/26/2024 22:39:14 - INFO - __main__ - Mean std for for pcm_4: 0.13899347186088562
03/26/2024 22:39:14 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:39:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:39:14 - INFO - __main__ - ID text: pcm_5
03/26/2024 22:40:24 - INFO - __main__ - Mean variance for pcm_5: 0.034532174468040466
03/26/2024 22:40:24 - INFO - __main__ - Mean std for for pcm_5: 0.16317804157733917
03/26/2024 22:40:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:40:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:40:24 - INFO - __main__ - ID text: pcm_6
03/26/2024 22:41:34 - INFO - __main__ - Mean variance for pcm_6: 0.03686988726258278
03/26/2024 22:41:34 - INFO - __main__ - Mean std for for pcm_6: 0.15410201251506805
03/26/2024 22:41:34 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:41:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:41:34 - INFO - __main__ - ID text: pcm_7
03/26/2024 22:42:45 - INFO - __main__ - Mean variance for pcm_7: 0.038548484444618225
03/26/2024 22:42:45 - INFO - __main__ - Mean std for for pcm_7: 0.15362179279327393
03/26/2024 22:42:45 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:42:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:42:45 - INFO - __main__ - ID text: pcm_8
03/26/2024 22:43:54 - INFO - __main__ - Mean variance for pcm_8: 0.03514019772410393
03/26/2024 22:43:54 - INFO - __main__ - Mean std for for pcm_8: 0.14343172311782837
03/26/2024 22:43:54 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:43:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:43:54 - INFO - __main__ - ID text: pcm_9
03/26/2024 22:45:04 - INFO - __main__ - Mean variance for pcm_9: 0.040842052549123764
03/26/2024 22:45:04 - INFO - __main__ - Mean std for for pcm_9: 0.17152588069438934
03/26/2024 22:45:04 - INFO - __main__ - 
######## Language: swa ######## 

03/26/2024 22:45:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:45:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:45:04 - INFO - __main__ - ID text: swa_0
03/26/2024 22:46:14 - INFO - __main__ - Mean variance for swa_0: 0.03529609367251396
03/26/2024 22:46:14 - INFO - __main__ - Mean std for for swa_0: 0.14216533303260803
03/26/2024 22:46:14 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:46:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:46:14 - INFO - __main__ - ID text: swa_1
03/26/2024 22:47:24 - INFO - __main__ - Mean variance for swa_1: 0.03734641149640083
03/26/2024 22:47:24 - INFO - __main__ - Mean std for for swa_1: 0.15684102475643158
03/26/2024 22:47:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:47:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:47:24 - INFO - __main__ - ID text: swa_2
03/26/2024 22:48:34 - INFO - __main__ - Mean variance for swa_2: 0.03518042340874672
03/26/2024 22:48:34 - INFO - __main__ - Mean std for for swa_2: 0.14223261177539825
03/26/2024 22:48:34 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:48:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:48:34 - INFO - __main__ - ID text: swa_3
03/26/2024 22:49:44 - INFO - __main__ - Mean variance for swa_3: 0.035655997693538666
03/26/2024 22:49:44 - INFO - __main__ - Mean std for for swa_3: 0.1573525220155716
03/26/2024 22:49:44 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:49:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:49:44 - INFO - __main__ - ID text: swa_4
03/26/2024 22:50:54 - INFO - __main__ - Mean variance for swa_4: 0.023462815210223198
03/26/2024 22:50:54 - INFO - __main__ - Mean std for for swa_4: 0.117557592689991
03/26/2024 22:50:54 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:50:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:50:54 - INFO - __main__ - ID text: swa_5
03/26/2024 22:52:04 - INFO - __main__ - Mean variance for swa_5: 0.02393198013305664
03/26/2024 22:52:04 - INFO - __main__ - Mean std for for swa_5: 0.11880779266357422
03/26/2024 22:52:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:52:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:52:04 - INFO - __main__ - ID text: swa_6
03/26/2024 22:53:14 - INFO - __main__ - Mean variance for swa_6: 0.029083572328090668
03/26/2024 22:53:14 - INFO - __main__ - Mean std for for swa_6: 0.13076399266719818
03/26/2024 22:53:14 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:53:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:53:14 - INFO - __main__ - ID text: swa_7
03/26/2024 22:54:24 - INFO - __main__ - Mean variance for swa_7: 0.048379551619291306
03/26/2024 22:54:24 - INFO - __main__ - Mean std for for swa_7: 0.19754250347614288
03/26/2024 22:54:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:54:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:54:24 - INFO - __main__ - ID text: swa_8
03/26/2024 22:55:33 - INFO - __main__ - Mean variance for swa_8: 0.032675523310899734
03/26/2024 22:55:33 - INFO - __main__ - Mean std for for swa_8: 0.14667916297912598
03/26/2024 22:55:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:55:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:55:33 - INFO - __main__ - ID text: swa_9
03/26/2024 22:56:43 - INFO - __main__ - Mean variance for swa_9: 0.043059349060058594
03/26/2024 22:56:43 - INFO - __main__ - Mean std for for swa_9: 0.16795188188552856
03/26/2024 22:56:43 - INFO - __main__ - 
######## Language: wol ######## 

03/26/2024 22:56:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:56:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:56:43 - INFO - __main__ - ID text: wol_0
03/26/2024 22:57:53 - INFO - __main__ - Mean variance for wol_0: 0.036137450486421585
03/26/2024 22:57:53 - INFO - __main__ - Mean std for for wol_0: 0.14506874978542328
03/26/2024 22:57:53 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:57:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:57:53 - INFO - __main__ - ID text: wol_1
03/26/2024 22:59:03 - INFO - __main__ - Mean variance for wol_1: 0.04035315662622452
03/26/2024 22:59:03 - INFO - __main__ - Mean std for for wol_1: 0.1636919528245926
03/26/2024 22:59:03 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:59:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:59:03 - INFO - __main__ - ID text: wol_2
03/26/2024 23:00:13 - INFO - __main__ - Mean variance for wol_2: 0.03769970312714577
03/26/2024 23:00:13 - INFO - __main__ - Mean std for for wol_2: 0.1570080667734146
03/26/2024 23:00:13 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:00:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:00:13 - INFO - __main__ - ID text: wol_3
03/26/2024 23:01:23 - INFO - __main__ - Mean variance for wol_3: 0.06660851836204529
03/26/2024 23:01:23 - INFO - __main__ - Mean std for for wol_3: 0.22884048521518707
03/26/2024 23:01:23 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:01:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:01:23 - INFO - __main__ - ID text: wol_4
03/26/2024 23:02:33 - INFO - __main__ - Mean variance for wol_4: 0.03320218250155449
03/26/2024 23:02:33 - INFO - __main__ - Mean std for for wol_4: 0.16050387918949127
03/26/2024 23:02:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:02:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:02:33 - INFO - __main__ - ID text: wol_5
03/26/2024 23:03:43 - INFO - __main__ - Mean variance for wol_5: 0.04205198213458061
03/26/2024 23:03:43 - INFO - __main__ - Mean std for for wol_5: 0.16408173739910126
03/26/2024 23:03:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:03:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:03:43 - INFO - __main__ - ID text: wol_6
03/26/2024 23:04:53 - INFO - __main__ - Mean variance for wol_6: 0.1514856219291687
03/26/2024 23:04:53 - INFO - __main__ - Mean std for for wol_6: 0.3426467180252075
03/26/2024 23:04:53 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:04:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:04:53 - INFO - __main__ - ID text: wol_7
03/26/2024 23:06:03 - INFO - __main__ - Mean variance for wol_7: 0.03629951551556587
03/26/2024 23:06:03 - INFO - __main__ - Mean std for for wol_7: 0.15953253209590912
03/26/2024 23:06:03 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:06:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:06:03 - INFO - __main__ - ID text: wol_8
03/26/2024 23:07:13 - INFO - __main__ - Mean variance for wol_8: 0.04969258978962898
03/26/2024 23:07:13 - INFO - __main__ - Mean std for for wol_8: 0.1966322660446167
03/26/2024 23:07:13 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:07:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:07:13 - INFO - __main__ - ID text: wol_9
03/26/2024 23:08:23 - INFO - __main__ - Mean variance for wol_9: 0.03745827451348305
03/26/2024 23:08:23 - INFO - __main__ - Mean std for for wol_9: 0.1676282286643982
03/26/2024 23:08:23 - INFO - __main__ - 
######## Language: yor ######## 

03/26/2024 23:08:23 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:08:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:08:23 - INFO - __main__ - ID text: yor_0
03/26/2024 23:09:33 - INFO - __main__ - Mean variance for yor_0: 0.13000212609767914
03/26/2024 23:09:33 - INFO - __main__ - Mean std for for yor_0: 0.31242772936820984
03/26/2024 23:09:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:09:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:09:33 - INFO - __main__ - ID text: yor_1
03/26/2024 23:10:43 - INFO - __main__ - Mean variance for yor_1: 0.13566814363002777
03/26/2024 23:10:43 - INFO - __main__ - Mean std for for yor_1: 0.3099287450313568
03/26/2024 23:10:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:10:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:10:43 - INFO - __main__ - ID text: yor_2
03/26/2024 23:11:53 - INFO - __main__ - Mean variance for yor_2: 0.04278711974620819
03/26/2024 23:11:53 - INFO - __main__ - Mean std for for yor_2: 0.16345228254795074
03/26/2024 23:11:53 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:11:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:11:53 - INFO - __main__ - ID text: yor_3
03/26/2024 23:13:03 - INFO - __main__ - Mean variance for yor_3: 0.03082648478448391
03/26/2024 23:13:03 - INFO - __main__ - Mean std for for yor_3: 0.13456828892230988
03/26/2024 23:13:03 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:13:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:13:03 - INFO - __main__ - ID text: yor_4
03/26/2024 23:14:13 - INFO - __main__ - Mean variance for yor_4: 0.12685048580169678
03/26/2024 23:14:13 - INFO - __main__ - Mean std for for yor_4: 0.3101136088371277
03/26/2024 23:14:13 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:14:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:14:13 - INFO - __main__ - ID text: yor_5
03/26/2024 23:15:23 - INFO - __main__ - Mean variance for yor_5: 0.094415582716465
03/26/2024 23:15:23 - INFO - __main__ - Mean std for for yor_5: 0.2510986924171448
03/26/2024 23:15:23 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:15:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:15:23 - INFO - __main__ - ID text: yor_6
03/26/2024 23:16:32 - INFO - __main__ - Mean variance for yor_6: 0.04082978516817093
03/26/2024 23:16:32 - INFO - __main__ - Mean std for for yor_6: 0.1665978878736496
03/26/2024 23:16:32 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:16:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:16:32 - INFO - __main__ - ID text: yor_7
03/26/2024 23:17:42 - INFO - __main__ - Mean variance for yor_7: 0.13293470442295074
03/26/2024 23:17:42 - INFO - __main__ - Mean std for for yor_7: 0.3084598481655121
03/26/2024 23:17:42 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:17:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:17:42 - INFO - __main__ - ID text: yor_8
03/26/2024 23:18:52 - INFO - __main__ - Mean variance for yor_8: 0.037229619920253754
03/26/2024 23:18:52 - INFO - __main__ - Mean std for for yor_8: 0.14975878596305847
03/26/2024 23:18:52 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:18:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:18:52 - INFO - __main__ - ID text: yor_9
03/26/2024 23:20:02 - INFO - __main__ - Mean variance for yor_9: 0.13777154684066772
03/26/2024 23:20:02 - INFO - __main__ - Mean std for for yor_9: 0.31788161396980286
03/26/2024 23:20:02 - INFO - __main__ - 
######## Language: zh ######## 

03/26/2024 23:20:02 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:20:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:20:02 - INFO - __main__ - ID text: zh_0
03/26/2024 23:21:11 - INFO - __main__ - Mean variance for zh_0: 0.16078759729862213
03/26/2024 23:21:11 - INFO - __main__ - Mean std for for zh_0: 0.35587552189826965
03/26/2024 23:21:12 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:21:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:21:12 - INFO - __main__ - ID text: zh_1
03/26/2024 23:22:22 - INFO - __main__ - Mean variance for zh_1: 0.11475495249032974
03/26/2024 23:22:22 - INFO - __main__ - Mean std for for zh_1: 0.2775886356830597
03/26/2024 23:22:22 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:22:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:22:22 - INFO - __main__ - ID text: zh_2
03/26/2024 23:23:32 - INFO - __main__ - Mean variance for zh_2: 0.12871794402599335
03/26/2024 23:23:32 - INFO - __main__ - Mean std for for zh_2: 0.3066665828227997
03/26/2024 23:23:32 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:23:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:23:32 - INFO - __main__ - ID text: zh_3
03/26/2024 23:24:42 - INFO - __main__ - Mean variance for zh_3: 0.16209380328655243
03/26/2024 23:24:42 - INFO - __main__ - Mean std for for zh_3: 0.35636019706726074
03/26/2024 23:24:42 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:24:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:24:42 - INFO - __main__ - ID text: zh_4
03/26/2024 23:25:52 - INFO - __main__ - Mean variance for zh_4: 0.18130946159362793
03/26/2024 23:25:52 - INFO - __main__ - Mean std for for zh_4: 0.3798646926879883
03/26/2024 23:25:52 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:25:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:25:52 - INFO - __main__ - ID text: zh_5
03/26/2024 23:27:01 - INFO - __main__ - Mean variance for zh_5: 0.16559891402721405
03/26/2024 23:27:01 - INFO - __main__ - Mean std for for zh_5: 0.3635976314544678
03/26/2024 23:27:01 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:27:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:27:01 - INFO - __main__ - ID text: zh_6
03/26/2024 23:28:11 - INFO - __main__ - Mean variance for zh_6: 0.13413651287555695
03/26/2024 23:28:11 - INFO - __main__ - Mean std for for zh_6: 0.3063404858112335
03/26/2024 23:28:11 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:28:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:28:11 - INFO - __main__ - ID text: zh_7
03/26/2024 23:29:22 - INFO - __main__ - Mean variance for zh_7: 0.13560086488723755
03/26/2024 23:29:22 - INFO - __main__ - Mean std for for zh_7: 0.31834501028060913
03/26/2024 23:29:22 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:29:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:29:22 - INFO - __main__ - ID text: zh_8
03/26/2024 23:30:31 - INFO - __main__ - Mean variance for zh_8: 0.13293851912021637
03/26/2024 23:30:31 - INFO - __main__ - Mean std for for zh_8: 0.3123791813850403
03/26/2024 23:30:31 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:30:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:30:31 - INFO - __main__ - ID text: zh_9
03/26/2024 23:31:41 - INFO - __main__ - Mean variance for zh_9: 0.1332995444536209
03/26/2024 23:31:41 - INFO - __main__ - Mean std for for zh_9: 0.3054850399494171
03/26/2024 23:31:41 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/26/2024 23:31:41 - INFO - __main__ - 
######## Language: arabic ######## 

03/26/2024 23:31:41 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:31:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:31:41 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/26/2024 23:32:51 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.0576140321791172
03/26/2024 23:32:51 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.19309429824352264
03/26/2024 23:32:51 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:32:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:32:51 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/26/2024 23:34:01 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.042327988892793655
03/26/2024 23:34:01 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.16005171835422516
03/26/2024 23:34:01 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:34:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:34:01 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/26/2024 23:35:11 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.041616324335336685
03/26/2024 23:35:11 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.16497617959976196
03/26/2024 23:35:11 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:35:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:35:11 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/26/2024 23:36:21 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.035678133368492126
03/26/2024 23:36:21 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.15164336562156677
03/26/2024 23:36:21 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:36:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:36:21 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/26/2024 23:37:31 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.11300516128540039
03/26/2024 23:37:31 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.28685423731803894
03/26/2024 23:37:32 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:37:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:37:32 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/26/2024 23:38:42 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.03213675692677498
03/26/2024 23:38:42 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.14329387247562408
03/26/2024 23:38:42 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:38:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:38:42 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/26/2024 23:39:52 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.04528837278485298
03/26/2024 23:39:52 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.16927401721477509
03/26/2024 23:39:52 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:39:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:39:52 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/26/2024 23:41:02 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.03549351170659065
03/26/2024 23:41:02 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.1506771296262741
03/26/2024 23:41:02 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:41:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:41:02 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/26/2024 23:42:12 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.03403432294726372
03/26/2024 23:42:12 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.14731086790561676
03/26/2024 23:42:12 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:42:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:42:12 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/26/2024 23:43:23 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.035383742302656174
03/26/2024 23:43:23 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.14984378218650818
03/26/2024 23:43:23 - INFO - __main__ - 
######## Language: russian ######## 

03/26/2024 23:43:23 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:43:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:43:23 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/26/2024 23:44:33 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.019163144752383232
03/26/2024 23:44:33 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.10956894606351852
03/26/2024 23:44:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:44:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:44:33 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/26/2024 23:45:43 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.04441480711102486
03/26/2024 23:45:43 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.1641065776348114
03/26/2024 23:45:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:45:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:45:43 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/26/2024 23:46:53 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.017360826954245567
03/26/2024 23:46:53 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.10410767793655396
03/26/2024 23:46:53 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:46:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:46:53 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/26/2024 23:48:02 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.021171389147639275
03/26/2024 23:48:02 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.11506476998329163
03/26/2024 23:48:03 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:48:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:48:03 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/26/2024 23:49:12 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.018812881782650948
03/26/2024 23:49:12 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.10867157578468323
03/26/2024 23:49:12 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:49:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:49:13 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/26/2024 23:50:23 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.018836474046111107
03/26/2024 23:50:23 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.11101281642913818
03/26/2024 23:50:23 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:50:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:50:23 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/26/2024 23:51:32 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.041321881115436554
03/26/2024 23:51:32 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.16842500865459442
03/26/2024 23:51:32 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:51:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:51:32 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/26/2024 23:52:42 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.019672652706503868
03/26/2024 23:52:42 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.11234692484140396
03/26/2024 23:52:42 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:52:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:52:42 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/26/2024 23:53:52 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.04147563874721527
03/26/2024 23:53:52 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.15878775715827942
03/26/2024 23:53:52 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:53:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:53:52 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/26/2024 23:55:02 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.019132256507873535
03/26/2024 23:55:02 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.1106361374258995
03/26/2024 23:55:02 - INFO - __main__ - 
######## Language: bengali ######## 

03/26/2024 23:55:02 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:55:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:55:02 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/26/2024 23:56:12 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.09629455208778381
03/26/2024 23:56:12 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.25700435042381287
03/26/2024 23:56:12 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:56:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:56:12 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/26/2024 23:57:22 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.09516378492116928
03/26/2024 23:57:22 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.25380146503448486
03/26/2024 23:57:22 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:57:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:57:22 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/26/2024 23:58:32 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.09450843185186386
03/26/2024 23:58:32 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.2540595531463623
03/26/2024 23:58:32 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:58:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:58:32 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/26/2024 23:59:42 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.09552892297506332
03/26/2024 23:59:42 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.25653183460235596
03/26/2024 23:59:42 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:59:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:59:42 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/27/2024 00:00:51 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.09734907746315002
03/27/2024 00:00:51 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.2570047080516815
03/27/2024 00:00:51 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:00:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:00:51 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/27/2024 00:02:01 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.08858159929513931
03/27/2024 00:02:01 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.24611783027648926
03/27/2024 00:02:01 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:02:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:02:01 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/27/2024 00:03:11 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.09651181846857071
03/27/2024 00:03:11 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.2574852705001831
03/27/2024 00:03:11 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:03:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:03:11 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/27/2024 00:04:21 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.09094709157943726
03/27/2024 00:04:21 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.24892784655094147
03/27/2024 00:04:21 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:04:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:04:21 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/27/2024 00:05:31 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.09355797618627548
03/27/2024 00:05:31 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.2526625692844391
03/27/2024 00:05:31 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:05:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:05:31 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/27/2024 00:06:40 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.12996482849121094
03/27/2024 00:06:40 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.3062596917152405
03/27/2024 00:06:40 - INFO - __main__ - 
######## Language: telugu ######## 

03/27/2024 00:06:40 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:06:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:06:40 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/27/2024 00:07:50 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.034840602427721024
03/27/2024 00:07:50 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.14828844368457794
03/27/2024 00:07:50 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:07:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:07:50 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/27/2024 00:09:00 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.034104470163583755
03/27/2024 00:09:00 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.14444027841091156
03/27/2024 00:09:00 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:09:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:09:00 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/27/2024 00:10:10 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.034683357924222946
03/27/2024 00:10:10 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.14557917416095734
03/27/2024 00:10:10 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:10:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:10:10 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/27/2024 00:11:20 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.04590700939297676
03/27/2024 00:11:20 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.17162437736988068
03/27/2024 00:11:20 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:11:20 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:11:20 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/27/2024 00:12:30 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.029415234923362732
03/27/2024 00:12:30 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.1340966820716858
03/27/2024 00:12:30 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:12:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:12:30 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/27/2024 00:13:40 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.03323165699839592
03/27/2024 00:13:40 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.14494828879833221
03/27/2024 00:13:40 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:13:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:13:40 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/27/2024 00:14:50 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.10818884521722794
03/27/2024 00:14:50 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.26957687735557556
03/27/2024 00:14:50 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:14:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:14:50 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/27/2024 00:16:00 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.032484933733940125
03/27/2024 00:16:00 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.14165623486042023
03/27/2024 00:16:00 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:16:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:16:00 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/27/2024 00:17:09 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.038625191897153854
03/27/2024 00:17:09 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.15644539892673492
03/27/2024 00:17:09 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:17:09 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:17:09 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/27/2024 00:18:18 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.034695450216531754
03/27/2024 00:18:18 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.1468605101108551
03/27/2024 00:18:18 - INFO - __main__ - 
######## Language: finnish ######## 

03/27/2024 00:18:18 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:18:18 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:18:18 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/27/2024 00:19:27 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.03840695694088936
03/27/2024 00:19:27 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.14706791937351227
03/27/2024 00:19:27 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:19:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:19:27 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/27/2024 00:20:36 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.03804033249616623
03/27/2024 00:20:36 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.14838729798793793
03/27/2024 00:20:36 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:20:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:20:36 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/27/2024 00:21:45 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.05648208037018776
03/27/2024 00:21:45 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.20085877180099487
03/27/2024 00:21:45 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:21:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:21:45 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/27/2024 00:22:54 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.04003363847732544
03/27/2024 00:22:54 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.15560168027877808
03/27/2024 00:22:54 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:22:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:22:54 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/27/2024 00:24:03 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.03891628235578537
03/27/2024 00:24:03 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.15006403625011444
03/27/2024 00:24:03 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:24:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:24:03 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/27/2024 00:25:12 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.014512498863041401
03/27/2024 00:25:12 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.09605437517166138
03/27/2024 00:25:12 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:25:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:25:12 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/27/2024 00:26:21 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.012035788036882877
03/27/2024 00:26:21 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.09095118194818497
03/27/2024 00:26:21 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:26:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:26:21 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/27/2024 00:27:30 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.05835432931780815
03/27/2024 00:27:30 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.20116615295410156
03/27/2024 00:27:30 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:27:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:27:30 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/27/2024 00:28:39 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.02917671389877796
03/27/2024 00:28:39 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.12761567533016205
03/27/2024 00:28:39 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:28:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:28:39 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/27/2024 00:29:48 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.01248039398342371
03/27/2024 00:29:48 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.09227609634399414
03/27/2024 00:29:48 - INFO - __main__ - 
######## Language: swahili ######## 

03/27/2024 00:29:48 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:29:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:29:48 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/27/2024 00:30:57 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.03854081407189369
03/27/2024 00:30:57 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.154676616191864
03/27/2024 00:30:57 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:30:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:30:57 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/27/2024 00:32:06 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.015257488004863262
03/27/2024 00:32:06 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.10127163678407669
03/27/2024 00:32:06 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:32:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:32:06 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/27/2024 00:33:16 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.044871266931295395
03/27/2024 00:33:16 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.15933170914649963
03/27/2024 00:33:16 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:33:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:33:16 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/27/2024 00:34:25 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.014248584397137165
03/27/2024 00:34:25 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.09707631915807724
03/27/2024 00:34:25 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:34:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:34:25 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/27/2024 00:35:34 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.01600840501487255
03/27/2024 00:35:34 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.10091636329889297
03/27/2024 00:35:34 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:35:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:35:34 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/27/2024 00:36:43 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.034451987594366074
03/27/2024 00:36:43 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.14446884393692017
03/27/2024 00:36:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:36:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:36:43 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/27/2024 00:37:51 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.0384303517639637
03/27/2024 00:37:51 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.14901447296142578
03/27/2024 00:37:51 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:37:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:37:51 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/27/2024 00:39:00 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.04365978017449379
03/27/2024 00:39:00 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.16289405524730682
03/27/2024 00:39:00 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:39:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:39:00 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/27/2024 00:40:08 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.023066816851496696
03/27/2024 00:40:08 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.11744726449251175
03/27/2024 00:40:08 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:40:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:40:08 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/27/2024 00:41:16 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.01941036246716976
03/27/2024 00:41:16 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.10793954879045486
03/27/2024 00:41:16 - INFO - __main__ - 
######## Language: korean ######## 

03/27/2024 00:41:16 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:41:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:41:16 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/27/2024 00:42:24 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.08997932076454163
03/27/2024 00:42:24 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.2459368109703064
03/27/2024 00:42:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:42:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:42:24 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/27/2024 00:43:32 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.03358059749007225
03/27/2024 00:43:32 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.14634430408477783
03/27/2024 00:43:32 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:43:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:43:32 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/27/2024 00:44:40 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.022228265181183815
03/27/2024 00:44:40 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.12122098356485367
03/27/2024 00:44:40 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:44:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:44:40 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/27/2024 00:45:48 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.03449799865484238
03/27/2024 00:45:48 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.14591562747955322
03/27/2024 00:45:48 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:45:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:45:48 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/27/2024 00:46:56 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.1104598343372345
03/27/2024 00:46:56 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.27200719714164734
03/27/2024 00:46:56 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:46:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:46:56 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/27/2024 00:48:04 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.03622320666909218
03/27/2024 00:48:04 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.1487983912229538
03/27/2024 00:48:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:48:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:48:04 - INFO - __main__ - ID text: korean-148115504649351135-0
03/27/2024 00:49:12 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.049837078899145126
03/27/2024 00:49:12 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.17828302085399628
03/27/2024 00:49:12 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:49:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:49:12 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/27/2024 00:50:20 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.12387612462043762
03/27/2024 00:50:20 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.2899472713470459
03/27/2024 00:50:20 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:50:20 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:50:20 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/27/2024 00:51:27 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.13016976416110992
03/27/2024 00:51:27 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.2982516288757324
03/27/2024 00:51:27 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:51:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:51:27 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/27/2024 00:52:35 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.13764545321464539
03/27/2024 00:52:35 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.3212972581386566
03/27/2024 00:52:36 - INFO - __main__ - 
######## Language: indonesian ######## 

03/27/2024 00:52:36 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:52:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:52:36 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/27/2024 00:53:44 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.012227955274283886
03/27/2024 00:53:44 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.09211822599172592
03/27/2024 00:53:44 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:53:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:53:44 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/27/2024 00:54:52 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.05617519095540047
03/27/2024 00:54:52 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.19939719140529633
03/27/2024 00:54:52 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:54:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:54:52 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/27/2024 00:56:00 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.015958240255713463
03/27/2024 00:56:00 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.1010851040482521
03/27/2024 00:56:00 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:56:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:56:00 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/27/2024 00:57:08 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.027703233063220978
03/27/2024 00:57:08 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.12511049211025238
03/27/2024 00:57:08 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:57:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:57:08 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/27/2024 00:58:17 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.011795160360634327
03/27/2024 00:58:17 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.08934257179498672
03/27/2024 00:58:17 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:58:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:58:17 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/27/2024 00:59:25 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.018988771364092827
03/27/2024 00:59:25 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.10684164613485336
03/27/2024 00:59:25 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:59:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:59:25 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/27/2024 01:00:33 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.01307770237326622
03/27/2024 01:00:33 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.092551589012146
03/27/2024 01:00:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:00:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:00:33 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/27/2024 01:01:42 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.036904577165842056
03/27/2024 01:01:42 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.14680668711662292
03/27/2024 01:01:42 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:01:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:01:42 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/27/2024 01:02:50 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.024717018008232117
03/27/2024 01:02:50 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.11983559280633926
03/27/2024 01:02:50 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:02:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:02:50 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/27/2024 01:03:59 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.01164005696773529
03/27/2024 01:03:59 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.08975997567176819
03/27/2024 01:03:59 - INFO - __main__ - 
######## Language: english ######## 

03/27/2024 01:03:59 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:03:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:03:59 - INFO - __main__ - ID text: english-2852412434797041176-6
03/27/2024 01:05:07 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.08033924549818039
03/27/2024 01:05:07 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.2421182543039322
03/27/2024 01:05:07 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:05:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:05:07 - INFO - __main__ - ID text: english--1463732605740571606-0
03/27/2024 01:06:16 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.01552325114607811
03/27/2024 01:06:16 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.10084842890501022
03/27/2024 01:06:16 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:06:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:06:16 - INFO - __main__ - ID text: english-5441411281255470421-0
03/27/2024 01:07:24 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.018800174817442894
03/27/2024 01:07:24 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.10594829171895981
03/27/2024 01:07:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:07:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:07:24 - INFO - __main__ - ID text: english-7294054492486093447-1
03/27/2024 01:08:33 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.014486506581306458
03/27/2024 01:08:33 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.0979502871632576
03/27/2024 01:08:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:08:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:08:33 - INFO - __main__ - ID text: english-8820750127045023244-0
03/27/2024 01:09:41 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.04104238376021385
03/27/2024 01:09:41 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.152662456035614
03/27/2024 01:09:41 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:09:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:09:41 - INFO - __main__ - ID text: english--506693546683012611-2
03/27/2024 01:10:50 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.05822179839015007
03/27/2024 01:10:50 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.1805523782968521
03/27/2024 01:10:50 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:10:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:10:50 - INFO - __main__ - ID text: english-745411798111651115-0
03/27/2024 01:11:59 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.01640326716005802
03/27/2024 01:11:59 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.10314294695854187
03/27/2024 01:11:59 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:11:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:11:59 - INFO - __main__ - ID text: english-7740772185887912651-0
03/27/2024 01:13:08 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.015751708298921585
03/27/2024 01:13:08 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.10046333819627762
03/27/2024 01:13:08 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:13:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:13:08 - INFO - __main__ - ID text: english-383873188776267137-19
03/27/2024 01:14:17 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.015548295341432095
03/27/2024 01:14:17 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.09870351105928421
03/27/2024 01:14:17 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:14:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:14:17 - INFO - __main__ - ID text: english--8277537578703156284-0
03/27/2024 01:15:26 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.018879709765315056
03/27/2024 01:15:26 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.10647878050804138
03/27/2024 01:15:26 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/27/2024 01:15:26 - INFO - __main__ - 
######## Language: cola ######## 

03/27/2024 01:15:26 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:15:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:15:26 - INFO - __main__ - ID text: cola_228
03/27/2024 01:16:35 - INFO - __main__ - Mean variance for cola_228: 0.037601370364427567
03/27/2024 01:16:35 - INFO - __main__ - Mean std for for cola_228: 0.16752450168132782
03/27/2024 01:16:35 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:16:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:16:35 - INFO - __main__ - ID text: cola_51
03/27/2024 01:17:43 - INFO - __main__ - Mean variance for cola_51: 0.04322664812207222
03/27/2024 01:17:43 - INFO - __main__ - Mean std for for cola_51: 0.1825632005929947
03/27/2024 01:17:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:17:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:17:43 - INFO - __main__ - ID text: cola_563
03/27/2024 01:18:53 - INFO - __main__ - Mean variance for cola_563: 0.16156969964504242
03/27/2024 01:18:53 - INFO - __main__ - Mean std for for cola_563: 0.3619949519634247
03/27/2024 01:18:53 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:18:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:18:53 - INFO - __main__ - ID text: cola_501
03/27/2024 01:20:02 - INFO - __main__ - Mean variance for cola_501: 0.05200983211398125
03/27/2024 01:20:02 - INFO - __main__ - Mean std for for cola_501: 0.2000173181295395
03/27/2024 01:20:02 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:20:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:20:02 - INFO - __main__ - ID text: cola_457
03/27/2024 01:21:12 - INFO - __main__ - Mean variance for cola_457: 0.0562659353017807
03/27/2024 01:21:12 - INFO - __main__ - Mean std for for cola_457: 0.20823299884796143
03/27/2024 01:21:12 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:21:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:21:12 - INFO - __main__ - ID text: cola_285
03/27/2024 01:22:20 - INFO - __main__ - Mean variance for cola_285: 0.05559871718287468
03/27/2024 01:22:20 - INFO - __main__ - Mean std for for cola_285: 0.20904850959777832
03/27/2024 01:22:20 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:22:20 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:22:20 - INFO - __main__ - ID text: cola_209
03/27/2024 01:23:29 - INFO - __main__ - Mean variance for cola_209: 0.052927885204553604
03/27/2024 01:23:29 - INFO - __main__ - Mean std for for cola_209: 0.2000247985124588
03/27/2024 01:23:29 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:23:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:23:29 - INFO - __main__ - ID text: cola_178
03/27/2024 01:24:38 - INFO - __main__ - Mean variance for cola_178: 0.043513890355825424
03/27/2024 01:24:38 - INFO - __main__ - Mean std for for cola_178: 0.18566791713237762
03/27/2024 01:24:38 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:24:38 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:24:38 - INFO - __main__ - ID text: cola_864
03/27/2024 01:25:47 - INFO - __main__ - Mean variance for cola_864: 0.05500960350036621
03/27/2024 01:25:47 - INFO - __main__ - Mean std for for cola_864: 0.20938092470169067
03/27/2024 01:25:47 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:25:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:25:47 - INFO - __main__ - ID text: cola_65
03/27/2024 01:26:56 - INFO - __main__ - Mean variance for cola_65: 0.04947195574641228
03/27/2024 01:26:56 - INFO - __main__ - Mean std for for cola_65: 0.1880853921175003
03/27/2024 01:26:56 - INFO - __main__ - 
######## Language: mnli ######## 

03/27/2024 01:26:56 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:26:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:26:56 - INFO - __main__ - ID text: mnli_488
03/27/2024 01:28:04 - INFO - __main__ - Mean variance for mnli_488: 0.04756280779838562
03/27/2024 01:28:04 - INFO - __main__ - Mean std for for mnli_488: 0.16880817711353302
03/27/2024 01:28:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:28:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:28:04 - INFO - __main__ - ID text: mnli_1535
03/27/2024 01:29:13 - INFO - __main__ - Mean variance for mnli_1535: 0.05605781450867653
03/27/2024 01:29:13 - INFO - __main__ - Mean std for for mnli_1535: 0.18345987796783447
03/27/2024 01:29:13 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:29:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:29:13 - INFO - __main__ - ID text: mnli_3582
03/27/2024 01:30:22 - INFO - __main__ - Mean variance for mnli_3582: 0.03940665349364281
03/27/2024 01:30:22 - INFO - __main__ - Mean std for for mnli_3582: 0.16575367748737335
03/27/2024 01:30:22 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:30:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:30:22 - INFO - __main__ - ID text: mnli_3811
03/27/2024 01:31:31 - INFO - __main__ - Mean variance for mnli_3811: 0.03873690590262413
03/27/2024 01:31:31 - INFO - __main__ - Mean std for for mnli_3811: 0.1586034744977951
03/27/2024 01:31:31 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:31:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:31:31 - INFO - __main__ - ID text: mnli_8279
03/27/2024 01:32:40 - INFO - __main__ - Mean variance for mnli_8279: 0.06005789712071419
03/27/2024 01:32:40 - INFO - __main__ - Mean std for for mnli_8279: 0.209384024143219
03/27/2024 01:32:40 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:32:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:32:40 - INFO - __main__ - ID text: mnli_434
03/27/2024 01:33:49 - INFO - __main__ - Mean variance for mnli_434: 0.032059866935014725
03/27/2024 01:33:49 - INFO - __main__ - Mean std for for mnli_434: 0.13509230315685272
03/27/2024 01:33:49 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:33:49 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:33:49 - INFO - __main__ - ID text: mnli_9195
03/27/2024 01:34:58 - INFO - __main__ - Mean variance for mnli_9195: 0.06125098466873169
03/27/2024 01:34:58 - INFO - __main__ - Mean std for for mnli_9195: 0.2207375019788742
03/27/2024 01:34:58 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:34:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:34:58 - INFO - __main__ - ID text: mnli_3257
03/27/2024 01:36:06 - INFO - __main__ - Mean variance for mnli_3257: 0.04067213833332062
03/27/2024 01:36:06 - INFO - __main__ - Mean std for for mnli_3257: 0.1646447479724884
03/27/2024 01:36:07 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:36:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:36:07 - INFO - __main__ - ID text: mnli_8928
03/27/2024 01:37:16 - INFO - __main__ - Mean variance for mnli_8928: 0.05052074417471886
03/27/2024 01:37:16 - INFO - __main__ - Mean std for for mnli_8928: 0.17294172942638397
03/27/2024 01:37:16 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:37:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:37:16 - INFO - __main__ - ID text: mnli_6873
03/27/2024 01:38:25 - INFO - __main__ - Mean variance for mnli_6873: 0.05326303839683533
03/27/2024 01:38:25 - INFO - __main__ - Mean std for for mnli_6873: 0.1743542104959488
03/27/2024 01:38:25 - INFO - __main__ - 
######## Language: mrpc ######## 

03/27/2024 01:38:25 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:38:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:38:25 - INFO - __main__ - ID text: mrpc_451
03/27/2024 01:39:34 - INFO - __main__ - Mean variance for mrpc_451: 0.04365820810198784
03/27/2024 01:39:34 - INFO - __main__ - Mean std for for mrpc_451: 0.16101182997226715
03/27/2024 01:39:34 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:39:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:39:34 - INFO - __main__ - ID text: mrpc_919
03/27/2024 01:40:43 - INFO - __main__ - Mean variance for mrpc_919: 0.055606286972761154
03/27/2024 01:40:43 - INFO - __main__ - Mean std for for mrpc_919: 0.1795908361673355
03/27/2024 01:40:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:40:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:40:43 - INFO - __main__ - ID text: mrpc_1206
03/27/2024 01:41:52 - INFO - __main__ - Mean variance for mrpc_1206: 0.04952949285507202
03/27/2024 01:41:52 - INFO - __main__ - Mean std for for mrpc_1206: 0.17921726405620575
03/27/2024 01:41:52 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:41:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:41:52 - INFO - __main__ - ID text: mrpc_569
03/27/2024 01:43:01 - INFO - __main__ - Mean variance for mrpc_569: 0.04165871813893318
03/27/2024 01:43:01 - INFO - __main__ - Mean std for for mrpc_569: 0.16205932199954987
03/27/2024 01:43:01 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:43:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:43:01 - INFO - __main__ - ID text: mrpc_1657
03/27/2024 01:44:10 - INFO - __main__ - Mean variance for mrpc_1657: 0.03757477179169655
03/27/2024 01:44:10 - INFO - __main__ - Mean std for for mrpc_1657: 0.14810122549533844
03/27/2024 01:44:10 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:44:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:44:10 - INFO - __main__ - ID text: mrpc_13
03/27/2024 01:45:18 - INFO - __main__ - Mean variance for mrpc_13: 0.055950555950403214
03/27/2024 01:45:18 - INFO - __main__ - Mean std for for mrpc_13: 0.18314732611179352
03/27/2024 01:45:19 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:45:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:45:19 - INFO - __main__ - ID text: mrpc_1554
03/27/2024 01:46:27 - INFO - __main__ - Mean variance for mrpc_1554: 0.03928341343998909
03/27/2024 01:46:27 - INFO - __main__ - Mean std for for mrpc_1554: 0.1479591280221939
03/27/2024 01:46:27 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:46:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:46:27 - INFO - __main__ - ID text: mrpc_1650
03/27/2024 01:47:36 - INFO - __main__ - Mean variance for mrpc_1650: 0.13243834674358368
03/27/2024 01:47:36 - INFO - __main__ - Mean std for for mrpc_1650: 0.31306540966033936
03/27/2024 01:47:36 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:47:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:47:36 - INFO - __main__ - ID text: mrpc_326
03/27/2024 01:48:45 - INFO - __main__ - Mean variance for mrpc_326: 0.06204431131482124
03/27/2024 01:48:45 - INFO - __main__ - Mean std for for mrpc_326: 0.1949322670698166
03/27/2024 01:48:46 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:48:46 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:48:46 - INFO - __main__ - ID text: mrpc_1429
03/27/2024 01:49:55 - INFO - __main__ - Mean variance for mrpc_1429: 0.05325072631239891
03/27/2024 01:49:55 - INFO - __main__ - Mean std for for mrpc_1429: 0.17810411751270294
03/27/2024 01:49:55 - INFO - __main__ - 
######## Language: qnli ######## 

03/27/2024 01:49:55 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:49:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:49:55 - INFO - __main__ - ID text: qnli_3462
03/27/2024 01:51:04 - INFO - __main__ - Mean variance for qnli_3462: 0.05928151682019234
03/27/2024 01:51:04 - INFO - __main__ - Mean std for for qnli_3462: 0.18920858204364777
03/27/2024 01:51:04 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:51:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:51:04 - INFO - __main__ - ID text: qnli_2787
03/27/2024 01:52:13 - INFO - __main__ - Mean variance for qnli_2787: 0.04593620076775551
03/27/2024 01:52:13 - INFO - __main__ - Mean std for for qnli_2787: 0.16316552460193634
03/27/2024 01:52:13 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:52:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:52:13 - INFO - __main__ - ID text: qnli_2276
03/27/2024 01:53:22 - INFO - __main__ - Mean variance for qnli_2276: 0.044078122824430466
03/27/2024 01:53:22 - INFO - __main__ - Mean std for for qnli_2276: 0.16012240946292877
03/27/2024 01:53:22 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:53:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:53:22 - INFO - __main__ - ID text: qnli_1273
03/27/2024 01:54:31 - INFO - __main__ - Mean variance for qnli_1273: 0.0472152940928936
03/27/2024 01:54:31 - INFO - __main__ - Mean std for for qnli_1273: 0.16576562821865082
03/27/2024 01:54:31 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:54:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:54:31 - INFO - __main__ - ID text: qnli_1763
03/27/2024 01:55:40 - INFO - __main__ - Mean variance for qnli_1763: 0.04784829914569855
03/27/2024 01:55:40 - INFO - __main__ - Mean std for for qnli_1763: 0.1707213670015335
03/27/2024 01:55:40 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:55:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:55:40 - INFO - __main__ - ID text: qnli_2757
03/27/2024 01:56:50 - INFO - __main__ - Mean variance for qnli_2757: 0.04796135053038597
03/27/2024 01:56:50 - INFO - __main__ - Mean std for for qnli_2757: 0.16840679943561554
03/27/2024 01:56:50 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:56:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:56:50 - INFO - __main__ - ID text: qnli_837
03/27/2024 01:57:58 - INFO - __main__ - Mean variance for qnli_837: 0.049909088760614395
03/27/2024 01:57:58 - INFO - __main__ - Mean std for for qnli_837: 0.17305748164653778
03/27/2024 01:57:58 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:57:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:57:59 - INFO - __main__ - ID text: qnli_759
03/27/2024 01:59:07 - INFO - __main__ - Mean variance for qnli_759: 0.015928199514746666
03/27/2024 01:59:07 - INFO - __main__ - Mean std for for qnli_759: 0.09946182370185852
03/27/2024 01:59:08 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:59:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:59:08 - INFO - __main__ - ID text: qnli_3112
03/27/2024 02:00:17 - INFO - __main__ - Mean variance for qnli_3112: 0.053187694400548935
03/27/2024 02:00:17 - INFO - __main__ - Mean std for for qnli_3112: 0.17787016928195953
03/27/2024 02:00:17 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:00:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:00:17 - INFO - __main__ - ID text: qnli_792
03/27/2024 02:01:26 - INFO - __main__ - Mean variance for qnli_792: 0.051110949367284775
03/27/2024 02:01:26 - INFO - __main__ - Mean std for for qnli_792: 0.1704857349395752
03/27/2024 02:01:26 - INFO - __main__ - 
######## Language: qqp ######## 

03/27/2024 02:01:26 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:01:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:01:26 - INFO - __main__ - ID text: qqp_188208
03/27/2024 02:02:34 - INFO - __main__ - Mean variance for qqp_188208: 0.05063195526599884
03/27/2024 02:02:34 - INFO - __main__ - Mean std for for qqp_188208: 0.1901276856660843
03/27/2024 02:02:34 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:02:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:02:34 - INFO - __main__ - ID text: qqp_180331
03/27/2024 02:03:43 - INFO - __main__ - Mean variance for qqp_180331: 0.0522959940135479
03/27/2024 02:03:43 - INFO - __main__ - Mean std for for qqp_180331: 0.18803958594799042
03/27/2024 02:03:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:03:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:03:43 - INFO - __main__ - ID text: qqp_316526
03/27/2024 02:04:52 - INFO - __main__ - Mean variance for qqp_316526: 0.05146518349647522
03/27/2024 02:04:52 - INFO - __main__ - Mean std for for qqp_316526: 0.18162880837917328
03/27/2024 02:04:52 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:04:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:04:52 - INFO - __main__ - ID text: qqp_138685
03/27/2024 02:06:00 - INFO - __main__ - Mean variance for qqp_138685: 0.03666011989116669
03/27/2024 02:06:00 - INFO - __main__ - Mean std for for qqp_138685: 0.1450546830892563
03/27/2024 02:06:00 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:06:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:06:00 - INFO - __main__ - ID text: qqp_22780
03/27/2024 02:07:09 - INFO - __main__ - Mean variance for qqp_22780: 0.04862530902028084
03/27/2024 02:07:09 - INFO - __main__ - Mean std for for qqp_22780: 0.18725816905498505
03/27/2024 02:07:09 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:07:09 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:07:09 - INFO - __main__ - ID text: qqp_382589
03/27/2024 02:08:18 - INFO - __main__ - Mean variance for qqp_382589: 0.050895806401968
03/27/2024 02:08:18 - INFO - __main__ - Mean std for for qqp_382589: 0.1792827844619751
03/27/2024 02:08:18 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:08:18 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:08:18 - INFO - __main__ - ID text: qqp_240870
03/27/2024 02:09:27 - INFO - __main__ - Mean variance for qqp_240870: 0.05318741872906685
03/27/2024 02:09:27 - INFO - __main__ - Mean std for for qqp_240870: 0.19136196374893188
03/27/2024 02:09:27 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:09:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:09:27 - INFO - __main__ - ID text: qqp_281137
03/27/2024 02:10:36 - INFO - __main__ - Mean variance for qqp_281137: 0.044613126665353775
03/27/2024 02:10:36 - INFO - __main__ - Mean std for for qqp_281137: 0.16956843435764313
03/27/2024 02:10:36 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:10:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:10:36 - INFO - __main__ - ID text: qqp_65444
03/27/2024 02:11:45 - INFO - __main__ - Mean variance for qqp_65444: 0.042199719697237015
03/27/2024 02:11:45 - INFO - __main__ - Mean std for for qqp_65444: 0.16693665087223053
03/27/2024 02:11:45 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:11:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:11:45 - INFO - __main__ - ID text: qqp_198461
03/27/2024 02:12:53 - INFO - __main__ - Mean variance for qqp_198461: 0.04227985814213753
03/27/2024 02:12:53 - INFO - __main__ - Mean std for for qqp_198461: 0.16380281746387482
03/27/2024 02:12:53 - INFO - __main__ - 
######## Language: rte ######## 

03/27/2024 02:12:53 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:12:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:12:53 - INFO - __main__ - ID text: rte_322
03/27/2024 02:14:02 - INFO - __main__ - Mean variance for rte_322: 0.048420682549476624
03/27/2024 02:14:02 - INFO - __main__ - Mean std for for rte_322: 0.1716797947883606
03/27/2024 02:14:02 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:14:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:14:02 - INFO - __main__ - ID text: rte_2261
03/27/2024 02:15:10 - INFO - __main__ - Mean variance for rte_2261: 0.04989519715309143
03/27/2024 02:15:10 - INFO - __main__ - Mean std for for rte_2261: 0.18496175110340118
03/27/2024 02:15:10 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:15:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:15:10 - INFO - __main__ - ID text: rte_1200
03/27/2024 02:16:19 - INFO - __main__ - Mean variance for rte_1200: 0.034051112830638885
03/27/2024 02:16:19 - INFO - __main__ - Mean std for for rte_1200: 0.14076130092144012
03/27/2024 02:16:19 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:16:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:16:19 - INFO - __main__ - ID text: rte_2574
03/27/2024 02:17:27 - INFO - __main__ - Mean variance for rte_2574: 0.015292431227862835
03/27/2024 02:17:27 - INFO - __main__ - Mean std for for rte_2574: 0.10202780365943909
03/27/2024 02:17:27 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:17:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:17:27 - INFO - __main__ - ID text: rte_2533
03/27/2024 02:18:36 - INFO - __main__ - Mean variance for rte_2533: 0.015211190097033978
03/27/2024 02:18:36 - INFO - __main__ - Mean std for for rte_2533: 0.09890497475862503
03/27/2024 02:18:36 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:18:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:18:36 - INFO - __main__ - ID text: rte_1481
03/27/2024 02:19:45 - INFO - __main__ - Mean variance for rte_1481: 0.04969992861151695
03/27/2024 02:19:45 - INFO - __main__ - Mean std for for rte_1481: 0.16544485092163086
03/27/2024 02:19:45 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:19:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:19:45 - INFO - __main__ - ID text: rte_2364
03/27/2024 02:20:53 - INFO - __main__ - Mean variance for rte_2364: 0.04638383910059929
03/27/2024 02:20:53 - INFO - __main__ - Mean std for for rte_2364: 0.16058100759983063
03/27/2024 02:20:53 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:20:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:20:53 - INFO - __main__ - ID text: rte_787
03/27/2024 02:22:02 - INFO - __main__ - Mean variance for rte_787: 0.048961952328681946
03/27/2024 02:22:02 - INFO - __main__ - Mean std for for rte_787: 0.16724835336208344
03/27/2024 02:22:02 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:22:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:22:02 - INFO - __main__ - ID text: rte_2885
03/27/2024 02:23:11 - INFO - __main__ - Mean variance for rte_2885: 0.01799718104302883
03/27/2024 02:23:11 - INFO - __main__ - Mean std for for rte_2885: 0.10487154871225357
03/27/2024 02:23:11 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:23:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:23:11 - INFO - __main__ - ID text: rte_284
03/27/2024 02:24:19 - INFO - __main__ - Mean variance for rte_284: 0.04257126525044441
03/27/2024 02:24:19 - INFO - __main__ - Mean std for for rte_284: 0.1604854017496109
03/27/2024 02:24:19 - INFO - __main__ - 
######## Language: sst2 ######## 

03/27/2024 02:24:19 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:24:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:24:19 - INFO - __main__ - ID text: sst2_93
03/27/2024 02:25:28 - INFO - __main__ - Mean variance for sst2_93: 0.03815985098481178
03/27/2024 02:25:28 - INFO - __main__ - Mean std for for sst2_93: 0.1595192700624466
03/27/2024 02:25:28 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:25:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:25:28 - INFO - __main__ - ID text: sst2_1354
03/27/2024 02:26:37 - INFO - __main__ - Mean variance for sst2_1354: 0.04575042426586151
03/27/2024 02:26:37 - INFO - __main__ - Mean std for for sst2_1354: 0.18904970586299896
03/27/2024 02:26:37 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:26:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:26:37 - INFO - __main__ - ID text: sst2_466
03/27/2024 02:27:46 - INFO - __main__ - Mean variance for sst2_466: 0.04159649834036827
03/27/2024 02:27:46 - INFO - __main__ - Mean std for for sst2_466: 0.17898781597614288
03/27/2024 02:27:46 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:27:46 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:27:46 - INFO - __main__ - ID text: sst2_1583
03/27/2024 02:28:55 - INFO - __main__ - Mean variance for sst2_1583: 0.04522712901234627
03/27/2024 02:28:55 - INFO - __main__ - Mean std for for sst2_1583: 0.16901856660842896
03/27/2024 02:28:56 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:28:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:28:56 - INFO - __main__ - ID text: sst2_592
03/27/2024 02:30:05 - INFO - __main__ - Mean variance for sst2_592: 0.053394462913274765
03/27/2024 02:30:05 - INFO - __main__ - Mean std for for sst2_592: 0.18042582273483276
03/27/2024 02:30:05 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:30:05 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:30:05 - INFO - __main__ - ID text: sst2_163
03/27/2024 02:31:14 - INFO - __main__ - Mean variance for sst2_163: 0.07100179046392441
03/27/2024 02:31:14 - INFO - __main__ - Mean std for for sst2_163: 0.2387438267469406
03/27/2024 02:31:14 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:31:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:31:14 - INFO - __main__ - ID text: sst2_1751
03/27/2024 02:32:24 - INFO - __main__ - Mean variance for sst2_1751: 0.04106706753373146
03/27/2024 02:32:24 - INFO - __main__ - Mean std for for sst2_1751: 0.17618048191070557
03/27/2024 02:32:24 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:32:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:32:24 - INFO - __main__ - ID text: sst2_476
03/27/2024 02:33:33 - INFO - __main__ - Mean variance for sst2_476: 0.039223942905664444
03/27/2024 02:33:33 - INFO - __main__ - Mean std for for sst2_476: 0.16023580729961395
03/27/2024 02:33:33 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:33:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:33:33 - INFO - __main__ - ID text: sst2_1774
03/27/2024 02:34:43 - INFO - __main__ - Mean variance for sst2_1774: 0.03691689670085907
03/27/2024 02:34:43 - INFO - __main__ - Mean std for for sst2_1774: 0.15567485988140106
03/27/2024 02:34:43 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:34:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:34:43 - INFO - __main__ - ID text: sst2_206
03/27/2024 02:35:52 - INFO - __main__ - Mean variance for sst2_206: 0.04314201697707176
03/27/2024 02:35:52 - INFO - __main__ - Mean std for for sst2_206: 0.17460192739963531
03/27/2024 02:35:52 - INFO - __main__ - 
######## Language: stsb ######## 

03/27/2024 02:35:52 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:35:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:35:52 - INFO - __main__ - ID text: stsb_778
03/27/2024 02:37:01 - INFO - __main__ - Mean variance for stsb_778: 0.04955729842185974
03/27/2024 02:37:01 - INFO - __main__ - Mean std for for stsb_778: 0.18649709224700928
03/27/2024 02:37:01 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:37:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:37:01 - INFO - __main__ - ID text: stsb_569
03/27/2024 02:38:12 - INFO - __main__ - Mean variance for stsb_569: 0.05476874113082886
03/27/2024 02:38:12 - INFO - __main__ - Mean std for for stsb_569: 0.19979499280452728
03/27/2024 02:38:12 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:38:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:38:12 - INFO - __main__ - ID text: stsb_928
03/27/2024 02:39:21 - INFO - __main__ - Mean variance for stsb_928: 0.030392160639166832
03/27/2024 02:39:21 - INFO - __main__ - Mean std for for stsb_928: 0.13104279339313507
03/27/2024 02:39:21 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:39:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:39:21 - INFO - __main__ - ID text: stsb_1301
03/27/2024 02:40:31 - INFO - __main__ - Mean variance for stsb_1301: 0.055168550461530685
03/27/2024 02:40:31 - INFO - __main__ - Mean std for for stsb_1301: 0.1901060789823532
03/27/2024 02:40:32 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:40:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:40:32 - INFO - __main__ - ID text: stsb_747
03/27/2024 02:41:41 - INFO - __main__ - Mean variance for stsb_747: 0.05506740137934685
03/27/2024 02:41:41 - INFO - __main__ - Mean std for for stsb_747: 0.18267923593521118
03/27/2024 02:41:41 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:41:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:41:41 - INFO - __main__ - ID text: stsb_333
03/27/2024 02:42:51 - INFO - __main__ - Mean variance for stsb_333: 0.04725378379225731
03/27/2024 02:42:51 - INFO - __main__ - Mean std for for stsb_333: 0.17458127439022064
03/27/2024 02:42:51 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:42:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:42:51 - INFO - __main__ - ID text: stsb_758
03/27/2024 02:44:01 - INFO - __main__ - Mean variance for stsb_758: 0.05527736619114876
03/27/2024 02:44:01 - INFO - __main__ - Mean std for for stsb_758: 0.18709510564804077
03/27/2024 02:44:01 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:44:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:44:01 - INFO - __main__ - ID text: stsb_727
03/27/2024 02:45:10 - INFO - __main__ - Mean variance for stsb_727: 0.04699775576591492
03/27/2024 02:45:10 - INFO - __main__ - Mean std for for stsb_727: 0.18196284770965576
03/27/2024 02:45:10 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:45:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:45:10 - INFO - __main__ - ID text: stsb_429
03/27/2024 02:46:19 - INFO - __main__ - Mean variance for stsb_429: 0.03592263534665108
03/27/2024 02:46:19 - INFO - __main__ - Mean std for for stsb_429: 0.1575794816017151
03/27/2024 02:46:19 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:46:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:46:19 - INFO - __main__ - ID text: stsb_1372
03/27/2024 02:47:29 - INFO - __main__ - Mean variance for stsb_1372: 0.04244862124323845
03/27/2024 02:47:29 - INFO - __main__ - Mean std for for stsb_1372: 0.17133362591266632
03/27/2024 02:47:29 - INFO - __main__ - 
######## Language: wnli ######## 

03/27/2024 02:47:29 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:47:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:47:29 - INFO - __main__ - ID text: wnli_68
03/27/2024 02:48:39 - INFO - __main__ - Mean variance for wnli_68: 0.05002192035317421
03/27/2024 02:48:39 - INFO - __main__ - Mean std for for wnli_68: 0.1686064600944519
03/27/2024 02:48:39 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:48:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:48:39 - INFO - __main__ - ID text: wnli_18
03/27/2024 02:49:48 - INFO - __main__ - Mean variance for wnli_18: 0.03543369844555855
03/27/2024 02:49:48 - INFO - __main__ - Mean std for for wnli_18: 0.14169199764728546
03/27/2024 02:49:48 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:49:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:49:48 - INFO - __main__ - ID text: wnli_43
03/27/2024 02:50:58 - INFO - __main__ - Mean variance for wnli_43: 0.05472954735159874
03/27/2024 02:50:58 - INFO - __main__ - Mean std for for wnli_43: 0.17785827815532684
03/27/2024 02:50:58 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:50:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:50:58 - INFO - __main__ - ID text: wnli_136
03/27/2024 02:52:07 - INFO - __main__ - Mean variance for wnli_136: 0.044711317867040634
03/27/2024 02:52:07 - INFO - __main__ - Mean std for for wnli_136: 0.16200335323810577
03/27/2024 02:52:07 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:52:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:52:07 - INFO - __main__ - ID text: wnli_62
03/27/2024 02:53:16 - INFO - __main__ - Mean variance for wnli_62: 0.044581521302461624
03/27/2024 02:53:16 - INFO - __main__ - Mean std for for wnli_62: 0.16448278725147247
03/27/2024 02:53:16 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:53:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:53:16 - INFO - __main__ - ID text: wnli_41
03/27/2024 02:54:26 - INFO - __main__ - Mean variance for wnli_41: 0.047526199370622635
03/27/2024 02:54:26 - INFO - __main__ - Mean std for for wnli_41: 0.17128221690654755
03/27/2024 02:54:26 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:54:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:54:26 - INFO - __main__ - ID text: wnli_118
03/27/2024 02:55:36 - INFO - __main__ - Mean variance for wnli_118: 0.05094823241233826
03/27/2024 02:55:36 - INFO - __main__ - Mean std for for wnli_118: 0.1760665327310562
03/27/2024 02:55:36 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:55:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:55:36 - INFO - __main__ - ID text: wnli_97
03/27/2024 02:56:45 - INFO - __main__ - Mean variance for wnli_97: 0.03404347226023674
03/27/2024 02:56:45 - INFO - __main__ - Mean std for for wnli_97: 0.13619215786457062
03/27/2024 02:56:45 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:56:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:56:45 - INFO - __main__ - ID text: wnli_69
03/27/2024 02:57:54 - INFO - __main__ - Mean variance for wnli_69: 0.045938193798065186
03/27/2024 02:57:54 - INFO - __main__ - Mean std for for wnli_69: 0.17272382974624634
03/27/2024 02:57:55 - INFO - __main__ - Applying span masking with "max_span_length = 4" , "cumulative_span_weights = [0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:57:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:57:55 - INFO - __main__ - ID text: wnli_142
03/27/2024 02:59:04 - INFO - __main__ - Mean variance for wnli_142: 0.04015307500958443
03/27/2024 02:59:04 - INFO - __main__ - Mean std for for wnli_142: 0.14870573580265045
03/27/2024 02:59:04 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.15964888036251068, 'amh_1': 0.15918245911598206, 'amh_2': 0.1605585515499115, 'amh_3': 0.13884291052818298, 'amh_4': 0.14091001451015472, 'amh_5': 0.17386849224567413, 'amh_6': 0.1373472660779953, 'amh_7': 0.14290788769721985, 'amh_8': 0.1602204591035843, 'amh_9': 0.1562538892030716}, 'conll_2003_en': {'conll_2003_en_0': 0.1478344351053238, 'conll_2003_en_1': 0.04240729287266731, 'conll_2003_en_2': 0.03826410323381424, 'conll_2003_en_3': 0.036425795406103134, 'conll_2003_en_4': 0.04435155913233757, 'conll_2003_en_5': 0.14784620702266693, 'conll_2003_en_6': 0.12266383320093155, 'conll_2003_en_7': 0.16805998980998993, 'conll_2003_en_8': 0.16180481016635895, 'conll_2003_en_9': 0.038822319358587265}, 'hau': {'hau_0': 0.02782689966261387, 'hau_1': 0.04472079873085022, 'hau_2': 0.13741247355937958, 'hau_3': 0.01632189005613327, 'hau_4': 0.03423035144805908, 'hau_5': 0.025631381198763847, 'hau_6': 0.04374922811985016, 'hau_7': 0.0362948440015316, 'hau_8': 0.028321994468569756, 'hau_9': 0.038034822791814804}, 'ibo': {'ibo_0': 0.03878892585635185, 'ibo_1': 0.03999466821551323, 'ibo_2': 0.037420351058244705, 'ibo_3': 0.04750017821788788, 'ibo_4': 0.03395068272948265, 'ibo_5': 0.037258077412843704, 'ibo_6': 0.03944776579737663, 'ibo_7': 0.036131154745817184, 'ibo_8': 0.03573179244995117, 'ibo_9': 0.032668571919202805}, 'kin': {'kin_0': 0.03889470919966698, 'kin_1': 0.04005184397101402, 'kin_2': 0.052381932735443115, 'kin_3': 0.037470392882823944, 'kin_4': 0.03537178039550781, 'kin_5': 0.04255763813853264, 'kin_6': 0.0275699645280838, 'kin_7': 0.033870965242385864, 'kin_8': 0.03497060015797615, 'kin_9': 0.03540464863181114}, 'lug': {'lug_0': 0.029958074912428856, 'lug_1': 0.03334689140319824, 'lug_2': 0.01517285406589508, 'lug_3': 0.025577588006854057, 'lug_4': 0.041520826518535614, 'lug_5': 0.03327082470059395, 'lug_6': 0.03431788459420204, 'lug_7': 0.03873894736170769, 'lug_8': 0.03862174600362778, 'lug_9': 0.03750307857990265}, 'luo': {'luo_0': 0.02209770679473877, 'luo_1': 0.038847941905260086, 'luo_2': 0.03517375513911247, 'luo_3': 0.027032367885112762, 'luo_4': 0.03992186114192009, 'luo_5': 0.03457614779472351, 'luo_6': 0.03385496884584427, 'luo_7': 0.04764236509799957, 'luo_8': 0.03693525120615959, 'luo_9': 0.049496281892061234}, 'pcm': {'pcm_0': 0.03590461611747742, 'pcm_1': 0.04915781691670418, 'pcm_2': 0.040141116827726364, 'pcm_3': 0.033306706696748734, 'pcm_4': 0.03164767846465111, 'pcm_5': 0.034532174468040466, 'pcm_6': 0.03686988726258278, 'pcm_7': 0.038548484444618225, 'pcm_8': 0.03514019772410393, 'pcm_9': 0.040842052549123764}, 'swa': {'swa_0': 0.03529609367251396, 'swa_1': 0.03734641149640083, 'swa_2': 0.03518042340874672, 'swa_3': 0.035655997693538666, 'swa_4': 0.023462815210223198, 'swa_5': 0.02393198013305664, 'swa_6': 0.029083572328090668, 'swa_7': 0.048379551619291306, 'swa_8': 0.032675523310899734, 'swa_9': 0.043059349060058594}, 'wol': {'wol_0': 0.036137450486421585, 'wol_1': 0.04035315662622452, 'wol_2': 0.03769970312714577, 'wol_3': 0.06660851836204529, 'wol_4': 0.03320218250155449, 'wol_5': 0.04205198213458061, 'wol_6': 0.1514856219291687, 'wol_7': 0.03629951551556587, 'wol_8': 0.04969258978962898, 'wol_9': 0.03745827451348305}, 'yor': {'yor_0': 0.13000212609767914, 'yor_1': 0.13566814363002777, 'yor_2': 0.04278711974620819, 'yor_3': 0.03082648478448391, 'yor_4': 0.12685048580169678, 'yor_5': 0.094415582716465, 'yor_6': 0.04082978516817093, 'yor_7': 0.13293470442295074, 'yor_8': 0.037229619920253754, 'yor_9': 0.13777154684066772}, 'zh': {'zh_0': 0.16078759729862213, 'zh_1': 0.11475495249032974, 'zh_2': 0.12871794402599335, 'zh_3': 0.16209380328655243, 'zh_4': 0.18130946159362793, 'zh_5': 0.16559891402721405, 'zh_6': 0.13413651287555695, 'zh_7': 0.13560086488723755, 'zh_8': 0.13293851912021637, 'zh_9': 0.1332995444536209}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.0576140321791172, 'arabic--3340323169760881569-0': 0.042327988892793655, 'arabic-4544770624843559444-1': 0.041616324335336685, 'arabic-891952409566422966-0': 0.035678133368492126, 'arabic-3659291834714572527-0': 0.11300516128540039, 'arabic-9215226117011890166-0': 0.03213675692677498, 'arabic-6300896128538259469-0': 0.04528837278485298, 'arabic-2382507508588518905-0': 0.03549351170659065, 'arabic-1871632801094859741-1': 0.03403432294726372, 'arabic--7365809756232083807-0': 0.035383742302656174}, 'russian': {'russian-3457655197371763238-61': 0.019163144752383232, 'russian--1914807805318993335-49': 0.04441480711102486, 'russian--3307989180606173904-1': 0.017360826954245567, 'russian--2219512001175315660-0': 0.021171389147639275, 'russian--7076080992904718941-0': 0.018812881782650948, 'russian--6565862953558739013-1': 0.018836474046111107, 'russian--5098374684590548031-42': 0.041321881115436554, 'russian-3573734219967447693-1': 0.019672652706503868, 'russian--4521001374120505750-6': 0.04147563874721527, 'russian--1308382244018658424-9': 0.019132256507873535}, 'bengali': {'bengali--1199493965132146131-3': 0.09629455208778381, 'bengali-1807801556888134437-2': 0.09516378492116928, 'bengali-2113189855114052041-2': 0.09450843185186386, 'bengali--2527914488250041207-0': 0.09552892297506332, 'bengali--8260793280894408063-14': 0.09734907746315002, 'bengali-8313009204852557186-4': 0.08858159929513931, 'bengali--415964033364840061-0': 0.09651181846857071, 'bengali--4696865548928858824-5': 0.09094709157943726, 'bengali-6505224142472931712-1': 0.09355797618627548, 'bengali-599666913917674019-13': 0.12996482849121094}, 'telugu': {'telugu--3977923017846260053-0': 0.034840602427721024, 'telugu-2254198842560317781-0': 0.034104470163583755, 'telugu-5435080895440121384-0': 0.034683357924222946, 'telugu--1182505954974481191-2': 0.04590700939297676, 'telugu-119276511844068401-0': 0.029415234923362732, 'telugu--4111208545071789922-0': 0.03323165699839592, 'telugu--5922002196428211484-132': 0.10818884521722794, 'telugu--1817004721681155192-3': 0.032484933733940125, 'telugu-1602214480303968359-1': 0.038625191897153854, 'telugu--6495674712575945374-0': 0.034695450216531754}, 'finnish': {'finnish-6987763079741579998-0': 0.03840695694088936, 'finnish--8516625414052383903-0': 0.03804033249616623, 'finnish-4168898766124519517-0': 0.05648208037018776, 'finnish-783166898848672321-4': 0.04003363847732544, 'finnish-2208556840820233322-0': 0.03891628235578537, 'finnish--1981034637152391615-58': 0.014512498863041401, 'finnish-8689148941295949475-9': 0.012035788036882877, 'finnish-6900867945323517614-2': 0.05835432931780815, 'finnish-8023130170017405987-1': 0.02917671389877796, 'finnish-5001457972111781248-0': 0.01248039398342371}, 'swahili': {'swahili-7146838206539641546-10': 0.03854081407189369, 'swahili-7655634199707176439-0': 0.015257488004863262, 'swahili--4427180714267750534-1': 0.044871266931295395, 'swahili-4141779435061573138-0': 0.014248584397137165, 'swahili--5424518593960879661-0': 0.01600840501487255, 'swahili-4281845253405461584-0': 0.034451987594366074, 'swahili-4899164839984299762-2': 0.0384303517639637, 'swahili-1288750786498500530-0': 0.04365978017449379, 'swahili--2671134792844015228-3': 0.023066816851496696, 'swahili-4873225622490039485-2': 0.01941036246716976}, 'korean': {'korean--2869472392602314906-0': 0.08997932076454163, 'korean-4375199563921600155-0': 0.03358059749007225, 'korean--1715118423211755607-13': 0.022228265181183815, 'korean--8028977936696142934-9': 0.03449799865484238, 'korean-2807245034690443837-5': 0.1104598343372345, 'korean-3862451817164408576-0': 0.03622320666909218, 'korean-148115504649351135-0': 0.049837078899145126, 'korean--2885837157239647036-2': 0.12387612462043762, 'korean--1743220297777040002-22': 0.13016976416110992, 'korean-3268522368206106332-0': 0.13764545321464539}, 'indonesian': {'indonesian-9141868818310916091-0': 0.012227955274283886, 'indonesian-4609394337632433932-1': 0.05617519095540047, 'indonesian-2763468883290577923-0': 0.015958240255713463, 'indonesian-5633590583948933406-0': 0.027703233063220978, 'indonesian--5961409780035435015-0': 0.011795160360634327, 'indonesian-6274547934693326697-0': 0.018988771364092827, 'indonesian--2516321763567853082-0': 0.01307770237326622, 'indonesian-2048796427556239759-4': 0.036904577165842056, 'indonesian-6246592469157278547-2': 0.024717018008232117, 'indonesian--3724318458930736973-1': 0.01164005696773529}, 'english': {'english-2852412434797041176-6': 0.08033924549818039, 'english--1463732605740571606-0': 0.01552325114607811, 'english-5441411281255470421-0': 0.018800174817442894, 'english-7294054492486093447-1': 0.014486506581306458, 'english-8820750127045023244-0': 0.04104238376021385, 'english--506693546683012611-2': 0.05822179839015007, 'english-745411798111651115-0': 0.01640326716005802, 'english-7740772185887912651-0': 0.015751708298921585, 'english-383873188776267137-19': 0.015548295341432095, 'english--8277537578703156284-0': 0.018879709765315056}}, 'glue': {'cola': {'cola_228': 0.037601370364427567, 'cola_51': 0.04322664812207222, 'cola_563': 0.16156969964504242, 'cola_501': 0.05200983211398125, 'cola_457': 0.0562659353017807, 'cola_285': 0.05559871718287468, 'cola_209': 0.052927885204553604, 'cola_178': 0.043513890355825424, 'cola_864': 0.05500960350036621, 'cola_65': 0.04947195574641228}, 'mnli': {'mnli_488': 0.04756280779838562, 'mnli_1535': 0.05605781450867653, 'mnli_3582': 0.03940665349364281, 'mnli_3811': 0.03873690590262413, 'mnli_8279': 0.06005789712071419, 'mnli_434': 0.032059866935014725, 'mnli_9195': 0.06125098466873169, 'mnli_3257': 0.04067213833332062, 'mnli_8928': 0.05052074417471886, 'mnli_6873': 0.05326303839683533}, 'mrpc': {'mrpc_451': 0.04365820810198784, 'mrpc_919': 0.055606286972761154, 'mrpc_1206': 0.04952949285507202, 'mrpc_569': 0.04165871813893318, 'mrpc_1657': 0.03757477179169655, 'mrpc_13': 0.055950555950403214, 'mrpc_1554': 0.03928341343998909, 'mrpc_1650': 0.13243834674358368, 'mrpc_326': 0.06204431131482124, 'mrpc_1429': 0.05325072631239891}, 'qnli': {'qnli_3462': 0.05928151682019234, 'qnli_2787': 0.04593620076775551, 'qnli_2276': 0.044078122824430466, 'qnli_1273': 0.0472152940928936, 'qnli_1763': 0.04784829914569855, 'qnli_2757': 0.04796135053038597, 'qnli_837': 0.049909088760614395, 'qnli_759': 0.015928199514746666, 'qnli_3112': 0.053187694400548935, 'qnli_792': 0.051110949367284775}, 'qqp': {'qqp_188208': 0.05063195526599884, 'qqp_180331': 0.0522959940135479, 'qqp_316526': 0.05146518349647522, 'qqp_138685': 0.03666011989116669, 'qqp_22780': 0.04862530902028084, 'qqp_382589': 0.050895806401968, 'qqp_240870': 0.05318741872906685, 'qqp_281137': 0.044613126665353775, 'qqp_65444': 0.042199719697237015, 'qqp_198461': 0.04227985814213753}, 'rte': {'rte_322': 0.048420682549476624, 'rte_2261': 0.04989519715309143, 'rte_1200': 0.034051112830638885, 'rte_2574': 0.015292431227862835, 'rte_2533': 0.015211190097033978, 'rte_1481': 0.04969992861151695, 'rte_2364': 0.04638383910059929, 'rte_787': 0.048961952328681946, 'rte_2885': 0.01799718104302883, 'rte_284': 0.04257126525044441}, 'sst2': {'sst2_93': 0.03815985098481178, 'sst2_1354': 0.04575042426586151, 'sst2_466': 0.04159649834036827, 'sst2_1583': 0.04522712901234627, 'sst2_592': 0.053394462913274765, 'sst2_163': 0.07100179046392441, 'sst2_1751': 0.04106706753373146, 'sst2_476': 0.039223942905664444, 'sst2_1774': 0.03691689670085907, 'sst2_206': 0.04314201697707176}, 'stsb': {'stsb_778': 0.04955729842185974, 'stsb_569': 0.05476874113082886, 'stsb_928': 0.030392160639166832, 'stsb_1301': 0.055168550461530685, 'stsb_747': 0.05506740137934685, 'stsb_333': 0.04725378379225731, 'stsb_758': 0.05527736619114876, 'stsb_727': 0.04699775576591492, 'stsb_429': 0.03592263534665108, 'stsb_1372': 0.04244862124323845}, 'wnli': {'wnli_68': 0.05002192035317421, 'wnli_18': 0.03543369844555855, 'wnli_43': 0.05472954735159874, 'wnli_136': 0.044711317867040634, 'wnli_62': 0.044581521302461624, 'wnli_41': 0.047526199370622635, 'wnli_118': 0.05094823241233826, 'wnli_97': 0.03404347226023674, 'wnli_69': 0.045938193798065186, 'wnli_142': 0.04015307500958443}}}
03/27/2024 02:59:04 - INFO - __main__ - Saving data in SD_per_task_span_4.json
03/27/2024 02:59:04 - INFO - __main__ - Saving data in var_per_task_span_4.json
03/27/2024 02:59:04 - INFO - __main__ - 
UNCERTAINTY (SD)

03/27/2024 02:59:04 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.15297408401966095, 'conll_2003_en': 0.09484804421663284, 'hau': 0.04325446859002113, 'ibo': 0.03788921609520912, 'kin': 0.03785444796085358, 'lug': 0.032802872359752655, 'luo': 0.036557864397764206, 'pcm': 0.03760907053947449, 'swa': 0.03440717235207558, 'wol': 0.0530988983809948, 'yor': 0.09093156456947327, 'zh': 0.1449238359928131}, 'tydiqa': {'arabic': 0.047257836908102036, 'russian': 0.02613619528710842, 'bengali': 0.0978408083319664, 'telugu': 0.04261767119169235, 'finnish': 0.03384390100836754, 'swahili': 0.028794586658477783, 'korean': 0.07684977352619171, 'indonesian': 0.022918792441487312, 'english': 0.029499635100364685}, 'glue': {'cola': 0.060719557106494904, 'mnli': 0.04795888811349869, 'mrpc': 0.05709948390722275, 'qnli': 0.046245671808719635, 'qqp': 0.047285452485084534, 'rte': 0.03684847801923752, 'sst2': 0.04554801061749458, 'stsb': 0.04728543013334274, 'wnli': 0.04480871930718422}}

###############################################################################
Hábrók Cluster
Job 7761471 for user s3919609
Finished at: Wed Mar 27 02:59:30 CET 2024

Job details:
============

Job ID              : 7761471
Name                : std_monte_carlo_span_4
User                : s3919609
Partition           : regularmedium
Nodes               : node95
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-26T21:11:18
Start               : 2024-03-26T21:11:19
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 05:48:11
Used CPU time       : 05:45:14 (efficiency: 99.15%)
% User (Computation): 99.82%
% System (I/O)      :  0.18%
Mem reserved        : 20G
Max Mem (Node/step) : 3.81G (node95, per node)
Full Max Mem usage  : 3.81G (Until last completed step)
Total Disk Read     : 1.01G (Until last completed step)
Total Disk Write    : 1.66M (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
