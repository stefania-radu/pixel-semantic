The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/26/2024 21:10:58 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/26/2024 21:10:58 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:10:58 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:10:58 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/26/2024 21:10:59 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/26/2024 21:10:59 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/26/2024 21:10:59 - INFO - __main__ - Running MONTE CARLO experiment: span
03/26/2024 21:10:59 - INFO - __main__ - Loading data from loss_per_task_span_3.json
03/26/2024 21:10:59 - INFO - __main__ - 
LOSS

03/26/2024 21:10:59 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8486579060554504, 'conll_2003_en': 0.6573632955551147, 'hau': 0.6096042394638062, 'ibo': 0.6095272302627563, 'kin': 0.6473895907402039, 'lug': 0.5978685617446899, 'luo': 0.6229607462882996, 'pcm': 0.6275135278701782, 'swa': 0.627490222454071, 'wol': 0.67033451795578, 'yor': 0.6750768423080444, 'zh': 0.8553587198257446}, 'tydiqa': {'arabic': 0.8303653597831726, 'russian': 0.6191390752792358, 'bengali': 0.6882240176200867, 'telugu': 0.7617889642715454, 'finnish': 0.5015696287155151, 'swahili': 0.4671034812927246, 'korean': 0.8539022207260132, 'indonesian': 0.4716653823852539, 'english': 0.16178254783153534}, 'glue': {'cola': 0.30890315771102905, 'mnli': 0.17170892655849457, 'mrpc': 0.1844419538974762, 'qnli': 0.1619151383638382, 'qqp': 0.2494826763868332, 'rte': 0.1975613385438919, 'sst2': 0.45644864439964294, 'stsb': 0.18325605988502502, 'wnli': 0.2024303376674652}}
03/26/2024 21:10:59 - INFO - __main__ - Lowest losses:
03/26/2024 21:10:59 - INFO - __main__ - ID: stsb_333, Loss: 0.02101471833884716
03/26/2024 21:10:59 - INFO - __main__ - ID: mnli_3582, Loss: 0.022001473233103752
03/26/2024 21:10:59 - INFO - __main__ - ID: stsb_727, Loss: 0.024809520691633224
03/26/2024 21:10:59 - INFO - __main__ - ID: english-383873188776267137-19, Loss: 0.02587355673313141
03/26/2024 21:10:59 - INFO - __main__ - ID: qqp_188208, Loss: 0.029841428622603416
03/26/2024 21:10:59 - INFO - __main__ - Highest losses:
03/26/2024 21:10:59 - INFO - __main__ - ID: zh_0, Loss: 0.8935188055038452
03/26/2024 21:10:59 - INFO - __main__ - ID: korean-3268522368206106332-0, Loss: 0.8948284983634949
03/26/2024 21:10:59 - INFO - __main__ - ID: korean-2807245034690443837-5, Loss: 0.896929144859314
03/26/2024 21:10:59 - INFO - __main__ - ID: zh_4, Loss: 0.9010740518569946
03/26/2024 21:10:59 - INFO - __main__ - ID: conll_2003_en_6, Loss: 1.0130867958068848
03/26/2024 21:10:59 - INFO - __main__ - Monte Carlo samples: 100
03/26/2024 21:10:59 - INFO - __main__ - Training mode: True
03/26/2024 21:10:59 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/26/2024 21:10:59 - INFO - __main__ - 
######## Language: amh ######## 

03/26/2024 21:10:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:10:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:10:59 - INFO - __main__ - ID text: amh_0
03/26/2024 21:12:19 - INFO - __main__ - Mean variance for amh_0: 0.12524892389774323
03/26/2024 21:12:19 - INFO - __main__ - Mean std for for amh_0: 0.3049732446670532
03/26/2024 21:12:19 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:12:19 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:12:19 - INFO - __main__ - ID text: amh_1
03/26/2024 21:13:35 - INFO - __main__ - Mean variance for amh_1: 0.1457197666168213
03/26/2024 21:13:35 - INFO - __main__ - Mean std for for amh_1: 0.3341009318828583
03/26/2024 21:13:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:13:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:13:35 - INFO - __main__ - ID text: amh_2
03/26/2024 21:14:50 - INFO - __main__ - Mean variance for amh_2: 0.14649099111557007
03/26/2024 21:14:50 - INFO - __main__ - Mean std for for amh_2: 0.33661937713623047
03/26/2024 21:14:50 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:14:50 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:14:50 - INFO - __main__ - ID text: amh_3
03/26/2024 21:16:05 - INFO - __main__ - Mean variance for amh_3: 0.14057964086532593
03/26/2024 21:16:05 - INFO - __main__ - Mean std for for amh_3: 0.3220572769641876
03/26/2024 21:16:05 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:16:05 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:16:05 - INFO - __main__ - ID text: amh_4
03/26/2024 21:17:21 - INFO - __main__ - Mean variance for amh_4: 0.13666599988937378
03/26/2024 21:17:21 - INFO - __main__ - Mean std for for amh_4: 0.3211178183555603
03/26/2024 21:17:21 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:17:21 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:17:21 - INFO - __main__ - ID text: amh_5
03/26/2024 21:18:37 - INFO - __main__ - Mean variance for amh_5: 0.1498185694217682
03/26/2024 21:18:37 - INFO - __main__ - Mean std for for amh_5: 0.33949410915374756
03/26/2024 21:18:37 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:18:37 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:18:37 - INFO - __main__ - ID text: amh_6
03/26/2024 21:19:52 - INFO - __main__ - Mean variance for amh_6: 0.1612461656332016
03/26/2024 21:19:52 - INFO - __main__ - Mean std for for amh_6: 0.34904953837394714
03/26/2024 21:19:52 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:19:52 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:19:52 - INFO - __main__ - ID text: amh_7
03/26/2024 21:21:08 - INFO - __main__ - Mean variance for amh_7: 0.1458703726530075
03/26/2024 21:21:08 - INFO - __main__ - Mean std for for amh_7: 0.33240100741386414
03/26/2024 21:21:08 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:21:08 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:21:08 - INFO - __main__ - ID text: amh_8
03/26/2024 21:22:23 - INFO - __main__ - Mean variance for amh_8: 0.16001790761947632
03/26/2024 21:22:23 - INFO - __main__ - Mean std for for amh_8: 0.34673789143562317
03/26/2024 21:22:23 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:22:23 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:22:23 - INFO - __main__ - ID text: amh_9
03/26/2024 21:23:39 - INFO - __main__ - Mean variance for amh_9: 0.16753822565078735
03/26/2024 21:23:39 - INFO - __main__ - Mean std for for amh_9: 0.3536348342895508
03/26/2024 21:23:39 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/26/2024 21:23:39 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:23:39 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:23:39 - INFO - __main__ - ID text: conll_2003_en_0
03/26/2024 21:24:54 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.16635751724243164
03/26/2024 21:24:54 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.3612973988056183
03/26/2024 21:24:54 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:24:54 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:24:54 - INFO - __main__ - ID text: conll_2003_en_1
03/26/2024 21:26:10 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.03963663801550865
03/26/2024 21:26:10 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.17762430012226105
03/26/2024 21:26:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:26:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:26:10 - INFO - __main__ - ID text: conll_2003_en_2
03/26/2024 21:27:26 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.04051791504025459
03/26/2024 21:27:26 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.15709136426448822
03/26/2024 21:27:26 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:27:26 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:27:26 - INFO - __main__ - ID text: conll_2003_en_3
03/26/2024 21:28:41 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.03241999074816704
03/26/2024 21:28:41 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.15346670150756836
03/26/2024 21:28:41 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:28:41 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:28:41 - INFO - __main__ - ID text: conll_2003_en_4
03/26/2024 21:29:57 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.03324185311794281
03/26/2024 21:29:57 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.16171510517597198
03/26/2024 21:29:57 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:29:57 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:29:57 - INFO - __main__ - ID text: conll_2003_en_5
03/26/2024 21:31:12 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.14693374931812286
03/26/2024 21:31:12 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.34169694781303406
03/26/2024 21:31:12 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:31:12 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:31:12 - INFO - __main__ - ID text: conll_2003_en_6
03/26/2024 21:32:29 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.07338035106658936
03/26/2024 21:32:29 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.24622683227062225
03/26/2024 21:32:30 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:32:30 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:32:30 - INFO - __main__ - ID text: conll_2003_en_7
03/26/2024 21:33:46 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.16438336670398712
03/26/2024 21:33:46 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.3642939627170563
03/26/2024 21:33:46 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:33:46 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:33:46 - INFO - __main__ - ID text: conll_2003_en_8
03/26/2024 21:35:01 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.16358181834220886
03/26/2024 21:35:01 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.36417970061302185
03/26/2024 21:35:01 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:35:01 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:35:01 - INFO - __main__ - ID text: conll_2003_en_9
03/26/2024 21:36:17 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.042546000331640244
03/26/2024 21:36:17 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.16875343024730682
03/26/2024 21:36:17 - INFO - __main__ - 
######## Language: hau ######## 

03/26/2024 21:36:17 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:36:17 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:36:17 - INFO - __main__ - ID text: hau_0
03/26/2024 21:37:32 - INFO - __main__ - Mean variance for hau_0: 0.03206844627857208
03/26/2024 21:37:32 - INFO - __main__ - Mean std for for hau_0: 0.13841773569583893
03/26/2024 21:37:32 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:37:32 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:37:32 - INFO - __main__ - ID text: hau_1
03/26/2024 21:38:47 - INFO - __main__ - Mean variance for hau_1: 0.041402507573366165
03/26/2024 21:38:47 - INFO - __main__ - Mean std for for hau_1: 0.1727972775697708
03/26/2024 21:38:47 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:38:47 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:38:47 - INFO - __main__ - ID text: hau_2
03/26/2024 21:40:03 - INFO - __main__ - Mean variance for hau_2: 0.14810504019260406
03/26/2024 21:40:03 - INFO - __main__ - Mean std for for hau_2: 0.34360718727111816
03/26/2024 21:40:03 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:40:03 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:40:03 - INFO - __main__ - ID text: hau_3
03/26/2024 21:41:18 - INFO - __main__ - Mean variance for hau_3: 0.01884262077510357
03/26/2024 21:41:18 - INFO - __main__ - Mean std for for hau_3: 0.1083400771021843
03/26/2024 21:41:18 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:41:18 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:41:18 - INFO - __main__ - ID text: hau_4
03/26/2024 21:42:34 - INFO - __main__ - Mean variance for hau_4: 0.03485512733459473
03/26/2024 21:42:34 - INFO - __main__ - Mean std for for hau_4: 0.14308811724185944
03/26/2024 21:42:34 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:42:34 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:42:34 - INFO - __main__ - ID text: hau_5
03/26/2024 21:43:49 - INFO - __main__ - Mean variance for hau_5: 0.027838705107569695
03/26/2024 21:43:49 - INFO - __main__ - Mean std for for hau_5: 0.12804441154003143
03/26/2024 21:43:49 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:43:49 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:43:49 - INFO - __main__ - ID text: hau_6
03/26/2024 21:45:05 - INFO - __main__ - Mean variance for hau_6: 0.03654951974749565
03/26/2024 21:45:05 - INFO - __main__ - Mean std for for hau_6: 0.1523788720369339
03/26/2024 21:45:05 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:45:05 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:45:05 - INFO - __main__ - ID text: hau_7
03/26/2024 21:46:20 - INFO - __main__ - Mean variance for hau_7: 0.03907625749707222
03/26/2024 21:46:20 - INFO - __main__ - Mean std for for hau_7: 0.1515284925699234
03/26/2024 21:46:20 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:46:20 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:46:20 - INFO - __main__ - ID text: hau_8
03/26/2024 21:47:35 - INFO - __main__ - Mean variance for hau_8: 0.0266941636800766
03/26/2024 21:47:35 - INFO - __main__ - Mean std for for hau_8: 0.12589041888713837
03/26/2024 21:47:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:47:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:47:35 - INFO - __main__ - ID text: hau_9
03/26/2024 21:48:51 - INFO - __main__ - Mean variance for hau_9: 0.04568290337920189
03/26/2024 21:48:51 - INFO - __main__ - Mean std for for hau_9: 0.17047244310379028
03/26/2024 21:48:51 - INFO - __main__ - 
######## Language: ibo ######## 

03/26/2024 21:48:51 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:48:51 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:48:51 - INFO - __main__ - ID text: ibo_0
03/26/2024 21:50:06 - INFO - __main__ - Mean variance for ibo_0: 0.0403718464076519
03/26/2024 21:50:06 - INFO - __main__ - Mean std for for ibo_0: 0.16327528655529022
03/26/2024 21:50:06 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:50:06 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:50:06 - INFO - __main__ - ID text: ibo_1
03/26/2024 21:51:22 - INFO - __main__ - Mean variance for ibo_1: 0.04347337409853935
03/26/2024 21:51:22 - INFO - __main__ - Mean std for for ibo_1: 0.16742734611034393
03/26/2024 21:51:22 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:51:22 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:51:22 - INFO - __main__ - ID text: ibo_2
03/26/2024 21:52:37 - INFO - __main__ - Mean variance for ibo_2: 0.0449698306620121
03/26/2024 21:52:37 - INFO - __main__ - Mean std for for ibo_2: 0.16901053488254547
03/26/2024 21:52:37 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:52:37 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:52:37 - INFO - __main__ - ID text: ibo_3
03/26/2024 21:53:53 - INFO - __main__ - Mean variance for ibo_3: 0.05147654190659523
03/26/2024 21:53:53 - INFO - __main__ - Mean std for for ibo_3: 0.19974367320537567
03/26/2024 21:53:53 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:53:53 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:53:53 - INFO - __main__ - ID text: ibo_4
03/26/2024 21:55:08 - INFO - __main__ - Mean variance for ibo_4: 0.03931845724582672
03/26/2024 21:55:08 - INFO - __main__ - Mean std for for ibo_4: 0.1627776324748993
03/26/2024 21:55:08 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:55:08 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:55:08 - INFO - __main__ - ID text: ibo_5
03/26/2024 21:56:24 - INFO - __main__ - Mean variance for ibo_5: 0.04155251011252403
03/26/2024 21:56:24 - INFO - __main__ - Mean std for for ibo_5: 0.1744016855955124
03/26/2024 21:56:24 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:56:24 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:56:24 - INFO - __main__ - ID text: ibo_6
03/26/2024 21:57:40 - INFO - __main__ - Mean variance for ibo_6: 0.03663397580385208
03/26/2024 21:57:40 - INFO - __main__ - Mean std for for ibo_6: 0.15427102148532867
03/26/2024 21:57:40 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:57:40 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:57:40 - INFO - __main__ - ID text: ibo_7
03/26/2024 21:58:55 - INFO - __main__ - Mean variance for ibo_7: 0.040710143744945526
03/26/2024 21:58:55 - INFO - __main__ - Mean std for for ibo_7: 0.15763422846794128
03/26/2024 21:58:55 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 21:58:55 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 21:58:55 - INFO - __main__ - ID text: ibo_8
03/26/2024 22:00:11 - INFO - __main__ - Mean variance for ibo_8: 0.03581925854086876
03/26/2024 22:00:11 - INFO - __main__ - Mean std for for ibo_8: 0.16475217044353485
03/26/2024 22:00:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:00:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:00:11 - INFO - __main__ - ID text: ibo_9
03/26/2024 22:01:27 - INFO - __main__ - Mean variance for ibo_9: 0.04144185408949852
03/26/2024 22:01:27 - INFO - __main__ - Mean std for for ibo_9: 0.163726344704628
03/26/2024 22:01:27 - INFO - __main__ - 
######## Language: kin ######## 

03/26/2024 22:01:27 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:01:27 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:01:27 - INFO - __main__ - ID text: kin_0
03/26/2024 22:02:42 - INFO - __main__ - Mean variance for kin_0: 0.038734421133995056
03/26/2024 22:02:42 - INFO - __main__ - Mean std for for kin_0: 0.15495188534259796
03/26/2024 22:02:42 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:02:42 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:02:42 - INFO - __main__ - ID text: kin_1
03/26/2024 22:03:58 - INFO - __main__ - Mean variance for kin_1: 0.04266243800520897
03/26/2024 22:03:58 - INFO - __main__ - Mean std for for kin_1: 0.16577807068824768
03/26/2024 22:03:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:03:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:03:58 - INFO - __main__ - ID text: kin_2
03/26/2024 22:05:13 - INFO - __main__ - Mean variance for kin_2: 0.04353564605116844
03/26/2024 22:05:13 - INFO - __main__ - Mean std for for kin_2: 0.18500185012817383
03/26/2024 22:05:13 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:05:13 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:05:13 - INFO - __main__ - ID text: kin_3
03/26/2024 22:06:28 - INFO - __main__ - Mean variance for kin_3: 0.03891836851835251
03/26/2024 22:06:28 - INFO - __main__ - Mean std for for kin_3: 0.1558217853307724
03/26/2024 22:06:28 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:06:28 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:06:28 - INFO - __main__ - ID text: kin_4
03/26/2024 22:07:43 - INFO - __main__ - Mean variance for kin_4: 0.0357992984354496
03/26/2024 22:07:43 - INFO - __main__ - Mean std for for kin_4: 0.14631567895412445
03/26/2024 22:07:43 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:07:43 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:07:43 - INFO - __main__ - ID text: kin_5
03/26/2024 22:08:58 - INFO - __main__ - Mean variance for kin_5: 0.03257695212960243
03/26/2024 22:08:58 - INFO - __main__ - Mean std for for kin_5: 0.15769368410110474
03/26/2024 22:08:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:08:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:08:58 - INFO - __main__ - ID text: kin_6
03/26/2024 22:10:13 - INFO - __main__ - Mean variance for kin_6: 0.02987944893538952
03/26/2024 22:10:13 - INFO - __main__ - Mean std for for kin_6: 0.1327209174633026
03/26/2024 22:10:13 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:10:13 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:10:13 - INFO - __main__ - ID text: kin_7
03/26/2024 22:11:28 - INFO - __main__ - Mean variance for kin_7: 0.03551604971289635
03/26/2024 22:11:28 - INFO - __main__ - Mean std for for kin_7: 0.1480187624692917
03/26/2024 22:11:28 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:11:28 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:11:28 - INFO - __main__ - ID text: kin_8
03/26/2024 22:12:43 - INFO - __main__ - Mean variance for kin_8: 0.040012285113334656
03/26/2024 22:12:43 - INFO - __main__ - Mean std for for kin_8: 0.16863149404525757
03/26/2024 22:12:43 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:12:43 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:12:43 - INFO - __main__ - ID text: kin_9
03/26/2024 22:13:58 - INFO - __main__ - Mean variance for kin_9: 0.03863269463181496
03/26/2024 22:13:58 - INFO - __main__ - Mean std for for kin_9: 0.16685307025909424
03/26/2024 22:13:58 - INFO - __main__ - 
######## Language: lug ######## 

03/26/2024 22:13:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:13:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:13:58 - INFO - __main__ - ID text: lug_0
03/26/2024 22:15:14 - INFO - __main__ - Mean variance for lug_0: 0.03191625699400902
03/26/2024 22:15:14 - INFO - __main__ - Mean std for for lug_0: 0.1391291618347168
03/26/2024 22:15:14 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:15:14 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:15:14 - INFO - __main__ - ID text: lug_1
03/26/2024 22:16:29 - INFO - __main__ - Mean variance for lug_1: 0.043398287147283554
03/26/2024 22:16:29 - INFO - __main__ - Mean std for for lug_1: 0.16308589279651642
03/26/2024 22:16:29 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:16:29 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:16:29 - INFO - __main__ - ID text: lug_2
03/26/2024 22:17:45 - INFO - __main__ - Mean variance for lug_2: 0.01892181858420372
03/26/2024 22:17:45 - INFO - __main__ - Mean std for for lug_2: 0.10891865938901901
03/26/2024 22:17:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:17:45 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:17:45 - INFO - __main__ - ID text: lug_3
03/26/2024 22:19:01 - INFO - __main__ - Mean variance for lug_3: 0.02781575731933117
03/26/2024 22:19:01 - INFO - __main__ - Mean std for for lug_3: 0.12835811078548431
03/26/2024 22:19:01 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:19:01 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:19:01 - INFO - __main__ - ID text: lug_4
03/26/2024 22:20:17 - INFO - __main__ - Mean variance for lug_4: 0.045295510441064835
03/26/2024 22:20:17 - INFO - __main__ - Mean std for for lug_4: 0.1737436056137085
03/26/2024 22:20:17 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:20:17 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:20:17 - INFO - __main__ - ID text: lug_5
03/26/2024 22:21:33 - INFO - __main__ - Mean variance for lug_5: 0.04163690283894539
03/26/2024 22:21:33 - INFO - __main__ - Mean std for for lug_5: 0.158449187874794
03/26/2024 22:21:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:21:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:21:33 - INFO - __main__ - ID text: lug_6
03/26/2024 22:22:49 - INFO - __main__ - Mean variance for lug_6: 0.03802898898720741
03/26/2024 22:22:49 - INFO - __main__ - Mean std for for lug_6: 0.1503419429063797
03/26/2024 22:22:49 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:22:49 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:22:49 - INFO - __main__ - ID text: lug_7
03/26/2024 22:24:05 - INFO - __main__ - Mean variance for lug_7: 0.037245918065309525
03/26/2024 22:24:05 - INFO - __main__ - Mean std for for lug_7: 0.1570570319890976
03/26/2024 22:24:05 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:24:05 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:24:05 - INFO - __main__ - ID text: lug_8
03/26/2024 22:25:20 - INFO - __main__ - Mean variance for lug_8: 0.03874683752655983
03/26/2024 22:25:20 - INFO - __main__ - Mean std for for lug_8: 0.15966956317424774
03/26/2024 22:25:20 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:25:20 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:25:20 - INFO - __main__ - ID text: lug_9
03/26/2024 22:26:36 - INFO - __main__ - Mean variance for lug_9: 0.03812439367175102
03/26/2024 22:26:36 - INFO - __main__ - Mean std for for lug_9: 0.15513648092746735
03/26/2024 22:26:36 - INFO - __main__ - 
######## Language: luo ######## 

03/26/2024 22:26:36 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:26:36 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:26:36 - INFO - __main__ - ID text: luo_0
03/26/2024 22:27:52 - INFO - __main__ - Mean variance for luo_0: 0.032348085194826126
03/26/2024 22:27:52 - INFO - __main__ - Mean std for for luo_0: 0.13864094018936157
03/26/2024 22:27:52 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:27:52 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:27:52 - INFO - __main__ - ID text: luo_1
03/26/2024 22:29:08 - INFO - __main__ - Mean variance for luo_1: 0.035959307104349136
03/26/2024 22:29:08 - INFO - __main__ - Mean std for for luo_1: 0.15989838540554047
03/26/2024 22:29:08 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:29:08 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:29:08 - INFO - __main__ - ID text: luo_2
03/26/2024 22:30:24 - INFO - __main__ - Mean variance for luo_2: 0.03660282865166664
03/26/2024 22:30:24 - INFO - __main__ - Mean std for for luo_2: 0.1514837145805359
03/26/2024 22:30:24 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:30:24 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:30:24 - INFO - __main__ - ID text: luo_3
03/26/2024 22:31:39 - INFO - __main__ - Mean variance for luo_3: 0.02799108624458313
03/26/2024 22:31:39 - INFO - __main__ - Mean std for for luo_3: 0.12933160364627838
03/26/2024 22:31:39 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:31:39 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:31:39 - INFO - __main__ - ID text: luo_4
03/26/2024 22:32:55 - INFO - __main__ - Mean variance for luo_4: 0.03986865282058716
03/26/2024 22:32:55 - INFO - __main__ - Mean std for for luo_4: 0.16627663373947144
03/26/2024 22:32:55 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:32:55 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:32:55 - INFO - __main__ - ID text: luo_5
03/26/2024 22:34:11 - INFO - __main__ - Mean variance for luo_5: 0.039239756762981415
03/26/2024 22:34:11 - INFO - __main__ - Mean std for for luo_5: 0.16190214455127716
03/26/2024 22:34:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:34:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:34:11 - INFO - __main__ - ID text: luo_6
03/26/2024 22:35:26 - INFO - __main__ - Mean variance for luo_6: 0.03443850204348564
03/26/2024 22:35:26 - INFO - __main__ - Mean std for for luo_6: 0.1453741043806076
03/26/2024 22:35:26 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:35:26 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:35:26 - INFO - __main__ - ID text: luo_7
03/26/2024 22:36:42 - INFO - __main__ - Mean variance for luo_7: 0.04078860208392143
03/26/2024 22:36:42 - INFO - __main__ - Mean std for for luo_7: 0.17357467114925385
03/26/2024 22:36:42 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:36:42 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:36:42 - INFO - __main__ - ID text: luo_8
03/26/2024 22:37:58 - INFO - __main__ - Mean variance for luo_8: 0.036103226244449615
03/26/2024 22:37:58 - INFO - __main__ - Mean std for for luo_8: 0.14833436906337738
03/26/2024 22:37:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:37:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:37:58 - INFO - __main__ - ID text: luo_9
03/26/2024 22:39:14 - INFO - __main__ - Mean variance for luo_9: 0.05269518867135048
03/26/2024 22:39:14 - INFO - __main__ - Mean std for for luo_9: 0.20395313203334808
03/26/2024 22:39:14 - INFO - __main__ - 
######## Language: pcm ######## 

03/26/2024 22:39:14 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:39:14 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:39:14 - INFO - __main__ - ID text: pcm_0
03/26/2024 22:40:29 - INFO - __main__ - Mean variance for pcm_0: 0.038198258727788925
03/26/2024 22:40:29 - INFO - __main__ - Mean std for for pcm_0: 0.1641606092453003
03/26/2024 22:40:29 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:40:29 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:40:29 - INFO - __main__ - ID text: pcm_1
03/26/2024 22:41:45 - INFO - __main__ - Mean variance for pcm_1: 0.04330488666892052
03/26/2024 22:41:45 - INFO - __main__ - Mean std for for pcm_1: 0.18002355098724365
03/26/2024 22:41:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:41:45 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:41:45 - INFO - __main__ - ID text: pcm_2
03/26/2024 22:43:00 - INFO - __main__ - Mean variance for pcm_2: 0.0368361622095108
03/26/2024 22:43:00 - INFO - __main__ - Mean std for for pcm_2: 0.15794606506824493
03/26/2024 22:43:00 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:43:00 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:43:00 - INFO - __main__ - ID text: pcm_3
03/26/2024 22:44:15 - INFO - __main__ - Mean variance for pcm_3: 0.03720317408442497
03/26/2024 22:44:15 - INFO - __main__ - Mean std for for pcm_3: 0.15411794185638428
03/26/2024 22:44:15 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:44:15 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:44:15 - INFO - __main__ - ID text: pcm_4
03/26/2024 22:45:31 - INFO - __main__ - Mean variance for pcm_4: 0.04345313832163811
03/26/2024 22:45:31 - INFO - __main__ - Mean std for for pcm_4: 0.1646718829870224
03/26/2024 22:45:31 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:45:31 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:45:31 - INFO - __main__ - ID text: pcm_5
03/26/2024 22:46:46 - INFO - __main__ - Mean variance for pcm_5: 0.034704796969890594
03/26/2024 22:46:46 - INFO - __main__ - Mean std for for pcm_5: 0.16530919075012207
03/26/2024 22:46:46 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:46:46 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:46:46 - INFO - __main__ - ID text: pcm_6
03/26/2024 22:48:02 - INFO - __main__ - Mean variance for pcm_6: 0.040585678070783615
03/26/2024 22:48:02 - INFO - __main__ - Mean std for for pcm_6: 0.16341827809810638
03/26/2024 22:48:02 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:48:02 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:48:02 - INFO - __main__ - ID text: pcm_7
03/26/2024 22:49:17 - INFO - __main__ - Mean variance for pcm_7: 0.04158170148730278
03/26/2024 22:49:17 - INFO - __main__ - Mean std for for pcm_7: 0.16148829460144043
03/26/2024 22:49:17 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:49:17 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:49:17 - INFO - __main__ - ID text: pcm_8
03/26/2024 22:50:33 - INFO - __main__ - Mean variance for pcm_8: 0.03461647033691406
03/26/2024 22:50:33 - INFO - __main__ - Mean std for for pcm_8: 0.14631718397140503
03/26/2024 22:50:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:50:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:50:33 - INFO - __main__ - ID text: pcm_9
03/26/2024 22:51:48 - INFO - __main__ - Mean variance for pcm_9: 0.03774445131421089
03/26/2024 22:51:48 - INFO - __main__ - Mean std for for pcm_9: 0.16491110622882843
03/26/2024 22:51:48 - INFO - __main__ - 
######## Language: swa ######## 

03/26/2024 22:51:48 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:51:48 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:51:48 - INFO - __main__ - ID text: swa_0
03/26/2024 22:53:04 - INFO - __main__ - Mean variance for swa_0: 0.0400971956551075
03/26/2024 22:53:04 - INFO - __main__ - Mean std for for swa_0: 0.1510767638683319
03/26/2024 22:53:04 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:53:04 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:53:04 - INFO - __main__ - ID text: swa_1
03/26/2024 22:54:19 - INFO - __main__ - Mean variance for swa_1: 0.043028414249420166
03/26/2024 22:54:19 - INFO - __main__ - Mean std for for swa_1: 0.1701238751411438
03/26/2024 22:54:19 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:54:19 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:54:19 - INFO - __main__ - ID text: swa_2
03/26/2024 22:55:35 - INFO - __main__ - Mean variance for swa_2: 0.039716143161058426
03/26/2024 22:55:35 - INFO - __main__ - Mean std for for swa_2: 0.15381763875484467
03/26/2024 22:55:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:55:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:55:35 - INFO - __main__ - ID text: swa_3
03/26/2024 22:56:50 - INFO - __main__ - Mean variance for swa_3: 0.03898535296320915
03/26/2024 22:56:50 - INFO - __main__ - Mean std for for swa_3: 0.16454757750034332
03/26/2024 22:56:50 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:56:50 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:56:50 - INFO - __main__ - ID text: swa_4
03/26/2024 22:58:05 - INFO - __main__ - Mean variance for swa_4: 0.025938814505934715
03/26/2024 22:58:05 - INFO - __main__ - Mean std for for swa_4: 0.12560735642910004
03/26/2024 22:58:05 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:58:05 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:58:05 - INFO - __main__ - ID text: swa_5
03/26/2024 22:59:21 - INFO - __main__ - Mean variance for swa_5: 0.027962826192378998
03/26/2024 22:59:21 - INFO - __main__ - Mean std for for swa_5: 0.13160666823387146
03/26/2024 22:59:21 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 22:59:21 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 22:59:21 - INFO - __main__ - ID text: swa_6
03/26/2024 23:00:36 - INFO - __main__ - Mean variance for swa_6: 0.029752163216471672
03/26/2024 23:00:36 - INFO - __main__ - Mean std for for swa_6: 0.13387148082256317
03/26/2024 23:00:36 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:00:36 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:00:36 - INFO - __main__ - ID text: swa_7
03/26/2024 23:01:52 - INFO - __main__ - Mean variance for swa_7: 0.050500307232141495
03/26/2024 23:01:52 - INFO - __main__ - Mean std for for swa_7: 0.20313076674938202
03/26/2024 23:01:52 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:01:52 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:01:52 - INFO - __main__ - ID text: swa_8
03/26/2024 23:03:08 - INFO - __main__ - Mean variance for swa_8: 0.03129477798938751
03/26/2024 23:03:08 - INFO - __main__ - Mean std for for swa_8: 0.14773255586624146
03/26/2024 23:03:08 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:03:08 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:03:08 - INFO - __main__ - ID text: swa_9
03/26/2024 23:04:23 - INFO - __main__ - Mean variance for swa_9: 0.04020380601286888
03/26/2024 23:04:23 - INFO - __main__ - Mean std for for swa_9: 0.16379569470882416
03/26/2024 23:04:23 - INFO - __main__ - 
######## Language: wol ######## 

03/26/2024 23:04:23 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:04:23 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:04:23 - INFO - __main__ - ID text: wol_0
03/26/2024 23:05:39 - INFO - __main__ - Mean variance for wol_0: 0.038339633494615555
03/26/2024 23:05:39 - INFO - __main__ - Mean std for for wol_0: 0.15260116755962372
03/26/2024 23:05:39 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:05:39 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:05:39 - INFO - __main__ - ID text: wol_1
03/26/2024 23:06:55 - INFO - __main__ - Mean variance for wol_1: 0.03592512384057045
03/26/2024 23:06:55 - INFO - __main__ - Mean std for for wol_1: 0.15225453674793243
03/26/2024 23:06:55 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:06:55 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:06:55 - INFO - __main__ - ID text: wol_2
03/26/2024 23:08:10 - INFO - __main__ - Mean variance for wol_2: 0.03594135865569115
03/26/2024 23:08:10 - INFO - __main__ - Mean std for for wol_2: 0.15641455352306366
03/26/2024 23:08:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:08:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:08:10 - INFO - __main__ - ID text: wol_3
03/26/2024 23:09:26 - INFO - __main__ - Mean variance for wol_3: 0.075872041285038
03/26/2024 23:09:26 - INFO - __main__ - Mean std for for wol_3: 0.24898020923137665
03/26/2024 23:09:26 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:09:26 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:09:26 - INFO - __main__ - ID text: wol_4
03/26/2024 23:10:42 - INFO - __main__ - Mean variance for wol_4: 0.041515473276376724
03/26/2024 23:10:42 - INFO - __main__ - Mean std for for wol_4: 0.18000507354736328
03/26/2024 23:10:42 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:10:42 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:10:42 - INFO - __main__ - ID text: wol_5
03/26/2024 23:11:58 - INFO - __main__ - Mean variance for wol_5: 0.040301613509655
03/26/2024 23:11:58 - INFO - __main__ - Mean std for for wol_5: 0.1620158702135086
03/26/2024 23:11:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:11:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:11:58 - INFO - __main__ - ID text: wol_6
03/26/2024 23:13:13 - INFO - __main__ - Mean variance for wol_6: 0.1554240733385086
03/26/2024 23:13:13 - INFO - __main__ - Mean std for for wol_6: 0.34678587317466736
03/26/2024 23:13:13 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:13:13 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:13:13 - INFO - __main__ - ID text: wol_7
03/26/2024 23:14:27 - INFO - __main__ - Mean variance for wol_7: 0.035112783312797546
03/26/2024 23:14:27 - INFO - __main__ - Mean std for for wol_7: 0.15961399674415588
03/26/2024 23:14:27 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:14:27 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:14:27 - INFO - __main__ - ID text: wol_8
03/26/2024 23:15:42 - INFO - __main__ - Mean variance for wol_8: 0.034366507083177567
03/26/2024 23:15:42 - INFO - __main__ - Mean std for for wol_8: 0.1623625010251999
03/26/2024 23:15:42 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:15:42 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:15:42 - INFO - __main__ - ID text: wol_9
03/26/2024 23:16:56 - INFO - __main__ - Mean variance for wol_9: 0.052855897694826126
03/26/2024 23:16:56 - INFO - __main__ - Mean std for for wol_9: 0.19748292863368988
03/26/2024 23:16:56 - INFO - __main__ - 
######## Language: yor ######## 

03/26/2024 23:16:56 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:16:56 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:16:56 - INFO - __main__ - ID text: yor_0
03/26/2024 23:18:11 - INFO - __main__ - Mean variance for yor_0: 0.13307559490203857
03/26/2024 23:18:11 - INFO - __main__ - Mean std for for yor_0: 0.3156311511993408
03/26/2024 23:18:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:18:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:18:11 - INFO - __main__ - ID text: yor_1
03/26/2024 23:19:25 - INFO - __main__ - Mean variance for yor_1: 0.13506601750850677
03/26/2024 23:19:25 - INFO - __main__ - Mean std for for yor_1: 0.3125647008419037
03/26/2024 23:19:25 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:19:25 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:19:25 - INFO - __main__ - ID text: yor_2
03/26/2024 23:20:39 - INFO - __main__ - Mean variance for yor_2: 0.04227063059806824
03/26/2024 23:20:39 - INFO - __main__ - Mean std for for yor_2: 0.16256938874721527
03/26/2024 23:20:39 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:20:39 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:20:39 - INFO - __main__ - ID text: yor_3
03/26/2024 23:21:54 - INFO - __main__ - Mean variance for yor_3: 0.03239264339208603
03/26/2024 23:21:54 - INFO - __main__ - Mean std for for yor_3: 0.14088940620422363
03/26/2024 23:21:54 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:21:54 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:21:54 - INFO - __main__ - ID text: yor_4
03/26/2024 23:23:08 - INFO - __main__ - Mean variance for yor_4: 0.1450907289981842
03/26/2024 23:23:08 - INFO - __main__ - Mean std for for yor_4: 0.33207806944847107
03/26/2024 23:23:08 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:23:08 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:23:08 - INFO - __main__ - ID text: yor_5
03/26/2024 23:24:22 - INFO - __main__ - Mean variance for yor_5: 0.09257426112890244
03/26/2024 23:24:22 - INFO - __main__ - Mean std for for yor_5: 0.25170788168907166
03/26/2024 23:24:22 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:24:22 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:24:22 - INFO - __main__ - ID text: yor_6
03/26/2024 23:25:36 - INFO - __main__ - Mean variance for yor_6: 0.04235084727406502
03/26/2024 23:25:36 - INFO - __main__ - Mean std for for yor_6: 0.1696617752313614
03/26/2024 23:25:36 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:25:36 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:25:36 - INFO - __main__ - ID text: yor_7
03/26/2024 23:26:49 - INFO - __main__ - Mean variance for yor_7: 0.13015064597129822
03/26/2024 23:26:49 - INFO - __main__ - Mean std for for yor_7: 0.3070578873157501
03/26/2024 23:26:49 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:26:49 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:26:49 - INFO - __main__ - ID text: yor_8
03/26/2024 23:28:02 - INFO - __main__ - Mean variance for yor_8: 0.036535684019327164
03/26/2024 23:28:02 - INFO - __main__ - Mean std for for yor_8: 0.14939969778060913
03/26/2024 23:28:02 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:28:02 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:28:02 - INFO - __main__ - ID text: yor_9
03/26/2024 23:29:15 - INFO - __main__ - Mean variance for yor_9: 0.13148726522922516
03/26/2024 23:29:15 - INFO - __main__ - Mean std for for yor_9: 0.3103065490722656
03/26/2024 23:29:15 - INFO - __main__ - 
######## Language: zh ######## 

03/26/2024 23:29:15 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:29:15 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:29:15 - INFO - __main__ - ID text: zh_0
03/26/2024 23:30:28 - INFO - __main__ - Mean variance for zh_0: 0.16452211141586304
03/26/2024 23:30:28 - INFO - __main__ - Mean std for for zh_0: 0.36053431034088135
03/26/2024 23:30:28 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:30:28 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:30:28 - INFO - __main__ - ID text: zh_1
03/26/2024 23:31:41 - INFO - __main__ - Mean variance for zh_1: 0.12254289537668228
03/26/2024 23:31:41 - INFO - __main__ - Mean std for for zh_1: 0.2903856933116913
03/26/2024 23:31:41 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:31:41 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:31:41 - INFO - __main__ - ID text: zh_2
03/26/2024 23:32:53 - INFO - __main__ - Mean variance for zh_2: 0.13341766595840454
03/26/2024 23:32:53 - INFO - __main__ - Mean std for for zh_2: 0.31092187762260437
03/26/2024 23:32:53 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:32:53 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:32:53 - INFO - __main__ - ID text: zh_3
03/26/2024 23:34:06 - INFO - __main__ - Mean variance for zh_3: 0.14535190165042877
03/26/2024 23:34:06 - INFO - __main__ - Mean std for for zh_3: 0.3371121883392334
03/26/2024 23:34:06 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:34:06 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:34:06 - INFO - __main__ - ID text: zh_4
03/26/2024 23:35:19 - INFO - __main__ - Mean variance for zh_4: 0.14354842901229858
03/26/2024 23:35:19 - INFO - __main__ - Mean std for for zh_4: 0.3343698978424072
03/26/2024 23:35:20 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:35:20 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:35:20 - INFO - __main__ - ID text: zh_5
03/26/2024 23:36:33 - INFO - __main__ - Mean variance for zh_5: 0.15537439286708832
03/26/2024 23:36:33 - INFO - __main__ - Mean std for for zh_5: 0.3534949719905853
03/26/2024 23:36:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:36:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:36:33 - INFO - __main__ - ID text: zh_6
03/26/2024 23:37:46 - INFO - __main__ - Mean variance for zh_6: 0.12170394510030746
03/26/2024 23:37:46 - INFO - __main__ - Mean std for for zh_6: 0.29302382469177246
03/26/2024 23:37:46 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:37:46 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:37:46 - INFO - __main__ - ID text: zh_7
03/26/2024 23:38:59 - INFO - __main__ - Mean variance for zh_7: 0.14512906968593597
03/26/2024 23:38:59 - INFO - __main__ - Mean std for for zh_7: 0.33098992705345154
03/26/2024 23:38:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:38:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:38:59 - INFO - __main__ - ID text: zh_8
03/26/2024 23:40:12 - INFO - __main__ - Mean variance for zh_8: 0.13749845325946808
03/26/2024 23:40:12 - INFO - __main__ - Mean std for for zh_8: 0.3194725811481476
03/26/2024 23:40:12 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:40:12 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:40:12 - INFO - __main__ - ID text: zh_9
03/26/2024 23:41:25 - INFO - __main__ - Mean variance for zh_9: 0.1425459235906601
03/26/2024 23:41:25 - INFO - __main__ - Mean std for for zh_9: 0.3173108398914337
03/26/2024 23:41:25 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/26/2024 23:41:25 - INFO - __main__ - 
######## Language: arabic ######## 

03/26/2024 23:41:25 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:41:25 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:41:25 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/26/2024 23:42:38 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.0494762621819973
03/26/2024 23:42:38 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.18193256855010986
03/26/2024 23:42:38 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:42:38 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:42:38 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/26/2024 23:43:51 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.043121714144945145
03/26/2024 23:43:51 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.16541583836078644
03/26/2024 23:43:51 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:43:51 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:43:51 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/26/2024 23:45:05 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.04304270073771477
03/26/2024 23:45:05 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.1675824522972107
03/26/2024 23:45:05 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:45:05 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:45:05 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/26/2024 23:46:18 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.0422380231320858
03/26/2024 23:46:18 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.1639563888311386
03/26/2024 23:46:18 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:46:18 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:46:18 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/26/2024 23:47:31 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.10792388767004013
03/26/2024 23:47:31 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.2795272767543793
03/26/2024 23:47:31 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:47:31 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:47:31 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/26/2024 23:48:43 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.039416324347257614
03/26/2024 23:48:43 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.1595146209001541
03/26/2024 23:48:43 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:48:43 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:48:43 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/26/2024 23:49:56 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.052510783076286316
03/26/2024 23:49:56 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.18424604833126068
03/26/2024 23:49:56 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:49:56 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:49:56 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/26/2024 23:51:09 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.040102869272232056
03/26/2024 23:51:09 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.16206003725528717
03/26/2024 23:51:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:51:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:51:10 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/26/2024 23:52:22 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.038995180279016495
03/26/2024 23:52:22 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.15866930782794952
03/26/2024 23:52:22 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:52:22 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:52:22 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/26/2024 23:53:35 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.042581427842378616
03/26/2024 23:53:35 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.16591061651706696
03/26/2024 23:53:35 - INFO - __main__ - 
######## Language: russian ######## 

03/26/2024 23:53:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:53:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:53:35 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/26/2024 23:54:48 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.022849639877676964
03/26/2024 23:54:48 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.12179314345121384
03/26/2024 23:54:48 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:54:48 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:54:48 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/26/2024 23:56:01 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.044573310762643814
03/26/2024 23:56:01 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.16509276628494263
03/26/2024 23:56:01 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:56:01 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:56:01 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/26/2024 23:57:14 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.020950431004166603
03/26/2024 23:57:14 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.11595515161752701
03/26/2024 23:57:14 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:57:14 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:57:14 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/26/2024 23:58:27 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.02403719164431095
03/26/2024 23:58:27 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.12378111481666565
03/26/2024 23:58:27 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:58:27 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:58:27 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/26/2024 23:59:41 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.02400418370962143
03/26/2024 23:59:41 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.12384998798370361
03/26/2024 23:59:41 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/26/2024 23:59:41 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/26/2024 23:59:41 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/27/2024 00:00:53 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.02532585710287094
03/27/2024 00:00:53 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.12580883502960205
03/27/2024 00:00:53 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:00:53 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:00:53 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/27/2024 00:02:06 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.04656817391514778
03/27/2024 00:02:06 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.18005309998989105
03/27/2024 00:02:06 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:02:06 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:02:06 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/27/2024 00:03:19 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.025147223845124245
03/27/2024 00:03:19 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.12617720663547516
03/27/2024 00:03:19 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:03:19 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:03:19 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/27/2024 00:04:32 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.043448884040117264
03/27/2024 00:04:32 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.16404636204242706
03/27/2024 00:04:32 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:04:32 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:04:32 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/27/2024 00:05:45 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.024150973185896873
03/27/2024 00:05:45 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.12451714277267456
03/27/2024 00:05:45 - INFO - __main__ - 
######## Language: bengali ######## 

03/27/2024 00:05:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:05:45 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:05:45 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/27/2024 00:06:58 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.09280326217412949
03/27/2024 00:06:58 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.25243711471557617
03/27/2024 00:06:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:06:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:06:58 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/27/2024 00:08:11 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.10193377733230591
03/27/2024 00:08:11 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.2655911147594452
03/27/2024 00:08:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:08:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:08:11 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/27/2024 00:09:24 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.091921865940094
03/27/2024 00:09:24 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.25194036960601807
03/27/2024 00:09:24 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:09:24 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:09:24 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/27/2024 00:10:37 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.09536365419626236
03/27/2024 00:10:37 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.256747841835022
03/27/2024 00:10:37 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:10:37 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:10:37 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/27/2024 00:11:49 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.09803378582000732
03/27/2024 00:11:49 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.25962939858436584
03/27/2024 00:11:50 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:11:50 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:11:50 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/27/2024 00:13:02 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.09424049407243729
03/27/2024 00:13:02 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.2539094388484955
03/27/2024 00:13:03 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:13:03 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:13:03 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/27/2024 00:14:16 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.08928116410970688
03/27/2024 00:14:16 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.24813127517700195
03/27/2024 00:14:16 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:14:16 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:14:16 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/27/2024 00:15:29 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.09214776009321213
03/27/2024 00:15:29 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.2516002357006073
03/27/2024 00:15:29 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:15:29 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:15:29 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/27/2024 00:16:42 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.09074614197015762
03/27/2024 00:16:42 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.2509893476963043
03/27/2024 00:16:42 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:16:42 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:16:42 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/27/2024 00:17:55 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.12838640809059143
03/27/2024 00:17:55 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.3045937716960907
03/27/2024 00:17:55 - INFO - __main__ - 
######## Language: telugu ######## 

03/27/2024 00:17:55 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:17:55 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:17:55 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/27/2024 00:19:08 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.041823018342256546
03/27/2024 00:19:08 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.1642398238182068
03/27/2024 00:19:08 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:19:08 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:19:08 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/27/2024 00:20:21 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.08170134574174881
03/27/2024 00:20:21 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.22683106362819672
03/27/2024 00:20:21 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:20:21 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:20:21 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/27/2024 00:21:33 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.04214314743876457
03/27/2024 00:21:33 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.16324658691883087
03/27/2024 00:21:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:21:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:21:33 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/27/2024 00:22:46 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.04108242690563202
03/27/2024 00:22:46 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.16364715993404388
03/27/2024 00:22:46 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:22:46 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:22:46 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/27/2024 00:23:58 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.033949170261621475
03/27/2024 00:23:58 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.1445714682340622
03/27/2024 00:23:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:23:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:23:58 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/27/2024 00:25:10 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.03344794735312462
03/27/2024 00:25:10 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.14432179927825928
03/27/2024 00:25:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:25:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:25:10 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/27/2024 00:26:22 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.1072695255279541
03/27/2024 00:26:22 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.2699088752269745
03/27/2024 00:26:22 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:26:22 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:26:22 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/27/2024 00:27:33 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.03616631403565407
03/27/2024 00:27:33 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.15103308856487274
03/27/2024 00:27:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:27:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:27:33 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/27/2024 00:28:45 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.03638804331421852
03/27/2024 00:28:45 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.15049953758716583
03/27/2024 00:28:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:28:45 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:28:45 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/27/2024 00:29:57 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.03372758626937866
03/27/2024 00:29:57 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.14550341665744781
03/27/2024 00:29:57 - INFO - __main__ - 
######## Language: finnish ######## 

03/27/2024 00:29:57 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:29:57 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:29:57 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/27/2024 00:31:08 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.035811349749565125
03/27/2024 00:31:08 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.14469625055789948
03/27/2024 00:31:08 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:31:08 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:31:08 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/27/2024 00:32:19 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.044288087636232376
03/27/2024 00:32:19 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.16302625834941864
03/27/2024 00:32:20 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:32:20 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:32:20 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/27/2024 00:33:31 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.0609964095056057
03/27/2024 00:33:31 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.2086670994758606
03/27/2024 00:33:31 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:33:31 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:33:31 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/27/2024 00:34:42 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.05502725765109062
03/27/2024 00:34:42 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.1797526627779007
03/27/2024 00:34:42 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:34:42 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:34:42 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/27/2024 00:35:54 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.042383626103401184
03/27/2024 00:35:54 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.15625350177288055
03/27/2024 00:35:54 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:35:54 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:35:54 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/27/2024 00:37:05 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.0201041791588068
03/27/2024 00:37:05 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.11374145746231079
03/27/2024 00:37:05 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:37:05 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:37:05 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/27/2024 00:38:16 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.015715261921286583
03/27/2024 00:38:16 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.1013750433921814
03/27/2024 00:38:16 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:38:16 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:38:16 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/27/2024 00:39:28 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.06008186936378479
03/27/2024 00:39:28 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.2054109126329422
03/27/2024 00:39:28 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:39:28 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:39:28 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/27/2024 00:40:39 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.02568877302110195
03/27/2024 00:40:39 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.12511932849884033
03/27/2024 00:40:39 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:40:39 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:40:39 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/27/2024 00:41:51 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.017821991816163063
03/27/2024 00:41:51 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.10891949385404587
03/27/2024 00:41:51 - INFO - __main__ - 
######## Language: swahili ######## 

03/27/2024 00:41:51 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:41:51 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:41:51 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/27/2024 00:43:03 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.050144266337156296
03/27/2024 00:43:03 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.1742032766342163
03/27/2024 00:43:03 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:43:03 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:43:03 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/27/2024 00:44:15 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.018741462379693985
03/27/2024 00:44:15 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.11096280813217163
03/27/2024 00:44:15 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:44:15 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:44:15 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/27/2024 00:45:27 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.04260231927037239
03/27/2024 00:45:27 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.15994708240032196
03/27/2024 00:45:27 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:45:27 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:45:27 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/27/2024 00:46:38 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.019036749377846718
03/27/2024 00:46:38 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.11168412119150162
03/27/2024 00:46:38 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:46:38 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:46:38 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/27/2024 00:47:50 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.01976301707327366
03/27/2024 00:47:50 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.11250028759241104
03/27/2024 00:47:51 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:47:51 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:47:51 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/27/2024 00:49:02 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.051267702132463455
03/27/2024 00:49:02 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.17717300355434418
03/27/2024 00:49:02 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:49:02 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:49:02 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/27/2024 00:50:14 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.03977660462260246
03/27/2024 00:50:14 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.15397967398166656
03/27/2024 00:50:14 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:50:14 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:50:14 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/27/2024 00:51:26 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.04366006329655647
03/27/2024 00:51:26 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.16421838104724884
03/27/2024 00:51:26 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:51:26 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:51:26 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/27/2024 00:52:37 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.024940399453043938
03/27/2024 00:52:37 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.12369225174188614
03/27/2024 00:52:37 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:52:37 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:52:37 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/27/2024 00:53:49 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.021752992644906044
03/27/2024 00:53:49 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.11417748779058456
03/27/2024 00:53:49 - INFO - __main__ - 
######## Language: korean ######## 

03/27/2024 00:53:49 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:53:49 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:53:49 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/27/2024 00:55:00 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.08830974251031876
03/27/2024 00:55:00 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.24452419579029083
03/27/2024 00:55:00 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:55:00 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:55:00 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/27/2024 00:56:12 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.03833339735865593
03/27/2024 00:56:12 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.15931366384029388
03/27/2024 00:56:12 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:56:12 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:56:12 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/27/2024 00:57:24 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.029156891629099846
03/27/2024 00:57:24 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.13917221128940582
03/27/2024 00:57:24 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:57:24 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:57:24 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/27/2024 00:58:36 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.04035364091396332
03/27/2024 00:58:36 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.1598055511713028
03/27/2024 00:58:36 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:58:36 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:58:36 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/27/2024 00:59:47 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.12294948101043701
03/27/2024 00:59:47 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.29180118441581726
03/27/2024 00:59:48 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 00:59:48 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 00:59:48 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/27/2024 01:01:00 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.04715026542544365
03/27/2024 01:01:00 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.17342282831668854
03/27/2024 01:01:00 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:01:00 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:01:00 - INFO - __main__ - ID text: korean-148115504649351135-0
03/27/2024 01:02:12 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.05693167448043823
03/27/2024 01:02:12 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.19487671554088593
03/27/2024 01:02:12 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:02:12 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:02:12 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/27/2024 01:03:24 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.12088289111852646
03/27/2024 01:03:24 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.28663232922554016
03/27/2024 01:03:24 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:03:24 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:03:24 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/27/2024 01:04:35 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.1212841272354126
03/27/2024 01:04:35 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.28886881470680237
03/27/2024 01:04:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:04:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:04:35 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/27/2024 01:05:47 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.13897176086902618
03/27/2024 01:05:47 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.3232446312904358
03/27/2024 01:05:48 - INFO - __main__ - 
######## Language: indonesian ######## 

03/27/2024 01:05:48 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:05:48 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:05:48 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/27/2024 01:06:59 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.01768755167722702
03/27/2024 01:06:59 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.10884660482406616
03/27/2024 01:06:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:06:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:06:59 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/27/2024 01:08:11 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.059489134699106216
03/27/2024 01:08:11 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.20597337186336517
03/27/2024 01:08:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:08:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:08:11 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/27/2024 01:09:23 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.01884768344461918
03/27/2024 01:09:23 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.11006847769021988
03/27/2024 01:09:23 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:09:23 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:09:23 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/27/2024 01:10:35 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.028135769069194794
03/27/2024 01:10:35 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.13033069670200348
03/27/2024 01:10:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:10:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:10:35 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/27/2024 01:11:47 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.017798252403736115
03/27/2024 01:11:47 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.1063213050365448
03/27/2024 01:11:47 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:11:47 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:11:47 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/27/2024 01:12:59 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.02178226225078106
03/27/2024 01:12:59 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.11672494560480118
03/27/2024 01:12:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:12:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:12:59 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/27/2024 01:14:11 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.0157888475805521
03/27/2024 01:14:11 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.10193604230880737
03/27/2024 01:14:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:14:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:14:11 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/27/2024 01:15:23 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.04937849938869476
03/27/2024 01:15:23 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.16906236112117767
03/27/2024 01:15:23 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:15:23 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:15:23 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/27/2024 01:16:35 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.028470588847994804
03/27/2024 01:16:35 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.12793025374412537
03/27/2024 01:16:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:16:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:16:35 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/27/2024 01:17:46 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.016985641792416573
03/27/2024 01:17:46 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.10608407109975815
03/27/2024 01:17:46 - INFO - __main__ - 
######## Language: english ######## 

03/27/2024 01:17:46 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:17:46 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:17:46 - INFO - __main__ - ID text: english-2852412434797041176-6
03/27/2024 01:18:58 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.07004061341285706
03/27/2024 01:18:58 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.22777849435806274
03/27/2024 01:18:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:18:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:18:59 - INFO - __main__ - ID text: english--1463732605740571606-0
03/27/2024 01:20:10 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.0205183457583189
03/27/2024 01:20:10 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.11297422647476196
03/27/2024 01:20:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:20:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:20:10 - INFO - __main__ - ID text: english-5441411281255470421-0
03/27/2024 01:21:22 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.019806886091828346
03/27/2024 01:21:22 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.11058440804481506
03/27/2024 01:21:22 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:21:22 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:21:22 - INFO - __main__ - ID text: english-7294054492486093447-1
03/27/2024 01:22:34 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.0208700280636549
03/27/2024 01:22:34 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.11219587922096252
03/27/2024 01:22:34 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:22:34 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:22:34 - INFO - __main__ - ID text: english-8820750127045023244-0
03/27/2024 01:23:46 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.04423771798610687
03/27/2024 01:23:46 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.15803642570972443
03/27/2024 01:23:46 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:23:46 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:23:46 - INFO - __main__ - ID text: english--506693546683012611-2
03/27/2024 01:24:58 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.062146078795194626
03/27/2024 01:24:58 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.1936628818511963
03/27/2024 01:24:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:24:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:24:59 - INFO - __main__ - ID text: english-745411798111651115-0
03/27/2024 01:26:10 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.021746797487139702
03/27/2024 01:26:10 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.11581947654485703
03/27/2024 01:26:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:26:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:26:10 - INFO - __main__ - ID text: english-7740772185887912651-0
03/27/2024 01:27:22 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.020249977707862854
03/27/2024 01:27:22 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.11187353730201721
03/27/2024 01:27:22 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:27:22 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:27:22 - INFO - __main__ - ID text: english-383873188776267137-19
03/27/2024 01:28:34 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.01874242164194584
03/27/2024 01:28:34 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.1080193892121315
03/27/2024 01:28:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:28:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:28:35 - INFO - __main__ - ID text: english--8277537578703156284-0
03/27/2024 01:29:47 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.02130582369863987
03/27/2024 01:29:47 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.11387190222740173
03/27/2024 01:29:47 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/27/2024 01:29:47 - INFO - __main__ - 
######## Language: cola ######## 

03/27/2024 01:29:47 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:29:47 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:29:47 - INFO - __main__ - ID text: cola_228
03/27/2024 01:30:59 - INFO - __main__ - Mean variance for cola_228: 0.04499933496117592
03/27/2024 01:30:59 - INFO - __main__ - Mean std for for cola_228: 0.18420974910259247
03/27/2024 01:30:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:30:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:30:59 - INFO - __main__ - ID text: cola_51
03/27/2024 01:32:11 - INFO - __main__ - Mean variance for cola_51: 0.048376452177762985
03/27/2024 01:32:11 - INFO - __main__ - Mean std for for cola_51: 0.1927562952041626
03/27/2024 01:32:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:32:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:32:11 - INFO - __main__ - ID text: cola_563
03/27/2024 01:33:23 - INFO - __main__ - Mean variance for cola_563: 0.1410457044839859
03/27/2024 01:33:23 - INFO - __main__ - Mean std for for cola_563: 0.33870816230773926
03/27/2024 01:33:23 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:33:23 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:33:23 - INFO - __main__ - ID text: cola_501
03/27/2024 01:34:35 - INFO - __main__ - Mean variance for cola_501: 0.047217708081007004
03/27/2024 01:34:35 - INFO - __main__ - Mean std for for cola_501: 0.19111299514770508
03/27/2024 01:34:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:34:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:34:35 - INFO - __main__ - ID text: cola_457
03/27/2024 01:35:47 - INFO - __main__ - Mean variance for cola_457: 0.056012317538261414
03/27/2024 01:35:47 - INFO - __main__ - Mean std for for cola_457: 0.20823238790035248
03/27/2024 01:35:47 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:35:47 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:35:47 - INFO - __main__ - ID text: cola_285
03/27/2024 01:36:59 - INFO - __main__ - Mean variance for cola_285: 0.055448275059461594
03/27/2024 01:36:59 - INFO - __main__ - Mean std for for cola_285: 0.20844681560993195
03/27/2024 01:36:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:36:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:36:59 - INFO - __main__ - ID text: cola_209
03/27/2024 01:38:11 - INFO - __main__ - Mean variance for cola_209: 0.03800472989678383
03/27/2024 01:38:11 - INFO - __main__ - Mean std for for cola_209: 0.17171315848827362
03/27/2024 01:38:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:38:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:38:11 - INFO - __main__ - ID text: cola_178
03/27/2024 01:39:22 - INFO - __main__ - Mean variance for cola_178: 0.06352239847183228
03/27/2024 01:39:22 - INFO - __main__ - Mean std for for cola_178: 0.22242645919322968
03/27/2024 01:39:22 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:39:22 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:39:22 - INFO - __main__ - ID text: cola_864
03/27/2024 01:40:35 - INFO - __main__ - Mean variance for cola_864: 0.06818540394306183
03/27/2024 01:40:35 - INFO - __main__ - Mean std for for cola_864: 0.23310501873493195
03/27/2024 01:40:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:40:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:40:35 - INFO - __main__ - ID text: cola_65
03/27/2024 01:41:47 - INFO - __main__ - Mean variance for cola_65: 0.04723186418414116
03/27/2024 01:41:47 - INFO - __main__ - Mean std for for cola_65: 0.18600763380527496
03/27/2024 01:41:47 - INFO - __main__ - 
######## Language: mnli ######## 

03/27/2024 01:41:47 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:41:47 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:41:47 - INFO - __main__ - ID text: mnli_488
03/27/2024 01:42:59 - INFO - __main__ - Mean variance for mnli_488: 0.05666031315922737
03/27/2024 01:42:59 - INFO - __main__ - Mean std for for mnli_488: 0.18285192549228668
03/27/2024 01:42:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:42:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:42:59 - INFO - __main__ - ID text: mnli_1535
03/27/2024 01:44:11 - INFO - __main__ - Mean variance for mnli_1535: 0.05578593537211418
03/27/2024 01:44:11 - INFO - __main__ - Mean std for for mnli_1535: 0.18262772262096405
03/27/2024 01:44:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:44:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:44:11 - INFO - __main__ - ID text: mnli_3582
03/27/2024 01:45:22 - INFO - __main__ - Mean variance for mnli_3582: 0.04959901049733162
03/27/2024 01:45:22 - INFO - __main__ - Mean std for for mnli_3582: 0.18258769810199738
03/27/2024 01:45:23 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:45:23 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:45:23 - INFO - __main__ - ID text: mnli_3811
03/27/2024 01:46:35 - INFO - __main__ - Mean variance for mnli_3811: 0.05282187461853027
03/27/2024 01:46:35 - INFO - __main__ - Mean std for for mnli_3811: 0.18956910073757172
03/27/2024 01:46:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:46:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:46:35 - INFO - __main__ - ID text: mnli_8279
03/27/2024 01:47:46 - INFO - __main__ - Mean variance for mnli_8279: 0.06005747616291046
03/27/2024 01:47:46 - INFO - __main__ - Mean std for for mnli_8279: 0.20947910845279694
03/27/2024 01:47:46 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:47:46 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:47:46 - INFO - __main__ - ID text: mnli_434
03/27/2024 01:48:58 - INFO - __main__ - Mean variance for mnli_434: 0.0382087416946888
03/27/2024 01:48:58 - INFO - __main__ - Mean std for for mnli_434: 0.14912931621074677
03/27/2024 01:48:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:48:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:48:58 - INFO - __main__ - ID text: mnli_9195
03/27/2024 01:50:10 - INFO - __main__ - Mean variance for mnli_9195: 0.035524290055036545
03/27/2024 01:50:10 - INFO - __main__ - Mean std for for mnli_9195: 0.1678248643875122
03/27/2024 01:50:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:50:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:50:10 - INFO - __main__ - ID text: mnli_3257
03/27/2024 01:51:21 - INFO - __main__ - Mean variance for mnli_3257: 0.045876890420913696
03/27/2024 01:51:21 - INFO - __main__ - Mean std for for mnli_3257: 0.176280215382576
03/27/2024 01:51:21 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:51:21 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:51:21 - INFO - __main__ - ID text: mnli_8928
03/27/2024 01:52:33 - INFO - __main__ - Mean variance for mnli_8928: 0.05231592059135437
03/27/2024 01:52:33 - INFO - __main__ - Mean std for for mnli_8928: 0.17876888811588287
03/27/2024 01:52:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:52:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:52:33 - INFO - __main__ - ID text: mnli_6873
03/27/2024 01:53:45 - INFO - __main__ - Mean variance for mnli_6873: 0.05217906832695007
03/27/2024 01:53:45 - INFO - __main__ - Mean std for for mnli_6873: 0.1780141144990921
03/27/2024 01:53:45 - INFO - __main__ - 
######## Language: mrpc ######## 

03/27/2024 01:53:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:53:45 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:53:45 - INFO - __main__ - ID text: mrpc_451
03/27/2024 01:54:57 - INFO - __main__ - Mean variance for mrpc_451: 0.0616261325776577
03/27/2024 01:54:57 - INFO - __main__ - Mean std for for mrpc_451: 0.18590693175792694
03/27/2024 01:54:57 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:54:57 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:54:57 - INFO - __main__ - ID text: mrpc_919
03/27/2024 01:56:09 - INFO - __main__ - Mean variance for mrpc_919: 0.05703016743063927
03/27/2024 01:56:09 - INFO - __main__ - Mean std for for mrpc_919: 0.18781089782714844
03/27/2024 01:56:09 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:56:09 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:56:09 - INFO - __main__ - ID text: mrpc_1206
03/27/2024 01:57:21 - INFO - __main__ - Mean variance for mrpc_1206: 0.05190467834472656
03/27/2024 01:57:21 - INFO - __main__ - Mean std for for mrpc_1206: 0.18245039880275726
03/27/2024 01:57:21 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:57:21 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:57:21 - INFO - __main__ - ID text: mrpc_569
03/27/2024 01:58:33 - INFO - __main__ - Mean variance for mrpc_569: 0.05485411360859871
03/27/2024 01:58:33 - INFO - __main__ - Mean std for for mrpc_569: 0.18448132276535034
03/27/2024 01:58:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:58:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:58:33 - INFO - __main__ - ID text: mrpc_1657
03/27/2024 01:59:45 - INFO - __main__ - Mean variance for mrpc_1657: 0.042618464678525925
03/27/2024 01:59:45 - INFO - __main__ - Mean std for for mrpc_1657: 0.15560761094093323
03/27/2024 01:59:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 01:59:45 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 01:59:45 - INFO - __main__ - ID text: mrpc_13
03/27/2024 02:00:57 - INFO - __main__ - Mean variance for mrpc_13: 0.058179792016744614
03/27/2024 02:00:57 - INFO - __main__ - Mean std for for mrpc_13: 0.19096362590789795
03/27/2024 02:00:57 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:00:57 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:00:57 - INFO - __main__ - ID text: mrpc_1554
03/27/2024 02:02:09 - INFO - __main__ - Mean variance for mrpc_1554: 0.04196978732943535
03/27/2024 02:02:09 - INFO - __main__ - Mean std for for mrpc_1554: 0.15471944212913513
03/27/2024 02:02:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:02:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:02:10 - INFO - __main__ - ID text: mrpc_1650
03/27/2024 02:03:21 - INFO - __main__ - Mean variance for mrpc_1650: 0.13034722208976746
03/27/2024 02:03:21 - INFO - __main__ - Mean std for for mrpc_1650: 0.30475881695747375
03/27/2024 02:03:21 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:03:21 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:03:21 - INFO - __main__ - ID text: mrpc_326
03/27/2024 02:04:33 - INFO - __main__ - Mean variance for mrpc_326: 0.05734117701649666
03/27/2024 02:04:33 - INFO - __main__ - Mean std for for mrpc_326: 0.19092941284179688
03/27/2024 02:04:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:04:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:04:33 - INFO - __main__ - ID text: mrpc_1429
03/27/2024 02:05:45 - INFO - __main__ - Mean variance for mrpc_1429: 0.048180025070905685
03/27/2024 02:05:45 - INFO - __main__ - Mean std for for mrpc_1429: 0.17271487414836884
03/27/2024 02:05:45 - INFO - __main__ - 
######## Language: qnli ######## 

03/27/2024 02:05:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:05:45 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:05:45 - INFO - __main__ - ID text: qnli_3462
03/27/2024 02:06:57 - INFO - __main__ - Mean variance for qnli_3462: 0.048054199665784836
03/27/2024 02:06:57 - INFO - __main__ - Mean std for for qnli_3462: 0.1735406070947647
03/27/2024 02:06:57 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:06:57 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:06:57 - INFO - __main__ - ID text: qnli_2787
03/27/2024 02:08:09 - INFO - __main__ - Mean variance for qnli_2787: 0.04614035412669182
03/27/2024 02:08:09 - INFO - __main__ - Mean std for for qnli_2787: 0.1624647080898285
03/27/2024 02:08:09 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:08:09 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:08:09 - INFO - __main__ - ID text: qnli_2276
03/27/2024 02:09:20 - INFO - __main__ - Mean variance for qnli_2276: 0.05066536366939545
03/27/2024 02:09:20 - INFO - __main__ - Mean std for for qnli_2276: 0.17102175951004028
03/27/2024 02:09:21 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:09:21 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:09:21 - INFO - __main__ - ID text: qnli_1273
03/27/2024 02:10:33 - INFO - __main__ - Mean variance for qnli_1273: 0.049060702323913574
03/27/2024 02:10:33 - INFO - __main__ - Mean std for for qnli_1273: 0.16851294040679932
03/27/2024 02:10:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:10:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:10:33 - INFO - __main__ - ID text: qnli_1763
03/27/2024 02:11:44 - INFO - __main__ - Mean variance for qnli_1763: 0.0555550754070282
03/27/2024 02:11:44 - INFO - __main__ - Mean std for for qnli_1763: 0.18321780860424042
03/27/2024 02:11:44 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:11:44 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:11:44 - INFO - __main__ - ID text: qnli_2757
03/27/2024 02:12:56 - INFO - __main__ - Mean variance for qnli_2757: 0.05507388338446617
03/27/2024 02:12:56 - INFO - __main__ - Mean std for for qnli_2757: 0.18182885646820068
03/27/2024 02:12:56 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:12:56 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:12:56 - INFO - __main__ - ID text: qnli_837
03/27/2024 02:14:08 - INFO - __main__ - Mean variance for qnli_837: 0.04761134460568428
03/27/2024 02:14:08 - INFO - __main__ - Mean std for for qnli_837: 0.17419803142547607
03/27/2024 02:14:08 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:14:08 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:14:08 - INFO - __main__ - ID text: qnli_759
03/27/2024 02:15:19 - INFO - __main__ - Mean variance for qnli_759: 0.022723115980625153
03/27/2024 02:15:19 - INFO - __main__ - Mean std for for qnli_759: 0.11703065782785416
03/27/2024 02:15:20 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:15:20 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:15:20 - INFO - __main__ - ID text: qnli_3112
03/27/2024 02:16:31 - INFO - __main__ - Mean variance for qnli_3112: 0.06106426194310188
03/27/2024 02:16:31 - INFO - __main__ - Mean std for for qnli_3112: 0.19538943469524384
03/27/2024 02:16:31 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:16:31 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:16:31 - INFO - __main__ - ID text: qnli_792
03/27/2024 02:17:43 - INFO - __main__ - Mean variance for qnli_792: 0.055771589279174805
03/27/2024 02:17:43 - INFO - __main__ - Mean std for for qnli_792: 0.1794963926076889
03/27/2024 02:17:43 - INFO - __main__ - 
######## Language: qqp ######## 

03/27/2024 02:17:43 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:17:43 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:17:43 - INFO - __main__ - ID text: qqp_188208
03/27/2024 02:18:56 - INFO - __main__ - Mean variance for qqp_188208: 0.05786501243710518
03/27/2024 02:18:56 - INFO - __main__ - Mean std for for qqp_188208: 0.20394086837768555
03/27/2024 02:18:56 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:18:56 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:18:56 - INFO - __main__ - ID text: qqp_180331
03/27/2024 02:20:08 - INFO - __main__ - Mean variance for qqp_180331: 0.05510397255420685
03/27/2024 02:20:08 - INFO - __main__ - Mean std for for qqp_180331: 0.19403326511383057
03/27/2024 02:20:08 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:20:08 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:20:08 - INFO - __main__ - ID text: qqp_316526
03/27/2024 02:21:21 - INFO - __main__ - Mean variance for qqp_316526: 0.05745134875178337
03/27/2024 02:21:21 - INFO - __main__ - Mean std for for qqp_316526: 0.19335003197193146
03/27/2024 02:21:21 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:21:21 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:21:21 - INFO - __main__ - ID text: qqp_138685
03/27/2024 02:22:33 - INFO - __main__ - Mean variance for qqp_138685: 0.0421900749206543
03/27/2024 02:22:33 - INFO - __main__ - Mean std for for qqp_138685: 0.15503650903701782
03/27/2024 02:22:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:22:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:22:33 - INFO - __main__ - ID text: qqp_22780
03/27/2024 02:23:45 - INFO - __main__ - Mean variance for qqp_22780: 0.05359337106347084
03/27/2024 02:23:45 - INFO - __main__ - Mean std for for qqp_22780: 0.19989228248596191
03/27/2024 02:23:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:23:45 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:23:45 - INFO - __main__ - ID text: qqp_382589
03/27/2024 02:24:58 - INFO - __main__ - Mean variance for qqp_382589: 0.054455116391181946
03/27/2024 02:24:58 - INFO - __main__ - Mean std for for qqp_382589: 0.19002312421798706
03/27/2024 02:24:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:24:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:24:58 - INFO - __main__ - ID text: qqp_240870
03/27/2024 02:26:11 - INFO - __main__ - Mean variance for qqp_240870: 0.054144278168678284
03/27/2024 02:26:11 - INFO - __main__ - Mean std for for qqp_240870: 0.1925470232963562
03/27/2024 02:26:11 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:26:11 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:26:11 - INFO - __main__ - ID text: qqp_281137
03/27/2024 02:27:23 - INFO - __main__ - Mean variance for qqp_281137: 0.049344539642333984
03/27/2024 02:27:23 - INFO - __main__ - Mean std for for qqp_281137: 0.17813093960285187
03/27/2024 02:27:23 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:27:23 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:27:23 - INFO - __main__ - ID text: qqp_65444
03/27/2024 02:28:35 - INFO - __main__ - Mean variance for qqp_65444: 0.03961119055747986
03/27/2024 02:28:35 - INFO - __main__ - Mean std for for qqp_65444: 0.16260845959186554
03/27/2024 02:28:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:28:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:28:35 - INFO - __main__ - ID text: qqp_198461
03/27/2024 02:29:48 - INFO - __main__ - Mean variance for qqp_198461: 0.04564731940627098
03/27/2024 02:29:48 - INFO - __main__ - Mean std for for qqp_198461: 0.17264531552791595
03/27/2024 02:29:48 - INFO - __main__ - 
######## Language: rte ######## 

03/27/2024 02:29:48 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:29:48 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:29:48 - INFO - __main__ - ID text: rte_322
03/27/2024 02:31:00 - INFO - __main__ - Mean variance for rte_322: 0.055855583399534225
03/27/2024 02:31:00 - INFO - __main__ - Mean std for for rte_322: 0.18642227351665497
03/27/2024 02:31:00 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:31:00 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:31:00 - INFO - __main__ - ID text: rte_2261
03/27/2024 02:32:12 - INFO - __main__ - Mean variance for rte_2261: 0.04835573211312294
03/27/2024 02:32:12 - INFO - __main__ - Mean std for for rte_2261: 0.18633036315441132
03/27/2024 02:32:12 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:32:12 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:32:12 - INFO - __main__ - ID text: rte_1200
03/27/2024 02:33:23 - INFO - __main__ - Mean variance for rte_1200: 0.03540334478020668
03/27/2024 02:33:23 - INFO - __main__ - Mean std for for rte_1200: 0.14594098925590515
03/27/2024 02:33:24 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:33:24 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:33:24 - INFO - __main__ - ID text: rte_2574
03/27/2024 02:34:35 - INFO - __main__ - Mean variance for rte_2574: 0.021156208589673042
03/27/2024 02:34:35 - INFO - __main__ - Mean std for for rte_2574: 0.1151304543018341
03/27/2024 02:34:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:34:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:34:35 - INFO - __main__ - ID text: rte_2533
03/27/2024 02:35:47 - INFO - __main__ - Mean variance for rte_2533: 0.021321812644600868
03/27/2024 02:35:47 - INFO - __main__ - Mean std for for rte_2533: 0.11372610181570053
03/27/2024 02:35:47 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:35:47 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:35:47 - INFO - __main__ - ID text: rte_1481
03/27/2024 02:36:58 - INFO - __main__ - Mean variance for rte_1481: 0.05298180878162384
03/27/2024 02:36:58 - INFO - __main__ - Mean std for for rte_1481: 0.17486810684204102
03/27/2024 02:36:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:36:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:36:58 - INFO - __main__ - ID text: rte_2364
03/27/2024 02:38:10 - INFO - __main__ - Mean variance for rte_2364: 0.05083153769373894
03/27/2024 02:38:10 - INFO - __main__ - Mean std for for rte_2364: 0.1718582659959793
03/27/2024 02:38:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:38:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:38:10 - INFO - __main__ - ID text: rte_787
03/27/2024 02:39:22 - INFO - __main__ - Mean variance for rte_787: 0.054409727454185486
03/27/2024 02:39:22 - INFO - __main__ - Mean std for for rte_787: 0.17595596611499786
03/27/2024 02:39:22 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:39:22 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:39:22 - INFO - __main__ - ID text: rte_2885
03/27/2024 02:40:33 - INFO - __main__ - Mean variance for rte_2885: 0.022198619320988655
03/27/2024 02:40:33 - INFO - __main__ - Mean std for for rte_2885: 0.11669274419546127
03/27/2024 02:40:34 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:40:34 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:40:34 - INFO - __main__ - ID text: rte_284
03/27/2024 02:41:45 - INFO - __main__ - Mean variance for rte_284: 0.04642486572265625
03/27/2024 02:41:45 - INFO - __main__ - Mean std for for rte_284: 0.1725829392671585
03/27/2024 02:41:45 - INFO - __main__ - 
######## Language: sst2 ######## 

03/27/2024 02:41:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:41:46 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:41:46 - INFO - __main__ - ID text: sst2_93
03/27/2024 02:42:57 - INFO - __main__ - Mean variance for sst2_93: 0.04685242474079132
03/27/2024 02:42:57 - INFO - __main__ - Mean std for for sst2_93: 0.1778719425201416
03/27/2024 02:42:57 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:42:57 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:42:57 - INFO - __main__ - ID text: sst2_1354
03/27/2024 02:44:09 - INFO - __main__ - Mean variance for sst2_1354: 0.040532831102609634
03/27/2024 02:44:09 - INFO - __main__ - Mean std for for sst2_1354: 0.17750877141952515
03/27/2024 02:44:09 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:44:09 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:44:09 - INFO - __main__ - ID text: sst2_466
03/27/2024 02:45:21 - INFO - __main__ - Mean variance for sst2_466: 0.04982640966773033
03/27/2024 02:45:21 - INFO - __main__ - Mean std for for sst2_466: 0.19793915748596191
03/27/2024 02:45:21 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:45:21 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:45:21 - INFO - __main__ - ID text: sst2_1583
03/27/2024 02:46:32 - INFO - __main__ - Mean variance for sst2_1583: 0.05218896642327309
03/27/2024 02:46:32 - INFO - __main__ - Mean std for for sst2_1583: 0.1805519461631775
03/27/2024 02:46:33 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:46:33 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:46:33 - INFO - __main__ - ID text: sst2_592
03/27/2024 02:47:45 - INFO - __main__ - Mean variance for sst2_592: 0.04616851732134819
03/27/2024 02:47:45 - INFO - __main__ - Mean std for for sst2_592: 0.17350466549396515
03/27/2024 02:47:45 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:47:45 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:47:45 - INFO - __main__ - ID text: sst2_163
03/27/2024 02:48:58 - INFO - __main__ - Mean variance for sst2_163: 0.07741066068410873
03/27/2024 02:48:58 - INFO - __main__ - Mean std for for sst2_163: 0.25008442997932434
03/27/2024 02:48:58 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:48:58 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:48:58 - INFO - __main__ - ID text: sst2_1751
03/27/2024 02:50:10 - INFO - __main__ - Mean variance for sst2_1751: 0.049461882561445236
03/27/2024 02:50:10 - INFO - __main__ - Mean std for for sst2_1751: 0.19370417296886444
03/27/2024 02:50:10 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:50:10 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:50:10 - INFO - __main__ - ID text: sst2_476
03/27/2024 02:51:22 - INFO - __main__ - Mean variance for sst2_476: 0.036977119743824005
03/27/2024 02:51:22 - INFO - __main__ - Mean std for for sst2_476: 0.15436352789402008
03/27/2024 02:51:23 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:51:23 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:51:23 - INFO - __main__ - ID text: sst2_1774
03/27/2024 02:52:35 - INFO - __main__ - Mean variance for sst2_1774: 0.03904053568840027
03/27/2024 02:52:35 - INFO - __main__ - Mean std for for sst2_1774: 0.16208034753799438
03/27/2024 02:52:35 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:52:35 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:52:35 - INFO - __main__ - ID text: sst2_206
03/27/2024 02:53:48 - INFO - __main__ - Mean variance for sst2_206: 0.04574449732899666
03/27/2024 02:53:48 - INFO - __main__ - Mean std for for sst2_206: 0.18087804317474365
03/27/2024 02:53:48 - INFO - __main__ - 
######## Language: stsb ######## 

03/27/2024 02:53:48 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:53:48 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:53:48 - INFO - __main__ - ID text: stsb_778
03/27/2024 02:55:00 - INFO - __main__ - Mean variance for stsb_778: 0.050674665719270706
03/27/2024 02:55:00 - INFO - __main__ - Mean std for for stsb_778: 0.18950490653514862
03/27/2024 02:55:00 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:55:00 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:55:00 - INFO - __main__ - ID text: stsb_569
03/27/2024 02:56:12 - INFO - __main__ - Mean variance for stsb_569: 0.04559348523616791
03/27/2024 02:56:12 - INFO - __main__ - Mean std for for stsb_569: 0.18342530727386475
03/27/2024 02:56:12 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:56:12 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:56:12 - INFO - __main__ - ID text: stsb_928
03/27/2024 02:57:25 - INFO - __main__ - Mean variance for stsb_928: 0.03861973062157631
03/27/2024 02:57:25 - INFO - __main__ - Mean std for for stsb_928: 0.1502692997455597
03/27/2024 02:57:25 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:57:25 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:57:25 - INFO - __main__ - ID text: stsb_1301
03/27/2024 02:58:37 - INFO - __main__ - Mean variance for stsb_1301: 0.04599772021174431
03/27/2024 02:58:37 - INFO - __main__ - Mean std for for stsb_1301: 0.17739850282669067
03/27/2024 02:58:37 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:58:37 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:58:37 - INFO - __main__ - ID text: stsb_747
03/27/2024 02:59:49 - INFO - __main__ - Mean variance for stsb_747: 0.04906485602259636
03/27/2024 02:59:49 - INFO - __main__ - Mean std for for stsb_747: 0.17694741487503052
03/27/2024 02:59:49 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 02:59:49 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 02:59:49 - INFO - __main__ - ID text: stsb_333
03/27/2024 03:01:02 - INFO - __main__ - Mean variance for stsb_333: 0.052301254123449326
03/27/2024 03:01:02 - INFO - __main__ - Mean std for for stsb_333: 0.1875215619802475
03/27/2024 03:01:03 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:01:03 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:01:03 - INFO - __main__ - ID text: stsb_758
03/27/2024 03:02:15 - INFO - __main__ - Mean variance for stsb_758: 0.05955973640084267
03/27/2024 03:02:15 - INFO - __main__ - Mean std for for stsb_758: 0.19243983924388885
03/27/2024 03:02:15 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:02:15 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:02:15 - INFO - __main__ - ID text: stsb_727
03/27/2024 03:03:27 - INFO - __main__ - Mean variance for stsb_727: 0.04696400836110115
03/27/2024 03:03:27 - INFO - __main__ - Mean std for for stsb_727: 0.17920030653476715
03/27/2024 03:03:28 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:03:28 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:03:28 - INFO - __main__ - ID text: stsb_429
03/27/2024 03:04:40 - INFO - __main__ - Mean variance for stsb_429: 0.043749067932367325
03/27/2024 03:04:40 - INFO - __main__ - Mean std for for stsb_429: 0.17838752269744873
03/27/2024 03:04:40 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:04:40 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:04:40 - INFO - __main__ - ID text: stsb_1372
03/27/2024 03:05:52 - INFO - __main__ - Mean variance for stsb_1372: 0.047301050275564194
03/27/2024 03:05:52 - INFO - __main__ - Mean std for for stsb_1372: 0.1834258884191513
03/27/2024 03:05:52 - INFO - __main__ - 
######## Language: wnli ######## 

03/27/2024 03:05:52 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:05:52 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:05:52 - INFO - __main__ - ID text: wnli_68
03/27/2024 03:07:04 - INFO - __main__ - Mean variance for wnli_68: 0.05152864754199982
03/27/2024 03:07:04 - INFO - __main__ - Mean std for for wnli_68: 0.17444734275341034
03/27/2024 03:07:04 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:07:04 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:07:04 - INFO - __main__ - ID text: wnli_18
03/27/2024 03:08:16 - INFO - __main__ - Mean variance for wnli_18: 0.04544636979699135
03/27/2024 03:08:16 - INFO - __main__ - Mean std for for wnli_18: 0.1623738557100296
03/27/2024 03:08:16 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:08:16 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:08:16 - INFO - __main__ - ID text: wnli_43
03/27/2024 03:09:27 - INFO - __main__ - Mean variance for wnli_43: 0.04949721693992615
03/27/2024 03:09:27 - INFO - __main__ - Mean std for for wnli_43: 0.1743813157081604
03/27/2024 03:09:27 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:09:27 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:09:27 - INFO - __main__ - ID text: wnli_136
03/27/2024 03:10:37 - INFO - __main__ - Mean variance for wnli_136: 0.05615612864494324
03/27/2024 03:10:37 - INFO - __main__ - Mean std for for wnli_136: 0.18088041245937347
03/27/2024 03:10:37 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:10:37 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:10:37 - INFO - __main__ - ID text: wnli_62
03/27/2024 03:11:48 - INFO - __main__ - Mean variance for wnli_62: 0.059040945023298264
03/27/2024 03:11:48 - INFO - __main__ - Mean std for for wnli_62: 0.1926991194486618
03/27/2024 03:11:48 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:11:48 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:11:48 - INFO - __main__ - ID text: wnli_41
03/27/2024 03:12:59 - INFO - __main__ - Mean variance for wnli_41: 0.05279010534286499
03/27/2024 03:12:59 - INFO - __main__ - Mean std for for wnli_41: 0.1796431690454483
03/27/2024 03:12:59 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:12:59 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:12:59 - INFO - __main__ - ID text: wnli_118
03/27/2024 03:14:09 - INFO - __main__ - Mean variance for wnli_118: 0.04994204267859459
03/27/2024 03:14:09 - INFO - __main__ - Mean std for for wnli_118: 0.17508481442928314
03/27/2024 03:14:09 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:14:09 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:14:09 - INFO - __main__ - ID text: wnli_97
03/27/2024 03:15:19 - INFO - __main__ - Mean variance for wnli_97: 0.03777524456381798
03/27/2024 03:15:19 - INFO - __main__ - Mean std for for wnli_97: 0.14742828905582428
03/27/2024 03:15:19 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:15:19 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:15:19 - INFO - __main__ - ID text: wnli_69
03/27/2024 03:16:29 - INFO - __main__ - Mean variance for wnli_69: 0.047624293714761734
03/27/2024 03:16:29 - INFO - __main__ - Mean std for for wnli_69: 0.17947286367416382
03/27/2024 03:16:29 - INFO - __main__ - Applying span masking with "max_span_length = 3" , "cumulative_span_weights = [0.0, 0.0, 1.0]"  and "spacing = span"
03/27/2024 03:16:29 - INFO - __main__ - Masked count: 63, ratio = 0.2461
03/27/2024 03:16:29 - INFO - __main__ - ID text: wnli_142
03/27/2024 03:17:39 - INFO - __main__ - Mean variance for wnli_142: 0.04143780097365379
03/27/2024 03:17:39 - INFO - __main__ - Mean std for for wnli_142: 0.15338680148124695
03/27/2024 03:17:39 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.12524892389774323, 'amh_1': 0.1457197666168213, 'amh_2': 0.14649099111557007, 'amh_3': 0.14057964086532593, 'amh_4': 0.13666599988937378, 'amh_5': 0.1498185694217682, 'amh_6': 0.1612461656332016, 'amh_7': 0.1458703726530075, 'amh_8': 0.16001790761947632, 'amh_9': 0.16753822565078735}, 'conll_2003_en': {'conll_2003_en_0': 0.16635751724243164, 'conll_2003_en_1': 0.03963663801550865, 'conll_2003_en_2': 0.04051791504025459, 'conll_2003_en_3': 0.03241999074816704, 'conll_2003_en_4': 0.03324185311794281, 'conll_2003_en_5': 0.14693374931812286, 'conll_2003_en_6': 0.07338035106658936, 'conll_2003_en_7': 0.16438336670398712, 'conll_2003_en_8': 0.16358181834220886, 'conll_2003_en_9': 0.042546000331640244}, 'hau': {'hau_0': 0.03206844627857208, 'hau_1': 0.041402507573366165, 'hau_2': 0.14810504019260406, 'hau_3': 0.01884262077510357, 'hau_4': 0.03485512733459473, 'hau_5': 0.027838705107569695, 'hau_6': 0.03654951974749565, 'hau_7': 0.03907625749707222, 'hau_8': 0.0266941636800766, 'hau_9': 0.04568290337920189}, 'ibo': {'ibo_0': 0.0403718464076519, 'ibo_1': 0.04347337409853935, 'ibo_2': 0.0449698306620121, 'ibo_3': 0.05147654190659523, 'ibo_4': 0.03931845724582672, 'ibo_5': 0.04155251011252403, 'ibo_6': 0.03663397580385208, 'ibo_7': 0.040710143744945526, 'ibo_8': 0.03581925854086876, 'ibo_9': 0.04144185408949852}, 'kin': {'kin_0': 0.038734421133995056, 'kin_1': 0.04266243800520897, 'kin_2': 0.04353564605116844, 'kin_3': 0.03891836851835251, 'kin_4': 0.0357992984354496, 'kin_5': 0.03257695212960243, 'kin_6': 0.02987944893538952, 'kin_7': 0.03551604971289635, 'kin_8': 0.040012285113334656, 'kin_9': 0.03863269463181496}, 'lug': {'lug_0': 0.03191625699400902, 'lug_1': 0.043398287147283554, 'lug_2': 0.01892181858420372, 'lug_3': 0.02781575731933117, 'lug_4': 0.045295510441064835, 'lug_5': 0.04163690283894539, 'lug_6': 0.03802898898720741, 'lug_7': 0.037245918065309525, 'lug_8': 0.03874683752655983, 'lug_9': 0.03812439367175102}, 'luo': {'luo_0': 0.032348085194826126, 'luo_1': 0.035959307104349136, 'luo_2': 0.03660282865166664, 'luo_3': 0.02799108624458313, 'luo_4': 0.03986865282058716, 'luo_5': 0.039239756762981415, 'luo_6': 0.03443850204348564, 'luo_7': 0.04078860208392143, 'luo_8': 0.036103226244449615, 'luo_9': 0.05269518867135048}, 'pcm': {'pcm_0': 0.038198258727788925, 'pcm_1': 0.04330488666892052, 'pcm_2': 0.0368361622095108, 'pcm_3': 0.03720317408442497, 'pcm_4': 0.04345313832163811, 'pcm_5': 0.034704796969890594, 'pcm_6': 0.040585678070783615, 'pcm_7': 0.04158170148730278, 'pcm_8': 0.03461647033691406, 'pcm_9': 0.03774445131421089}, 'swa': {'swa_0': 0.0400971956551075, 'swa_1': 0.043028414249420166, 'swa_2': 0.039716143161058426, 'swa_3': 0.03898535296320915, 'swa_4': 0.025938814505934715, 'swa_5': 0.027962826192378998, 'swa_6': 0.029752163216471672, 'swa_7': 0.050500307232141495, 'swa_8': 0.03129477798938751, 'swa_9': 0.04020380601286888}, 'wol': {'wol_0': 0.038339633494615555, 'wol_1': 0.03592512384057045, 'wol_2': 0.03594135865569115, 'wol_3': 0.075872041285038, 'wol_4': 0.041515473276376724, 'wol_5': 0.040301613509655, 'wol_6': 0.1554240733385086, 'wol_7': 0.035112783312797546, 'wol_8': 0.034366507083177567, 'wol_9': 0.052855897694826126}, 'yor': {'yor_0': 0.13307559490203857, 'yor_1': 0.13506601750850677, 'yor_2': 0.04227063059806824, 'yor_3': 0.03239264339208603, 'yor_4': 0.1450907289981842, 'yor_5': 0.09257426112890244, 'yor_6': 0.04235084727406502, 'yor_7': 0.13015064597129822, 'yor_8': 0.036535684019327164, 'yor_9': 0.13148726522922516}, 'zh': {'zh_0': 0.16452211141586304, 'zh_1': 0.12254289537668228, 'zh_2': 0.13341766595840454, 'zh_3': 0.14535190165042877, 'zh_4': 0.14354842901229858, 'zh_5': 0.15537439286708832, 'zh_6': 0.12170394510030746, 'zh_7': 0.14512906968593597, 'zh_8': 0.13749845325946808, 'zh_9': 0.1425459235906601}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.0494762621819973, 'arabic--3340323169760881569-0': 0.043121714144945145, 'arabic-4544770624843559444-1': 0.04304270073771477, 'arabic-891952409566422966-0': 0.0422380231320858, 'arabic-3659291834714572527-0': 0.10792388767004013, 'arabic-9215226117011890166-0': 0.039416324347257614, 'arabic-6300896128538259469-0': 0.052510783076286316, 'arabic-2382507508588518905-0': 0.040102869272232056, 'arabic-1871632801094859741-1': 0.038995180279016495, 'arabic--7365809756232083807-0': 0.042581427842378616}, 'russian': {'russian-3457655197371763238-61': 0.022849639877676964, 'russian--1914807805318993335-49': 0.044573310762643814, 'russian--3307989180606173904-1': 0.020950431004166603, 'russian--2219512001175315660-0': 0.02403719164431095, 'russian--7076080992904718941-0': 0.02400418370962143, 'russian--6565862953558739013-1': 0.02532585710287094, 'russian--5098374684590548031-42': 0.04656817391514778, 'russian-3573734219967447693-1': 0.025147223845124245, 'russian--4521001374120505750-6': 0.043448884040117264, 'russian--1308382244018658424-9': 0.024150973185896873}, 'bengali': {'bengali--1199493965132146131-3': 0.09280326217412949, 'bengali-1807801556888134437-2': 0.10193377733230591, 'bengali-2113189855114052041-2': 0.091921865940094, 'bengali--2527914488250041207-0': 0.09536365419626236, 'bengali--8260793280894408063-14': 0.09803378582000732, 'bengali-8313009204852557186-4': 0.09424049407243729, 'bengali--415964033364840061-0': 0.08928116410970688, 'bengali--4696865548928858824-5': 0.09214776009321213, 'bengali-6505224142472931712-1': 0.09074614197015762, 'bengali-599666913917674019-13': 0.12838640809059143}, 'telugu': {'telugu--3977923017846260053-0': 0.041823018342256546, 'telugu-2254198842560317781-0': 0.08170134574174881, 'telugu-5435080895440121384-0': 0.04214314743876457, 'telugu--1182505954974481191-2': 0.04108242690563202, 'telugu-119276511844068401-0': 0.033949170261621475, 'telugu--4111208545071789922-0': 0.03344794735312462, 'telugu--5922002196428211484-132': 0.1072695255279541, 'telugu--1817004721681155192-3': 0.03616631403565407, 'telugu-1602214480303968359-1': 0.03638804331421852, 'telugu--6495674712575945374-0': 0.03372758626937866}, 'finnish': {'finnish-6987763079741579998-0': 0.035811349749565125, 'finnish--8516625414052383903-0': 0.044288087636232376, 'finnish-4168898766124519517-0': 0.0609964095056057, 'finnish-783166898848672321-4': 0.05502725765109062, 'finnish-2208556840820233322-0': 0.042383626103401184, 'finnish--1981034637152391615-58': 0.0201041791588068, 'finnish-8689148941295949475-9': 0.015715261921286583, 'finnish-6900867945323517614-2': 0.06008186936378479, 'finnish-8023130170017405987-1': 0.02568877302110195, 'finnish-5001457972111781248-0': 0.017821991816163063}, 'swahili': {'swahili-7146838206539641546-10': 0.050144266337156296, 'swahili-7655634199707176439-0': 0.018741462379693985, 'swahili--4427180714267750534-1': 0.04260231927037239, 'swahili-4141779435061573138-0': 0.019036749377846718, 'swahili--5424518593960879661-0': 0.01976301707327366, 'swahili-4281845253405461584-0': 0.051267702132463455, 'swahili-4899164839984299762-2': 0.03977660462260246, 'swahili-1288750786498500530-0': 0.04366006329655647, 'swahili--2671134792844015228-3': 0.024940399453043938, 'swahili-4873225622490039485-2': 0.021752992644906044}, 'korean': {'korean--2869472392602314906-0': 0.08830974251031876, 'korean-4375199563921600155-0': 0.03833339735865593, 'korean--1715118423211755607-13': 0.029156891629099846, 'korean--8028977936696142934-9': 0.04035364091396332, 'korean-2807245034690443837-5': 0.12294948101043701, 'korean-3862451817164408576-0': 0.04715026542544365, 'korean-148115504649351135-0': 0.05693167448043823, 'korean--2885837157239647036-2': 0.12088289111852646, 'korean--1743220297777040002-22': 0.1212841272354126, 'korean-3268522368206106332-0': 0.13897176086902618}, 'indonesian': {'indonesian-9141868818310916091-0': 0.01768755167722702, 'indonesian-4609394337632433932-1': 0.059489134699106216, 'indonesian-2763468883290577923-0': 0.01884768344461918, 'indonesian-5633590583948933406-0': 0.028135769069194794, 'indonesian--5961409780035435015-0': 0.017798252403736115, 'indonesian-6274547934693326697-0': 0.02178226225078106, 'indonesian--2516321763567853082-0': 0.0157888475805521, 'indonesian-2048796427556239759-4': 0.04937849938869476, 'indonesian-6246592469157278547-2': 0.028470588847994804, 'indonesian--3724318458930736973-1': 0.016985641792416573}, 'english': {'english-2852412434797041176-6': 0.07004061341285706, 'english--1463732605740571606-0': 0.0205183457583189, 'english-5441411281255470421-0': 0.019806886091828346, 'english-7294054492486093447-1': 0.0208700280636549, 'english-8820750127045023244-0': 0.04423771798610687, 'english--506693546683012611-2': 0.062146078795194626, 'english-745411798111651115-0': 0.021746797487139702, 'english-7740772185887912651-0': 0.020249977707862854, 'english-383873188776267137-19': 0.01874242164194584, 'english--8277537578703156284-0': 0.02130582369863987}}, 'glue': {'cola': {'cola_228': 0.04499933496117592, 'cola_51': 0.048376452177762985, 'cola_563': 0.1410457044839859, 'cola_501': 0.047217708081007004, 'cola_457': 0.056012317538261414, 'cola_285': 0.055448275059461594, 'cola_209': 0.03800472989678383, 'cola_178': 0.06352239847183228, 'cola_864': 0.06818540394306183, 'cola_65': 0.04723186418414116}, 'mnli': {'mnli_488': 0.05666031315922737, 'mnli_1535': 0.05578593537211418, 'mnli_3582': 0.04959901049733162, 'mnli_3811': 0.05282187461853027, 'mnli_8279': 0.06005747616291046, 'mnli_434': 0.0382087416946888, 'mnli_9195': 0.035524290055036545, 'mnli_3257': 0.045876890420913696, 'mnli_8928': 0.05231592059135437, 'mnli_6873': 0.05217906832695007}, 'mrpc': {'mrpc_451': 0.0616261325776577, 'mrpc_919': 0.05703016743063927, 'mrpc_1206': 0.05190467834472656, 'mrpc_569': 0.05485411360859871, 'mrpc_1657': 0.042618464678525925, 'mrpc_13': 0.058179792016744614, 'mrpc_1554': 0.04196978732943535, 'mrpc_1650': 0.13034722208976746, 'mrpc_326': 0.05734117701649666, 'mrpc_1429': 0.048180025070905685}, 'qnli': {'qnli_3462': 0.048054199665784836, 'qnli_2787': 0.04614035412669182, 'qnli_2276': 0.05066536366939545, 'qnli_1273': 0.049060702323913574, 'qnli_1763': 0.0555550754070282, 'qnli_2757': 0.05507388338446617, 'qnli_837': 0.04761134460568428, 'qnli_759': 0.022723115980625153, 'qnli_3112': 0.06106426194310188, 'qnli_792': 0.055771589279174805}, 'qqp': {'qqp_188208': 0.05786501243710518, 'qqp_180331': 0.05510397255420685, 'qqp_316526': 0.05745134875178337, 'qqp_138685': 0.0421900749206543, 'qqp_22780': 0.05359337106347084, 'qqp_382589': 0.054455116391181946, 'qqp_240870': 0.054144278168678284, 'qqp_281137': 0.049344539642333984, 'qqp_65444': 0.03961119055747986, 'qqp_198461': 0.04564731940627098}, 'rte': {'rte_322': 0.055855583399534225, 'rte_2261': 0.04835573211312294, 'rte_1200': 0.03540334478020668, 'rte_2574': 0.021156208589673042, 'rte_2533': 0.021321812644600868, 'rte_1481': 0.05298180878162384, 'rte_2364': 0.05083153769373894, 'rte_787': 0.054409727454185486, 'rte_2885': 0.022198619320988655, 'rte_284': 0.04642486572265625}, 'sst2': {'sst2_93': 0.04685242474079132, 'sst2_1354': 0.040532831102609634, 'sst2_466': 0.04982640966773033, 'sst2_1583': 0.05218896642327309, 'sst2_592': 0.04616851732134819, 'sst2_163': 0.07741066068410873, 'sst2_1751': 0.049461882561445236, 'sst2_476': 0.036977119743824005, 'sst2_1774': 0.03904053568840027, 'sst2_206': 0.04574449732899666}, 'stsb': {'stsb_778': 0.050674665719270706, 'stsb_569': 0.04559348523616791, 'stsb_928': 0.03861973062157631, 'stsb_1301': 0.04599772021174431, 'stsb_747': 0.04906485602259636, 'stsb_333': 0.052301254123449326, 'stsb_758': 0.05955973640084267, 'stsb_727': 0.04696400836110115, 'stsb_429': 0.043749067932367325, 'stsb_1372': 0.047301050275564194}, 'wnli': {'wnli_68': 0.05152864754199982, 'wnli_18': 0.04544636979699135, 'wnli_43': 0.04949721693992615, 'wnli_136': 0.05615612864494324, 'wnli_62': 0.059040945023298264, 'wnli_41': 0.05279010534286499, 'wnli_118': 0.04994204267859459, 'wnli_97': 0.03777524456381798, 'wnli_69': 0.047624293714761734, 'wnli_142': 0.04143780097365379}}}
03/27/2024 03:17:39 - INFO - __main__ - Saving data in SD_per_task_span_3.json
03/27/2024 03:17:39 - INFO - __main__ - Saving data in var_per_task_span_3.json
03/27/2024 03:17:39 - INFO - __main__ - 
UNCERTAINTY (SD)

03/27/2024 03:17:39 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.1479196399450302, 'conll_2003_en': 0.09029991924762726, 'hau': 0.045111529529094696, 'ibo': 0.04157678037881851, 'kin': 0.03762676194310188, 'lug': 0.03611306846141815, 'luo': 0.03760351985692978, 'pcm': 0.03882287070155144, 'swa': 0.03674798086285591, 'wol': 0.05456545203924179, 'yor': 0.09209942817687988, 'zh': 0.14116348326206207}, 'tydiqa': {'arabic': 0.049940917640924454, 'russian': 0.0301055908203125, 'bengali': 0.09748582541942596, 'telugu': 0.04876985400915146, 'finnish': 0.03779188171029091, 'swahili': 0.03316855803132057, 'korean': 0.08043237775564194, 'indonesian': 0.027436424046754837, 'english': 0.03196646645665169}, 'glue': {'cola': 0.06100442260503769, 'mnli': 0.04990295320749283, 'mrpc': 0.06040515750646591, 'qnli': 0.049171991646289825, 'qqp': 0.0509406216442585, 'rte': 0.04089391976594925, 'sst2': 0.04842038080096245, 'stsb': 0.047982554882764816, 'wnli': 0.04912387952208519}}

###############################################################################
Hábrók Cluster
Job 7761470 for user s3919609
Finished at: Wed Mar 27 03:17:40 CET 2024

Job details:
============

Job ID              : 7761470
Name                : std_monte_carlo_span_3
User                : s3919609
Partition           : regularmedium
Nodes               : node95
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-26T21:10:46
Start               : 2024-03-26T21:10:47
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 06:06:53
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 20G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
