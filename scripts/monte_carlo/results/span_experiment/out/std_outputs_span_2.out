The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
03/26/2024 21:10:14 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/26/2024 21:10:15 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:10:15 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/26/2024 21:10:15 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/26/2024 21:10:16 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/26/2024 21:10:16 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/26/2024 21:10:16 - INFO - __main__ - Running MONTE CARLO experiment: span
03/26/2024 21:10:16 - INFO - __main__ - Loading data from loss_per_task_span_2.json
03/26/2024 21:10:16 - INFO - __main__ - 
LOSS

03/26/2024 21:10:16 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.8302465677261353, 'conll_2003_en': 0.5965279340744019, 'hau': 0.586258590221405, 'ibo': 0.5601347088813782, 'kin': 0.5481346845626831, 'lug': 0.5308826565742493, 'luo': 0.5514570474624634, 'pcm': 0.5356088280677795, 'swa': 0.5683863162994385, 'wol': 0.6005521416664124, 'yor': 0.6042623519897461, 'zh': 0.8340109586715698}, 'tydiqa': {'arabic': 0.8222627639770508, 'russian': 0.5751065611839294, 'bengali': 0.6914924383163452, 'telugu': 0.7531861066818237, 'finnish': 0.4741337299346924, 'swahili': 0.3995712101459503, 'korean': 0.8442670106887817, 'indonesian': 0.3750307857990265, 'english': 0.1020476222038269}, 'glue': {'cola': 0.19188572466373444, 'mnli': 0.12626031041145325, 'mrpc': 0.11155158281326294, 'qnli': 0.08558673411607742, 'qqp': 0.18382005393505096, 'rte': 0.08866777271032333, 'sst2': 0.3107708692550659, 'stsb': 0.12291017919778824, 'wnli': 0.08407658338546753}}
03/26/2024 21:10:16 - INFO - __main__ - Lowest losses:
03/26/2024 21:10:16 - INFO - __main__ - ID: mnli_1535, Loss: 0.004651240073144436
03/26/2024 21:10:16 - INFO - __main__ - ID: wnli_136, Loss: 0.0052270726300776005
03/26/2024 21:10:16 - INFO - __main__ - ID: mnli_488, Loss: 0.006280155386775732
03/26/2024 21:10:16 - INFO - __main__ - ID: wnli_18, Loss: 0.007491942495107651
03/26/2024 21:10:16 - INFO - __main__ - ID: english--506693546683012611-2, Loss: 0.009447488933801651
03/26/2024 21:10:16 - INFO - __main__ - Highest losses:
03/26/2024 21:10:16 - INFO - __main__ - ID: korean--2869472392602314906-0, Loss: 0.8884955048561096
03/26/2024 21:10:16 - INFO - __main__ - ID: korean-2807245034690443837-5, Loss: 0.8895231485366821
03/26/2024 21:10:16 - INFO - __main__ - ID: korean--1743220297777040002-22, Loss: 0.8948459625244141
03/26/2024 21:10:16 - INFO - __main__ - ID: zh_4, Loss: 0.9172356128692627
03/26/2024 21:10:16 - INFO - __main__ - ID: conll_2003_en_6, Loss: 0.9290702939033508
03/26/2024 21:10:16 - INFO - __main__ - Monte Carlo samples: 100
03/26/2024 21:10:16 - INFO - __main__ - Training mode: True
03/26/2024 21:10:16 - INFO - __main__ - 
######## Computing SDs for task: ner ########

03/26/2024 21:10:16 - INFO - __main__ - 
######## Language: amh ######## 

03/26/2024 21:10:16 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:10:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:10:16 - INFO - __main__ - ID text: amh_0
03/26/2024 21:11:35 - INFO - __main__ - Mean variance for amh_0: 0.153245210647583
03/26/2024 21:11:35 - INFO - __main__ - Mean std for for amh_0: 0.3386552035808563
03/26/2024 21:11:35 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:11:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:11:35 - INFO - __main__ - ID text: amh_1
03/26/2024 21:12:51 - INFO - __main__ - Mean variance for amh_1: 0.15268857777118683
03/26/2024 21:12:51 - INFO - __main__ - Mean std for for amh_1: 0.33942174911499023
03/26/2024 21:12:51 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:12:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:12:51 - INFO - __main__ - ID text: amh_2
03/26/2024 21:14:08 - INFO - __main__ - Mean variance for amh_2: 0.16030068695545197
03/26/2024 21:14:08 - INFO - __main__ - Mean std for for amh_2: 0.34570395946502686
03/26/2024 21:14:08 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:14:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:14:08 - INFO - __main__ - ID text: amh_3
03/26/2024 21:15:25 - INFO - __main__ - Mean variance for amh_3: 0.15948933362960815
03/26/2024 21:15:25 - INFO - __main__ - Mean std for for amh_3: 0.34521540999412537
03/26/2024 21:15:25 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:15:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:15:25 - INFO - __main__ - ID text: amh_4
03/26/2024 21:16:41 - INFO - __main__ - Mean variance for amh_4: 0.14202497899532318
03/26/2024 21:16:41 - INFO - __main__ - Mean std for for amh_4: 0.3278351128101349
03/26/2024 21:16:41 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:16:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:16:41 - INFO - __main__ - ID text: amh_5
03/26/2024 21:17:57 - INFO - __main__ - Mean variance for amh_5: 0.16561730206012726
03/26/2024 21:17:57 - INFO - __main__ - Mean std for for amh_5: 0.3578375279903412
03/26/2024 21:17:57 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:17:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:17:57 - INFO - __main__ - ID text: amh_6
03/26/2024 21:19:13 - INFO - __main__ - Mean variance for amh_6: 0.1600065529346466
03/26/2024 21:19:13 - INFO - __main__ - Mean std for for amh_6: 0.34605419635772705
03/26/2024 21:19:13 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:19:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:19:13 - INFO - __main__ - ID text: amh_7
03/26/2024 21:20:29 - INFO - __main__ - Mean variance for amh_7: 0.14426621794700623
03/26/2024 21:20:29 - INFO - __main__ - Mean std for for amh_7: 0.3302345275878906
03/26/2024 21:20:29 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:20:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:20:29 - INFO - __main__ - ID text: amh_8
03/26/2024 21:21:45 - INFO - __main__ - Mean variance for amh_8: 0.14621444046497345
03/26/2024 21:21:45 - INFO - __main__ - Mean std for for amh_8: 0.3331959545612335
03/26/2024 21:21:45 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:21:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:21:45 - INFO - __main__ - ID text: amh_9
03/26/2024 21:23:01 - INFO - __main__ - Mean variance for amh_9: 0.13985736668109894
03/26/2024 21:23:01 - INFO - __main__ - Mean std for for amh_9: 0.32289451360702515
03/26/2024 21:23:01 - INFO - __main__ - 
######## Language: conll_2003_en ######## 

03/26/2024 21:23:01 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:23:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:23:01 - INFO - __main__ - ID text: conll_2003_en_0
03/26/2024 21:24:17 - INFO - __main__ - Mean variance for conll_2003_en_0: 0.16305994987487793
03/26/2024 21:24:17 - INFO - __main__ - Mean std for for conll_2003_en_0: 0.3566087782382965
03/26/2024 21:24:17 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:24:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:24:17 - INFO - __main__ - ID text: conll_2003_en_1
03/26/2024 21:25:33 - INFO - __main__ - Mean variance for conll_2003_en_1: 0.051069509238004684
03/26/2024 21:25:33 - INFO - __main__ - Mean std for for conll_2003_en_1: 0.1999906450510025
03/26/2024 21:25:33 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:25:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:25:33 - INFO - __main__ - ID text: conll_2003_en_2
03/26/2024 21:26:50 - INFO - __main__ - Mean variance for conll_2003_en_2: 0.04298023879528046
03/26/2024 21:26:50 - INFO - __main__ - Mean std for for conll_2003_en_2: 0.15917032957077026
03/26/2024 21:26:50 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:26:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:26:50 - INFO - __main__ - ID text: conll_2003_en_3
03/26/2024 21:28:06 - INFO - __main__ - Mean variance for conll_2003_en_3: 0.044191692024469376
03/26/2024 21:28:06 - INFO - __main__ - Mean std for for conll_2003_en_3: 0.17590488493442535
03/26/2024 21:28:06 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:28:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:28:06 - INFO - __main__ - ID text: conll_2003_en_4
03/26/2024 21:29:22 - INFO - __main__ - Mean variance for conll_2003_en_4: 0.04894169047474861
03/26/2024 21:29:22 - INFO - __main__ - Mean std for for conll_2003_en_4: 0.1944129467010498
03/26/2024 21:29:22 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:29:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:29:22 - INFO - __main__ - ID text: conll_2003_en_5
03/26/2024 21:30:38 - INFO - __main__ - Mean variance for conll_2003_en_5: 0.15207937359809875
03/26/2024 21:30:38 - INFO - __main__ - Mean std for for conll_2003_en_5: 0.3480645418167114
03/26/2024 21:30:38 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:30:38 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:30:38 - INFO - __main__ - ID text: conll_2003_en_6
03/26/2024 21:31:55 - INFO - __main__ - Mean variance for conll_2003_en_6: 0.17079269886016846
03/26/2024 21:31:55 - INFO - __main__ - Mean std for for conll_2003_en_6: 0.37311336398124695
03/26/2024 21:31:56 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:31:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:31:56 - INFO - __main__ - ID text: conll_2003_en_7
03/26/2024 21:33:12 - INFO - __main__ - Mean variance for conll_2003_en_7: 0.16464965045452118
03/26/2024 21:33:12 - INFO - __main__ - Mean std for for conll_2003_en_7: 0.36552873253822327
03/26/2024 21:33:12 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:33:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:33:12 - INFO - __main__ - ID text: conll_2003_en_8
03/26/2024 21:34:28 - INFO - __main__ - Mean variance for conll_2003_en_8: 0.1630653291940689
03/26/2024 21:34:28 - INFO - __main__ - Mean std for for conll_2003_en_8: 0.3628990948200226
03/26/2024 21:34:28 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:34:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:34:28 - INFO - __main__ - ID text: conll_2003_en_9
03/26/2024 21:35:44 - INFO - __main__ - Mean variance for conll_2003_en_9: 0.04189387336373329
03/26/2024 21:35:44 - INFO - __main__ - Mean std for for conll_2003_en_9: 0.16956865787506104
03/26/2024 21:35:44 - INFO - __main__ - 
######## Language: hau ######## 

03/26/2024 21:35:44 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:35:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:35:44 - INFO - __main__ - ID text: hau_0
03/26/2024 21:37:00 - INFO - __main__ - Mean variance for hau_0: 0.028044188395142555
03/26/2024 21:37:00 - INFO - __main__ - Mean std for for hau_0: 0.13064537942409515
03/26/2024 21:37:00 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:37:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:37:00 - INFO - __main__ - ID text: hau_1
03/26/2024 21:38:16 - INFO - __main__ - Mean variance for hau_1: 0.03541465103626251
03/26/2024 21:38:16 - INFO - __main__ - Mean std for for hau_1: 0.16195452213287354
03/26/2024 21:38:16 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:38:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:38:16 - INFO - __main__ - ID text: hau_2
03/26/2024 21:39:32 - INFO - __main__ - Mean variance for hau_2: 0.15856456756591797
03/26/2024 21:39:32 - INFO - __main__ - Mean std for for hau_2: 0.3562072813510895
03/26/2024 21:39:32 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:39:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:39:32 - INFO - __main__ - ID text: hau_3
03/26/2024 21:40:48 - INFO - __main__ - Mean variance for hau_3: 0.01714688166975975
03/26/2024 21:40:48 - INFO - __main__ - Mean std for for hau_3: 0.10429820418357849
03/26/2024 21:40:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:40:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:40:48 - INFO - __main__ - ID text: hau_4
03/26/2024 21:42:04 - INFO - __main__ - Mean variance for hau_4: 0.03273424133658409
03/26/2024 21:42:04 - INFO - __main__ - Mean std for for hau_4: 0.14126713573932648
03/26/2024 21:42:04 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:42:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:42:04 - INFO - __main__ - ID text: hau_5
03/26/2024 21:43:20 - INFO - __main__ - Mean variance for hau_5: 0.025886088609695435
03/26/2024 21:43:20 - INFO - __main__ - Mean std for for hau_5: 0.12354829162359238
03/26/2024 21:43:20 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:43:20 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:43:20 - INFO - __main__ - ID text: hau_6
03/26/2024 21:44:36 - INFO - __main__ - Mean variance for hau_6: 0.04080415889620781
03/26/2024 21:44:36 - INFO - __main__ - Mean std for for hau_6: 0.15447504818439484
03/26/2024 21:44:36 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:44:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:44:36 - INFO - __main__ - ID text: hau_7
03/26/2024 21:45:53 - INFO - __main__ - Mean variance for hau_7: 0.042034294456243515
03/26/2024 21:45:53 - INFO - __main__ - Mean std for for hau_7: 0.1548219621181488
03/26/2024 21:45:53 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:45:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:45:53 - INFO - __main__ - ID text: hau_8
03/26/2024 21:47:09 - INFO - __main__ - Mean variance for hau_8: 0.027557557448744774
03/26/2024 21:47:09 - INFO - __main__ - Mean std for for hau_8: 0.12800170481204987
03/26/2024 21:47:09 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:47:09 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:47:09 - INFO - __main__ - ID text: hau_9
03/26/2024 21:48:25 - INFO - __main__ - Mean variance for hau_9: 0.04359954595565796
03/26/2024 21:48:25 - INFO - __main__ - Mean std for for hau_9: 0.16541829705238342
03/26/2024 21:48:25 - INFO - __main__ - 
######## Language: ibo ######## 

03/26/2024 21:48:25 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:48:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:48:25 - INFO - __main__ - ID text: ibo_0
03/26/2024 21:49:41 - INFO - __main__ - Mean variance for ibo_0: 0.03765584155917168
03/26/2024 21:49:41 - INFO - __main__ - Mean std for for ibo_0: 0.1565777212381363
03/26/2024 21:49:41 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:49:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:49:41 - INFO - __main__ - ID text: ibo_1
03/26/2024 21:50:57 - INFO - __main__ - Mean variance for ibo_1: 0.038825228810310364
03/26/2024 21:50:57 - INFO - __main__ - Mean std for for ibo_1: 0.15725819766521454
03/26/2024 21:50:57 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:50:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:50:57 - INFO - __main__ - ID text: ibo_2
03/26/2024 21:52:14 - INFO - __main__ - Mean variance for ibo_2: 0.036299027502536774
03/26/2024 21:52:14 - INFO - __main__ - Mean std for for ibo_2: 0.15174849331378937
03/26/2024 21:52:14 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:52:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:52:14 - INFO - __main__ - ID text: ibo_3
03/26/2024 21:53:30 - INFO - __main__ - Mean variance for ibo_3: 0.040287669748067856
03/26/2024 21:53:30 - INFO - __main__ - Mean std for for ibo_3: 0.17691010236740112
03/26/2024 21:53:30 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:53:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:53:30 - INFO - __main__ - ID text: ibo_4
03/26/2024 21:54:46 - INFO - __main__ - Mean variance for ibo_4: 0.04147994518280029
03/26/2024 21:54:46 - INFO - __main__ - Mean std for for ibo_4: 0.1655280441045761
03/26/2024 21:54:46 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:54:46 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:54:46 - INFO - __main__ - ID text: ibo_5
03/26/2024 21:56:02 - INFO - __main__ - Mean variance for ibo_5: 0.04397815093398094
03/26/2024 21:56:02 - INFO - __main__ - Mean std for for ibo_5: 0.18012243509292603
03/26/2024 21:56:02 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:56:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:56:02 - INFO - __main__ - ID text: ibo_6
03/26/2024 21:57:18 - INFO - __main__ - Mean variance for ibo_6: 0.0430179201066494
03/26/2024 21:57:18 - INFO - __main__ - Mean std for for ibo_6: 0.16468225419521332
03/26/2024 21:57:18 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:57:18 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:57:18 - INFO - __main__ - ID text: ibo_7
03/26/2024 21:58:34 - INFO - __main__ - Mean variance for ibo_7: 0.03445814922451973
03/26/2024 21:58:34 - INFO - __main__ - Mean std for for ibo_7: 0.14314959943294525
03/26/2024 21:58:34 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:58:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:58:34 - INFO - __main__ - ID text: ibo_8
03/26/2024 21:59:50 - INFO - __main__ - Mean variance for ibo_8: 0.039711419492959976
03/26/2024 21:59:50 - INFO - __main__ - Mean std for for ibo_8: 0.1719561070203781
03/26/2024 21:59:50 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 21:59:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 21:59:50 - INFO - __main__ - ID text: ibo_9
03/26/2024 22:01:07 - INFO - __main__ - Mean variance for ibo_9: 0.03413218632340431
03/26/2024 22:01:07 - INFO - __main__ - Mean std for for ibo_9: 0.15056557953357697
03/26/2024 22:01:07 - INFO - __main__ - 
######## Language: kin ######## 

03/26/2024 22:01:07 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:01:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:01:07 - INFO - __main__ - ID text: kin_0
03/26/2024 22:02:23 - INFO - __main__ - Mean variance for kin_0: 0.043859828263521194
03/26/2024 22:02:23 - INFO - __main__ - Mean std for for kin_0: 0.1624852567911148
03/26/2024 22:02:23 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:02:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:02:23 - INFO - __main__ - ID text: kin_1
03/26/2024 22:03:40 - INFO - __main__ - Mean variance for kin_1: 0.04426759481430054
03/26/2024 22:03:40 - INFO - __main__ - Mean std for for kin_1: 0.16887058317661285
03/26/2024 22:03:40 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:03:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:03:40 - INFO - __main__ - ID text: kin_2
03/26/2024 22:04:55 - INFO - __main__ - Mean variance for kin_2: 0.04666214808821678
03/26/2024 22:04:55 - INFO - __main__ - Mean std for for kin_2: 0.19381900131702423
03/26/2024 22:04:55 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:04:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:04:55 - INFO - __main__ - ID text: kin_3
03/26/2024 22:06:11 - INFO - __main__ - Mean variance for kin_3: 0.03855143114924431
03/26/2024 22:06:11 - INFO - __main__ - Mean std for for kin_3: 0.15105898678302765
03/26/2024 22:06:11 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:06:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:06:11 - INFO - __main__ - ID text: kin_4
03/26/2024 22:07:27 - INFO - __main__ - Mean variance for kin_4: 0.032646793872117996
03/26/2024 22:07:27 - INFO - __main__ - Mean std for for kin_4: 0.13863836228847504
03/26/2024 22:07:27 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:07:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:07:27 - INFO - __main__ - ID text: kin_5
03/26/2024 22:08:43 - INFO - __main__ - Mean variance for kin_5: 0.04333746060729027
03/26/2024 22:08:43 - INFO - __main__ - Mean std for for kin_5: 0.1781856268644333
03/26/2024 22:08:43 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:08:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:08:43 - INFO - __main__ - ID text: kin_6
03/26/2024 22:09:59 - INFO - __main__ - Mean variance for kin_6: 0.023181146010756493
03/26/2024 22:09:59 - INFO - __main__ - Mean std for for kin_6: 0.11753899604082108
03/26/2024 22:09:59 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:09:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:09:59 - INFO - __main__ - ID text: kin_7
03/26/2024 22:11:15 - INFO - __main__ - Mean variance for kin_7: 0.038986075669527054
03/26/2024 22:11:15 - INFO - __main__ - Mean std for for kin_7: 0.15566793084144592
03/26/2024 22:11:15 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:11:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:11:15 - INFO - __main__ - ID text: kin_8
03/26/2024 22:12:31 - INFO - __main__ - Mean variance for kin_8: 0.03470035269856453
03/26/2024 22:12:31 - INFO - __main__ - Mean std for for kin_8: 0.1555425226688385
03/26/2024 22:12:31 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:12:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:12:31 - INFO - __main__ - ID text: kin_9
03/26/2024 22:13:47 - INFO - __main__ - Mean variance for kin_9: 0.038781460374593735
03/26/2024 22:13:47 - INFO - __main__ - Mean std for for kin_9: 0.16508416831493378
03/26/2024 22:13:47 - INFO - __main__ - 
######## Language: lug ######## 

03/26/2024 22:13:47 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:13:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:13:47 - INFO - __main__ - ID text: lug_0
03/26/2024 22:15:03 - INFO - __main__ - Mean variance for lug_0: 0.03296219930052757
03/26/2024 22:15:03 - INFO - __main__ - Mean std for for lug_0: 0.13958801329135895
03/26/2024 22:15:03 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:15:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:15:03 - INFO - __main__ - ID text: lug_1
03/26/2024 22:16:19 - INFO - __main__ - Mean variance for lug_1: 0.038257453590631485
03/26/2024 22:16:19 - INFO - __main__ - Mean std for for lug_1: 0.15366671979427338
03/26/2024 22:16:19 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:16:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:16:19 - INFO - __main__ - ID text: lug_2
03/26/2024 22:17:37 - INFO - __main__ - Mean variance for lug_2: 0.015304711647331715
03/26/2024 22:17:37 - INFO - __main__ - Mean std for for lug_2: 0.09954284876585007
03/26/2024 22:17:37 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:17:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:17:37 - INFO - __main__ - ID text: lug_3
03/26/2024 22:18:53 - INFO - __main__ - Mean variance for lug_3: 0.024320827797055244
03/26/2024 22:18:53 - INFO - __main__ - Mean std for for lug_3: 0.12267335504293442
03/26/2024 22:18:53 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:18:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:18:53 - INFO - __main__ - ID text: lug_4
03/26/2024 22:20:10 - INFO - __main__ - Mean variance for lug_4: 0.03923863545060158
03/26/2024 22:20:10 - INFO - __main__ - Mean std for for lug_4: 0.16093751788139343
03/26/2024 22:20:10 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:20:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:20:10 - INFO - __main__ - ID text: lug_5
03/26/2024 22:21:27 - INFO - __main__ - Mean variance for lug_5: 0.038622498512268066
03/26/2024 22:21:27 - INFO - __main__ - Mean std for for lug_5: 0.1504845917224884
03/26/2024 22:21:27 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:21:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:21:27 - INFO - __main__ - ID text: lug_6
03/26/2024 22:22:43 - INFO - __main__ - Mean variance for lug_6: 0.03677703067660332
03/26/2024 22:22:43 - INFO - __main__ - Mean std for for lug_6: 0.14760065078735352
03/26/2024 22:22:43 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:22:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:22:43 - INFO - __main__ - ID text: lug_7
03/26/2024 22:24:00 - INFO - __main__ - Mean variance for lug_7: 0.03714032098650932
03/26/2024 22:24:00 - INFO - __main__ - Mean std for for lug_7: 0.15624265372753143
03/26/2024 22:24:00 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:24:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:24:00 - INFO - __main__ - ID text: lug_8
03/26/2024 22:25:16 - INFO - __main__ - Mean variance for lug_8: 0.03805014491081238
03/26/2024 22:25:16 - INFO - __main__ - Mean std for for lug_8: 0.1556612104177475
03/26/2024 22:25:16 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:25:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:25:16 - INFO - __main__ - ID text: lug_9
03/26/2024 22:26:33 - INFO - __main__ - Mean variance for lug_9: 0.03596174344420433
03/26/2024 22:26:33 - INFO - __main__ - Mean std for for lug_9: 0.14938075840473175
03/26/2024 22:26:33 - INFO - __main__ - 
######## Language: luo ######## 

03/26/2024 22:26:33 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:26:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:26:33 - INFO - __main__ - ID text: luo_0
03/26/2024 22:27:49 - INFO - __main__ - Mean variance for luo_0: 0.02819613181054592
03/26/2024 22:27:49 - INFO - __main__ - Mean std for for luo_0: 0.12834234535694122
03/26/2024 22:27:49 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:27:49 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:27:49 - INFO - __main__ - ID text: luo_1
03/26/2024 22:29:06 - INFO - __main__ - Mean variance for luo_1: 0.03935198858380318
03/26/2024 22:29:06 - INFO - __main__ - Mean std for for luo_1: 0.16689521074295044
03/26/2024 22:29:06 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:29:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:29:06 - INFO - __main__ - ID text: luo_2
03/26/2024 22:30:23 - INFO - __main__ - Mean variance for luo_2: 0.039513107389211655
03/26/2024 22:30:23 - INFO - __main__ - Mean std for for luo_2: 0.15505288541316986
03/26/2024 22:30:23 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:30:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:30:23 - INFO - __main__ - ID text: luo_3
03/26/2024 22:31:39 - INFO - __main__ - Mean variance for luo_3: 0.025366714224219322
03/26/2024 22:31:39 - INFO - __main__ - Mean std for for luo_3: 0.12290304154157639
03/26/2024 22:31:39 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:31:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:31:39 - INFO - __main__ - ID text: luo_4
03/26/2024 22:32:56 - INFO - __main__ - Mean variance for luo_4: 0.03079979680478573
03/26/2024 22:32:56 - INFO - __main__ - Mean std for for luo_4: 0.1451387256383896
03/26/2024 22:32:56 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:32:56 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:32:56 - INFO - __main__ - ID text: luo_5
03/26/2024 22:34:13 - INFO - __main__ - Mean variance for luo_5: 0.03859720751643181
03/26/2024 22:34:13 - INFO - __main__ - Mean std for for luo_5: 0.16082340478897095
03/26/2024 22:34:13 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:34:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:34:13 - INFO - __main__ - ID text: luo_6
03/26/2024 22:35:30 - INFO - __main__ - Mean variance for luo_6: 0.03361908718943596
03/26/2024 22:35:30 - INFO - __main__ - Mean std for for luo_6: 0.14170579612255096
03/26/2024 22:35:30 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:35:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:35:30 - INFO - __main__ - ID text: luo_7
03/26/2024 22:36:46 - INFO - __main__ - Mean variance for luo_7: 0.04508191719651222
03/26/2024 22:36:46 - INFO - __main__ - Mean std for for luo_7: 0.1840418428182602
03/26/2024 22:36:46 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:36:46 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:36:46 - INFO - __main__ - ID text: luo_8
03/26/2024 22:38:03 - INFO - __main__ - Mean variance for luo_8: 0.03730607032775879
03/26/2024 22:38:03 - INFO - __main__ - Mean std for for luo_8: 0.15290512144565582
03/26/2024 22:38:03 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:38:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:38:03 - INFO - __main__ - ID text: luo_9
03/26/2024 22:39:19 - INFO - __main__ - Mean variance for luo_9: 0.052056413143873215
03/26/2024 22:39:19 - INFO - __main__ - Mean std for for luo_9: 0.20255239307880402
03/26/2024 22:39:19 - INFO - __main__ - 
######## Language: pcm ######## 

03/26/2024 22:39:19 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:39:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:39:19 - INFO - __main__ - ID text: pcm_0
03/26/2024 22:40:36 - INFO - __main__ - Mean variance for pcm_0: 0.03723158314824104
03/26/2024 22:40:36 - INFO - __main__ - Mean std for for pcm_0: 0.1568407267332077
03/26/2024 22:40:36 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:40:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:40:36 - INFO - __main__ - ID text: pcm_1
03/26/2024 22:41:52 - INFO - __main__ - Mean variance for pcm_1: 0.04825134947896004
03/26/2024 22:41:52 - INFO - __main__ - Mean std for for pcm_1: 0.1884710043668747
03/26/2024 22:41:52 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:41:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:41:52 - INFO - __main__ - ID text: pcm_2
03/26/2024 22:43:08 - INFO - __main__ - Mean variance for pcm_2: 0.03893883153796196
03/26/2024 22:43:08 - INFO - __main__ - Mean std for for pcm_2: 0.16428084671497345
03/26/2024 22:43:08 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:43:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:43:08 - INFO - __main__ - ID text: pcm_3
03/26/2024 22:44:25 - INFO - __main__ - Mean variance for pcm_3: 0.040904123336076736
03/26/2024 22:44:25 - INFO - __main__ - Mean std for for pcm_3: 0.16129793226718903
03/26/2024 22:44:25 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:44:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:44:25 - INFO - __main__ - ID text: pcm_4
03/26/2024 22:45:41 - INFO - __main__ - Mean variance for pcm_4: 0.04360339418053627
03/26/2024 22:45:41 - INFO - __main__ - Mean std for for pcm_4: 0.16191315650939941
03/26/2024 22:45:41 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:45:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:45:41 - INFO - __main__ - ID text: pcm_5
03/26/2024 22:46:58 - INFO - __main__ - Mean variance for pcm_5: 0.03941173478960991
03/26/2024 22:46:58 - INFO - __main__ - Mean std for for pcm_5: 0.1744903177022934
03/26/2024 22:46:58 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:46:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:46:58 - INFO - __main__ - ID text: pcm_6
03/26/2024 22:48:14 - INFO - __main__ - Mean variance for pcm_6: 0.03840840607881546
03/26/2024 22:48:14 - INFO - __main__ - Mean std for for pcm_6: 0.15391920506954193
03/26/2024 22:48:14 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:48:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:48:14 - INFO - __main__ - ID text: pcm_7
03/26/2024 22:49:30 - INFO - __main__ - Mean variance for pcm_7: 0.041782259941101074
03/26/2024 22:49:30 - INFO - __main__ - Mean std for for pcm_7: 0.1622699648141861
03/26/2024 22:49:31 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:49:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:49:31 - INFO - __main__ - ID text: pcm_8
03/26/2024 22:50:47 - INFO - __main__ - Mean variance for pcm_8: 0.03551599010825157
03/26/2024 22:50:47 - INFO - __main__ - Mean std for for pcm_8: 0.14465725421905518
03/26/2024 22:50:47 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:50:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:50:47 - INFO - __main__ - ID text: pcm_9
03/26/2024 22:52:04 - INFO - __main__ - Mean variance for pcm_9: 0.03282368183135986
03/26/2024 22:52:04 - INFO - __main__ - Mean std for for pcm_9: 0.15173408389091492
03/26/2024 22:52:04 - INFO - __main__ - 
######## Language: swa ######## 

03/26/2024 22:52:04 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:52:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:52:04 - INFO - __main__ - ID text: swa_0
03/26/2024 22:53:20 - INFO - __main__ - Mean variance for swa_0: 0.036901190876960754
03/26/2024 22:53:20 - INFO - __main__ - Mean std for for swa_0: 0.1460770219564438
03/26/2024 22:53:20 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:53:20 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:53:20 - INFO - __main__ - ID text: swa_1
03/26/2024 22:54:36 - INFO - __main__ - Mean variance for swa_1: 0.038856141269207
03/26/2024 22:54:36 - INFO - __main__ - Mean std for for swa_1: 0.15840785205364227
03/26/2024 22:54:36 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:54:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:54:36 - INFO - __main__ - ID text: swa_2
03/26/2024 22:55:53 - INFO - __main__ - Mean variance for swa_2: 0.03768381103873253
03/26/2024 22:55:53 - INFO - __main__ - Mean std for for swa_2: 0.15023671090602875
03/26/2024 22:55:53 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:55:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:55:53 - INFO - __main__ - ID text: swa_3
03/26/2024 22:57:09 - INFO - __main__ - Mean variance for swa_3: 0.036701302975416183
03/26/2024 22:57:09 - INFO - __main__ - Mean std for for swa_3: 0.16011683642864227
03/26/2024 22:57:09 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:57:09 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:57:09 - INFO - __main__ - ID text: swa_4
03/26/2024 22:58:25 - INFO - __main__ - Mean variance for swa_4: 0.02912866324186325
03/26/2024 22:58:25 - INFO - __main__ - Mean std for for swa_4: 0.12852871417999268
03/26/2024 22:58:25 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:58:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:58:25 - INFO - __main__ - ID text: swa_5
03/26/2024 22:59:42 - INFO - __main__ - Mean variance for swa_5: 0.026462173089385033
03/26/2024 22:59:42 - INFO - __main__ - Mean std for for swa_5: 0.12422541528940201
03/26/2024 22:59:42 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 22:59:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 22:59:42 - INFO - __main__ - ID text: swa_6
03/26/2024 23:00:58 - INFO - __main__ - Mean variance for swa_6: 0.03163453936576843
03/26/2024 23:00:58 - INFO - __main__ - Mean std for for swa_6: 0.1363787055015564
03/26/2024 23:00:58 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:00:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:00:58 - INFO - __main__ - ID text: swa_7
03/26/2024 23:02:15 - INFO - __main__ - Mean variance for swa_7: 0.05176084116101265
03/26/2024 23:02:15 - INFO - __main__ - Mean std for for swa_7: 0.20529913902282715
03/26/2024 23:02:15 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:02:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:02:15 - INFO - __main__ - ID text: swa_8
03/26/2024 23:03:31 - INFO - __main__ - Mean variance for swa_8: 0.03302927315235138
03/26/2024 23:03:31 - INFO - __main__ - Mean std for for swa_8: 0.14959265291690826
03/26/2024 23:03:31 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:03:31 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:03:31 - INFO - __main__ - ID text: swa_9
03/26/2024 23:04:48 - INFO - __main__ - Mean variance for swa_9: 0.03890964761376381
03/26/2024 23:04:48 - INFO - __main__ - Mean std for for swa_9: 0.16054822504520416
03/26/2024 23:04:48 - INFO - __main__ - 
######## Language: wol ######## 

03/26/2024 23:04:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:04:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:04:48 - INFO - __main__ - ID text: wol_0
03/26/2024 23:06:04 - INFO - __main__ - Mean variance for wol_0: 0.03442000225186348
03/26/2024 23:06:04 - INFO - __main__ - Mean std for for wol_0: 0.1429038792848587
03/26/2024 23:06:04 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:06:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:06:04 - INFO - __main__ - ID text: wol_1
03/26/2024 23:07:21 - INFO - __main__ - Mean variance for wol_1: 0.04027282074093819
03/26/2024 23:07:21 - INFO - __main__ - Mean std for for wol_1: 0.16351363062858582
03/26/2024 23:07:21 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:07:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:07:21 - INFO - __main__ - ID text: wol_2
03/26/2024 23:08:37 - INFO - __main__ - Mean variance for wol_2: 0.03849313035607338
03/26/2024 23:08:37 - INFO - __main__ - Mean std for for wol_2: 0.1592828780412674
03/26/2024 23:08:37 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:08:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:08:37 - INFO - __main__ - ID text: wol_3
03/26/2024 23:09:54 - INFO - __main__ - Mean variance for wol_3: 0.05826316401362419
03/26/2024 23:09:54 - INFO - __main__ - Mean std for for wol_3: 0.2167198807001114
03/26/2024 23:09:54 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:09:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:09:54 - INFO - __main__ - ID text: wol_4
03/26/2024 23:11:10 - INFO - __main__ - Mean variance for wol_4: 0.04286177456378937
03/26/2024 23:11:10 - INFO - __main__ - Mean std for for wol_4: 0.18137739598751068
03/26/2024 23:11:10 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:11:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:11:10 - INFO - __main__ - ID text: wol_5
03/26/2024 23:12:26 - INFO - __main__ - Mean variance for wol_5: 0.04021383821964264
03/26/2024 23:12:26 - INFO - __main__ - Mean std for for wol_5: 0.16032738983631134
03/26/2024 23:12:26 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:12:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:12:26 - INFO - __main__ - ID text: wol_6
03/26/2024 23:13:42 - INFO - __main__ - Mean variance for wol_6: 0.1501391977071762
03/26/2024 23:13:42 - INFO - __main__ - Mean std for for wol_6: 0.3419189453125
03/26/2024 23:13:42 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:13:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:13:42 - INFO - __main__ - ID text: wol_7
03/26/2024 23:14:58 - INFO - __main__ - Mean variance for wol_7: 0.03959367796778679
03/26/2024 23:14:58 - INFO - __main__ - Mean std for for wol_7: 0.16475269198417664
03/26/2024 23:14:58 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:14:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:14:58 - INFO - __main__ - ID text: wol_8
03/26/2024 23:16:14 - INFO - __main__ - Mean variance for wol_8: 0.04310224577784538
03/26/2024 23:16:14 - INFO - __main__ - Mean std for for wol_8: 0.1810464859008789
03/26/2024 23:16:14 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:16:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:16:14 - INFO - __main__ - ID text: wol_9
03/26/2024 23:17:29 - INFO - __main__ - Mean variance for wol_9: 0.03726816922426224
03/26/2024 23:17:29 - INFO - __main__ - Mean std for for wol_9: 0.16543537378311157
03/26/2024 23:17:29 - INFO - __main__ - 
######## Language: yor ######## 

03/26/2024 23:17:29 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:17:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:17:29 - INFO - __main__ - ID text: yor_0
03/26/2024 23:18:45 - INFO - __main__ - Mean variance for yor_0: 0.13643662631511688
03/26/2024 23:18:45 - INFO - __main__ - Mean std for for yor_0: 0.32065537571907043
03/26/2024 23:18:45 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:18:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:18:45 - INFO - __main__ - ID text: yor_1
03/26/2024 23:20:01 - INFO - __main__ - Mean variance for yor_1: 0.12964500486850739
03/26/2024 23:20:01 - INFO - __main__ - Mean std for for yor_1: 0.30502793192863464
03/26/2024 23:20:01 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:20:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:20:01 - INFO - __main__ - ID text: yor_2
03/26/2024 23:21:16 - INFO - __main__ - Mean variance for yor_2: 0.03766821697354317
03/26/2024 23:21:16 - INFO - __main__ - Mean std for for yor_2: 0.15670178830623627
03/26/2024 23:21:16 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:21:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:21:16 - INFO - __main__ - ID text: yor_3
03/26/2024 23:22:32 - INFO - __main__ - Mean variance for yor_3: 0.030220353975892067
03/26/2024 23:22:32 - INFO - __main__ - Mean std for for yor_3: 0.1330762654542923
03/26/2024 23:22:32 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:22:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:22:32 - INFO - __main__ - ID text: yor_4
03/26/2024 23:23:47 - INFO - __main__ - Mean variance for yor_4: 0.13705898821353912
03/26/2024 23:23:47 - INFO - __main__ - Mean std for for yor_4: 0.32024937868118286
03/26/2024 23:23:47 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:23:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:23:47 - INFO - __main__ - ID text: yor_5
03/26/2024 23:25:02 - INFO - __main__ - Mean variance for yor_5: 0.09558121114969254
03/26/2024 23:25:02 - INFO - __main__ - Mean std for for yor_5: 0.2526337802410126
03/26/2024 23:25:02 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:25:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:25:02 - INFO - __main__ - ID text: yor_6
03/26/2024 23:26:15 - INFO - __main__ - Mean variance for yor_6: 0.038243550807237625
03/26/2024 23:26:15 - INFO - __main__ - Mean std for for yor_6: 0.15795455873012543
03/26/2024 23:26:15 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:26:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:26:15 - INFO - __main__ - ID text: yor_7
03/26/2024 23:27:27 - INFO - __main__ - Mean variance for yor_7: 0.12775109708309174
03/26/2024 23:27:27 - INFO - __main__ - Mean std for for yor_7: 0.3039279580116272
03/26/2024 23:27:27 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:27:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:27:27 - INFO - __main__ - ID text: yor_8
03/26/2024 23:28:39 - INFO - __main__ - Mean variance for yor_8: 0.038708046078681946
03/26/2024 23:28:39 - INFO - __main__ - Mean std for for yor_8: 0.15147703886032104
03/26/2024 23:28:39 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:28:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:28:39 - INFO - __main__ - ID text: yor_9
03/26/2024 23:29:52 - INFO - __main__ - Mean variance for yor_9: 0.1315334588289261
03/26/2024 23:29:52 - INFO - __main__ - Mean std for for yor_9: 0.31129521131515503
03/26/2024 23:29:52 - INFO - __main__ - 
######## Language: zh ######## 

03/26/2024 23:29:52 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:29:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:29:52 - INFO - __main__ - ID text: zh_0
03/26/2024 23:31:04 - INFO - __main__ - Mean variance for zh_0: 0.09574533253908157
03/26/2024 23:31:04 - INFO - __main__ - Mean std for for zh_0: 0.27700620889663696
03/26/2024 23:31:04 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:31:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:31:04 - INFO - __main__ - ID text: zh_1
03/26/2024 23:32:16 - INFO - __main__ - Mean variance for zh_1: 0.11171559244394302
03/26/2024 23:32:16 - INFO - __main__ - Mean std for for zh_1: 0.27697575092315674
03/26/2024 23:32:16 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:32:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:32:16 - INFO - __main__ - ID text: zh_2
03/26/2024 23:33:29 - INFO - __main__ - Mean variance for zh_2: 0.13468284904956818
03/26/2024 23:33:29 - INFO - __main__ - Mean std for for zh_2: 0.312975138425827
03/26/2024 23:33:29 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:33:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:33:29 - INFO - __main__ - ID text: zh_3
03/26/2024 23:34:41 - INFO - __main__ - Mean variance for zh_3: 0.15428662300109863
03/26/2024 23:34:41 - INFO - __main__ - Mean std for for zh_3: 0.3471881151199341
03/26/2024 23:34:41 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:34:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:34:41 - INFO - __main__ - ID text: zh_4
03/26/2024 23:35:54 - INFO - __main__ - Mean variance for zh_4: 0.1736019104719162
03/26/2024 23:35:54 - INFO - __main__ - Mean std for for zh_4: 0.370257705450058
03/26/2024 23:35:54 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:35:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:35:54 - INFO - __main__ - ID text: zh_5
03/26/2024 23:37:07 - INFO - __main__ - Mean variance for zh_5: 0.1530752032995224
03/26/2024 23:37:07 - INFO - __main__ - Mean std for for zh_5: 0.35224759578704834
03/26/2024 23:37:07 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:37:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:37:07 - INFO - __main__ - ID text: zh_6
03/26/2024 23:38:19 - INFO - __main__ - Mean variance for zh_6: 0.12136872857809067
03/26/2024 23:38:19 - INFO - __main__ - Mean std for for zh_6: 0.29059699177742004
03/26/2024 23:38:19 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:38:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:38:19 - INFO - __main__ - ID text: zh_7
03/26/2024 23:39:32 - INFO - __main__ - Mean variance for zh_7: 0.13166530430316925
03/26/2024 23:39:32 - INFO - __main__ - Mean std for for zh_7: 0.31347623467445374
03/26/2024 23:39:32 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:39:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:39:32 - INFO - __main__ - ID text: zh_8
03/26/2024 23:40:45 - INFO - __main__ - Mean variance for zh_8: 0.1531369388103485
03/26/2024 23:40:45 - INFO - __main__ - Mean std for for zh_8: 0.3375256061553955
03/26/2024 23:40:45 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:40:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:40:45 - INFO - __main__ - ID text: zh_9
03/26/2024 23:41:57 - INFO - __main__ - Mean variance for zh_9: 0.14514566957950592
03/26/2024 23:41:57 - INFO - __main__ - Mean std for for zh_9: 0.3200405538082123
03/26/2024 23:41:57 - INFO - __main__ - 
######## Computing SDs for task: tydiqa ########

03/26/2024 23:41:57 - INFO - __main__ - 
######## Language: arabic ######## 

03/26/2024 23:41:57 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:41:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:41:57 - INFO - __main__ - ID text: arabic-4449832350126320768-0
03/26/2024 23:43:10 - INFO - __main__ - Mean variance for arabic-4449832350126320768-0: 0.08471032232046127
03/26/2024 23:43:10 - INFO - __main__ - Mean std for for arabic-4449832350126320768-0: 0.24374480545520782
03/26/2024 23:43:10 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:43:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:43:10 - INFO - __main__ - ID text: arabic--3340323169760881569-0
03/26/2024 23:44:23 - INFO - __main__ - Mean variance for arabic--3340323169760881569-0: 0.04502341151237488
03/26/2024 23:44:23 - INFO - __main__ - Mean std for for arabic--3340323169760881569-0: 0.1667230725288391
03/26/2024 23:44:23 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:44:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:44:23 - INFO - __main__ - ID text: arabic-4544770624843559444-1
03/26/2024 23:45:35 - INFO - __main__ - Mean variance for arabic-4544770624843559444-1: 0.04042183980345726
03/26/2024 23:45:35 - INFO - __main__ - Mean std for for arabic-4544770624843559444-1: 0.16287337243556976
03/26/2024 23:45:35 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:45:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:45:35 - INFO - __main__ - ID text: arabic-891952409566422966-0
03/26/2024 23:46:48 - INFO - __main__ - Mean variance for arabic-891952409566422966-0: 0.042519018054008484
03/26/2024 23:46:48 - INFO - __main__ - Mean std for for arabic-891952409566422966-0: 0.1675228625535965
03/26/2024 23:46:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:46:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:46:48 - INFO - __main__ - ID text: arabic-3659291834714572527-0
03/26/2024 23:48:01 - INFO - __main__ - Mean variance for arabic-3659291834714572527-0: 0.11492083221673965
03/26/2024 23:48:01 - INFO - __main__ - Mean std for for arabic-3659291834714572527-0: 0.2900102436542511
03/26/2024 23:48:01 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:48:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:48:01 - INFO - __main__ - ID text: arabic-9215226117011890166-0
03/26/2024 23:49:14 - INFO - __main__ - Mean variance for arabic-9215226117011890166-0: 0.03999593108892441
03/26/2024 23:49:14 - INFO - __main__ - Mean std for for arabic-9215226117011890166-0: 0.16038040816783905
03/26/2024 23:49:14 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:49:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:49:14 - INFO - __main__ - ID text: arabic-6300896128538259469-0
03/26/2024 23:50:26 - INFO - __main__ - Mean variance for arabic-6300896128538259469-0: 0.04755097255110741
03/26/2024 23:50:26 - INFO - __main__ - Mean std for for arabic-6300896128538259469-0: 0.17497754096984863
03/26/2024 23:50:26 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:50:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:50:26 - INFO - __main__ - ID text: arabic-2382507508588518905-0
03/26/2024 23:51:39 - INFO - __main__ - Mean variance for arabic-2382507508588518905-0: 0.04059410095214844
03/26/2024 23:51:39 - INFO - __main__ - Mean std for for arabic-2382507508588518905-0: 0.16331356763839722
03/26/2024 23:51:39 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:51:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:51:39 - INFO - __main__ - ID text: arabic-1871632801094859741-1
03/26/2024 23:52:51 - INFO - __main__ - Mean variance for arabic-1871632801094859741-1: 0.04051000997424126
03/26/2024 23:52:51 - INFO - __main__ - Mean std for for arabic-1871632801094859741-1: 0.16313059628009796
03/26/2024 23:52:51 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:52:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:52:51 - INFO - __main__ - ID text: arabic--7365809756232083807-0
03/26/2024 23:54:04 - INFO - __main__ - Mean variance for arabic--7365809756232083807-0: 0.03908305987715721
03/26/2024 23:54:04 - INFO - __main__ - Mean std for for arabic--7365809756232083807-0: 0.15924912691116333
03/26/2024 23:54:04 - INFO - __main__ - 
######## Language: russian ######## 

03/26/2024 23:54:04 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:54:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:54:04 - INFO - __main__ - ID text: russian-3457655197371763238-61
03/26/2024 23:55:17 - INFO - __main__ - Mean variance for russian-3457655197371763238-61: 0.024053452536463737
03/26/2024 23:55:17 - INFO - __main__ - Mean std for for russian-3457655197371763238-61: 0.12322342395782471
03/26/2024 23:55:17 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:55:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:55:17 - INFO - __main__ - ID text: russian--1914807805318993335-49
03/26/2024 23:56:30 - INFO - __main__ - Mean variance for russian--1914807805318993335-49: 0.046408891677856445
03/26/2024 23:56:30 - INFO - __main__ - Mean std for for russian--1914807805318993335-49: 0.16867606341838837
03/26/2024 23:56:30 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:56:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:56:30 - INFO - __main__ - ID text: russian--3307989180606173904-1
03/26/2024 23:57:42 - INFO - __main__ - Mean variance for russian--3307989180606173904-1: 0.02070566639304161
03/26/2024 23:57:42 - INFO - __main__ - Mean std for for russian--3307989180606173904-1: 0.11630602926015854
03/26/2024 23:57:42 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:57:42 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:57:42 - INFO - __main__ - ID text: russian--2219512001175315660-0
03/26/2024 23:58:55 - INFO - __main__ - Mean variance for russian--2219512001175315660-0: 0.02584035135805607
03/26/2024 23:58:55 - INFO - __main__ - Mean std for for russian--2219512001175315660-0: 0.1285576969385147
03/26/2024 23:58:55 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/26/2024 23:58:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/26/2024 23:58:55 - INFO - __main__ - ID text: russian--7076080992904718941-0
03/27/2024 00:00:07 - INFO - __main__ - Mean variance for russian--7076080992904718941-0: 0.022240489721298218
03/27/2024 00:00:07 - INFO - __main__ - Mean std for for russian--7076080992904718941-0: 0.11827119439840317
03/27/2024 00:00:08 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:00:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:00:08 - INFO - __main__ - ID text: russian--6565862953558739013-1
03/27/2024 00:01:20 - INFO - __main__ - Mean variance for russian--6565862953558739013-1: 0.022600218653678894
03/27/2024 00:01:20 - INFO - __main__ - Mean std for for russian--6565862953558739013-1: 0.12094101309776306
03/27/2024 00:01:20 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:01:20 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:01:20 - INFO - __main__ - ID text: russian--5098374684590548031-42
03/27/2024 00:02:33 - INFO - __main__ - Mean variance for russian--5098374684590548031-42: 0.03739750012755394
03/27/2024 00:02:33 - INFO - __main__ - Mean std for for russian--5098374684590548031-42: 0.16168968379497528
03/27/2024 00:02:33 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:02:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:02:33 - INFO - __main__ - ID text: russian-3573734219967447693-1
03/27/2024 00:03:45 - INFO - __main__ - Mean variance for russian-3573734219967447693-1: 0.024239325895905495
03/27/2024 00:03:45 - INFO - __main__ - Mean std for for russian-3573734219967447693-1: 0.12488856166601181
03/27/2024 00:03:45 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:03:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:03:45 - INFO - __main__ - ID text: russian--4521001374120505750-6
03/27/2024 00:04:58 - INFO - __main__ - Mean variance for russian--4521001374120505750-6: 0.04984176158905029
03/27/2024 00:04:58 - INFO - __main__ - Mean std for for russian--4521001374120505750-6: 0.17377156019210815
03/27/2024 00:04:58 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:04:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:04:58 - INFO - __main__ - ID text: russian--1308382244018658424-9
03/27/2024 00:06:10 - INFO - __main__ - Mean variance for russian--1308382244018658424-9: 0.022948013618588448
03/27/2024 00:06:10 - INFO - __main__ - Mean std for for russian--1308382244018658424-9: 0.12262364476919174
03/27/2024 00:06:10 - INFO - __main__ - 
######## Language: bengali ######## 

03/27/2024 00:06:10 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:06:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:06:10 - INFO - __main__ - ID text: bengali--1199493965132146131-3
03/27/2024 00:07:23 - INFO - __main__ - Mean variance for bengali--1199493965132146131-3: 0.09425410628318787
03/27/2024 00:07:23 - INFO - __main__ - Mean std for for bengali--1199493965132146131-3: 0.2549611032009125
03/27/2024 00:07:23 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:07:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:07:23 - INFO - __main__ - ID text: bengali-1807801556888134437-2
03/27/2024 00:08:36 - INFO - __main__ - Mean variance for bengali-1807801556888134437-2: 0.08954343944787979
03/27/2024 00:08:36 - INFO - __main__ - Mean std for for bengali-1807801556888134437-2: 0.24852262437343597
03/27/2024 00:08:36 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:08:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:08:36 - INFO - __main__ - ID text: bengali-2113189855114052041-2
03/27/2024 00:09:48 - INFO - __main__ - Mean variance for bengali-2113189855114052041-2: 0.09307513386011124
03/27/2024 00:09:48 - INFO - __main__ - Mean std for for bengali-2113189855114052041-2: 0.2541530430316925
03/27/2024 00:09:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:09:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:09:48 - INFO - __main__ - ID text: bengali--2527914488250041207-0
03/27/2024 00:11:00 - INFO - __main__ - Mean variance for bengali--2527914488250041207-0: 0.09656479954719543
03/27/2024 00:11:00 - INFO - __main__ - Mean std for for bengali--2527914488250041207-0: 0.2581650912761688
03/27/2024 00:11:00 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:11:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:11:00 - INFO - __main__ - ID text: bengali--8260793280894408063-14
03/27/2024 00:12:11 - INFO - __main__ - Mean variance for bengali--8260793280894408063-14: 0.10055878013372421
03/27/2024 00:12:11 - INFO - __main__ - Mean std for for bengali--8260793280894408063-14: 0.2643078565597534
03/27/2024 00:12:12 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:12:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:12:12 - INFO - __main__ - ID text: bengali-8313009204852557186-4
03/27/2024 00:13:23 - INFO - __main__ - Mean variance for bengali-8313009204852557186-4: 0.09603527933359146
03/27/2024 00:13:23 - INFO - __main__ - Mean std for for bengali-8313009204852557186-4: 0.2575654089450836
03/27/2024 00:13:23 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:13:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:13:23 - INFO - __main__ - ID text: bengali--415964033364840061-0
03/27/2024 00:14:35 - INFO - __main__ - Mean variance for bengali--415964033364840061-0: 0.09256158024072647
03/27/2024 00:14:35 - INFO - __main__ - Mean std for for bengali--415964033364840061-0: 0.25320330262184143
03/27/2024 00:14:35 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:14:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:14:35 - INFO - __main__ - ID text: bengali--4696865548928858824-5
03/27/2024 00:15:46 - INFO - __main__ - Mean variance for bengali--4696865548928858824-5: 0.09253286570310593
03/27/2024 00:15:46 - INFO - __main__ - Mean std for for bengali--4696865548928858824-5: 0.2530675232410431
03/27/2024 00:15:46 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:15:46 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:15:46 - INFO - __main__ - ID text: bengali-6505224142472931712-1
03/27/2024 00:16:57 - INFO - __main__ - Mean variance for bengali-6505224142472931712-1: 0.08998777717351913
03/27/2024 00:16:57 - INFO - __main__ - Mean std for for bengali-6505224142472931712-1: 0.24887923896312714
03/27/2024 00:16:57 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:16:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:16:57 - INFO - __main__ - ID text: bengali-599666913917674019-13
03/27/2024 00:18:08 - INFO - __main__ - Mean variance for bengali-599666913917674019-13: 0.13207784295082092
03/27/2024 00:18:08 - INFO - __main__ - Mean std for for bengali-599666913917674019-13: 0.3093666434288025
03/27/2024 00:18:08 - INFO - __main__ - 
######## Language: telugu ######## 

03/27/2024 00:18:08 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:18:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:18:08 - INFO - __main__ - ID text: telugu--3977923017846260053-0
03/27/2024 00:19:18 - INFO - __main__ - Mean variance for telugu--3977923017846260053-0: 0.03626925125718117
03/27/2024 00:19:18 - INFO - __main__ - Mean std for for telugu--3977923017846260053-0: 0.1513201743364334
03/27/2024 00:19:18 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:19:18 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:19:18 - INFO - __main__ - ID text: telugu-2254198842560317781-0
03/27/2024 00:20:29 - INFO - __main__ - Mean variance for telugu-2254198842560317781-0: 0.03645610809326172
03/27/2024 00:20:29 - INFO - __main__ - Mean std for for telugu-2254198842560317781-0: 0.15181027352809906
03/27/2024 00:20:29 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:20:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:20:29 - INFO - __main__ - ID text: telugu-5435080895440121384-0
03/27/2024 00:21:40 - INFO - __main__ - Mean variance for telugu-5435080895440121384-0: 0.0370725654065609
03/27/2024 00:21:40 - INFO - __main__ - Mean std for for telugu-5435080895440121384-0: 0.15550124645233154
03/27/2024 00:21:40 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:21:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:21:40 - INFO - __main__ - ID text: telugu--1182505954974481191-2
03/27/2024 00:22:51 - INFO - __main__ - Mean variance for telugu--1182505954974481191-2: 0.04482043907046318
03/27/2024 00:22:51 - INFO - __main__ - Mean std for for telugu--1182505954974481191-2: 0.1717134714126587
03/27/2024 00:22:51 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:22:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:22:51 - INFO - __main__ - ID text: telugu-119276511844068401-0
03/27/2024 00:24:01 - INFO - __main__ - Mean variance for telugu-119276511844068401-0: 0.034539058804512024
03/27/2024 00:24:01 - INFO - __main__ - Mean std for for telugu-119276511844068401-0: 0.14776723086833954
03/27/2024 00:24:01 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:24:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:24:01 - INFO - __main__ - ID text: telugu--4111208545071789922-0
03/27/2024 00:25:12 - INFO - __main__ - Mean variance for telugu--4111208545071789922-0: 0.03691357374191284
03/27/2024 00:25:12 - INFO - __main__ - Mean std for for telugu--4111208545071789922-0: 0.1540856808423996
03/27/2024 00:25:12 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:25:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:25:12 - INFO - __main__ - ID text: telugu--5922002196428211484-132
03/27/2024 00:26:23 - INFO - __main__ - Mean variance for telugu--5922002196428211484-132: 0.10723616927862167
03/27/2024 00:26:23 - INFO - __main__ - Mean std for for telugu--5922002196428211484-132: 0.27009570598602295
03/27/2024 00:26:23 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:26:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:26:23 - INFO - __main__ - ID text: telugu--1817004721681155192-3
03/27/2024 00:27:34 - INFO - __main__ - Mean variance for telugu--1817004721681155192-3: 0.0365547277033329
03/27/2024 00:27:34 - INFO - __main__ - Mean std for for telugu--1817004721681155192-3: 0.15251524746418
03/27/2024 00:27:34 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:27:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:27:34 - INFO - __main__ - ID text: telugu-1602214480303968359-1
03/27/2024 00:28:44 - INFO - __main__ - Mean variance for telugu-1602214480303968359-1: 0.047221992164850235
03/27/2024 00:28:44 - INFO - __main__ - Mean std for for telugu-1602214480303968359-1: 0.1750074177980423
03/27/2024 00:28:44 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:28:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:28:44 - INFO - __main__ - ID text: telugu--6495674712575945374-0
03/27/2024 00:29:55 - INFO - __main__ - Mean variance for telugu--6495674712575945374-0: 0.03535741567611694
03/27/2024 00:29:55 - INFO - __main__ - Mean std for for telugu--6495674712575945374-0: 0.1479092240333557
03/27/2024 00:29:55 - INFO - __main__ - 
######## Language: finnish ######## 

03/27/2024 00:29:55 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:29:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:29:55 - INFO - __main__ - ID text: finnish-6987763079741579998-0
03/27/2024 00:31:06 - INFO - __main__ - Mean variance for finnish-6987763079741579998-0: 0.035585831850767136
03/27/2024 00:31:06 - INFO - __main__ - Mean std for for finnish-6987763079741579998-0: 0.14435361325740814
03/27/2024 00:31:06 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:31:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:31:06 - INFO - __main__ - ID text: finnish--8516625414052383903-0
03/27/2024 00:32:17 - INFO - __main__ - Mean variance for finnish--8516625414052383903-0: 0.038793206214904785
03/27/2024 00:32:17 - INFO - __main__ - Mean std for for finnish--8516625414052383903-0: 0.14942722022533417
03/27/2024 00:32:17 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:32:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:32:17 - INFO - __main__ - ID text: finnish-4168898766124519517-0
03/27/2024 00:33:28 - INFO - __main__ - Mean variance for finnish-4168898766124519517-0: 0.05818991735577583
03/27/2024 00:33:28 - INFO - __main__ - Mean std for for finnish-4168898766124519517-0: 0.20544713735580444
03/27/2024 00:33:28 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:33:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:33:28 - INFO - __main__ - ID text: finnish-783166898848672321-4
03/27/2024 00:34:38 - INFO - __main__ - Mean variance for finnish-783166898848672321-4: 0.043880145996809006
03/27/2024 00:34:38 - INFO - __main__ - Mean std for for finnish-783166898848672321-4: 0.15926329791545868
03/27/2024 00:34:39 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:34:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:34:39 - INFO - __main__ - ID text: finnish-2208556840820233322-0
03/27/2024 00:35:49 - INFO - __main__ - Mean variance for finnish-2208556840820233322-0: 0.037381548434495926
03/27/2024 00:35:49 - INFO - __main__ - Mean std for for finnish-2208556840820233322-0: 0.1449597030878067
03/27/2024 00:35:49 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:35:49 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:35:49 - INFO - __main__ - ID text: finnish--1981034637152391615-58
03/27/2024 00:37:00 - INFO - __main__ - Mean variance for finnish--1981034637152391615-58: 0.015681708231568336
03/27/2024 00:37:00 - INFO - __main__ - Mean std for for finnish--1981034637152391615-58: 0.09789172559976578
03/27/2024 00:37:00 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:37:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:37:00 - INFO - __main__ - ID text: finnish-8689148941295949475-9
03/27/2024 00:38:11 - INFO - __main__ - Mean variance for finnish-8689148941295949475-9: 0.012966066598892212
03/27/2024 00:38:11 - INFO - __main__ - Mean std for for finnish-8689148941295949475-9: 0.09327631443738937
03/27/2024 00:38:11 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:38:11 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:38:11 - INFO - __main__ - ID text: finnish-6900867945323517614-2
03/27/2024 00:39:22 - INFO - __main__ - Mean variance for finnish-6900867945323517614-2: 0.05790949985384941
03/27/2024 00:39:22 - INFO - __main__ - Mean std for for finnish-6900867945323517614-2: 0.20428495109081268
03/27/2024 00:39:22 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:39:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:39:22 - INFO - __main__ - ID text: finnish-8023130170017405987-1
03/27/2024 00:40:33 - INFO - __main__ - Mean variance for finnish-8023130170017405987-1: 0.02750322036445141
03/27/2024 00:40:33 - INFO - __main__ - Mean std for for finnish-8023130170017405987-1: 0.12791551649570465
03/27/2024 00:40:33 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:40:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:40:33 - INFO - __main__ - ID text: finnish-5001457972111781248-0
03/27/2024 00:41:43 - INFO - __main__ - Mean variance for finnish-5001457972111781248-0: 0.014371265657246113
03/27/2024 00:41:43 - INFO - __main__ - Mean std for for finnish-5001457972111781248-0: 0.0983339324593544
03/27/2024 00:41:43 - INFO - __main__ - 
######## Language: swahili ######## 

03/27/2024 00:41:43 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:41:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:41:43 - INFO - __main__ - ID text: swahili-7146838206539641546-10
03/27/2024 00:42:54 - INFO - __main__ - Mean variance for swahili-7146838206539641546-10: 0.04164325073361397
03/27/2024 00:42:54 - INFO - __main__ - Mean std for for swahili-7146838206539641546-10: 0.15891630947589874
03/27/2024 00:42:54 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:42:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:42:54 - INFO - __main__ - ID text: swahili-7655634199707176439-0
03/27/2024 00:44:05 - INFO - __main__ - Mean variance for swahili-7655634199707176439-0: 0.018605144694447517
03/27/2024 00:44:05 - INFO - __main__ - Mean std for for swahili-7655634199707176439-0: 0.10859790444374084
03/27/2024 00:44:05 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:44:05 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:44:05 - INFO - __main__ - ID text: swahili--4427180714267750534-1
03/27/2024 00:45:15 - INFO - __main__ - Mean variance for swahili--4427180714267750534-1: 0.044356752187013626
03/27/2024 00:45:15 - INFO - __main__ - Mean std for for swahili--4427180714267750534-1: 0.16408342123031616
03/27/2024 00:45:15 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:45:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:45:15 - INFO - __main__ - ID text: swahili-4141779435061573138-0
03/27/2024 00:46:26 - INFO - __main__ - Mean variance for swahili-4141779435061573138-0: 0.01603585295379162
03/27/2024 00:46:26 - INFO - __main__ - Mean std for for swahili-4141779435061573138-0: 0.10294937342405319
03/27/2024 00:46:26 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:46:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:46:26 - INFO - __main__ - ID text: swahili--5424518593960879661-0
03/27/2024 00:47:37 - INFO - __main__ - Mean variance for swahili--5424518593960879661-0: 0.01595001108944416
03/27/2024 00:47:37 - INFO - __main__ - Mean std for for swahili--5424518593960879661-0: 0.1017119288444519
03/27/2024 00:47:37 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:47:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:47:37 - INFO - __main__ - ID text: swahili-4281845253405461584-0
03/27/2024 00:48:48 - INFO - __main__ - Mean variance for swahili-4281845253405461584-0: 0.04370893910527229
03/27/2024 00:48:48 - INFO - __main__ - Mean std for for swahili-4281845253405461584-0: 0.16094818711280823
03/27/2024 00:48:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:48:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:48:48 - INFO - __main__ - ID text: swahili-4899164839984299762-2
03/27/2024 00:49:59 - INFO - __main__ - Mean variance for swahili-4899164839984299762-2: 0.037248414009809494
03/27/2024 00:49:59 - INFO - __main__ - Mean std for for swahili-4899164839984299762-2: 0.14752669632434845
03/27/2024 00:49:59 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:49:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:49:59 - INFO - __main__ - ID text: swahili-1288750786498500530-0
03/27/2024 00:51:10 - INFO - __main__ - Mean variance for swahili-1288750786498500530-0: 0.04268242046236992
03/27/2024 00:51:10 - INFO - __main__ - Mean std for for swahili-1288750786498500530-0: 0.1604568511247635
03/27/2024 00:51:10 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:51:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:51:10 - INFO - __main__ - ID text: swahili--2671134792844015228-3
03/27/2024 00:52:21 - INFO - __main__ - Mean variance for swahili--2671134792844015228-3: 0.021290579810738564
03/27/2024 00:52:21 - INFO - __main__ - Mean std for for swahili--2671134792844015228-3: 0.1124693974852562
03/27/2024 00:52:21 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:52:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:52:21 - INFO - __main__ - ID text: swahili-4873225622490039485-2
03/27/2024 00:53:32 - INFO - __main__ - Mean variance for swahili-4873225622490039485-2: 0.021570419892668724
03/27/2024 00:53:32 - INFO - __main__ - Mean std for for swahili-4873225622490039485-2: 0.1132141649723053
03/27/2024 00:53:32 - INFO - __main__ - 
######## Language: korean ######## 

03/27/2024 00:53:32 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:53:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:53:32 - INFO - __main__ - ID text: korean--2869472392602314906-0
03/27/2024 00:54:42 - INFO - __main__ - Mean variance for korean--2869472392602314906-0: 0.08883673697710037
03/27/2024 00:54:42 - INFO - __main__ - Mean std for for korean--2869472392602314906-0: 0.24531792104244232
03/27/2024 00:54:43 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:54:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:54:43 - INFO - __main__ - ID text: korean-4375199563921600155-0
03/27/2024 00:55:54 - INFO - __main__ - Mean variance for korean-4375199563921600155-0: 0.034201692789793015
03/27/2024 00:55:54 - INFO - __main__ - Mean std for for korean-4375199563921600155-0: 0.15090148150920868
03/27/2024 00:55:54 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:55:54 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:55:54 - INFO - __main__ - ID text: korean--1715118423211755607-13
03/27/2024 00:57:05 - INFO - __main__ - Mean variance for korean--1715118423211755607-13: 0.026660097762942314
03/27/2024 00:57:05 - INFO - __main__ - Mean std for for korean--1715118423211755607-13: 0.13263316452503204
03/27/2024 00:57:05 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:57:05 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:57:05 - INFO - __main__ - ID text: korean--8028977936696142934-9
03/27/2024 00:58:16 - INFO - __main__ - Mean variance for korean--8028977936696142934-9: 0.0419924296438694
03/27/2024 00:58:16 - INFO - __main__ - Mean std for for korean--8028977936696142934-9: 0.16557006537914276
03/27/2024 00:58:16 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:58:16 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:58:16 - INFO - __main__ - ID text: korean-2807245034690443837-5
03/27/2024 00:59:27 - INFO - __main__ - Mean variance for korean-2807245034690443837-5: 0.12927745282649994
03/27/2024 00:59:27 - INFO - __main__ - Mean std for for korean-2807245034690443837-5: 0.29708990454673767
03/27/2024 00:59:28 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 00:59:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 00:59:28 - INFO - __main__ - ID text: korean-3862451817164408576-0
03/27/2024 01:00:39 - INFO - __main__ - Mean variance for korean-3862451817164408576-0: 0.04002000018954277
03/27/2024 01:00:39 - INFO - __main__ - Mean std for for korean-3862451817164408576-0: 0.1577959507703781
03/27/2024 01:00:39 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:00:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:00:39 - INFO - __main__ - ID text: korean-148115504649351135-0
03/27/2024 01:01:50 - INFO - __main__ - Mean variance for korean-148115504649351135-0: 0.04778289794921875
03/27/2024 01:01:50 - INFO - __main__ - Mean std for for korean-148115504649351135-0: 0.17805707454681396
03/27/2024 01:01:50 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:01:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:01:50 - INFO - __main__ - ID text: korean--2885837157239647036-2
03/27/2024 01:03:01 - INFO - __main__ - Mean variance for korean--2885837157239647036-2: 0.10404855757951736
03/27/2024 01:03:01 - INFO - __main__ - Mean std for for korean--2885837157239647036-2: 0.26681604981422424
03/27/2024 01:03:01 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:03:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:03:01 - INFO - __main__ - ID text: korean--1743220297777040002-22
03/27/2024 01:04:12 - INFO - __main__ - Mean variance for korean--1743220297777040002-22: 0.1296045333147049
03/27/2024 01:04:12 - INFO - __main__ - Mean std for for korean--1743220297777040002-22: 0.2987844944000244
03/27/2024 01:04:13 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:04:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:04:13 - INFO - __main__ - ID text: korean-3268522368206106332-0
03/27/2024 01:05:24 - INFO - __main__ - Mean variance for korean-3268522368206106332-0: 0.1631171852350235
03/27/2024 01:05:24 - INFO - __main__ - Mean std for for korean-3268522368206106332-0: 0.352067232131958
03/27/2024 01:05:24 - INFO - __main__ - 
######## Language: indonesian ######## 

03/27/2024 01:05:24 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:05:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:05:24 - INFO - __main__ - ID text: indonesian-9141868818310916091-0
03/27/2024 01:06:36 - INFO - __main__ - Mean variance for indonesian-9141868818310916091-0: 0.015061830170452595
03/27/2024 01:06:36 - INFO - __main__ - Mean std for for indonesian-9141868818310916091-0: 0.10039609670639038
03/27/2024 01:06:36 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:06:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:06:36 - INFO - __main__ - ID text: indonesian-4609394337632433932-1
03/27/2024 01:07:47 - INFO - __main__ - Mean variance for indonesian-4609394337632433932-1: 0.05784926936030388
03/27/2024 01:07:47 - INFO - __main__ - Mean std for for indonesian-4609394337632433932-1: 0.20545653998851776
03/27/2024 01:07:47 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:07:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:07:47 - INFO - __main__ - ID text: indonesian-2763468883290577923-0
03/27/2024 01:08:58 - INFO - __main__ - Mean variance for indonesian-2763468883290577923-0: 0.015416480600833893
03/27/2024 01:08:58 - INFO - __main__ - Mean std for for indonesian-2763468883290577923-0: 0.09953176230192184
03/27/2024 01:08:58 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:08:58 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:08:58 - INFO - __main__ - ID text: indonesian-5633590583948933406-0
03/27/2024 01:10:09 - INFO - __main__ - Mean variance for indonesian-5633590583948933406-0: 0.02835630439221859
03/27/2024 01:10:09 - INFO - __main__ - Mean std for for indonesian-5633590583948933406-0: 0.12570714950561523
03/27/2024 01:10:09 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:10:09 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:10:09 - INFO - __main__ - ID text: indonesian--5961409780035435015-0
03/27/2024 01:11:21 - INFO - __main__ - Mean variance for indonesian--5961409780035435015-0: 0.015070966444909573
03/27/2024 01:11:21 - INFO - __main__ - Mean std for for indonesian--5961409780035435015-0: 0.09831584244966507
03/27/2024 01:11:21 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:11:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:11:21 - INFO - __main__ - ID text: indonesian-6274547934693326697-0
03/27/2024 01:12:32 - INFO - __main__ - Mean variance for indonesian-6274547934693326697-0: 0.024133458733558655
03/27/2024 01:12:32 - INFO - __main__ - Mean std for for indonesian-6274547934693326697-0: 0.11893225461244583
03/27/2024 01:12:32 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:12:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:12:32 - INFO - __main__ - ID text: indonesian--2516321763567853082-0
03/27/2024 01:13:43 - INFO - __main__ - Mean variance for indonesian--2516321763567853082-0: 0.014136658050119877
03/27/2024 01:13:43 - INFO - __main__ - Mean std for for indonesian--2516321763567853082-0: 0.09623739123344421
03/27/2024 01:13:43 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:13:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:13:43 - INFO - __main__ - ID text: indonesian-2048796427556239759-4
03/27/2024 01:14:55 - INFO - __main__ - Mean variance for indonesian-2048796427556239759-4: 0.042171135544776917
03/27/2024 01:14:55 - INFO - __main__ - Mean std for for indonesian-2048796427556239759-4: 0.15338410437107086
03/27/2024 01:14:55 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:14:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:14:55 - INFO - __main__ - ID text: indonesian-6246592469157278547-2
03/27/2024 01:16:06 - INFO - __main__ - Mean variance for indonesian-6246592469157278547-2: 0.026339596137404442
03/27/2024 01:16:06 - INFO - __main__ - Mean std for for indonesian-6246592469157278547-2: 0.12261611968278885
03/27/2024 01:16:06 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:16:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:16:06 - INFO - __main__ - ID text: indonesian--3724318458930736973-1
03/27/2024 01:17:17 - INFO - __main__ - Mean variance for indonesian--3724318458930736973-1: 0.015435758046805859
03/27/2024 01:17:17 - INFO - __main__ - Mean std for for indonesian--3724318458930736973-1: 0.09999430179595947
03/27/2024 01:17:17 - INFO - __main__ - 
######## Language: english ######## 

03/27/2024 01:17:17 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:17:17 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:17:17 - INFO - __main__ - ID text: english-2852412434797041176-6
03/27/2024 01:18:29 - INFO - __main__ - Mean variance for english-2852412434797041176-6: 0.06499672681093216
03/27/2024 01:18:29 - INFO - __main__ - Mean std for for english-2852412434797041176-6: 0.21997451782226562
03/27/2024 01:18:29 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:18:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:18:29 - INFO - __main__ - ID text: english--1463732605740571606-0
03/27/2024 01:19:40 - INFO - __main__ - Mean variance for english--1463732605740571606-0: 0.017756877467036247
03/27/2024 01:19:40 - INFO - __main__ - Mean std for for english--1463732605740571606-0: 0.1027260422706604
03/27/2024 01:19:40 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:19:40 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:19:40 - INFO - __main__ - ID text: english-5441411281255470421-0
03/27/2024 01:20:51 - INFO - __main__ - Mean variance for english-5441411281255470421-0: 0.014927573502063751
03/27/2024 01:20:51 - INFO - __main__ - Mean std for for english-5441411281255470421-0: 0.09812688082456589
03/27/2024 01:20:51 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:20:51 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:20:51 - INFO - __main__ - ID text: english-7294054492486093447-1
03/27/2024 01:22:02 - INFO - __main__ - Mean variance for english-7294054492486093447-1: 0.01670042984187603
03/27/2024 01:22:02 - INFO - __main__ - Mean std for for english-7294054492486093447-1: 0.10143905878067017
03/27/2024 01:22:02 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:22:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:22:02 - INFO - __main__ - ID text: english-8820750127045023244-0
03/27/2024 01:23:13 - INFO - __main__ - Mean variance for english-8820750127045023244-0: 0.0428553931415081
03/27/2024 01:23:13 - INFO - __main__ - Mean std for for english-8820750127045023244-0: 0.15339703857898712
03/27/2024 01:23:13 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:23:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:23:13 - INFO - __main__ - ID text: english--506693546683012611-2
03/27/2024 01:24:24 - INFO - __main__ - Mean variance for english--506693546683012611-2: 0.0596018023788929
03/27/2024 01:24:24 - INFO - __main__ - Mean std for for english--506693546683012611-2: 0.1878850907087326
03/27/2024 01:24:25 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:24:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:24:25 - INFO - __main__ - ID text: english-745411798111651115-0
03/27/2024 01:25:36 - INFO - __main__ - Mean variance for english-745411798111651115-0: 0.0157978106290102
03/27/2024 01:25:36 - INFO - __main__ - Mean std for for english-745411798111651115-0: 0.09976784139871597
03/27/2024 01:25:36 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:25:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:25:36 - INFO - __main__ - ID text: english-7740772185887912651-0
03/27/2024 01:26:48 - INFO - __main__ - Mean variance for english-7740772185887912651-0: 0.016672560945153236
03/27/2024 01:26:48 - INFO - __main__ - Mean std for for english-7740772185887912651-0: 0.0999300554394722
03/27/2024 01:26:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:26:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:26:48 - INFO - __main__ - ID text: english-383873188776267137-19
03/27/2024 01:27:58 - INFO - __main__ - Mean variance for english-383873188776267137-19: 0.015286091715097427
03/27/2024 01:27:58 - INFO - __main__ - Mean std for for english-383873188776267137-19: 0.09832540154457092
03/27/2024 01:27:59 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:27:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:27:59 - INFO - __main__ - ID text: english--8277537578703156284-0
03/27/2024 01:29:10 - INFO - __main__ - Mean variance for english--8277537578703156284-0: 0.017030587419867516
03/27/2024 01:29:10 - INFO - __main__ - Mean std for for english--8277537578703156284-0: 0.10236277431249619
03/27/2024 01:29:10 - INFO - __main__ - 
######## Computing SDs for task: glue ########

03/27/2024 01:29:10 - INFO - __main__ - 
######## Language: cola ######## 

03/27/2024 01:29:10 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:29:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:29:10 - INFO - __main__ - ID text: cola_228
03/27/2024 01:30:21 - INFO - __main__ - Mean variance for cola_228: 0.05010313168168068
03/27/2024 01:30:21 - INFO - __main__ - Mean std for for cola_228: 0.19396460056304932
03/27/2024 01:30:21 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:30:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:30:21 - INFO - __main__ - ID text: cola_51
03/27/2024 01:31:32 - INFO - __main__ - Mean variance for cola_51: 0.03420155122876167
03/27/2024 01:31:32 - INFO - __main__ - Mean std for for cola_51: 0.16048774123191833
03/27/2024 01:31:32 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:31:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:31:32 - INFO - __main__ - ID text: cola_563
03/27/2024 01:32:43 - INFO - __main__ - Mean variance for cola_563: 0.13900701701641083
03/27/2024 01:32:43 - INFO - __main__ - Mean std for for cola_563: 0.33370062708854675
03/27/2024 01:32:43 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:32:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:32:43 - INFO - __main__ - ID text: cola_501
03/27/2024 01:33:53 - INFO - __main__ - Mean variance for cola_501: 0.04489954188466072
03/27/2024 01:33:53 - INFO - __main__ - Mean std for for cola_501: 0.18493014574050903
03/27/2024 01:33:53 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:33:53 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:33:53 - INFO - __main__ - ID text: cola_457
03/27/2024 01:35:04 - INFO - __main__ - Mean variance for cola_457: 0.07989551872015
03/27/2024 01:35:04 - INFO - __main__ - Mean std for for cola_457: 0.24893896281719208
03/27/2024 01:35:04 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:35:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:35:04 - INFO - __main__ - ID text: cola_285
03/27/2024 01:36:15 - INFO - __main__ - Mean variance for cola_285: 0.059074971824884415
03/27/2024 01:36:15 - INFO - __main__ - Mean std for for cola_285: 0.2140158861875534
03/27/2024 01:36:15 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:36:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:36:15 - INFO - __main__ - ID text: cola_209
03/27/2024 01:37:26 - INFO - __main__ - Mean variance for cola_209: 0.06173575296998024
03/27/2024 01:37:26 - INFO - __main__ - Mean std for for cola_209: 0.21789689362049103
03/27/2024 01:37:26 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:37:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:37:26 - INFO - __main__ - ID text: cola_178
03/27/2024 01:38:37 - INFO - __main__ - Mean variance for cola_178: 0.06618533283472061
03/27/2024 01:38:37 - INFO - __main__ - Mean std for for cola_178: 0.2266191989183426
03/27/2024 01:38:37 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:38:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:38:37 - INFO - __main__ - ID text: cola_864
03/27/2024 01:39:48 - INFO - __main__ - Mean variance for cola_864: 0.048462867736816406
03/27/2024 01:39:48 - INFO - __main__ - Mean std for for cola_864: 0.19632451236248016
03/27/2024 01:39:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:39:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:39:48 - INFO - __main__ - ID text: cola_65
03/27/2024 01:40:59 - INFO - __main__ - Mean variance for cola_65: 0.059406787157058716
03/27/2024 01:40:59 - INFO - __main__ - Mean std for for cola_65: 0.20940540730953217
03/27/2024 01:40:59 - INFO - __main__ - 
######## Language: mnli ######## 

03/27/2024 01:41:00 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:41:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:41:00 - INFO - __main__ - ID text: mnli_488
03/27/2024 01:42:11 - INFO - __main__ - Mean variance for mnli_488: 0.05529585853219032
03/27/2024 01:42:11 - INFO - __main__ - Mean std for for mnli_488: 0.18041807413101196
03/27/2024 01:42:12 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:42:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:42:12 - INFO - __main__ - ID text: mnli_1535
03/27/2024 01:43:24 - INFO - __main__ - Mean variance for mnli_1535: 0.05517630651593208
03/27/2024 01:43:24 - INFO - __main__ - Mean std for for mnli_1535: 0.17693771421909332
03/27/2024 01:43:28 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:43:28 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:43:28 - INFO - __main__ - ID text: mnli_3582
03/27/2024 01:44:39 - INFO - __main__ - Mean variance for mnli_3582: 0.049315739423036575
03/27/2024 01:44:39 - INFO - __main__ - Mean std for for mnli_3582: 0.18314774334430695
03/27/2024 01:44:39 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:44:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:44:39 - INFO - __main__ - ID text: mnli_3811
03/27/2024 01:45:50 - INFO - __main__ - Mean variance for mnli_3811: 0.05560252442955971
03/27/2024 01:45:50 - INFO - __main__ - Mean std for for mnli_3811: 0.19242529571056366
03/27/2024 01:45:50 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:45:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:45:50 - INFO - __main__ - ID text: mnli_8279
03/27/2024 01:47:01 - INFO - __main__ - Mean variance for mnli_8279: 0.04472650960087776
03/27/2024 01:47:01 - INFO - __main__ - Mean std for for mnli_8279: 0.1797225922346115
03/27/2024 01:47:01 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:47:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:47:01 - INFO - __main__ - ID text: mnli_434
03/27/2024 01:48:12 - INFO - __main__ - Mean variance for mnli_434: 0.03468422219157219
03/27/2024 01:48:12 - INFO - __main__ - Mean std for for mnli_434: 0.13993613421916962
03/27/2024 01:48:12 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:48:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:48:12 - INFO - __main__ - ID text: mnli_9195
03/27/2024 01:49:23 - INFO - __main__ - Mean variance for mnli_9195: 0.05701342597603798
03/27/2024 01:49:23 - INFO - __main__ - Mean std for for mnli_9195: 0.21335868537425995
03/27/2024 01:49:23 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:49:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:49:23 - INFO - __main__ - ID text: mnli_3257
03/27/2024 01:50:34 - INFO - __main__ - Mean variance for mnli_3257: 0.04471373185515404
03/27/2024 01:50:34 - INFO - __main__ - Mean std for for mnli_3257: 0.17186571657657623
03/27/2024 01:50:34 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:50:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:50:34 - INFO - __main__ - ID text: mnli_8928
03/27/2024 01:51:45 - INFO - __main__ - Mean variance for mnli_8928: 0.049280330538749695
03/27/2024 01:51:45 - INFO - __main__ - Mean std for for mnli_8928: 0.16771787405014038
03/27/2024 01:51:45 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:51:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:51:45 - INFO - __main__ - ID text: mnli_6873
03/27/2024 01:52:57 - INFO - __main__ - Mean variance for mnli_6873: 0.048773348331451416
03/27/2024 01:52:57 - INFO - __main__ - Mean std for for mnli_6873: 0.1652238667011261
03/27/2024 01:52:57 - INFO - __main__ - 
######## Language: mrpc ######## 

03/27/2024 01:52:57 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:52:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:52:57 - INFO - __main__ - ID text: mrpc_451
03/27/2024 01:54:08 - INFO - __main__ - Mean variance for mrpc_451: 0.05343690514564514
03/27/2024 01:54:08 - INFO - __main__ - Mean std for for mrpc_451: 0.17713071405887604
03/27/2024 01:54:08 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:54:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:54:08 - INFO - __main__ - ID text: mrpc_919
03/27/2024 01:55:19 - INFO - __main__ - Mean variance for mrpc_919: 0.051592517644166946
03/27/2024 01:55:19 - INFO - __main__ - Mean std for for mrpc_919: 0.17342925071716309
03/27/2024 01:55:19 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:55:19 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:55:19 - INFO - __main__ - ID text: mrpc_1206
03/27/2024 01:56:30 - INFO - __main__ - Mean variance for mrpc_1206: 0.04771827533841133
03/27/2024 01:56:30 - INFO - __main__ - Mean std for for mrpc_1206: 0.1760503202676773
03/27/2024 01:56:30 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:56:30 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:56:30 - INFO - __main__ - ID text: mrpc_569
03/27/2024 01:57:41 - INFO - __main__ - Mean variance for mrpc_569: 0.05537046492099762
03/27/2024 01:57:41 - INFO - __main__ - Mean std for for mrpc_569: 0.1857101172208786
03/27/2024 01:57:41 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:57:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:57:41 - INFO - __main__ - ID text: mrpc_1657
03/27/2024 01:58:52 - INFO - __main__ - Mean variance for mrpc_1657: 0.0428759790956974
03/27/2024 01:58:52 - INFO - __main__ - Mean std for for mrpc_1657: 0.15427418053150177
03/27/2024 01:58:52 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 01:58:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 01:58:52 - INFO - __main__ - ID text: mrpc_13
03/27/2024 02:00:03 - INFO - __main__ - Mean variance for mrpc_13: 0.05456439033150673
03/27/2024 02:00:03 - INFO - __main__ - Mean std for for mrpc_13: 0.18222256004810333
03/27/2024 02:00:03 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:00:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:00:03 - INFO - __main__ - ID text: mrpc_1554
03/27/2024 02:01:14 - INFO - __main__ - Mean variance for mrpc_1554: 0.03849561884999275
03/27/2024 02:01:14 - INFO - __main__ - Mean std for for mrpc_1554: 0.14520438015460968
03/27/2024 02:01:14 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:01:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:01:14 - INFO - __main__ - ID text: mrpc_1650
03/27/2024 02:02:25 - INFO - __main__ - Mean variance for mrpc_1650: 0.12007550150156021
03/27/2024 02:02:25 - INFO - __main__ - Mean std for for mrpc_1650: 0.293462872505188
03/27/2024 02:02:25 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:02:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:02:25 - INFO - __main__ - ID text: mrpc_326
03/27/2024 02:03:36 - INFO - __main__ - Mean variance for mrpc_326: 0.05723339691758156
03/27/2024 02:03:36 - INFO - __main__ - Mean std for for mrpc_326: 0.18767957389354706
03/27/2024 02:03:36 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:03:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:03:36 - INFO - __main__ - ID text: mrpc_1429
03/27/2024 02:04:47 - INFO - __main__ - Mean variance for mrpc_1429: 0.054340917617082596
03/27/2024 02:04:47 - INFO - __main__ - Mean std for for mrpc_1429: 0.18036378920078278
03/27/2024 02:04:47 - INFO - __main__ - 
######## Language: qnli ######## 

03/27/2024 02:04:47 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:04:47 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:04:47 - INFO - __main__ - ID text: qnli_3462
03/27/2024 02:05:59 - INFO - __main__ - Mean variance for qnli_3462: 0.058203522115945816
03/27/2024 02:05:59 - INFO - __main__ - Mean std for for qnli_3462: 0.18815939128398895
03/27/2024 02:05:59 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:05:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:05:59 - INFO - __main__ - ID text: qnli_2787
03/27/2024 02:07:10 - INFO - __main__ - Mean variance for qnli_2787: 0.045687925070524216
03/27/2024 02:07:10 - INFO - __main__ - Mean std for for qnli_2787: 0.15862125158309937
03/27/2024 02:07:10 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:07:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:07:10 - INFO - __main__ - ID text: qnli_2276
03/27/2024 02:08:21 - INFO - __main__ - Mean variance for qnli_2276: 0.051338259130716324
03/27/2024 02:08:21 - INFO - __main__ - Mean std for for qnli_2276: 0.17015153169631958
03/27/2024 02:08:21 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:08:21 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:08:21 - INFO - __main__ - ID text: qnli_1273
03/27/2024 02:09:33 - INFO - __main__ - Mean variance for qnli_1273: 0.05050751566886902
03/27/2024 02:09:33 - INFO - __main__ - Mean std for for qnli_1273: 0.16970859467983246
03/27/2024 02:09:33 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:09:33 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:09:33 - INFO - __main__ - ID text: qnli_1763
03/27/2024 02:10:44 - INFO - __main__ - Mean variance for qnli_1763: 0.048203516751527786
03/27/2024 02:10:44 - INFO - __main__ - Mean std for for qnli_1763: 0.1681363433599472
03/27/2024 02:10:44 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:10:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:10:44 - INFO - __main__ - ID text: qnli_2757
03/27/2024 02:11:55 - INFO - __main__ - Mean variance for qnli_2757: 0.05883819982409477
03/27/2024 02:11:55 - INFO - __main__ - Mean std for for qnli_2757: 0.18463069200515747
03/27/2024 02:11:55 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:11:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:11:55 - INFO - __main__ - ID text: qnli_837
03/27/2024 02:13:07 - INFO - __main__ - Mean variance for qnli_837: 0.047805462032556534
03/27/2024 02:13:07 - INFO - __main__ - Mean std for for qnli_837: 0.17305272817611694
03/27/2024 02:13:07 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:13:07 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:13:07 - INFO - __main__ - ID text: qnli_759
03/27/2024 02:14:18 - INFO - __main__ - Mean variance for qnli_759: 0.019669823348522186
03/27/2024 02:14:18 - INFO - __main__ - Mean std for for qnli_759: 0.10663523524999619
03/27/2024 02:14:18 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:14:18 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:14:18 - INFO - __main__ - ID text: qnli_3112
03/27/2024 02:15:29 - INFO - __main__ - Mean variance for qnli_3112: 0.06443361937999725
03/27/2024 02:15:29 - INFO - __main__ - Mean std for for qnli_3112: 0.19768887758255005
03/27/2024 02:15:29 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:15:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:15:29 - INFO - __main__ - ID text: qnli_792
03/27/2024 02:16:40 - INFO - __main__ - Mean variance for qnli_792: 0.05504678189754486
03/27/2024 02:16:40 - INFO - __main__ - Mean std for for qnli_792: 0.1747041791677475
03/27/2024 02:16:40 - INFO - __main__ - 
######## Language: qqp ######## 

03/27/2024 02:16:40 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:16:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:16:41 - INFO - __main__ - ID text: qqp_188208
03/27/2024 02:17:52 - INFO - __main__ - Mean variance for qqp_188208: 0.05842738226056099
03/27/2024 02:17:52 - INFO - __main__ - Mean std for for qqp_188208: 0.20315174758434296
03/27/2024 02:17:52 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:17:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:17:52 - INFO - __main__ - ID text: qqp_180331
03/27/2024 02:19:03 - INFO - __main__ - Mean variance for qqp_180331: 0.05061618983745575
03/27/2024 02:19:03 - INFO - __main__ - Mean std for for qqp_180331: 0.1831352263689041
03/27/2024 02:19:03 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:19:03 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:19:03 - INFO - __main__ - ID text: qqp_316526
03/27/2024 02:20:14 - INFO - __main__ - Mean variance for qqp_316526: 0.06037774682044983
03/27/2024 02:20:14 - INFO - __main__ - Mean std for for qqp_316526: 0.19440437853336334
03/27/2024 02:20:14 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:20:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:20:14 - INFO - __main__ - ID text: qqp_138685
03/27/2024 02:21:25 - INFO - __main__ - Mean variance for qqp_138685: 0.043446317315101624
03/27/2024 02:21:25 - INFO - __main__ - Mean std for for qqp_138685: 0.15557460486888885
03/27/2024 02:21:25 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:21:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:21:25 - INFO - __main__ - ID text: qqp_22780
03/27/2024 02:22:36 - INFO - __main__ - Mean variance for qqp_22780: 0.04577640816569328
03/27/2024 02:22:36 - INFO - __main__ - Mean std for for qqp_22780: 0.18161672353744507
03/27/2024 02:22:36 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:22:36 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:22:36 - INFO - __main__ - ID text: qqp_382589
03/27/2024 02:23:48 - INFO - __main__ - Mean variance for qqp_382589: 0.05748431012034416
03/27/2024 02:23:48 - INFO - __main__ - Mean std for for qqp_382589: 0.1913662701845169
03/27/2024 02:23:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:23:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:23:48 - INFO - __main__ - ID text: qqp_240870
03/27/2024 02:24:59 - INFO - __main__ - Mean variance for qqp_240870: 0.04925070330500603
03/27/2024 02:24:59 - INFO - __main__ - Mean std for for qqp_240870: 0.18289603292942047
03/27/2024 02:24:59 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:24:59 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:24:59 - INFO - __main__ - ID text: qqp_281137
03/27/2024 02:26:10 - INFO - __main__ - Mean variance for qqp_281137: 0.051388245075941086
03/27/2024 02:26:10 - INFO - __main__ - Mean std for for qqp_281137: 0.18312756717205048
03/27/2024 02:26:10 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:26:10 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:26:10 - INFO - __main__ - ID text: qqp_65444
03/27/2024 02:27:22 - INFO - __main__ - Mean variance for qqp_65444: 0.04358668252825737
03/27/2024 02:27:22 - INFO - __main__ - Mean std for for qqp_65444: 0.17439068853855133
03/27/2024 02:27:22 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:27:22 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:27:22 - INFO - __main__ - ID text: qqp_198461
03/27/2024 02:28:34 - INFO - __main__ - Mean variance for qqp_198461: 0.044214144349098206
03/27/2024 02:28:34 - INFO - __main__ - Mean std for for qqp_198461: 0.16713522374629974
03/27/2024 02:28:34 - INFO - __main__ - 
######## Language: rte ######## 

03/27/2024 02:28:34 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:28:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:28:34 - INFO - __main__ - ID text: rte_322
03/27/2024 02:29:45 - INFO - __main__ - Mean variance for rte_322: 0.05463143065571785
03/27/2024 02:29:45 - INFO - __main__ - Mean std for for rte_322: 0.1824820190668106
03/27/2024 02:29:45 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:29:45 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:29:45 - INFO - __main__ - ID text: rte_2261
03/27/2024 02:30:57 - INFO - __main__ - Mean variance for rte_2261: 0.05736237391829491
03/27/2024 02:30:57 - INFO - __main__ - Mean std for for rte_2261: 0.2006176859140396
03/27/2024 02:30:57 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:30:57 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:30:57 - INFO - __main__ - ID text: rte_1200
03/27/2024 02:32:08 - INFO - __main__ - Mean variance for rte_1200: 0.03514622524380684
03/27/2024 02:32:08 - INFO - __main__ - Mean std for for rte_1200: 0.13924768567085266
03/27/2024 02:32:08 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:32:08 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:32:08 - INFO - __main__ - ID text: rte_2574
03/27/2024 02:33:20 - INFO - __main__ - Mean variance for rte_2574: 0.016585947945713997
03/27/2024 02:33:20 - INFO - __main__ - Mean std for for rte_2574: 0.09939683228731155
03/27/2024 02:33:20 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:33:20 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:33:20 - INFO - __main__ - ID text: rte_2533
03/27/2024 02:34:32 - INFO - __main__ - Mean variance for rte_2533: 0.017123466357588768
03/27/2024 02:34:32 - INFO - __main__ - Mean std for for rte_2533: 0.10387017577886581
03/27/2024 02:34:32 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:34:32 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:34:32 - INFO - __main__ - ID text: rte_1481
03/27/2024 02:35:43 - INFO - __main__ - Mean variance for rte_1481: 0.05146533623337746
03/27/2024 02:35:43 - INFO - __main__ - Mean std for for rte_1481: 0.17235688865184784
03/27/2024 02:35:43 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:35:43 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:35:43 - INFO - __main__ - ID text: rte_2364
03/27/2024 02:36:55 - INFO - __main__ - Mean variance for rte_2364: 0.05046801269054413
03/27/2024 02:36:55 - INFO - __main__ - Mean std for for rte_2364: 0.16549336910247803
03/27/2024 02:36:55 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:36:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:36:55 - INFO - __main__ - ID text: rte_787
03/27/2024 02:38:06 - INFO - __main__ - Mean variance for rte_787: 0.048592496663331985
03/27/2024 02:38:06 - INFO - __main__ - Mean std for for rte_787: 0.16389285027980804
03/27/2024 02:38:06 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:38:06 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:38:06 - INFO - __main__ - ID text: rte_2885
03/27/2024 02:39:18 - INFO - __main__ - Mean variance for rte_2885: 0.016960838809609413
03/27/2024 02:39:18 - INFO - __main__ - Mean std for for rte_2885: 0.10184380412101746
03/27/2024 02:39:18 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:39:18 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:39:18 - INFO - __main__ - ID text: rte_284
03/27/2024 02:40:29 - INFO - __main__ - Mean variance for rte_284: 0.05211186036467552
03/27/2024 02:40:29 - INFO - __main__ - Mean std for for rte_284: 0.18280863761901855
03/27/2024 02:40:29 - INFO - __main__ - 
######## Language: sst2 ######## 

03/27/2024 02:40:29 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:40:29 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:40:29 - INFO - __main__ - ID text: sst2_93
03/27/2024 02:41:41 - INFO - __main__ - Mean variance for sst2_93: 0.041023820638656616
03/27/2024 02:41:41 - INFO - __main__ - Mean std for for sst2_93: 0.16472597420215607
03/27/2024 02:41:41 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:41:41 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:41:41 - INFO - __main__ - ID text: sst2_1354
03/27/2024 02:42:52 - INFO - __main__ - Mean variance for sst2_1354: 0.04979035258293152
03/27/2024 02:42:52 - INFO - __main__ - Mean std for for sst2_1354: 0.19595372676849365
03/27/2024 02:42:52 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:42:52 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:42:52 - INFO - __main__ - ID text: sst2_466
03/27/2024 02:44:04 - INFO - __main__ - Mean variance for sst2_466: 0.05319235846400261
03/27/2024 02:44:04 - INFO - __main__ - Mean std for for sst2_466: 0.20480048656463623
03/27/2024 02:44:04 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:44:04 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:44:04 - INFO - __main__ - ID text: sst2_1583
03/27/2024 02:45:15 - INFO - __main__ - Mean variance for sst2_1583: 0.05539950728416443
03/27/2024 02:45:15 - INFO - __main__ - Mean std for for sst2_1583: 0.18589605391025543
03/27/2024 02:45:15 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:45:15 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:45:15 - INFO - __main__ - ID text: sst2_592
03/27/2024 02:46:27 - INFO - __main__ - Mean variance for sst2_592: 0.05760299786925316
03/27/2024 02:46:27 - INFO - __main__ - Mean std for for sst2_592: 0.18979869782924652
03/27/2024 02:46:27 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:46:27 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:46:27 - INFO - __main__ - ID text: sst2_163
03/27/2024 02:47:39 - INFO - __main__ - Mean variance for sst2_163: 0.06598815321922302
03/27/2024 02:47:39 - INFO - __main__ - Mean std for for sst2_163: 0.23041649162769318
03/27/2024 02:47:39 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:47:39 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:47:39 - INFO - __main__ - ID text: sst2_1751
03/27/2024 02:48:50 - INFO - __main__ - Mean variance for sst2_1751: 0.05407382547855377
03/27/2024 02:48:50 - INFO - __main__ - Mean std for for sst2_1751: 0.2023569494485855
03/27/2024 02:48:50 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:48:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:48:50 - INFO - __main__ - ID text: sst2_476
03/27/2024 02:50:02 - INFO - __main__ - Mean variance for sst2_476: 0.03573862090706825
03/27/2024 02:50:02 - INFO - __main__ - Mean std for for sst2_476: 0.15141725540161133
03/27/2024 02:50:02 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:50:02 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:50:02 - INFO - __main__ - ID text: sst2_1774
03/27/2024 02:51:14 - INFO - __main__ - Mean variance for sst2_1774: 0.04716360941529274
03/27/2024 02:51:14 - INFO - __main__ - Mean std for for sst2_1774: 0.1742812842130661
03/27/2024 02:51:14 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:51:14 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:51:14 - INFO - __main__ - ID text: sst2_206
03/27/2024 02:52:26 - INFO - __main__ - Mean variance for sst2_206: 0.047941166907548904
03/27/2024 02:52:26 - INFO - __main__ - Mean std for for sst2_206: 0.18069714307785034
03/27/2024 02:52:26 - INFO - __main__ - 
######## Language: stsb ######## 

03/27/2024 02:52:26 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:52:26 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:52:26 - INFO - __main__ - ID text: stsb_778
03/27/2024 02:53:38 - INFO - __main__ - Mean variance for stsb_778: 0.05398425832390785
03/27/2024 02:53:38 - INFO - __main__ - Mean std for for stsb_778: 0.19154471158981323
03/27/2024 02:53:38 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:53:38 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:53:38 - INFO - __main__ - ID text: stsb_569
03/27/2024 02:54:50 - INFO - __main__ - Mean variance for stsb_569: 0.06112624704837799
03/27/2024 02:54:50 - INFO - __main__ - Mean std for for stsb_569: 0.21200920641422272
03/27/2024 02:54:50 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:54:50 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:54:50 - INFO - __main__ - ID text: stsb_928
03/27/2024 02:56:01 - INFO - __main__ - Mean variance for stsb_928: 0.03577195480465889
03/27/2024 02:56:01 - INFO - __main__ - Mean std for for stsb_928: 0.140054389834404
03/27/2024 02:56:01 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:56:01 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:56:01 - INFO - __main__ - ID text: stsb_1301
03/27/2024 02:57:13 - INFO - __main__ - Mean variance for stsb_1301: 0.048305392265319824
03/27/2024 02:57:13 - INFO - __main__ - Mean std for for stsb_1301: 0.1802692413330078
03/27/2024 02:57:13 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:57:13 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:57:13 - INFO - __main__ - ID text: stsb_747
03/27/2024 02:58:25 - INFO - __main__ - Mean variance for stsb_747: 0.044882163405418396
03/27/2024 02:58:25 - INFO - __main__ - Mean std for for stsb_747: 0.16662614047527313
03/27/2024 02:58:25 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:58:25 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:58:25 - INFO - __main__ - ID text: stsb_333
03/27/2024 02:59:37 - INFO - __main__ - Mean variance for stsb_333: 0.04681282117962837
03/27/2024 02:59:37 - INFO - __main__ - Mean std for for stsb_333: 0.17627739906311035
03/27/2024 02:59:37 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 02:59:37 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 02:59:37 - INFO - __main__ - ID text: stsb_758
03/27/2024 03:00:48 - INFO - __main__ - Mean variance for stsb_758: 0.055791471153497696
03/27/2024 03:00:48 - INFO - __main__ - Mean std for for stsb_758: 0.18676292896270752
03/27/2024 03:00:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:00:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:00:48 - INFO - __main__ - ID text: stsb_727
03/27/2024 03:02:00 - INFO - __main__ - Mean variance for stsb_727: 0.05646162107586861
03/27/2024 03:02:00 - INFO - __main__ - Mean std for for stsb_727: 0.19901615381240845
03/27/2024 03:02:00 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:02:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:02:00 - INFO - __main__ - ID text: stsb_429
03/27/2024 03:03:12 - INFO - __main__ - Mean variance for stsb_429: 0.05129139497876167
03/27/2024 03:03:12 - INFO - __main__ - Mean std for for stsb_429: 0.1912521868944168
03/27/2024 03:03:12 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:03:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:03:12 - INFO - __main__ - ID text: stsb_1372
03/27/2024 03:04:24 - INFO - __main__ - Mean variance for stsb_1372: 0.04338737949728966
03/27/2024 03:04:24 - INFO - __main__ - Mean std for for stsb_1372: 0.1711737960577011
03/27/2024 03:04:24 - INFO - __main__ - 
######## Language: wnli ######## 

03/27/2024 03:04:24 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:04:24 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:04:24 - INFO - __main__ - ID text: wnli_68
03/27/2024 03:05:35 - INFO - __main__ - Mean variance for wnli_68: 0.048255085945129395
03/27/2024 03:05:35 - INFO - __main__ - Mean std for for wnli_68: 0.1679304987192154
03/27/2024 03:05:35 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:05:35 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:05:35 - INFO - __main__ - ID text: wnli_18
03/27/2024 03:06:47 - INFO - __main__ - Mean variance for wnli_18: 0.03944640979170799
03/27/2024 03:06:47 - INFO - __main__ - Mean std for for wnli_18: 0.14844821393489838
03/27/2024 03:06:48 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:06:48 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:06:48 - INFO - __main__ - ID text: wnli_43
03/27/2024 03:08:00 - INFO - __main__ - Mean variance for wnli_43: 0.0528041236102581
03/27/2024 03:08:00 - INFO - __main__ - Mean std for for wnli_43: 0.17636509239673615
03/27/2024 03:08:00 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:08:00 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:08:00 - INFO - __main__ - ID text: wnli_136
03/27/2024 03:09:11 - INFO - __main__ - Mean variance for wnli_136: 0.05245789885520935
03/27/2024 03:09:11 - INFO - __main__ - Mean std for for wnli_136: 0.17172963917255402
03/27/2024 03:09:12 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:09:12 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:09:12 - INFO - __main__ - ID text: wnli_62
03/27/2024 03:10:23 - INFO - __main__ - Mean variance for wnli_62: 0.05456674098968506
03/27/2024 03:10:23 - INFO - __main__ - Mean std for for wnli_62: 0.18143856525421143
03/27/2024 03:10:23 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:10:23 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:10:23 - INFO - __main__ - ID text: wnli_41
03/27/2024 03:11:34 - INFO - __main__ - Mean variance for wnli_41: 0.052778784185647964
03/27/2024 03:11:34 - INFO - __main__ - Mean std for for wnli_41: 0.17913557589054108
03/27/2024 03:11:34 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:11:34 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:11:34 - INFO - __main__ - ID text: wnli_118
03/27/2024 03:12:44 - INFO - __main__ - Mean variance for wnli_118: 0.05009574815630913
03/27/2024 03:12:44 - INFO - __main__ - Mean std for for wnli_118: 0.17680375277996063
03/27/2024 03:12:44 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:12:44 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:12:44 - INFO - __main__ - ID text: wnli_97
03/27/2024 03:13:55 - INFO - __main__ - Mean variance for wnli_97: 0.03433254361152649
03/27/2024 03:13:55 - INFO - __main__ - Mean std for for wnli_97: 0.13669775426387787
03/27/2024 03:13:55 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:13:55 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:13:55 - INFO - __main__ - ID text: wnli_69
03/27/2024 03:15:05 - INFO - __main__ - Mean variance for wnli_69: 0.04539226368069649
03/27/2024 03:15:05 - INFO - __main__ - Mean std for for wnli_69: 0.17238958179950714
03/27/2024 03:15:05 - INFO - __main__ - Applying span masking with "max_span_length = 2" , "cumulative_span_weights = [0.0, 1.0]"  and "spacing = span"
03/27/2024 03:15:05 - INFO - __main__ - Masked count: 64, ratio = 0.2500
03/27/2024 03:15:05 - INFO - __main__ - ID text: wnli_142
03/27/2024 03:16:15 - INFO - __main__ - Mean variance for wnli_142: 0.042741041630506516
03/27/2024 03:16:15 - INFO - __main__ - Mean std for for wnli_142: 0.153483584523201
03/27/2024 03:16:15 - INFO - __main__ - SD per task: {'ner': {'amh': {'amh_0': 0.153245210647583, 'amh_1': 0.15268857777118683, 'amh_2': 0.16030068695545197, 'amh_3': 0.15948933362960815, 'amh_4': 0.14202497899532318, 'amh_5': 0.16561730206012726, 'amh_6': 0.1600065529346466, 'amh_7': 0.14426621794700623, 'amh_8': 0.14621444046497345, 'amh_9': 0.13985736668109894}, 'conll_2003_en': {'conll_2003_en_0': 0.16305994987487793, 'conll_2003_en_1': 0.051069509238004684, 'conll_2003_en_2': 0.04298023879528046, 'conll_2003_en_3': 0.044191692024469376, 'conll_2003_en_4': 0.04894169047474861, 'conll_2003_en_5': 0.15207937359809875, 'conll_2003_en_6': 0.17079269886016846, 'conll_2003_en_7': 0.16464965045452118, 'conll_2003_en_8': 0.1630653291940689, 'conll_2003_en_9': 0.04189387336373329}, 'hau': {'hau_0': 0.028044188395142555, 'hau_1': 0.03541465103626251, 'hau_2': 0.15856456756591797, 'hau_3': 0.01714688166975975, 'hau_4': 0.03273424133658409, 'hau_5': 0.025886088609695435, 'hau_6': 0.04080415889620781, 'hau_7': 0.042034294456243515, 'hau_8': 0.027557557448744774, 'hau_9': 0.04359954595565796}, 'ibo': {'ibo_0': 0.03765584155917168, 'ibo_1': 0.038825228810310364, 'ibo_2': 0.036299027502536774, 'ibo_3': 0.040287669748067856, 'ibo_4': 0.04147994518280029, 'ibo_5': 0.04397815093398094, 'ibo_6': 0.0430179201066494, 'ibo_7': 0.03445814922451973, 'ibo_8': 0.039711419492959976, 'ibo_9': 0.03413218632340431}, 'kin': {'kin_0': 0.043859828263521194, 'kin_1': 0.04426759481430054, 'kin_2': 0.04666214808821678, 'kin_3': 0.03855143114924431, 'kin_4': 0.032646793872117996, 'kin_5': 0.04333746060729027, 'kin_6': 0.023181146010756493, 'kin_7': 0.038986075669527054, 'kin_8': 0.03470035269856453, 'kin_9': 0.038781460374593735}, 'lug': {'lug_0': 0.03296219930052757, 'lug_1': 0.038257453590631485, 'lug_2': 0.015304711647331715, 'lug_3': 0.024320827797055244, 'lug_4': 0.03923863545060158, 'lug_5': 0.038622498512268066, 'lug_6': 0.03677703067660332, 'lug_7': 0.03714032098650932, 'lug_8': 0.03805014491081238, 'lug_9': 0.03596174344420433}, 'luo': {'luo_0': 0.02819613181054592, 'luo_1': 0.03935198858380318, 'luo_2': 0.039513107389211655, 'luo_3': 0.025366714224219322, 'luo_4': 0.03079979680478573, 'luo_5': 0.03859720751643181, 'luo_6': 0.03361908718943596, 'luo_7': 0.04508191719651222, 'luo_8': 0.03730607032775879, 'luo_9': 0.052056413143873215}, 'pcm': {'pcm_0': 0.03723158314824104, 'pcm_1': 0.04825134947896004, 'pcm_2': 0.03893883153796196, 'pcm_3': 0.040904123336076736, 'pcm_4': 0.04360339418053627, 'pcm_5': 0.03941173478960991, 'pcm_6': 0.03840840607881546, 'pcm_7': 0.041782259941101074, 'pcm_8': 0.03551599010825157, 'pcm_9': 0.03282368183135986}, 'swa': {'swa_0': 0.036901190876960754, 'swa_1': 0.038856141269207, 'swa_2': 0.03768381103873253, 'swa_3': 0.036701302975416183, 'swa_4': 0.02912866324186325, 'swa_5': 0.026462173089385033, 'swa_6': 0.03163453936576843, 'swa_7': 0.05176084116101265, 'swa_8': 0.03302927315235138, 'swa_9': 0.03890964761376381}, 'wol': {'wol_0': 0.03442000225186348, 'wol_1': 0.04027282074093819, 'wol_2': 0.03849313035607338, 'wol_3': 0.05826316401362419, 'wol_4': 0.04286177456378937, 'wol_5': 0.04021383821964264, 'wol_6': 0.1501391977071762, 'wol_7': 0.03959367796778679, 'wol_8': 0.04310224577784538, 'wol_9': 0.03726816922426224}, 'yor': {'yor_0': 0.13643662631511688, 'yor_1': 0.12964500486850739, 'yor_2': 0.03766821697354317, 'yor_3': 0.030220353975892067, 'yor_4': 0.13705898821353912, 'yor_5': 0.09558121114969254, 'yor_6': 0.038243550807237625, 'yor_7': 0.12775109708309174, 'yor_8': 0.038708046078681946, 'yor_9': 0.1315334588289261}, 'zh': {'zh_0': 0.09574533253908157, 'zh_1': 0.11171559244394302, 'zh_2': 0.13468284904956818, 'zh_3': 0.15428662300109863, 'zh_4': 0.1736019104719162, 'zh_5': 0.1530752032995224, 'zh_6': 0.12136872857809067, 'zh_7': 0.13166530430316925, 'zh_8': 0.1531369388103485, 'zh_9': 0.14514566957950592}}, 'tydiqa': {'arabic': {'arabic-4449832350126320768-0': 0.08471032232046127, 'arabic--3340323169760881569-0': 0.04502341151237488, 'arabic-4544770624843559444-1': 0.04042183980345726, 'arabic-891952409566422966-0': 0.042519018054008484, 'arabic-3659291834714572527-0': 0.11492083221673965, 'arabic-9215226117011890166-0': 0.03999593108892441, 'arabic-6300896128538259469-0': 0.04755097255110741, 'arabic-2382507508588518905-0': 0.04059410095214844, 'arabic-1871632801094859741-1': 0.04051000997424126, 'arabic--7365809756232083807-0': 0.03908305987715721}, 'russian': {'russian-3457655197371763238-61': 0.024053452536463737, 'russian--1914807805318993335-49': 0.046408891677856445, 'russian--3307989180606173904-1': 0.02070566639304161, 'russian--2219512001175315660-0': 0.02584035135805607, 'russian--7076080992904718941-0': 0.022240489721298218, 'russian--6565862953558739013-1': 0.022600218653678894, 'russian--5098374684590548031-42': 0.03739750012755394, 'russian-3573734219967447693-1': 0.024239325895905495, 'russian--4521001374120505750-6': 0.04984176158905029, 'russian--1308382244018658424-9': 0.022948013618588448}, 'bengali': {'bengali--1199493965132146131-3': 0.09425410628318787, 'bengali-1807801556888134437-2': 0.08954343944787979, 'bengali-2113189855114052041-2': 0.09307513386011124, 'bengali--2527914488250041207-0': 0.09656479954719543, 'bengali--8260793280894408063-14': 0.10055878013372421, 'bengali-8313009204852557186-4': 0.09603527933359146, 'bengali--415964033364840061-0': 0.09256158024072647, 'bengali--4696865548928858824-5': 0.09253286570310593, 'bengali-6505224142472931712-1': 0.08998777717351913, 'bengali-599666913917674019-13': 0.13207784295082092}, 'telugu': {'telugu--3977923017846260053-0': 0.03626925125718117, 'telugu-2254198842560317781-0': 0.03645610809326172, 'telugu-5435080895440121384-0': 0.0370725654065609, 'telugu--1182505954974481191-2': 0.04482043907046318, 'telugu-119276511844068401-0': 0.034539058804512024, 'telugu--4111208545071789922-0': 0.03691357374191284, 'telugu--5922002196428211484-132': 0.10723616927862167, 'telugu--1817004721681155192-3': 0.0365547277033329, 'telugu-1602214480303968359-1': 0.047221992164850235, 'telugu--6495674712575945374-0': 0.03535741567611694}, 'finnish': {'finnish-6987763079741579998-0': 0.035585831850767136, 'finnish--8516625414052383903-0': 0.038793206214904785, 'finnish-4168898766124519517-0': 0.05818991735577583, 'finnish-783166898848672321-4': 0.043880145996809006, 'finnish-2208556840820233322-0': 0.037381548434495926, 'finnish--1981034637152391615-58': 0.015681708231568336, 'finnish-8689148941295949475-9': 0.012966066598892212, 'finnish-6900867945323517614-2': 0.05790949985384941, 'finnish-8023130170017405987-1': 0.02750322036445141, 'finnish-5001457972111781248-0': 0.014371265657246113}, 'swahili': {'swahili-7146838206539641546-10': 0.04164325073361397, 'swahili-7655634199707176439-0': 0.018605144694447517, 'swahili--4427180714267750534-1': 0.044356752187013626, 'swahili-4141779435061573138-0': 0.01603585295379162, 'swahili--5424518593960879661-0': 0.01595001108944416, 'swahili-4281845253405461584-0': 0.04370893910527229, 'swahili-4899164839984299762-2': 0.037248414009809494, 'swahili-1288750786498500530-0': 0.04268242046236992, 'swahili--2671134792844015228-3': 0.021290579810738564, 'swahili-4873225622490039485-2': 0.021570419892668724}, 'korean': {'korean--2869472392602314906-0': 0.08883673697710037, 'korean-4375199563921600155-0': 0.034201692789793015, 'korean--1715118423211755607-13': 0.026660097762942314, 'korean--8028977936696142934-9': 0.0419924296438694, 'korean-2807245034690443837-5': 0.12927745282649994, 'korean-3862451817164408576-0': 0.04002000018954277, 'korean-148115504649351135-0': 0.04778289794921875, 'korean--2885837157239647036-2': 0.10404855757951736, 'korean--1743220297777040002-22': 0.1296045333147049, 'korean-3268522368206106332-0': 0.1631171852350235}, 'indonesian': {'indonesian-9141868818310916091-0': 0.015061830170452595, 'indonesian-4609394337632433932-1': 0.05784926936030388, 'indonesian-2763468883290577923-0': 0.015416480600833893, 'indonesian-5633590583948933406-0': 0.02835630439221859, 'indonesian--5961409780035435015-0': 0.015070966444909573, 'indonesian-6274547934693326697-0': 0.024133458733558655, 'indonesian--2516321763567853082-0': 0.014136658050119877, 'indonesian-2048796427556239759-4': 0.042171135544776917, 'indonesian-6246592469157278547-2': 0.026339596137404442, 'indonesian--3724318458930736973-1': 0.015435758046805859}, 'english': {'english-2852412434797041176-6': 0.06499672681093216, 'english--1463732605740571606-0': 0.017756877467036247, 'english-5441411281255470421-0': 0.014927573502063751, 'english-7294054492486093447-1': 0.01670042984187603, 'english-8820750127045023244-0': 0.0428553931415081, 'english--506693546683012611-2': 0.0596018023788929, 'english-745411798111651115-0': 0.0157978106290102, 'english-7740772185887912651-0': 0.016672560945153236, 'english-383873188776267137-19': 0.015286091715097427, 'english--8277537578703156284-0': 0.017030587419867516}}, 'glue': {'cola': {'cola_228': 0.05010313168168068, 'cola_51': 0.03420155122876167, 'cola_563': 0.13900701701641083, 'cola_501': 0.04489954188466072, 'cola_457': 0.07989551872015, 'cola_285': 0.059074971824884415, 'cola_209': 0.06173575296998024, 'cola_178': 0.06618533283472061, 'cola_864': 0.048462867736816406, 'cola_65': 0.059406787157058716}, 'mnli': {'mnli_488': 0.05529585853219032, 'mnli_1535': 0.05517630651593208, 'mnli_3582': 0.049315739423036575, 'mnli_3811': 0.05560252442955971, 'mnli_8279': 0.04472650960087776, 'mnli_434': 0.03468422219157219, 'mnli_9195': 0.05701342597603798, 'mnli_3257': 0.04471373185515404, 'mnli_8928': 0.049280330538749695, 'mnli_6873': 0.048773348331451416}, 'mrpc': {'mrpc_451': 0.05343690514564514, 'mrpc_919': 0.051592517644166946, 'mrpc_1206': 0.04771827533841133, 'mrpc_569': 0.05537046492099762, 'mrpc_1657': 0.0428759790956974, 'mrpc_13': 0.05456439033150673, 'mrpc_1554': 0.03849561884999275, 'mrpc_1650': 0.12007550150156021, 'mrpc_326': 0.05723339691758156, 'mrpc_1429': 0.054340917617082596}, 'qnli': {'qnli_3462': 0.058203522115945816, 'qnli_2787': 0.045687925070524216, 'qnli_2276': 0.051338259130716324, 'qnli_1273': 0.05050751566886902, 'qnli_1763': 0.048203516751527786, 'qnli_2757': 0.05883819982409477, 'qnli_837': 0.047805462032556534, 'qnli_759': 0.019669823348522186, 'qnli_3112': 0.06443361937999725, 'qnli_792': 0.05504678189754486}, 'qqp': {'qqp_188208': 0.05842738226056099, 'qqp_180331': 0.05061618983745575, 'qqp_316526': 0.06037774682044983, 'qqp_138685': 0.043446317315101624, 'qqp_22780': 0.04577640816569328, 'qqp_382589': 0.05748431012034416, 'qqp_240870': 0.04925070330500603, 'qqp_281137': 0.051388245075941086, 'qqp_65444': 0.04358668252825737, 'qqp_198461': 0.044214144349098206}, 'rte': {'rte_322': 0.05463143065571785, 'rte_2261': 0.05736237391829491, 'rte_1200': 0.03514622524380684, 'rte_2574': 0.016585947945713997, 'rte_2533': 0.017123466357588768, 'rte_1481': 0.05146533623337746, 'rte_2364': 0.05046801269054413, 'rte_787': 0.048592496663331985, 'rte_2885': 0.016960838809609413, 'rte_284': 0.05211186036467552}, 'sst2': {'sst2_93': 0.041023820638656616, 'sst2_1354': 0.04979035258293152, 'sst2_466': 0.05319235846400261, 'sst2_1583': 0.05539950728416443, 'sst2_592': 0.05760299786925316, 'sst2_163': 0.06598815321922302, 'sst2_1751': 0.05407382547855377, 'sst2_476': 0.03573862090706825, 'sst2_1774': 0.04716360941529274, 'sst2_206': 0.047941166907548904}, 'stsb': {'stsb_778': 0.05398425832390785, 'stsb_569': 0.06112624704837799, 'stsb_928': 0.03577195480465889, 'stsb_1301': 0.048305392265319824, 'stsb_747': 0.044882163405418396, 'stsb_333': 0.04681282117962837, 'stsb_758': 0.055791471153497696, 'stsb_727': 0.05646162107586861, 'stsb_429': 0.05129139497876167, 'stsb_1372': 0.04338737949728966}, 'wnli': {'wnli_68': 0.048255085945129395, 'wnli_18': 0.03944640979170799, 'wnli_43': 0.0528041236102581, 'wnli_136': 0.05245789885520935, 'wnli_62': 0.05456674098968506, 'wnli_41': 0.052778784185647964, 'wnli_118': 0.05009574815630913, 'wnli_97': 0.03433254361152649, 'wnli_69': 0.04539226368069649, 'wnli_142': 0.042741041630506516}}}
03/27/2024 03:16:15 - INFO - __main__ - Saving data in SD_per_task_span_2.json
03/27/2024 03:16:15 - INFO - __main__ - Saving data in var_per_task_span_2.json
03/27/2024 03:16:15 - INFO - __main__ - 
UNCERTAINTY (SD)

03/27/2024 03:16:15 - INFO - __main__ - Mean loss per task: {'ner': {'amh': 0.15237107872962952, 'conll_2003_en': 0.10427240282297134, 'hau': 0.0451786182820797, 'ibo': 0.03898455575108528, 'kin': 0.038497429341077805, 'lug': 0.0336635522544384, 'luo': 0.036988843232393265, 'pcm': 0.0396871343255043, 'swa': 0.03610675781965256, 'wol': 0.052462805062532425, 'yor': 0.09028465300798416, 'zh': 0.1374424248933792}, 'tydiqa': {'arabic': 0.05353295058012009, 'russian': 0.029627567157149315, 'bengali': 0.09771916270256042, 'telugu': 0.04524413123726845, 'finnish': 0.03422624245285988, 'swahili': 0.030309176072478294, 'korean': 0.08055415004491806, 'indonesian': 0.025397146120667458, 'english': 0.028162583708763123}, 'glue': {'cola': 0.06429725140333176, 'mnli': 0.04945819824934006, 'mrpc': 0.05757039785385132, 'qnli': 0.049973465502262115, 'qqp': 0.05045681074261665, 'rte': 0.04004480317234993, 'sst2': 0.05079144984483719, 'stsb': 0.049781475216150284, 'wnli': 0.04728706181049347}}

###############################################################################
Hábrók Cluster
Job 7761469 for user s3919609
Finished at: Wed Mar 27 03:16:17 CET 2024

Job details:
============

Job ID              : 7761469
Name                : std_monte_carlo_span_2
User                : s3919609
Partition           : regularmedium
Nodes               : node95
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-26T21:10:01
Start               : 2024-03-26T21:10:02
End                 : --
Reserved walltime   : 10:00:00
Used walltime       : 06:06:15
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 20G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging Hábrók in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
