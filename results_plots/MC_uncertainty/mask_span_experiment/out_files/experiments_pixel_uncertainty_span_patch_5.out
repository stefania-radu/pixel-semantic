The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) 2023.01   2) StdEnv
wandb: Currently logged in as: stefania_radu. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.16.3 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.12
wandb: Run data is saved locally in /home2/s3919609/pixel-semantic/wandb/run-20240304_173000-hppt0k9z
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run worthy-butterfly-212
wandb: ‚≠êÔ∏è View project at https://wandb.ai/stefania_radu/pixel-semantic-scripts_visualization
wandb: üöÄ View run at https://wandb.ai/stefania_radu/pixel-semantic-scripts_visualization/runs/hppt0k9z
03/04/2024 17:30:04 - INFO - pixel.data.rendering.rendering_utils - loading text renderer configuration file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/text_renderer_config.json from cache at /home2/s3919609/.cache/huggingface/transformers/892d6a02d7c441000de399de59ed70d943a81f7b0f536523b4af1111677a8508.e332b34c9c05756dd4aa51d8fa33461dbd79604752296d185f03f8004db30700
03/04/2024 17:30:04 - INFO - pixel.data.rendering.rendering_utils - loading font file https://huggingface.co/Team-PIXEL/pixel-base/resolve/main/GoNotoCurrent.ttf from cache at /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/04/2024 17:30:04 - INFO - pixel.data.rendering.pygame_renderer - Loading font from /home2/s3919609/.cache/huggingface/transformers/49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58
03/04/2024 17:30:04 - INFO - pixel.data.rendering.rendering_utils - Text renderer PyGameTextRenderer {
  "background_color": "white",
  "dpi": 120,
  "font_color": "black",
  "font_file": "49e6dc219d1a1a1c9236acaf05a48b542002016a6dc877ee72baab085a84257b.3f28e7f4b38e1efe1b6da4a3732404c19d4c6a614ff32dce90a251e293d4ce58",
  "font_size": 8,
  "max_seq_length": 256,
  "pad_size": 3,
  "pixels_per_patch": 16,
  "text_renderer_type": "PyGameTextRenderer"
}

03/04/2024 17:30:06 - INFO - pixel.utils.modeling - Truncating position embeddings to 256
03/04/2024 17:30:06 - INFO - pixel.utils.modeling - Truncating decoder position embeddings to 256
03/04/2024 17:30:06 - INFO - __main__ - Running PIXEL masked autoencoding with pixel reconstruction
03/04/2024 17:30:06 - INFO - __main__ - Applying span masking with "max_span_length = 5" , "cumulative_span_weights = [0.0, 0.0, 0.0, 0.0, 1.0]"  and "spacing = span"
03/04/2024 17:30:06 - INFO - __main__ - Masked count: 60, ratio = 0.2344
03/04/2024 17:30:06 - INFO - __main__ - Monte Carlo samples: 100
03/04/2024 17:30:06 - INFO - __main__ - Training mode: True
all_attention (samples, layers, batch_size, num_heads, sequence_length, sequence_length): torch.Size([100, 12, 12, 193, 193])
all_attention after mean: torch.Size([12, 12, 193, 193])
03/04/2024 17:31:15 - INFO - __main__ - std_predictions shape: torch.Size([3, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
mask.shape: torch.Size([3, 256, 256])
attentions.shape: torch.Size([12, 193, 193])
all_heads_attentions.shape: torch.Size([12, 256, 256])
all_heads_attentions_image: torch.Size([12, 256, 256])
all_layers_attentions: torch.Size([12, 12, 256, 256])
attention_grid: torch.Size([3, 3098, 3098])
attention_grid 0 : tensor([[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0235,  ..., 0.0191, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.7610,  ..., 0.8404, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]])
attention_grid 1 : tensor([[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0235,  ..., 0.0191, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.7610,  ..., 0.8404, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]])
Are the channels different? False
03/04/2024 17:31:20 - INFO - __main__ - Mean variance for whole image: 0.034
03/04/2024 17:31:20 - INFO - __main__ - Mean std for whole image: 0.144
03/04/2024 17:31:20 - INFO - __main__ - SD image: [[0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]]
03/04/2024 17:31:20 - INFO - __main__ - Mean std for whole image patch mean: 0.026
03/04/2024 17:31:20 - INFO - __main__ - mean_std shape: (3, 256, 256)
03/04/2024 17:31:20 - INFO - __main__ - std_predictions shape: torch.Size([3, 256, 256])
mean_predictions: tensor([[[ 0.5437,  0.5452,  0.5466,  ...,  0.5384,  0.5398,  0.5405],
         [ 0.5295,  0.5188,  0.5852,  ...,  0.4829,  0.3684,  0.4753],
         [ 0.4569,  0.1348, -0.2363,  ...,  0.3022, -0.3402,  0.2720],
         ...,
         [ 0.6879,  0.6023,  0.6439,  ...,  0.5827,  0.6182,  0.6219],
         [ 0.7427,  0.6856,  0.6552,  ...,  0.2919,  0.5004,  0.6310],
         [ 0.6820,  0.7727,  0.7168,  ...,  0.7524,  0.6655,  0.5897]],

        [[ 0.5437,  0.5452,  0.5466,  ...,  0.5384,  0.5398,  0.5405],
         [ 0.5295,  0.5188,  0.5852,  ...,  0.4829,  0.3684,  0.4753],
         [ 0.4569,  0.1348, -0.2363,  ...,  0.3023, -0.3401,  0.2720],
         ...,
         [ 0.6879,  0.6023,  0.6439,  ...,  0.5827,  0.6182,  0.6219],
         [ 0.7427,  0.6856,  0.6552,  ...,  0.2919,  0.5004,  0.6310],
         [ 0.6820,  0.7727,  0.7168,  ...,  0.7524,  0.6655,  0.5897]],

        [[ 0.5437,  0.5452,  0.5466,  ...,  0.5384,  0.5398,  0.5405],
         [ 0.5295,  0.5188,  0.5852,  ...,  0.4829,  0.3684,  0.4753],
         [ 0.4569,  0.1348, -0.2363,  ...,  0.3023, -0.3402,  0.2720],
         ...,
         [ 0.6879,  0.6023,  0.6439,  ...,  0.5827,  0.6182,  0.6219],
         [ 0.7427,  0.6856,  0.6552,  ...,  0.2919,  0.5004,  0.6310],
         [ 0.6820,  0.7727,  0.7168,  ...,  0.7524,  0.6654,  0.5897]]])
std_predictions_per_patch: tensor([ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         2.9192,  2.9192,  2.9202,  2.9242,  2.9206,  2.9221,  2.9213,  2.9190,
         2.9192,  2.9177,  2.9163,  2.9207,  2.9157,  2.9186,  2.9178,  2.9217,
         4.7705,  4.7626,  4.7593,  4.7607,  4.7582,  4.7637,  4.7627,  4.7643,
         4.7739,  4.7581,  4.7604,  4.7617,  4.7659,  4.7677,  4.7613,  4.7673,
        16.3092, 16.2998, 16.3036, 16.2995, 16.3038, 16.3076, 16.2940, 16.3016,
        16.2969, 16.2915, 16.3070, 16.2949, 16.3063, 16.3135, 16.2911, 16.2997,
        13.8912, 13.8844, 13.9035, 13.9154, 13.9166, 13.9090, 13.9065, 13.9134,
        13.9126, 13.9100, 13.9109, 13.9103, 13.9240, 13.9301, 13.9119, 13.9120,
        17.6712, 17.6878, 17.6916, 17.6784, 17.6696, 17.7006, 17.6417, 17.6217,
        17.6514, 17.6610, 17.6992, 17.6712, 17.7029, 17.6939, 17.6648, 17.6454,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000])
std_reconstruction_per_patch: tensor([ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         2.9192,  2.9192,  2.9202,  2.9242,  2.9206,  2.9221,  2.9213,  2.9190,
         2.9192,  2.9177,  2.9163,  2.9207,  2.9157,  2.9186,  2.9178,  2.9217,
         4.7705,  4.7626,  4.7593,  4.7607,  4.7582,  4.7637,  4.7627,  4.7643,
         4.7739,  4.7581,  4.7604,  4.7617,  4.7659,  4.7677,  4.7613,  4.7673,
        16.3092, 16.2998, 16.3036, 16.2995, 16.3038, 16.3076, 16.2940, 16.3016,
        16.2969, 16.2915, 16.3070, 16.2949, 16.3063, 16.3135, 16.2911, 16.2997,
        13.8912, 13.8844, 13.9035, 13.9154, 13.9166, 13.9090, 13.9065, 13.9134,
        13.9126, 13.9100, 13.9109, 13.9103, 13.9240, 13.9301, 13.9119, 13.9120,
        17.6712, 17.6878, 17.6916, 17.6784, 17.6696, 17.7006, 17.6417, 17.6217,
        17.6514, 17.6610, 17.6992, 17.6712, 17.7029, 17.6939, 17.6648, 17.6454,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000])
03/04/2024 17:31:22 - INFO - __main__ - torch.Size([3, 256, 256])
03/04/2024 17:31:22 - INFO - __main__ - torch.Size([3, 256, 256])
wandb: Waiting for W&B process to finish... (success).
wandb: 
wandb: Run history:
wandb:                mask_ratio ‚ñÅ
wandb:            mean_std_value ‚ñÅ
wandb: mean_std_value_patch_mean ‚ñÅ
wandb:       mean_variance_value ‚ñÅ
wandb: 
wandb: Run summary:
wandb:                mask_ratio 0.25
wandb:            mean_std_value 0.144
wandb: mean_std_value_patch_mean 0.026
wandb:       mean_variance_value 0.034
wandb: 
wandb: üöÄ View run worthy-butterfly-212 at: https://wandb.ai/stefania_radu/pixel-semantic-scripts_visualization/runs/hppt0k9z
wandb: Ô∏è‚ö° View job at https://wandb.ai/stefania_radu/pixel-semantic-scripts_visualization/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjExOTExMzkwMw==/version_details/v53
wandb: Synced 6 W&B file(s), 15 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20240304_173000-hppt0k9z/logs

###############################################################################
H√°br√≥k Cluster
Job 7508750 for user s3919609
Finished at: Mon Mar  4 17:31:31 CET 2024

Job details:
============

Job ID              : 7508750
Name                : experiments_pixel_uncertainty_span_patch_5
User                : s3919609
Partition           : regularshort
Nodes               : node99
Number of Nodes     : 1
Cores               : 1
Number of Tasks     : 1
State               : RUNNING
Submit              : 2024-03-04T17:26:32
Start               : 2024-03-04T17:29:36
End                 : --
Reserved walltime   : 01:00:00
Used walltime       : 00:01:55
Used CPU time       : --
% User (Computation): --
% System (I/O)      : --
Mem reserved        : 10G
Max Mem (Node/step) : 0.00  (Node unknown, N/A)
Full Max Mem usage  : 0.00  (Until last completed step)
Total Disk Read     : 0.00  (Until last completed step)
Total Disk Write    : 0.00  (Until last completed step)

Acknowledgements:
=================

Please see this page for information about acknowledging H√°br√≥k in your publications:

https://wiki.hpc.rug.nl/habrok/introduction/scientific_output

################################################################################
